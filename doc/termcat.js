var CLOSURE_NO_DEPS = true;
var COMPILED = false;
var goog = goog || {};
goog.global = this;
goog.DEBUG = true;
goog.LOCALE = "en";
goog.TRUSTED_SITE = true;
goog.provide = function(name) {
  if (!COMPILED) {
    if (goog.isProvided_(name)) {
      throw Error('Namespace "' + name + '" already declared.');
    }
    delete goog.implicitNamespaces_[name];
    var namespace = name;
    while (namespace = namespace.substring(0, namespace.lastIndexOf("."))) {
      if (goog.getObjectByName(namespace)) {
        break;
      }
      goog.implicitNamespaces_[namespace] = true;
    }
  }
  goog.exportPath_(name);
};
goog.setTestOnly = function(opt_message) {
  if (COMPILED && !goog.DEBUG) {
    opt_message = opt_message || "";
    throw Error("Importing test-only code into non-debug environment" + opt_message ? ": " + opt_message : ".");
  }
};
if (!COMPILED) {
  goog.isProvided_ = function(name) {
    return!goog.implicitNamespaces_[name] && !!goog.getObjectByName(name);
  };
  goog.implicitNamespaces_ = {};
}
goog.exportPath_ = function(name, opt_object, opt_objectToExportTo) {
  var parts = name.split(".");
  var cur = opt_objectToExportTo || goog.global;
  if (!(parts[0] in cur) && cur.execScript) {
    cur.execScript("var " + parts[0]);
  }
  for (var part;parts.length && (part = parts.shift());) {
    if (!parts.length && goog.isDef(opt_object)) {
      cur[part] = opt_object;
    } else {
      if (cur[part]) {
        cur = cur[part];
      } else {
        cur = cur[part] = {};
      }
    }
  }
};
goog.getObjectByName = function(name, opt_obj) {
  var parts = name.split(".");
  var cur = opt_obj || goog.global;
  for (var part;part = parts.shift();) {
    if (goog.isDefAndNotNull(cur[part])) {
      cur = cur[part];
    } else {
      return null;
    }
  }
  return cur;
};
goog.globalize = function(obj, opt_global) {
  var global = opt_global || goog.global;
  for (var x in obj) {
    global[x] = obj[x];
  }
};
goog.addDependency = function(relPath, provides, requires) {
  if (!COMPILED) {
    var provide, require;
    var path = relPath.replace(/\\/g, "/");
    var deps = goog.dependencies_;
    for (var i = 0;provide = provides[i];i++) {
      deps.nameToPath[provide] = path;
      if (!(path in deps.pathToNames)) {
        deps.pathToNames[path] = {};
      }
      deps.pathToNames[path][provide] = true;
    }
    for (var j = 0;require = requires[j];j++) {
      if (!(path in deps.requires)) {
        deps.requires[path] = {};
      }
      deps.requires[path][require] = true;
    }
  }
};
goog.ENABLE_DEBUG_LOADER = true;
goog.require = function(name) {
  if (!COMPILED) {
    if (goog.isProvided_(name)) {
      return;
    }
    if (goog.ENABLE_DEBUG_LOADER) {
      var path = goog.getPathFromDeps_(name);
      if (path) {
        goog.included_[path] = true;
        goog.writeScripts_();
        return;
      }
    }
    var errorMessage = "goog.require could not find: " + name;
    if (goog.global.console) {
      goog.global.console["error"](errorMessage);
    }
    throw Error(errorMessage);
  }
};
goog.basePath = "";
goog.global.CLOSURE_BASE_PATH;
goog.global.CLOSURE_NO_DEPS;
goog.global.CLOSURE_IMPORT_SCRIPT;
goog.nullFunction = function() {
};
goog.identityFunction = function(opt_returnValue, var_args) {
  return opt_returnValue;
};
goog.abstractMethod = function() {
  throw Error("unimplemented abstract method");
};
goog.addSingletonGetter = function(ctor) {
  ctor.getInstance = function() {
    if (ctor.instance_) {
      return ctor.instance_;
    }
    if (goog.DEBUG) {
      goog.instantiatedSingletons_[goog.instantiatedSingletons_.length] = ctor;
    }
    return ctor.instance_ = new ctor;
  };
};
goog.instantiatedSingletons_ = [];
if (!COMPILED && goog.ENABLE_DEBUG_LOADER) {
  goog.included_ = {};
  goog.dependencies_ = {pathToNames:{}, nameToPath:{}, requires:{}, visited:{}, written:{}};
  goog.inHtmlDocument_ = function() {
    var doc = goog.global.document;
    return typeof doc != "undefined" && "write" in doc;
  };
  goog.findBasePath_ = function() {
    if (goog.global.CLOSURE_BASE_PATH) {
      goog.basePath = goog.global.CLOSURE_BASE_PATH;
      return;
    } else {
      if (!goog.inHtmlDocument_()) {
        return;
      }
    }
    var doc = goog.global.document;
    var scripts = doc.getElementsByTagName("script");
    for (var i = scripts.length - 1;i >= 0;--i) {
      var src = scripts[i].src;
      var qmark = src.lastIndexOf("?");
      var l = qmark == -1 ? src.length : qmark;
      if (src.substr(l - 7, 7) == "base.js") {
        goog.basePath = src.substr(0, l - 7);
        return;
      }
    }
  };
  goog.importScript_ = function(src) {
    var importScript = goog.global.CLOSURE_IMPORT_SCRIPT || goog.writeScriptTag_;
    if (!goog.dependencies_.written[src] && importScript(src)) {
      goog.dependencies_.written[src] = true;
    }
  };
  goog.writeScriptTag_ = function(src) {
    if (goog.inHtmlDocument_()) {
      var doc = goog.global.document;
      if (doc.readyState == "complete") {
        var isDeps = /\bdeps.js$/.test(src);
        if (isDeps) {
          return false;
        } else {
          throw Error('Cannot write "' + src + '" after document load');
        }
      }
      doc.write('\x3cscript type\x3d"text/javascript" src\x3d"' + src + '"\x3e\x3c/' + "script\x3e");
      return true;
    } else {
      return false;
    }
  };
  goog.writeScripts_ = function() {
    var scripts = [];
    var seenScript = {};
    var deps = goog.dependencies_;
    function visitNode(path) {
      if (path in deps.written) {
        return;
      }
      if (path in deps.visited) {
        if (!(path in seenScript)) {
          seenScript[path] = true;
          scripts.push(path);
        }
        return;
      }
      deps.visited[path] = true;
      if (path in deps.requires) {
        for (var requireName in deps.requires[path]) {
          if (!goog.isProvided_(requireName)) {
            if (requireName in deps.nameToPath) {
              visitNode(deps.nameToPath[requireName]);
            } else {
              throw Error("Undefined nameToPath for " + requireName);
            }
          }
        }
      }
      if (!(path in seenScript)) {
        seenScript[path] = true;
        scripts.push(path);
      }
    }
    for (var path in goog.included_) {
      if (!deps.written[path]) {
        visitNode(path);
      }
    }
    for (var i = 0;i < scripts.length;i++) {
      if (scripts[i]) {
        goog.importScript_(goog.basePath + scripts[i]);
      } else {
        throw Error("Undefined script input");
      }
    }
  };
  goog.getPathFromDeps_ = function(rule) {
    if (rule in goog.dependencies_.nameToPath) {
      return goog.dependencies_.nameToPath[rule];
    } else {
      return null;
    }
  };
  goog.findBasePath_();
  if (!goog.global.CLOSURE_NO_DEPS) {
    goog.importScript_(goog.basePath + "deps.js");
  }
}
goog.typeOf = function(value) {
  var s = typeof value;
  if (s == "object") {
    if (value) {
      if (value instanceof Array) {
        return "array";
      } else {
        if (value instanceof Object) {
          return s;
        }
      }
      var className = Object.prototype.toString.call((value));
      if (className == "[object Window]") {
        return "object";
      }
      if (className == "[object Array]" || typeof value.length == "number" && (typeof value.splice != "undefined" && (typeof value.propertyIsEnumerable != "undefined" && !value.propertyIsEnumerable("splice")))) {
        return "array";
      }
      if (className == "[object Function]" || typeof value.call != "undefined" && (typeof value.propertyIsEnumerable != "undefined" && !value.propertyIsEnumerable("call"))) {
        return "function";
      }
    } else {
      return "null";
    }
  } else {
    if (s == "function" && typeof value.call == "undefined") {
      return "object";
    }
  }
  return s;
};
goog.isDef = function(val) {
  return val !== undefined;
};
goog.isNull = function(val) {
  return val === null;
};
goog.isDefAndNotNull = function(val) {
  return val != null;
};
goog.isArray = function(val) {
  return goog.typeOf(val) == "array";
};
goog.isArrayLike = function(val) {
  var type = goog.typeOf(val);
  return type == "array" || type == "object" && typeof val.length == "number";
};
goog.isDateLike = function(val) {
  return goog.isObject(val) && typeof val.getFullYear == "function";
};
goog.isString = function(val) {
  return typeof val == "string";
};
goog.isBoolean = function(val) {
  return typeof val == "boolean";
};
goog.isNumber = function(val) {
  return typeof val == "number";
};
goog.isFunction = function(val) {
  return goog.typeOf(val) == "function";
};
goog.isObject = function(val) {
  var type = typeof val;
  return type == "object" && val != null || type == "function";
};
goog.getUid = function(obj) {
  return obj[goog.UID_PROPERTY_] || (obj[goog.UID_PROPERTY_] = ++goog.uidCounter_);
};
goog.removeUid = function(obj) {
  if ("removeAttribute" in obj) {
    obj.removeAttribute(goog.UID_PROPERTY_);
  }
  try {
    delete obj[goog.UID_PROPERTY_];
  } catch (ex) {
  }
};
goog.UID_PROPERTY_ = "closure_uid_" + (Math.random() * 1E9 >>> 0);
goog.uidCounter_ = 0;
goog.getHashCode = goog.getUid;
goog.removeHashCode = goog.removeUid;
goog.cloneObject = function(obj) {
  var type = goog.typeOf(obj);
  if (type == "object" || type == "array") {
    if (obj.clone) {
      return obj.clone();
    }
    var clone = type == "array" ? [] : {};
    for (var key in obj) {
      clone[key] = goog.cloneObject(obj[key]);
    }
    return clone;
  }
  return obj;
};
goog.bindNative_ = function(fn, selfObj, var_args) {
  return(fn.call.apply(fn.bind, arguments));
};
goog.bindJs_ = function(fn, selfObj, var_args) {
  if (!fn) {
    throw new Error;
  }
  if (arguments.length > 2) {
    var boundArgs = Array.prototype.slice.call(arguments, 2);
    return function() {
      var newArgs = Array.prototype.slice.call(arguments);
      Array.prototype.unshift.apply(newArgs, boundArgs);
      return fn.apply(selfObj, newArgs);
    };
  } else {
    return function() {
      return fn.apply(selfObj, arguments);
    };
  }
};
goog.bind = function(fn, selfObj, var_args) {
  if (Function.prototype.bind && Function.prototype.bind.toString().indexOf("native code") != -1) {
    goog.bind = goog.bindNative_;
  } else {
    goog.bind = goog.bindJs_;
  }
  return goog.bind.apply(null, arguments);
};
goog.partial = function(fn, var_args) {
  var args = Array.prototype.slice.call(arguments, 1);
  return function() {
    var newArgs = Array.prototype.slice.call(arguments);
    newArgs.unshift.apply(newArgs, args);
    return fn.apply(this, newArgs);
  };
};
goog.mixin = function(target, source) {
  for (var x in source) {
    target[x] = source[x];
  }
};
goog.now = goog.TRUSTED_SITE && Date.now || function() {
  return+new Date;
};
goog.globalEval = function(script) {
  if (goog.global.execScript) {
    goog.global.execScript(script, "JavaScript");
  } else {
    if (goog.global.eval) {
      if (goog.evalWorksForGlobals_ == null) {
        goog.global.eval("var _et_ \x3d 1;");
        if (typeof goog.global["_et_"] != "undefined") {
          delete goog.global["_et_"];
          goog.evalWorksForGlobals_ = true;
        } else {
          goog.evalWorksForGlobals_ = false;
        }
      }
      if (goog.evalWorksForGlobals_) {
        goog.global.eval(script);
      } else {
        var doc = goog.global.document;
        var scriptElt = doc.createElement("script");
        scriptElt.type = "text/javascript";
        scriptElt.defer = false;
        scriptElt.appendChild(doc.createTextNode(script));
        doc.body.appendChild(scriptElt);
        doc.body.removeChild(scriptElt);
      }
    } else {
      throw Error("goog.globalEval not available");
    }
  }
};
goog.evalWorksForGlobals_ = null;
goog.cssNameMapping_;
goog.cssNameMappingStyle_;
goog.getCssName = function(className, opt_modifier) {
  var getMapping = function(cssName) {
    return goog.cssNameMapping_[cssName] || cssName;
  };
  var renameByParts = function(cssName) {
    var parts = cssName.split("-");
    var mapped = [];
    for (var i = 0;i < parts.length;i++) {
      mapped.push(getMapping(parts[i]));
    }
    return mapped.join("-");
  };
  var rename;
  if (goog.cssNameMapping_) {
    rename = goog.cssNameMappingStyle_ == "BY_WHOLE" ? getMapping : renameByParts;
  } else {
    rename = function(a) {
      return a;
    };
  }
  if (opt_modifier) {
    return className + "-" + rename(opt_modifier);
  } else {
    return rename(className);
  }
};
goog.setCssNameMapping = function(mapping, opt_style) {
  goog.cssNameMapping_ = mapping;
  goog.cssNameMappingStyle_ = opt_style;
};
goog.global.CLOSURE_CSS_NAME_MAPPING;
if (!COMPILED && goog.global.CLOSURE_CSS_NAME_MAPPING) {
  goog.cssNameMapping_ = goog.global.CLOSURE_CSS_NAME_MAPPING;
}
goog.getMsg = function(str, opt_values) {
  var values = opt_values || {};
  for (var key in values) {
    var value = ("" + values[key]).replace(/\$/g, "$$$$");
    str = str.replace(new RegExp("\\{\\$" + key + "\\}", "gi"), value);
  }
  return str;
};
goog.getMsgWithFallback = function(a, b) {
  return a;
};
goog.exportSymbol = function(publicPath, object, opt_objectToExportTo) {
  goog.exportPath_(publicPath, object, opt_objectToExportTo);
};
goog.exportProperty = function(object, publicName, symbol) {
  object[publicName] = symbol;
};
goog.inherits = function(childCtor, parentCtor) {
  function tempCtor() {
  }
  tempCtor.prototype = parentCtor.prototype;
  childCtor.superClass_ = parentCtor.prototype;
  childCtor.prototype = new tempCtor;
  childCtor.prototype.constructor = childCtor;
};
goog.base = function(me, opt_methodName, var_args) {
  var caller = arguments.callee.caller;
  if (caller.superClass_) {
    return caller.superClass_.constructor.apply(me, Array.prototype.slice.call(arguments, 1));
  }
  var args = Array.prototype.slice.call(arguments, 2);
  var foundCaller = false;
  for (var ctor = me.constructor;ctor;ctor = ctor.superClass_ && ctor.superClass_.constructor) {
    if (ctor.prototype[opt_methodName] === caller) {
      foundCaller = true;
    } else {
      if (foundCaller) {
        return ctor.prototype[opt_methodName].apply(me, args);
      }
    }
  }
  if (me[opt_methodName] === caller) {
    return me.constructor.prototype[opt_methodName].apply(me, args);
  } else {
    throw Error("goog.base called from a method of one name " + "to a method of a different name");
  }
};
goog.scope = function(fn) {
  fn.call(goog.global);
};
goog.provide("goog.string");
goog.provide("goog.string.Unicode");
goog.string.Unicode = {NBSP:"\u00a0"};
goog.string.startsWith = function(str, prefix) {
  return str.lastIndexOf(prefix, 0) == 0;
};
goog.string.endsWith = function(str, suffix) {
  var l = str.length - suffix.length;
  return l >= 0 && str.indexOf(suffix, l) == l;
};
goog.string.caseInsensitiveStartsWith = function(str, prefix) {
  return goog.string.caseInsensitiveCompare(prefix, str.substr(0, prefix.length)) == 0;
};
goog.string.caseInsensitiveEndsWith = function(str, suffix) {
  return goog.string.caseInsensitiveCompare(suffix, str.substr(str.length - suffix.length, suffix.length)) == 0;
};
goog.string.subs = function(str, var_args) {
  for (var i = 1;i < arguments.length;i++) {
    var replacement = String(arguments[i]).replace(/\$/g, "$$$$");
    str = str.replace(/\%s/, replacement);
  }
  return str;
};
goog.string.collapseWhitespace = function(str) {
  return str.replace(/[\s\xa0]+/g, " ").replace(/^\s+|\s+$/g, "");
};
goog.string.isEmpty = function(str) {
  return/^[\s\xa0]*$/.test(str);
};
goog.string.isEmptySafe = function(str) {
  return goog.string.isEmpty(goog.string.makeSafe(str));
};
goog.string.isBreakingWhitespace = function(str) {
  return!/[^\t\n\r ]/.test(str);
};
goog.string.isAlpha = function(str) {
  return!/[^a-zA-Z]/.test(str);
};
goog.string.isNumeric = function(str) {
  return!/[^0-9]/.test(str);
};
goog.string.isAlphaNumeric = function(str) {
  return!/[^a-zA-Z0-9]/.test(str);
};
goog.string.isSpace = function(ch) {
  return ch == " ";
};
goog.string.isUnicodeChar = function(ch) {
  return ch.length == 1 && (ch >= " " && ch <= "~") || ch >= "\u0080" && ch <= "\ufffd";
};
goog.string.stripNewlines = function(str) {
  return str.replace(/(\r\n|\r|\n)+/g, " ");
};
goog.string.canonicalizeNewlines = function(str) {
  return str.replace(/(\r\n|\r|\n)/g, "\n");
};
goog.string.normalizeWhitespace = function(str) {
  return str.replace(/\xa0|\s/g, " ");
};
goog.string.normalizeSpaces = function(str) {
  return str.replace(/\xa0|[ \t]+/g, " ");
};
goog.string.collapseBreakingSpaces = function(str) {
  return str.replace(/[\t\r\n ]+/g, " ").replace(/^[\t\r\n ]+|[\t\r\n ]+$/g, "");
};
goog.string.trim = function(str) {
  return str.replace(/^[\s\xa0]+|[\s\xa0]+$/g, "");
};
goog.string.trimLeft = function(str) {
  return str.replace(/^[\s\xa0]+/, "");
};
goog.string.trimRight = function(str) {
  return str.replace(/[\s\xa0]+$/, "");
};
goog.string.caseInsensitiveCompare = function(str1, str2) {
  var test1 = String(str1).toLowerCase();
  var test2 = String(str2).toLowerCase();
  if (test1 < test2) {
    return-1;
  } else {
    if (test1 == test2) {
      return 0;
    } else {
      return 1;
    }
  }
};
goog.string.numerateCompareRegExp_ = /(\.\d+)|(\d+)|(\D+)/g;
goog.string.numerateCompare = function(str1, str2) {
  if (str1 == str2) {
    return 0;
  }
  if (!str1) {
    return-1;
  }
  if (!str2) {
    return 1;
  }
  var tokens1 = str1.toLowerCase().match(goog.string.numerateCompareRegExp_);
  var tokens2 = str2.toLowerCase().match(goog.string.numerateCompareRegExp_);
  var count = Math.min(tokens1.length, tokens2.length);
  for (var i = 0;i < count;i++) {
    var a = tokens1[i];
    var b = tokens2[i];
    if (a != b) {
      var num1 = parseInt(a, 10);
      if (!isNaN(num1)) {
        var num2 = parseInt(b, 10);
        if (!isNaN(num2) && num1 - num2) {
          return num1 - num2;
        }
      }
      return a < b ? -1 : 1;
    }
  }
  if (tokens1.length != tokens2.length) {
    return tokens1.length - tokens2.length;
  }
  return str1 < str2 ? -1 : 1;
};
goog.string.urlEncode = function(str) {
  return encodeURIComponent(String(str));
};
goog.string.urlDecode = function(str) {
  return decodeURIComponent(str.replace(/\+/g, " "));
};
goog.string.newLineToBr = function(str, opt_xml) {
  return str.replace(/(\r\n|\r|\n)/g, opt_xml ? "\x3cbr /\x3e" : "\x3cbr\x3e");
};
goog.string.htmlEscape = function(str, opt_isLikelyToContainHtmlChars) {
  if (opt_isLikelyToContainHtmlChars) {
    return str.replace(goog.string.amperRe_, "\x26amp;").replace(goog.string.ltRe_, "\x26lt;").replace(goog.string.gtRe_, "\x26gt;").replace(goog.string.quotRe_, "\x26quot;");
  } else {
    if (!goog.string.allRe_.test(str)) {
      return str;
    }
    if (str.indexOf("\x26") != -1) {
      str = str.replace(goog.string.amperRe_, "\x26amp;");
    }
    if (str.indexOf("\x3c") != -1) {
      str = str.replace(goog.string.ltRe_, "\x26lt;");
    }
    if (str.indexOf("\x3e") != -1) {
      str = str.replace(goog.string.gtRe_, "\x26gt;");
    }
    if (str.indexOf('"') != -1) {
      str = str.replace(goog.string.quotRe_, "\x26quot;");
    }
    return str;
  }
};
goog.string.amperRe_ = /&/g;
goog.string.ltRe_ = /</g;
goog.string.gtRe_ = />/g;
goog.string.quotRe_ = /\"/g;
goog.string.allRe_ = /[&<>\"]/;
goog.string.unescapeEntities = function(str) {
  if (goog.string.contains(str, "\x26")) {
    if ("document" in goog.global) {
      return goog.string.unescapeEntitiesUsingDom_(str);
    } else {
      return goog.string.unescapePureXmlEntities_(str);
    }
  }
  return str;
};
goog.string.unescapeEntitiesUsingDom_ = function(str) {
  var seen = {"\x26amp;":"\x26", "\x26lt;":"\x3c", "\x26gt;":"\x3e", "\x26quot;":'"'};
  var div = document.createElement("div");
  return str.replace(goog.string.HTML_ENTITY_PATTERN_, function(s, entity) {
    var value = seen[s];
    if (value) {
      return value;
    }
    if (entity.charAt(0) == "#") {
      var n = Number("0" + entity.substr(1));
      if (!isNaN(n)) {
        value = String.fromCharCode(n);
      }
    }
    if (!value) {
      div.innerHTML = s + " ";
      value = div.firstChild.nodeValue.slice(0, -1);
    }
    return seen[s] = value;
  });
};
goog.string.unescapePureXmlEntities_ = function(str) {
  return str.replace(/&([^;]+);/g, function(s, entity) {
    switch(entity) {
      case "amp":
        return "\x26";
      case "lt":
        return "\x3c";
      case "gt":
        return "\x3e";
      case "quot":
        return'"';
      default:
        if (entity.charAt(0) == "#") {
          var n = Number("0" + entity.substr(1));
          if (!isNaN(n)) {
            return String.fromCharCode(n);
          }
        }
        return s;
    }
  });
};
goog.string.HTML_ENTITY_PATTERN_ = /&([^;\s<&]+);?/g;
goog.string.whitespaceEscape = function(str, opt_xml) {
  return goog.string.newLineToBr(str.replace(/  /g, " \x26#160;"), opt_xml);
};
goog.string.stripQuotes = function(str, quoteChars) {
  var length = quoteChars.length;
  for (var i = 0;i < length;i++) {
    var quoteChar = length == 1 ? quoteChars : quoteChars.charAt(i);
    if (str.charAt(0) == quoteChar && str.charAt(str.length - 1) == quoteChar) {
      return str.substring(1, str.length - 1);
    }
  }
  return str;
};
goog.string.truncate = function(str, chars, opt_protectEscapedCharacters) {
  if (opt_protectEscapedCharacters) {
    str = goog.string.unescapeEntities(str);
  }
  if (str.length > chars) {
    str = str.substring(0, chars - 3) + "...";
  }
  if (opt_protectEscapedCharacters) {
    str = goog.string.htmlEscape(str);
  }
  return str;
};
goog.string.truncateMiddle = function(str, chars, opt_protectEscapedCharacters, opt_trailingChars) {
  if (opt_protectEscapedCharacters) {
    str = goog.string.unescapeEntities(str);
  }
  if (opt_trailingChars && str.length > chars) {
    if (opt_trailingChars > chars) {
      opt_trailingChars = chars;
    }
    var endPoint = str.length - opt_trailingChars;
    var startPoint = chars - opt_trailingChars;
    str = str.substring(0, startPoint) + "..." + str.substring(endPoint);
  } else {
    if (str.length > chars) {
      var half = Math.floor(chars / 2);
      var endPos = str.length - half;
      half += chars % 2;
      str = str.substring(0, half) + "..." + str.substring(endPos);
    }
  }
  if (opt_protectEscapedCharacters) {
    str = goog.string.htmlEscape(str);
  }
  return str;
};
goog.string.specialEscapeChars_ = {"\x00":"\\0", "\b":"\\b", "\f":"\\f", "\n":"\\n", "\r":"\\r", "\t":"\\t", "\x0B":"\\x0B", '"':'\\"', "\\":"\\\\"};
goog.string.jsEscapeCache_ = {"'":"\\'"};
goog.string.quote = function(s) {
  s = String(s);
  if (s.quote) {
    return s.quote();
  } else {
    var sb = ['"'];
    for (var i = 0;i < s.length;i++) {
      var ch = s.charAt(i);
      var cc = ch.charCodeAt(0);
      sb[i + 1] = goog.string.specialEscapeChars_[ch] || (cc > 31 && cc < 127 ? ch : goog.string.escapeChar(ch));
    }
    sb.push('"');
    return sb.join("");
  }
};
goog.string.escapeString = function(str) {
  var sb = [];
  for (var i = 0;i < str.length;i++) {
    sb[i] = goog.string.escapeChar(str.charAt(i));
  }
  return sb.join("");
};
goog.string.escapeChar = function(c) {
  if (c in goog.string.jsEscapeCache_) {
    return goog.string.jsEscapeCache_[c];
  }
  if (c in goog.string.specialEscapeChars_) {
    return goog.string.jsEscapeCache_[c] = goog.string.specialEscapeChars_[c];
  }
  var rv = c;
  var cc = c.charCodeAt(0);
  if (cc > 31 && cc < 127) {
    rv = c;
  } else {
    if (cc < 256) {
      rv = "\\x";
      if (cc < 16 || cc > 256) {
        rv += "0";
      }
    } else {
      rv = "\\u";
      if (cc < 4096) {
        rv += "0";
      }
    }
    rv += cc.toString(16).toUpperCase();
  }
  return goog.string.jsEscapeCache_[c] = rv;
};
goog.string.toMap = function(s) {
  var rv = {};
  for (var i = 0;i < s.length;i++) {
    rv[s.charAt(i)] = true;
  }
  return rv;
};
goog.string.contains = function(s, ss) {
  return s.indexOf(ss) != -1;
};
goog.string.countOf = function(s, ss) {
  return s && ss ? s.split(ss).length - 1 : 0;
};
goog.string.removeAt = function(s, index, stringLength) {
  var resultStr = s;
  if (index >= 0 && (index < s.length && stringLength > 0)) {
    resultStr = s.substr(0, index) + s.substr(index + stringLength, s.length - index - stringLength);
  }
  return resultStr;
};
goog.string.remove = function(s, ss) {
  var re = new RegExp(goog.string.regExpEscape(ss), "");
  return s.replace(re, "");
};
goog.string.removeAll = function(s, ss) {
  var re = new RegExp(goog.string.regExpEscape(ss), "g");
  return s.replace(re, "");
};
goog.string.regExpEscape = function(s) {
  return String(s).replace(/([-()\[\]{}+?*.$\^|,:#<!\\])/g, "\\$1").replace(/\x08/g, "\\x08");
};
goog.string.repeat = function(string, length) {
  return(new Array(length + 1)).join(string);
};
goog.string.padNumber = function(num, length, opt_precision) {
  var s = goog.isDef(opt_precision) ? num.toFixed(opt_precision) : String(num);
  var index = s.indexOf(".");
  if (index == -1) {
    index = s.length;
  }
  return goog.string.repeat("0", Math.max(0, length - index)) + s;
};
goog.string.makeSafe = function(obj) {
  return obj == null ? "" : String(obj);
};
goog.string.buildString = function(var_args) {
  return Array.prototype.join.call(arguments, "");
};
goog.string.getRandomString = function() {
  var x = 2147483648;
  return Math.floor(Math.random() * x).toString(36) + Math.abs(Math.floor(Math.random() * x) ^ goog.now()).toString(36);
};
goog.string.compareVersions = function(version1, version2) {
  var order = 0;
  var v1Subs = goog.string.trim(String(version1)).split(".");
  var v2Subs = goog.string.trim(String(version2)).split(".");
  var subCount = Math.max(v1Subs.length, v2Subs.length);
  for (var subIdx = 0;order == 0 && subIdx < subCount;subIdx++) {
    var v1Sub = v1Subs[subIdx] || "";
    var v2Sub = v2Subs[subIdx] || "";
    var v1CompParser = new RegExp("(\\d*)(\\D*)", "g");
    var v2CompParser = new RegExp("(\\d*)(\\D*)", "g");
    do {
      var v1Comp = v1CompParser.exec(v1Sub) || ["", "", ""];
      var v2Comp = v2CompParser.exec(v2Sub) || ["", "", ""];
      if (v1Comp[0].length == 0 && v2Comp[0].length == 0) {
        break;
      }
      var v1CompNum = v1Comp[1].length == 0 ? 0 : parseInt(v1Comp[1], 10);
      var v2CompNum = v2Comp[1].length == 0 ? 0 : parseInt(v2Comp[1], 10);
      order = goog.string.compareElements_(v1CompNum, v2CompNum) || (goog.string.compareElements_(v1Comp[2].length == 0, v2Comp[2].length == 0) || goog.string.compareElements_(v1Comp[2], v2Comp[2]));
    } while (order == 0);
  }
  return order;
};
goog.string.compareElements_ = function(left, right) {
  if (left < right) {
    return-1;
  } else {
    if (left > right) {
      return 1;
    }
  }
  return 0;
};
goog.string.HASHCODE_MAX_ = 4294967296;
goog.string.hashCode = function(str) {
  var result = 0;
  for (var i = 0;i < str.length;++i) {
    result = 31 * result + str.charCodeAt(i);
    result %= goog.string.HASHCODE_MAX_;
  }
  return result;
};
goog.string.uniqueStringCounter_ = Math.random() * 2147483648 | 0;
goog.string.createUniqueString = function() {
  return "goog_" + goog.string.uniqueStringCounter_++;
};
goog.string.toNumber = function(str) {
  var num = Number(str);
  if (num == 0 && goog.string.isEmpty(str)) {
    return NaN;
  }
  return num;
};
goog.string.toCamelCase = function(str) {
  return String(str).replace(/\-([a-z])/g, function(all, match) {
    return match.toUpperCase();
  });
};
goog.string.toSelectorCase = function(str) {
  return String(str).replace(/([A-Z])/g, "-$1").toLowerCase();
};
goog.string.toTitleCase = function(str, opt_delimiters) {
  var delimiters = goog.isString(opt_delimiters) ? goog.string.regExpEscape(opt_delimiters) : "\\s";
  delimiters = delimiters ? "|[" + delimiters + "]+" : "";
  var regexp = new RegExp("(^" + delimiters + ")([a-z])", "g");
  return str.replace(regexp, function(all, p1, p2) {
    return p1 + p2.toUpperCase();
  });
};
goog.string.parseInt = function(value) {
  if (isFinite(value)) {
    value = String(value);
  }
  if (goog.isString(value)) {
    return/^\s*-?0x/i.test(value) ? parseInt(value, 16) : parseInt(value, 10);
  }
  return NaN;
};
goog.provide("goog.debug.Error");
goog.debug.Error = function(opt_msg) {
  if (Error.captureStackTrace) {
    Error.captureStackTrace(this, goog.debug.Error);
  } else {
    this.stack = (new Error).stack || "";
  }
  if (opt_msg) {
    this.message = String(opt_msg);
  }
};
goog.inherits(goog.debug.Error, Error);
goog.debug.Error.prototype.name = "CustomError";
goog.provide("goog.asserts");
goog.provide("goog.asserts.AssertionError");
goog.require("goog.debug.Error");
goog.require("goog.string");
goog.asserts.ENABLE_ASSERTS = goog.DEBUG;
goog.asserts.AssertionError = function(messagePattern, messageArgs) {
  messageArgs.unshift(messagePattern);
  goog.debug.Error.call(this, goog.string.subs.apply(null, messageArgs));
  messageArgs.shift();
  this.messagePattern = messagePattern;
};
goog.inherits(goog.asserts.AssertionError, goog.debug.Error);
goog.asserts.AssertionError.prototype.name = "AssertionError";
goog.asserts.doAssertFailure_ = function(defaultMessage, defaultArgs, givenMessage, givenArgs) {
  var message = "Assertion failed";
  if (givenMessage) {
    message += ": " + givenMessage;
    var args = givenArgs;
  } else {
    if (defaultMessage) {
      message += ": " + defaultMessage;
      args = defaultArgs;
    }
  }
  throw new goog.asserts.AssertionError("" + message, args || []);
};
goog.asserts.assert = function(condition, opt_message, var_args) {
  if (goog.asserts.ENABLE_ASSERTS && !condition) {
    goog.asserts.doAssertFailure_("", null, opt_message, Array.prototype.slice.call(arguments, 2));
  }
  return condition;
};
goog.asserts.fail = function(opt_message, var_args) {
  if (goog.asserts.ENABLE_ASSERTS) {
    throw new goog.asserts.AssertionError("Failure" + (opt_message ? ": " + opt_message : ""), Array.prototype.slice.call(arguments, 1));
  }
};
goog.asserts.assertNumber = function(value, opt_message, var_args) {
  if (goog.asserts.ENABLE_ASSERTS && !goog.isNumber(value)) {
    goog.asserts.doAssertFailure_("Expected number but got %s: %s.", [goog.typeOf(value), value], opt_message, Array.prototype.slice.call(arguments, 2));
  }
  return(value);
};
goog.asserts.assertString = function(value, opt_message, var_args) {
  if (goog.asserts.ENABLE_ASSERTS && !goog.isString(value)) {
    goog.asserts.doAssertFailure_("Expected string but got %s: %s.", [goog.typeOf(value), value], opt_message, Array.prototype.slice.call(arguments, 2));
  }
  return(value);
};
goog.asserts.assertFunction = function(value, opt_message, var_args) {
  if (goog.asserts.ENABLE_ASSERTS && !goog.isFunction(value)) {
    goog.asserts.doAssertFailure_("Expected function but got %s: %s.", [goog.typeOf(value), value], opt_message, Array.prototype.slice.call(arguments, 2));
  }
  return(value);
};
goog.asserts.assertObject = function(value, opt_message, var_args) {
  if (goog.asserts.ENABLE_ASSERTS && !goog.isObject(value)) {
    goog.asserts.doAssertFailure_("Expected object but got %s: %s.", [goog.typeOf(value), value], opt_message, Array.prototype.slice.call(arguments, 2));
  }
  return(value);
};
goog.asserts.assertArray = function(value, opt_message, var_args) {
  if (goog.asserts.ENABLE_ASSERTS && !goog.isArray(value)) {
    goog.asserts.doAssertFailure_("Expected array but got %s: %s.", [goog.typeOf(value), value], opt_message, Array.prototype.slice.call(arguments, 2));
  }
  return(value);
};
goog.asserts.assertBoolean = function(value, opt_message, var_args) {
  if (goog.asserts.ENABLE_ASSERTS && !goog.isBoolean(value)) {
    goog.asserts.doAssertFailure_("Expected boolean but got %s: %s.", [goog.typeOf(value), value], opt_message, Array.prototype.slice.call(arguments, 2));
  }
  return(value);
};
goog.asserts.assertInstanceof = function(value, type, opt_message, var_args) {
  if (goog.asserts.ENABLE_ASSERTS && !(value instanceof type)) {
    goog.asserts.doAssertFailure_("instanceof check failed.", null, opt_message, Array.prototype.slice.call(arguments, 3));
  }
  return(value);
};
goog.provide("goog.array");
goog.provide("goog.array.ArrayLike");
goog.require("goog.asserts");
goog.NATIVE_ARRAY_PROTOTYPES = goog.TRUSTED_SITE;
goog.array.ArrayLike;
goog.array.peek = function(array) {
  return array[array.length - 1];
};
goog.array.ARRAY_PROTOTYPE_ = Array.prototype;
goog.array.indexOf = goog.NATIVE_ARRAY_PROTOTYPES && goog.array.ARRAY_PROTOTYPE_.indexOf ? function(arr, obj, opt_fromIndex) {
  goog.asserts.assert(arr.length != null);
  return goog.array.ARRAY_PROTOTYPE_.indexOf.call(arr, obj, opt_fromIndex);
} : function(arr, obj, opt_fromIndex) {
  var fromIndex = opt_fromIndex == null ? 0 : opt_fromIndex < 0 ? Math.max(0, arr.length + opt_fromIndex) : opt_fromIndex;
  if (goog.isString(arr)) {
    if (!goog.isString(obj) || obj.length != 1) {
      return-1;
    }
    return arr.indexOf(obj, fromIndex);
  }
  for (var i = fromIndex;i < arr.length;i++) {
    if (i in arr && arr[i] === obj) {
      return i;
    }
  }
  return-1;
};
goog.array.lastIndexOf = goog.NATIVE_ARRAY_PROTOTYPES && goog.array.ARRAY_PROTOTYPE_.lastIndexOf ? function(arr, obj, opt_fromIndex) {
  goog.asserts.assert(arr.length != null);
  var fromIndex = opt_fromIndex == null ? arr.length - 1 : opt_fromIndex;
  return goog.array.ARRAY_PROTOTYPE_.lastIndexOf.call(arr, obj, fromIndex);
} : function(arr, obj, opt_fromIndex) {
  var fromIndex = opt_fromIndex == null ? arr.length - 1 : opt_fromIndex;
  if (fromIndex < 0) {
    fromIndex = Math.max(0, arr.length + fromIndex);
  }
  if (goog.isString(arr)) {
    if (!goog.isString(obj) || obj.length != 1) {
      return-1;
    }
    return arr.lastIndexOf(obj, fromIndex);
  }
  for (var i = fromIndex;i >= 0;i--) {
    if (i in arr && arr[i] === obj) {
      return i;
    }
  }
  return-1;
};
goog.array.forEach = goog.NATIVE_ARRAY_PROTOTYPES && goog.array.ARRAY_PROTOTYPE_.forEach ? function(arr, f, opt_obj) {
  goog.asserts.assert(arr.length != null);
  goog.array.ARRAY_PROTOTYPE_.forEach.call(arr, f, opt_obj);
} : function(arr, f, opt_obj) {
  var l = arr.length;
  var arr2 = goog.isString(arr) ? arr.split("") : arr;
  for (var i = 0;i < l;i++) {
    if (i in arr2) {
      f.call(opt_obj, arr2[i], i, arr);
    }
  }
};
goog.array.forEachRight = function(arr, f, opt_obj) {
  var l = arr.length;
  var arr2 = goog.isString(arr) ? arr.split("") : arr;
  for (var i = l - 1;i >= 0;--i) {
    if (i in arr2) {
      f.call(opt_obj, arr2[i], i, arr);
    }
  }
};
goog.array.filter = goog.NATIVE_ARRAY_PROTOTYPES && goog.array.ARRAY_PROTOTYPE_.filter ? function(arr, f, opt_obj) {
  goog.asserts.assert(arr.length != null);
  return goog.array.ARRAY_PROTOTYPE_.filter.call(arr, f, opt_obj);
} : function(arr, f, opt_obj) {
  var l = arr.length;
  var res = [];
  var resLength = 0;
  var arr2 = goog.isString(arr) ? arr.split("") : arr;
  for (var i = 0;i < l;i++) {
    if (i in arr2) {
      var val = arr2[i];
      if (f.call(opt_obj, val, i, arr)) {
        res[resLength++] = val;
      }
    }
  }
  return res;
};
goog.array.map = goog.NATIVE_ARRAY_PROTOTYPES && goog.array.ARRAY_PROTOTYPE_.map ? function(arr, f, opt_obj) {
  goog.asserts.assert(arr.length != null);
  return goog.array.ARRAY_PROTOTYPE_.map.call(arr, f, opt_obj);
} : function(arr, f, opt_obj) {
  var l = arr.length;
  var res = new Array(l);
  var arr2 = goog.isString(arr) ? arr.split("") : arr;
  for (var i = 0;i < l;i++) {
    if (i in arr2) {
      res[i] = f.call(opt_obj, arr2[i], i, arr);
    }
  }
  return res;
};
goog.array.reduce = function(arr, f, val, opt_obj) {
  if (arr.reduce) {
    if (opt_obj) {
      return arr.reduce(goog.bind(f, opt_obj), val);
    } else {
      return arr.reduce(f, val);
    }
  }
  var rval = val;
  goog.array.forEach(arr, function(val, index) {
    rval = f.call(opt_obj, rval, val, index, arr);
  });
  return rval;
};
goog.array.reduceRight = function(arr, f, val, opt_obj) {
  if (arr.reduceRight) {
    if (opt_obj) {
      return arr.reduceRight(goog.bind(f, opt_obj), val);
    } else {
      return arr.reduceRight(f, val);
    }
  }
  var rval = val;
  goog.array.forEachRight(arr, function(val, index) {
    rval = f.call(opt_obj, rval, val, index, arr);
  });
  return rval;
};
goog.array.some = goog.NATIVE_ARRAY_PROTOTYPES && goog.array.ARRAY_PROTOTYPE_.some ? function(arr, f, opt_obj) {
  goog.asserts.assert(arr.length != null);
  return goog.array.ARRAY_PROTOTYPE_.some.call(arr, f, opt_obj);
} : function(arr, f, opt_obj) {
  var l = arr.length;
  var arr2 = goog.isString(arr) ? arr.split("") : arr;
  for (var i = 0;i < l;i++) {
    if (i in arr2 && f.call(opt_obj, arr2[i], i, arr)) {
      return true;
    }
  }
  return false;
};
goog.array.every = goog.NATIVE_ARRAY_PROTOTYPES && goog.array.ARRAY_PROTOTYPE_.every ? function(arr, f, opt_obj) {
  goog.asserts.assert(arr.length != null);
  return goog.array.ARRAY_PROTOTYPE_.every.call(arr, f, opt_obj);
} : function(arr, f, opt_obj) {
  var l = arr.length;
  var arr2 = goog.isString(arr) ? arr.split("") : arr;
  for (var i = 0;i < l;i++) {
    if (i in arr2 && !f.call(opt_obj, arr2[i], i, arr)) {
      return false;
    }
  }
  return true;
};
goog.array.count = function(arr, f, opt_obj) {
  var count = 0;
  goog.array.forEach(arr, function(element, index, arr) {
    if (f.call(opt_obj, element, index, arr)) {
      ++count;
    }
  }, opt_obj);
  return count;
};
goog.array.find = function(arr, f, opt_obj) {
  var i = goog.array.findIndex(arr, f, opt_obj);
  return i < 0 ? null : goog.isString(arr) ? arr.charAt(i) : arr[i];
};
goog.array.findIndex = function(arr, f, opt_obj) {
  var l = arr.length;
  var arr2 = goog.isString(arr) ? arr.split("") : arr;
  for (var i = 0;i < l;i++) {
    if (i in arr2 && f.call(opt_obj, arr2[i], i, arr)) {
      return i;
    }
  }
  return-1;
};
goog.array.findRight = function(arr, f, opt_obj) {
  var i = goog.array.findIndexRight(arr, f, opt_obj);
  return i < 0 ? null : goog.isString(arr) ? arr.charAt(i) : arr[i];
};
goog.array.findIndexRight = function(arr, f, opt_obj) {
  var l = arr.length;
  var arr2 = goog.isString(arr) ? arr.split("") : arr;
  for (var i = l - 1;i >= 0;i--) {
    if (i in arr2 && f.call(opt_obj, arr2[i], i, arr)) {
      return i;
    }
  }
  return-1;
};
goog.array.contains = function(arr, obj) {
  return goog.array.indexOf(arr, obj) >= 0;
};
goog.array.isEmpty = function(arr) {
  return arr.length == 0;
};
goog.array.clear = function(arr) {
  if (!goog.isArray(arr)) {
    for (var i = arr.length - 1;i >= 0;i--) {
      delete arr[i];
    }
  }
  arr.length = 0;
};
goog.array.insert = function(arr, obj) {
  if (!goog.array.contains(arr, obj)) {
    arr.push(obj);
  }
};
goog.array.insertAt = function(arr, obj, opt_i) {
  goog.array.splice(arr, opt_i, 0, obj);
};
goog.array.insertArrayAt = function(arr, elementsToAdd, opt_i) {
  goog.partial(goog.array.splice, arr, opt_i, 0).apply(null, elementsToAdd);
};
goog.array.insertBefore = function(arr, obj, opt_obj2) {
  var i;
  if (arguments.length == 2 || (i = goog.array.indexOf(arr, opt_obj2)) < 0) {
    arr.push(obj);
  } else {
    goog.array.insertAt(arr, obj, i);
  }
};
goog.array.remove = function(arr, obj) {
  var i = goog.array.indexOf(arr, obj);
  var rv;
  if (rv = i >= 0) {
    goog.array.removeAt(arr, i);
  }
  return rv;
};
goog.array.removeAt = function(arr, i) {
  goog.asserts.assert(arr.length != null);
  return goog.array.ARRAY_PROTOTYPE_.splice.call(arr, i, 1).length == 1;
};
goog.array.removeIf = function(arr, f, opt_obj) {
  var i = goog.array.findIndex(arr, f, opt_obj);
  if (i >= 0) {
    goog.array.removeAt(arr, i);
    return true;
  }
  return false;
};
goog.array.concat = function(var_args) {
  return goog.array.ARRAY_PROTOTYPE_.concat.apply(goog.array.ARRAY_PROTOTYPE_, arguments);
};
goog.array.toArray = function(object) {
  var length = object.length;
  if (length > 0) {
    var rv = new Array(length);
    for (var i = 0;i < length;i++) {
      rv[i] = object[i];
    }
    return rv;
  }
  return[];
};
goog.array.clone = goog.array.toArray;
goog.array.extend = function(arr1, var_args) {
  for (var i = 1;i < arguments.length;i++) {
    var arr2 = arguments[i];
    var isArrayLike;
    if (goog.isArray(arr2) || (isArrayLike = goog.isArrayLike(arr2)) && Object.prototype.hasOwnProperty.call(arr2, "callee")) {
      arr1.push.apply(arr1, arr2);
    } else {
      if (isArrayLike) {
        var len1 = arr1.length;
        var len2 = arr2.length;
        for (var j = 0;j < len2;j++) {
          arr1[len1 + j] = arr2[j];
        }
      } else {
        arr1.push(arr2);
      }
    }
  }
};
goog.array.splice = function(arr, index, howMany, var_args) {
  goog.asserts.assert(arr.length != null);
  return goog.array.ARRAY_PROTOTYPE_.splice.apply(arr, goog.array.slice(arguments, 1));
};
goog.array.slice = function(arr, start, opt_end) {
  goog.asserts.assert(arr.length != null);
  if (arguments.length <= 2) {
    return goog.array.ARRAY_PROTOTYPE_.slice.call(arr, start);
  } else {
    return goog.array.ARRAY_PROTOTYPE_.slice.call(arr, start, opt_end);
  }
};
goog.array.removeDuplicates = function(arr, opt_rv) {
  var returnArray = opt_rv || arr;
  var seen = {}, cursorInsert = 0, cursorRead = 0;
  while (cursorRead < arr.length) {
    var current = arr[cursorRead++];
    var key = goog.isObject(current) ? "o" + goog.getUid(current) : (typeof current).charAt(0) + current;
    if (!Object.prototype.hasOwnProperty.call(seen, key)) {
      seen[key] = true;
      returnArray[cursorInsert++] = current;
    }
  }
  returnArray.length = cursorInsert;
};
goog.array.binarySearch = function(arr, target, opt_compareFn) {
  return goog.array.binarySearch_(arr, opt_compareFn || goog.array.defaultCompare, false, target);
};
goog.array.binarySelect = function(arr, evaluator, opt_obj) {
  return goog.array.binarySearch_(arr, evaluator, true, undefined, opt_obj);
};
goog.array.binarySearch_ = function(arr, compareFn, isEvaluator, opt_target, opt_selfObj) {
  var left = 0;
  var right = arr.length;
  var found;
  while (left < right) {
    var middle = left + right >> 1;
    var compareResult;
    if (isEvaluator) {
      compareResult = compareFn.call(opt_selfObj, arr[middle], middle, arr);
    } else {
      compareResult = compareFn(opt_target, arr[middle]);
    }
    if (compareResult > 0) {
      left = middle + 1;
    } else {
      right = middle;
      found = !compareResult;
    }
  }
  return found ? left : ~left;
};
goog.array.sort = function(arr, opt_compareFn) {
  goog.asserts.assert(arr.length != null);
  goog.array.ARRAY_PROTOTYPE_.sort.call(arr, opt_compareFn || goog.array.defaultCompare);
};
goog.array.stableSort = function(arr, opt_compareFn) {
  for (var i = 0;i < arr.length;i++) {
    arr[i] = {index:i, value:arr[i]};
  }
  var valueCompareFn = opt_compareFn || goog.array.defaultCompare;
  function stableCompareFn(obj1, obj2) {
    return valueCompareFn(obj1.value, obj2.value) || obj1.index - obj2.index;
  }
  goog.array.sort(arr, stableCompareFn);
  for (var i = 0;i < arr.length;i++) {
    arr[i] = arr[i].value;
  }
};
goog.array.sortObjectsByKey = function(arr, key, opt_compareFn) {
  var compare = opt_compareFn || goog.array.defaultCompare;
  goog.array.sort(arr, function(a, b) {
    return compare(a[key], b[key]);
  });
};
goog.array.isSorted = function(arr, opt_compareFn, opt_strict) {
  var compare = opt_compareFn || goog.array.defaultCompare;
  for (var i = 1;i < arr.length;i++) {
    var compareResult = compare(arr[i - 1], arr[i]);
    if (compareResult > 0 || compareResult == 0 && opt_strict) {
      return false;
    }
  }
  return true;
};
goog.array.equals = function(arr1, arr2, opt_equalsFn) {
  if (!goog.isArrayLike(arr1) || (!goog.isArrayLike(arr2) || arr1.length != arr2.length)) {
    return false;
  }
  var l = arr1.length;
  var equalsFn = opt_equalsFn || goog.array.defaultCompareEquality;
  for (var i = 0;i < l;i++) {
    if (!equalsFn(arr1[i], arr2[i])) {
      return false;
    }
  }
  return true;
};
goog.array.compare = function(arr1, arr2, opt_equalsFn) {
  return goog.array.equals(arr1, arr2, opt_equalsFn);
};
goog.array.compare3 = function(arr1, arr2, opt_compareFn) {
  var compare = opt_compareFn || goog.array.defaultCompare;
  var l = Math.min(arr1.length, arr2.length);
  for (var i = 0;i < l;i++) {
    var result = compare(arr1[i], arr2[i]);
    if (result != 0) {
      return result;
    }
  }
  return goog.array.defaultCompare(arr1.length, arr2.length);
};
goog.array.defaultCompare = function(a, b) {
  return a > b ? 1 : a < b ? -1 : 0;
};
goog.array.defaultCompareEquality = function(a, b) {
  return a === b;
};
goog.array.binaryInsert = function(array, value, opt_compareFn) {
  var index = goog.array.binarySearch(array, value, opt_compareFn);
  if (index < 0) {
    goog.array.insertAt(array, value, -(index + 1));
    return true;
  }
  return false;
};
goog.array.binaryRemove = function(array, value, opt_compareFn) {
  var index = goog.array.binarySearch(array, value, opt_compareFn);
  return index >= 0 ? goog.array.removeAt(array, index) : false;
};
goog.array.bucket = function(array, sorter) {
  var buckets = {};
  for (var i = 0;i < array.length;i++) {
    var value = array[i];
    var key = sorter(value, i, array);
    if (goog.isDef(key)) {
      var bucket = buckets[key] || (buckets[key] = []);
      bucket.push(value);
    }
  }
  return buckets;
};
goog.array.toObject = function(arr, keyFunc, opt_obj) {
  var ret = {};
  goog.array.forEach(arr, function(element, index) {
    ret[keyFunc.call(opt_obj, element, index, arr)] = element;
  });
  return ret;
};
goog.array.range = function(startOrEnd, opt_end, opt_step) {
  var array = [];
  var start = 0;
  var end = startOrEnd;
  var step = opt_step || 1;
  if (opt_end !== undefined) {
    start = startOrEnd;
    end = opt_end;
  }
  if (step * (end - start) < 0) {
    return[];
  }
  if (step > 0) {
    for (var i = start;i < end;i += step) {
      array.push(i);
    }
  } else {
    for (var i = start;i > end;i += step) {
      array.push(i);
    }
  }
  return array;
};
goog.array.repeat = function(value, n) {
  var array = [];
  for (var i = 0;i < n;i++) {
    array[i] = value;
  }
  return array;
};
goog.array.flatten = function(var_args) {
  var result = [];
  for (var i = 0;i < arguments.length;i++) {
    var element = arguments[i];
    if (goog.isArray(element)) {
      result.push.apply(result, goog.array.flatten.apply(null, element));
    } else {
      result.push(element);
    }
  }
  return result;
};
goog.array.rotate = function(array, n) {
  goog.asserts.assert(array.length != null);
  if (array.length) {
    n %= array.length;
    if (n > 0) {
      goog.array.ARRAY_PROTOTYPE_.unshift.apply(array, array.splice(-n, n));
    } else {
      if (n < 0) {
        goog.array.ARRAY_PROTOTYPE_.push.apply(array, array.splice(0, -n));
      }
    }
  }
  return array;
};
goog.array.zip = function(var_args) {
  if (!arguments.length) {
    return[];
  }
  var result = [];
  for (var i = 0;true;i++) {
    var value = [];
    for (var j = 0;j < arguments.length;j++) {
      var arr = arguments[j];
      if (i >= arr.length) {
        return result;
      }
      value.push(arr[i]);
    }
    result.push(value);
  }
};
goog.array.shuffle = function(arr, opt_randFn) {
  var randFn = opt_randFn || Math.random;
  for (var i = arr.length - 1;i > 0;i--) {
    var j = Math.floor(randFn() * (i + 1));
    var tmp = arr[i];
    arr[i] = arr[j];
    arr[j] = tmp;
  }
};
goog.provide("goog.object");
goog.object.forEach = function(obj, f, opt_obj) {
  for (var key in obj) {
    f.call(opt_obj, obj[key], key, obj);
  }
};
goog.object.filter = function(obj, f, opt_obj) {
  var res = {};
  for (var key in obj) {
    if (f.call(opt_obj, obj[key], key, obj)) {
      res[key] = obj[key];
    }
  }
  return res;
};
goog.object.map = function(obj, f, opt_obj) {
  var res = {};
  for (var key in obj) {
    res[key] = f.call(opt_obj, obj[key], key, obj);
  }
  return res;
};
goog.object.some = function(obj, f, opt_obj) {
  for (var key in obj) {
    if (f.call(opt_obj, obj[key], key, obj)) {
      return true;
    }
  }
  return false;
};
goog.object.every = function(obj, f, opt_obj) {
  for (var key in obj) {
    if (!f.call(opt_obj, obj[key], key, obj)) {
      return false;
    }
  }
  return true;
};
goog.object.getCount = function(obj) {
  var rv = 0;
  for (var key in obj) {
    rv++;
  }
  return rv;
};
goog.object.getAnyKey = function(obj) {
  for (var key in obj) {
    return key;
  }
};
goog.object.getAnyValue = function(obj) {
  for (var key in obj) {
    return obj[key];
  }
};
goog.object.contains = function(obj, val) {
  return goog.object.containsValue(obj, val);
};
goog.object.getValues = function(obj) {
  var res = [];
  var i = 0;
  for (var key in obj) {
    res[i++] = obj[key];
  }
  return res;
};
goog.object.getKeys = function(obj) {
  var res = [];
  var i = 0;
  for (var key in obj) {
    res[i++] = key;
  }
  return res;
};
goog.object.getValueByKeys = function(obj, var_args) {
  var isArrayLike = goog.isArrayLike(var_args);
  var keys = isArrayLike ? var_args : arguments;
  for (var i = isArrayLike ? 0 : 1;i < keys.length;i++) {
    obj = obj[keys[i]];
    if (!goog.isDef(obj)) {
      break;
    }
  }
  return obj;
};
goog.object.containsKey = function(obj, key) {
  return key in obj;
};
goog.object.containsValue = function(obj, val) {
  for (var key in obj) {
    if (obj[key] == val) {
      return true;
    }
  }
  return false;
};
goog.object.findKey = function(obj, f, opt_this) {
  for (var key in obj) {
    if (f.call(opt_this, obj[key], key, obj)) {
      return key;
    }
  }
  return undefined;
};
goog.object.findValue = function(obj, f, opt_this) {
  var key = goog.object.findKey(obj, f, opt_this);
  return key && obj[key];
};
goog.object.isEmpty = function(obj) {
  for (var key in obj) {
    return false;
  }
  return true;
};
goog.object.clear = function(obj) {
  for (var i in obj) {
    delete obj[i];
  }
};
goog.object.remove = function(obj, key) {
  var rv;
  if (rv = key in obj) {
    delete obj[key];
  }
  return rv;
};
goog.object.add = function(obj, key, val) {
  if (key in obj) {
    throw Error('The object already contains the key "' + key + '"');
  }
  goog.object.set(obj, key, val);
};
goog.object.get = function(obj, key, opt_val) {
  if (key in obj) {
    return obj[key];
  }
  return opt_val;
};
goog.object.set = function(obj, key, value) {
  obj[key] = value;
};
goog.object.setIfUndefined = function(obj, key, value) {
  return key in obj ? obj[key] : obj[key] = value;
};
goog.object.clone = function(obj) {
  var res = {};
  for (var key in obj) {
    res[key] = obj[key];
  }
  return res;
};
goog.object.unsafeClone = function(obj) {
  var type = goog.typeOf(obj);
  if (type == "object" || type == "array") {
    if (obj.clone) {
      return obj.clone();
    }
    var clone = type == "array" ? [] : {};
    for (var key in obj) {
      clone[key] = goog.object.unsafeClone(obj[key]);
    }
    return clone;
  }
  return obj;
};
goog.object.transpose = function(obj) {
  var transposed = {};
  for (var key in obj) {
    transposed[obj[key]] = key;
  }
  return transposed;
};
goog.object.PROTOTYPE_FIELDS_ = ["constructor", "hasOwnProperty", "isPrototypeOf", "propertyIsEnumerable", "toLocaleString", "toString", "valueOf"];
goog.object.extend = function(target, var_args) {
  var key, source;
  for (var i = 1;i < arguments.length;i++) {
    source = arguments[i];
    for (key in source) {
      target[key] = source[key];
    }
    for (var j = 0;j < goog.object.PROTOTYPE_FIELDS_.length;j++) {
      key = goog.object.PROTOTYPE_FIELDS_[j];
      if (Object.prototype.hasOwnProperty.call(source, key)) {
        target[key] = source[key];
      }
    }
  }
};
goog.object.create = function(var_args) {
  var argLength = arguments.length;
  if (argLength == 1 && goog.isArray(arguments[0])) {
    return goog.object.create.apply(null, arguments[0]);
  }
  if (argLength % 2) {
    throw Error("Uneven number of arguments");
  }
  var rv = {};
  for (var i = 0;i < argLength;i += 2) {
    rv[arguments[i]] = arguments[i + 1];
  }
  return rv;
};
goog.object.createSet = function(var_args) {
  var argLength = arguments.length;
  if (argLength == 1 && goog.isArray(arguments[0])) {
    return goog.object.createSet.apply(null, arguments[0]);
  }
  var rv = {};
  for (var i = 0;i < argLength;i++) {
    rv[arguments[i]] = true;
  }
  return rv;
};
goog.object.createImmutableView = function(obj) {
  var result = obj;
  if (Object.isFrozen && !Object.isFrozen(obj)) {
    result = Object.create(obj);
    Object.freeze(result);
  }
  return result;
};
goog.object.isImmutableView = function(obj) {
  return!!Object.isFrozen && Object.isFrozen(obj);
};
goog.provide("goog.string.StringBuffer");
goog.string.StringBuffer = function(opt_a1, var_args) {
  if (opt_a1 != null) {
    this.append.apply(this, arguments);
  }
};
goog.string.StringBuffer.prototype.buffer_ = "";
goog.string.StringBuffer.prototype.set = function(s) {
  this.buffer_ = "" + s;
};
goog.string.StringBuffer.prototype.append = function(a1, opt_a2, var_args) {
  this.buffer_ += a1;
  if (opt_a2 != null) {
    for (var i = 1;i < arguments.length;i++) {
      this.buffer_ += arguments[i];
    }
  }
  return this;
};
goog.string.StringBuffer.prototype.clear = function() {
  this.buffer_ = "";
};
goog.string.StringBuffer.prototype.getLength = function() {
  return this.buffer_.length;
};
goog.string.StringBuffer.prototype.toString = function() {
  return this.buffer_;
};
goog.provide("cljs.core");
goog.require("goog.array");
goog.require("goog.array");
goog.require("goog.object");
goog.require("goog.object");
goog.require("goog.string.StringBuffer");
goog.require("goog.string.StringBuffer");
goog.require("goog.string");
goog.require("goog.string");
cljs.core._STAR_clojurescript_version_STAR_ = "0.0-2156";
cljs.core._STAR_unchecked_if_STAR_ = false;
cljs.core._STAR_print_fn_STAR_ = function _STAR_print_fn_STAR_(_) {
  throw new Error("No *print-fn* fn set for evaluation environment");
};
cljs.core.set_print_fn_BANG_ = function set_print_fn_BANG_(f) {
  return cljs.core._STAR_print_fn_STAR_ = f;
};
cljs.core._STAR_flush_on_newline_STAR_ = true;
cljs.core._STAR_print_newline_STAR_ = true;
cljs.core._STAR_print_readably_STAR_ = true;
cljs.core._STAR_print_meta_STAR_ = false;
cljs.core._STAR_print_dup_STAR_ = false;
cljs.core._STAR_print_length_STAR_ = null;
cljs.core._STAR_print_level_STAR_ = null;
cljs.core.pr_opts = function pr_opts() {
  return new cljs.core.PersistentArrayMap(null, 5, [new cljs.core.Keyword(null, "flush-on-newline", "flush-on-newline", 4338025857), cljs.core._STAR_flush_on_newline_STAR_, new cljs.core.Keyword(null, "readably", "readably", 4441712502), cljs.core._STAR_print_readably_STAR_, new cljs.core.Keyword(null, "meta", "meta", 1017252215), cljs.core._STAR_print_meta_STAR_, new cljs.core.Keyword(null, "dup", "dup", 1014004081), cljs.core._STAR_print_dup_STAR_, new cljs.core.Keyword(null, "print-length", "print-length", 
  3960797560), cljs.core._STAR_print_length_STAR_], null);
};
cljs.core.enable_console_print_BANG_ = function enable_console_print_BANG_() {
  cljs.core._STAR_print_newline_STAR_ = false;
  return cljs.core._STAR_print_fn_STAR_ = function() {
    var G__10588__delegate = function(args) {
      return console.log.apply(console, cljs.core.into_array.call(null, args));
    };
    var G__10588 = function(var_args) {
      var args = null;
      if (arguments.length > 0) {
        args = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0), 0);
      }
      return G__10588__delegate.call(this, args);
    };
    G__10588.cljs$lang$maxFixedArity = 0;
    G__10588.cljs$lang$applyTo = function(arglist__10589) {
      var args = cljs.core.seq(arglist__10589);
      return G__10588__delegate(args);
    };
    G__10588.cljs$core$IFn$_invoke$arity$variadic = G__10588__delegate;
    return G__10588;
  }();
};
cljs.core.truth_ = function truth_(x) {
  return x != null && x !== false;
};
cljs.core.not_native = null;
cljs.core.identical_QMARK_ = function identical_QMARK_(x, y) {
  return x === y;
};
cljs.core.nil_QMARK_ = function nil_QMARK_(x) {
  return x == null;
};
cljs.core.array_QMARK_ = function array_QMARK_(x) {
  return x instanceof Array;
};
cljs.core.number_QMARK_ = function number_QMARK_(n) {
  return typeof n === "number";
};
cljs.core.not = function not(x) {
  if (cljs.core.truth_(x)) {
    return false;
  } else {
    return true;
  }
};
cljs.core.object_QMARK_ = function object_QMARK_(x) {
  if (!(x == null)) {
    return x.constructor === Object;
  } else {
    return false;
  }
};
cljs.core.string_QMARK_ = function string_QMARK_(x) {
  return goog.isString(x);
};
cljs.core.native_satisfies_QMARK_ = function native_satisfies_QMARK_(p, x) {
  var x__$1 = x == null ? null : x;
  if (p[goog.typeOf(x__$1)]) {
    return true;
  } else {
    if (p["_"]) {
      return true;
    } else {
      if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
        return false;
      } else {
        return null;
      }
    }
  }
};
cljs.core.is_proto_ = function is_proto_(x) {
  return x.constructor.prototype === x;
};
cljs.core._STAR_main_cli_fn_STAR_ = null;
cljs.core.type = function type(x) {
  if (x == null) {
    return null;
  } else {
    return x.constructor;
  }
};
cljs.core.missing_protocol = function missing_protocol(proto, obj) {
  var ty = cljs.core.type.call(null, obj);
  var ty__$1 = cljs.core.truth_(function() {
    var and__3391__auto__ = ty;
    if (cljs.core.truth_(and__3391__auto__)) {
      return ty.cljs$lang$type;
    } else {
      return and__3391__auto__;
    }
  }()) ? ty.cljs$lang$ctorStr : goog.typeOf(obj);
  return new Error(["No protocol method ", proto, " defined for type ", ty__$1, ": ", obj].join(""));
};
cljs.core.type__GT_str = function type__GT_str(ty) {
  var temp__4090__auto__ = ty.cljs$lang$ctorStr;
  if (cljs.core.truth_(temp__4090__auto__)) {
    var s = temp__4090__auto__;
    return s;
  } else {
    return[cljs.core.str(ty)].join("");
  }
};
cljs.core.make_array = function() {
  var make_array = null;
  var make_array__1 = function(size) {
    return new Array(size);
  };
  var make_array__2 = function(type, size) {
    return make_array.call(null, size);
  };
  make_array = function(type, size) {
    switch(arguments.length) {
      case 1:
        return make_array__1.call(this, type);
      case 2:
        return make_array__2.call(this, type, size);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  make_array.cljs$core$IFn$_invoke$arity$1 = make_array__1;
  make_array.cljs$core$IFn$_invoke$arity$2 = make_array__2;
  return make_array;
}();
cljs.core.aclone = function aclone(arr) {
  var len = arr.length;
  var new_arr = new Array(len);
  var n__4251__auto___10590 = len;
  var i_10591 = 0;
  while (true) {
    if (i_10591 < n__4251__auto___10590) {
      new_arr[i_10591] = arr[i_10591];
      var G__10592 = i_10591 + 1;
      i_10591 = G__10592;
      continue;
    } else {
    }
    break;
  }
  return new_arr;
};
cljs.core.array = function array(var_args) {
  return Array.prototype.slice.call(arguments);
};
cljs.core.aget = function() {
  var aget = null;
  var aget__2 = function(array, i) {
    return array[i];
  };
  var aget__3 = function() {
    var G__10593__delegate = function(array, i, idxs) {
      return cljs.core.apply.call(null, aget, aget.call(null, array, i), idxs);
    };
    var G__10593 = function(array, i, var_args) {
      var idxs = null;
      if (arguments.length > 2) {
        idxs = cljs.core.array_seq(Array.prototype.slice.call(arguments, 2), 0);
      }
      return G__10593__delegate.call(this, array, i, idxs);
    };
    G__10593.cljs$lang$maxFixedArity = 2;
    G__10593.cljs$lang$applyTo = function(arglist__10594) {
      var array = cljs.core.first(arglist__10594);
      arglist__10594 = cljs.core.next(arglist__10594);
      var i = cljs.core.first(arglist__10594);
      var idxs = cljs.core.rest(arglist__10594);
      return G__10593__delegate(array, i, idxs);
    };
    G__10593.cljs$core$IFn$_invoke$arity$variadic = G__10593__delegate;
    return G__10593;
  }();
  aget = function(array, i, var_args) {
    var idxs = var_args;
    switch(arguments.length) {
      case 2:
        return aget__2.call(this, array, i);
      default:
        return aget__3.cljs$core$IFn$_invoke$arity$variadic(array, i, cljs.core.array_seq(arguments, 2));
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  aget.cljs$lang$maxFixedArity = 2;
  aget.cljs$lang$applyTo = aget__3.cljs$lang$applyTo;
  aget.cljs$core$IFn$_invoke$arity$2 = aget__2;
  aget.cljs$core$IFn$_invoke$arity$variadic = aget__3.cljs$core$IFn$_invoke$arity$variadic;
  return aget;
}();
cljs.core.aset = function() {
  var aset = null;
  var aset__3 = function(array, i, val) {
    return array[i] = val;
  };
  var aset__4 = function() {
    var G__10595__delegate = function(array, idx, idx2, idxv) {
      return cljs.core.apply.call(null, aset, array[idx], idx2, idxv);
    };
    var G__10595 = function(array, idx, idx2, var_args) {
      var idxv = null;
      if (arguments.length > 3) {
        idxv = cljs.core.array_seq(Array.prototype.slice.call(arguments, 3), 0);
      }
      return G__10595__delegate.call(this, array, idx, idx2, idxv);
    };
    G__10595.cljs$lang$maxFixedArity = 3;
    G__10595.cljs$lang$applyTo = function(arglist__10596) {
      var array = cljs.core.first(arglist__10596);
      arglist__10596 = cljs.core.next(arglist__10596);
      var idx = cljs.core.first(arglist__10596);
      arglist__10596 = cljs.core.next(arglist__10596);
      var idx2 = cljs.core.first(arglist__10596);
      var idxv = cljs.core.rest(arglist__10596);
      return G__10595__delegate(array, idx, idx2, idxv);
    };
    G__10595.cljs$core$IFn$_invoke$arity$variadic = G__10595__delegate;
    return G__10595;
  }();
  aset = function(array, idx, idx2, var_args) {
    var idxv = var_args;
    switch(arguments.length) {
      case 3:
        return aset__3.call(this, array, idx, idx2);
      default:
        return aset__4.cljs$core$IFn$_invoke$arity$variadic(array, idx, idx2, cljs.core.array_seq(arguments, 3));
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  aset.cljs$lang$maxFixedArity = 3;
  aset.cljs$lang$applyTo = aset__4.cljs$lang$applyTo;
  aset.cljs$core$IFn$_invoke$arity$3 = aset__3;
  aset.cljs$core$IFn$_invoke$arity$variadic = aset__4.cljs$core$IFn$_invoke$arity$variadic;
  return aset;
}();
cljs.core.alength = function alength(array) {
  return array.length;
};
cljs.core.into_array = function() {
  var into_array = null;
  var into_array__1 = function(aseq) {
    return into_array.call(null, null, aseq);
  };
  var into_array__2 = function(type, aseq) {
    return cljs.core.reduce.call(null, function(a, x) {
      a.push(x);
      return a;
    }, [], aseq);
  };
  into_array = function(type, aseq) {
    switch(arguments.length) {
      case 1:
        return into_array__1.call(this, type);
      case 2:
        return into_array__2.call(this, type, aseq);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  into_array.cljs$core$IFn$_invoke$arity$1 = into_array__1;
  into_array.cljs$core$IFn$_invoke$arity$2 = into_array__2;
  return into_array;
}();
cljs.core.Fn = function() {
  var obj10598 = {};
  return obj10598;
}();
cljs.core.IFn = function() {
  var obj10600 = {};
  return obj10600;
}();
cljs.core._invoke = function() {
  var _invoke = null;
  var _invoke__1 = function(this$) {
    if (function() {
      var and__3391__auto__ = this$;
      if (and__3391__auto__) {
        return this$.cljs$core$IFn$_invoke$arity$1;
      } else {
        return and__3391__auto__;
      }
    }()) {
      return this$.cljs$core$IFn$_invoke$arity$1(this$);
    } else {
      var x__4030__auto__ = this$ == null ? null : this$;
      return function() {
        var or__3403__auto__ = cljs.core._invoke[goog.typeOf(x__4030__auto__)];
        if (or__3403__auto__) {
          return or__3403__auto__;
        } else {
          var or__3403__auto____$1 = cljs.core._invoke["_"];
          if (or__3403__auto____$1) {
            return or__3403__auto____$1;
          } else {
            throw cljs.core.missing_protocol.call(null, "IFn.-invoke", this$);
          }
        }
      }().call(null, this$);
    }
  };
  var _invoke__2 = function(this$, a) {
    if (function() {
      var and__3391__auto__ = this$;
      if (and__3391__auto__) {
        return this$.cljs$core$IFn$_invoke$arity$2;
      } else {
        return and__3391__auto__;
      }
    }()) {
      return this$.cljs$core$IFn$_invoke$arity$2(this$, a);
    } else {
      var x__4030__auto__ = this$ == null ? null : this$;
      return function() {
        var or__3403__auto__ = cljs.core._invoke[goog.typeOf(x__4030__auto__)];
        if (or__3403__auto__) {
          return or__3403__auto__;
        } else {
          var or__3403__auto____$1 = cljs.core._invoke["_"];
          if (or__3403__auto____$1) {
            return or__3403__auto____$1;
          } else {
            throw cljs.core.missing_protocol.call(null, "IFn.-invoke", this$);
          }
        }
      }().call(null, this$, a);
    }
  };
  var _invoke__3 = function(this$, a, b) {
    if (function() {
      var and__3391__auto__ = this$;
      if (and__3391__auto__) {
        return this$.cljs$core$IFn$_invoke$arity$3;
      } else {
        return and__3391__auto__;
      }
    }()) {
      return this$.cljs$core$IFn$_invoke$arity$3(this$, a, b);
    } else {
      var x__4030__auto__ = this$ == null ? null : this$;
      return function() {
        var or__3403__auto__ = cljs.core._invoke[goog.typeOf(x__4030__auto__)];
        if (or__3403__auto__) {
          return or__3403__auto__;
        } else {
          var or__3403__auto____$1 = cljs.core._invoke["_"];
          if (or__3403__auto____$1) {
            return or__3403__auto____$1;
          } else {
            throw cljs.core.missing_protocol.call(null, "IFn.-invoke", this$);
          }
        }
      }().call(null, this$, a, b);
    }
  };
  var _invoke__4 = function(this$, a, b, c) {
    if (function() {
      var and__3391__auto__ = this$;
      if (and__3391__auto__) {
        return this$.cljs$core$IFn$_invoke$arity$4;
      } else {
        return and__3391__auto__;
      }
    }()) {
      return this$.cljs$core$IFn$_invoke$arity$4(this$, a, b, c);
    } else {
      var x__4030__auto__ = this$ == null ? null : this$;
      return function() {
        var or__3403__auto__ = cljs.core._invoke[goog.typeOf(x__4030__auto__)];
        if (or__3403__auto__) {
          return or__3403__auto__;
        } else {
          var or__3403__auto____$1 = cljs.core._invoke["_"];
          if (or__3403__auto____$1) {
            return or__3403__auto____$1;
          } else {
            throw cljs.core.missing_protocol.call(null, "IFn.-invoke", this$);
          }
        }
      }().call(null, this$, a, b, c);
    }
  };
  var _invoke__5 = function(this$, a, b, c, d) {
    if (function() {
      var and__3391__auto__ = this$;
      if (and__3391__auto__) {
        return this$.cljs$core$IFn$_invoke$arity$5;
      } else {
        return and__3391__auto__;
      }
    }()) {
      return this$.cljs$core$IFn$_invoke$arity$5(this$, a, b, c, d);
    } else {
      var x__4030__auto__ = this$ == null ? null : this$;
      return function() {
        var or__3403__auto__ = cljs.core._invoke[goog.typeOf(x__4030__auto__)];
        if (or__3403__auto__) {
          return or__3403__auto__;
        } else {
          var or__3403__auto____$1 = cljs.core._invoke["_"];
          if (or__3403__auto____$1) {
            return or__3403__auto____$1;
          } else {
            throw cljs.core.missing_protocol.call(null, "IFn.-invoke", this$);
          }
        }
      }().call(null, this$, a, b, c, d);
    }
  };
  var _invoke__6 = function(this$, a, b, c, d, e) {
    if (function() {
      var and__3391__auto__ = this$;
      if (and__3391__auto__) {
        return this$.cljs$core$IFn$_invoke$arity$6;
      } else {
        return and__3391__auto__;
      }
    }()) {
      return this$.cljs$core$IFn$_invoke$arity$6(this$, a, b, c, d, e);
    } else {
      var x__4030__auto__ = this$ == null ? null : this$;
      return function() {
        var or__3403__auto__ = cljs.core._invoke[goog.typeOf(x__4030__auto__)];
        if (or__3403__auto__) {
          return or__3403__auto__;
        } else {
          var or__3403__auto____$1 = cljs.core._invoke["_"];
          if (or__3403__auto____$1) {
            return or__3403__auto____$1;
          } else {
            throw cljs.core.missing_protocol.call(null, "IFn.-invoke", this$);
          }
        }
      }().call(null, this$, a, b, c, d, e);
    }
  };
  var _invoke__7 = function(this$, a, b, c, d, e, f) {
    if (function() {
      var and__3391__auto__ = this$;
      if (and__3391__auto__) {
        return this$.cljs$core$IFn$_invoke$arity$7;
      } else {
        return and__3391__auto__;
      }
    }()) {
      return this$.cljs$core$IFn$_invoke$arity$7(this$, a, b, c, d, e, f);
    } else {
      var x__4030__auto__ = this$ == null ? null : this$;
      return function() {
        var or__3403__auto__ = cljs.core._invoke[goog.typeOf(x__4030__auto__)];
        if (or__3403__auto__) {
          return or__3403__auto__;
        } else {
          var or__3403__auto____$1 = cljs.core._invoke["_"];
          if (or__3403__auto____$1) {
            return or__3403__auto____$1;
          } else {
            throw cljs.core.missing_protocol.call(null, "IFn.-invoke", this$);
          }
        }
      }().call(null, this$, a, b, c, d, e, f);
    }
  };
  var _invoke__8 = function(this$, a, b, c, d, e, f, g) {
    if (function() {
      var and__3391__auto__ = this$;
      if (and__3391__auto__) {
        return this$.cljs$core$IFn$_invoke$arity$8;
      } else {
        return and__3391__auto__;
      }
    }()) {
      return this$.cljs$core$IFn$_invoke$arity$8(this$, a, b, c, d, e, f, g);
    } else {
      var x__4030__auto__ = this$ == null ? null : this$;
      return function() {
        var or__3403__auto__ = cljs.core._invoke[goog.typeOf(x__4030__auto__)];
        if (or__3403__auto__) {
          return or__3403__auto__;
        } else {
          var or__3403__auto____$1 = cljs.core._invoke["_"];
          if (or__3403__auto____$1) {
            return or__3403__auto____$1;
          } else {
            throw cljs.core.missing_protocol.call(null, "IFn.-invoke", this$);
          }
        }
      }().call(null, this$, a, b, c, d, e, f, g);
    }
  };
  var _invoke__9 = function(this$, a, b, c, d, e, f, g, h) {
    if (function() {
      var and__3391__auto__ = this$;
      if (and__3391__auto__) {
        return this$.cljs$core$IFn$_invoke$arity$9;
      } else {
        return and__3391__auto__;
      }
    }()) {
      return this$.cljs$core$IFn$_invoke$arity$9(this$, a, b, c, d, e, f, g, h);
    } else {
      var x__4030__auto__ = this$ == null ? null : this$;
      return function() {
        var or__3403__auto__ = cljs.core._invoke[goog.typeOf(x__4030__auto__)];
        if (or__3403__auto__) {
          return or__3403__auto__;
        } else {
          var or__3403__auto____$1 = cljs.core._invoke["_"];
          if (or__3403__auto____$1) {
            return or__3403__auto____$1;
          } else {
            throw cljs.core.missing_protocol.call(null, "IFn.-invoke", this$);
          }
        }
      }().call(null, this$, a, b, c, d, e, f, g, h);
    }
  };
  var _invoke__10 = function(this$, a, b, c, d, e, f, g, h, i) {
    if (function() {
      var and__3391__auto__ = this$;
      if (and__3391__auto__) {
        return this$.cljs$core$IFn$_invoke$arity$10;
      } else {
        return and__3391__auto__;
      }
    }()) {
      return this$.cljs$core$IFn$_invoke$arity$10(this$, a, b, c, d, e, f, g, h, i);
    } else {
      var x__4030__auto__ = this$ == null ? null : this$;
      return function() {
        var or__3403__auto__ = cljs.core._invoke[goog.typeOf(x__4030__auto__)];
        if (or__3403__auto__) {
          return or__3403__auto__;
        } else {
          var or__3403__auto____$1 = cljs.core._invoke["_"];
          if (or__3403__auto____$1) {
            return or__3403__auto____$1;
          } else {
            throw cljs.core.missing_protocol.call(null, "IFn.-invoke", this$);
          }
        }
      }().call(null, this$, a, b, c, d, e, f, g, h, i);
    }
  };
  var _invoke__11 = function(this$, a, b, c, d, e, f, g, h, i, j) {
    if (function() {
      var and__3391__auto__ = this$;
      if (and__3391__auto__) {
        return this$.cljs$core$IFn$_invoke$arity$11;
      } else {
        return and__3391__auto__;
      }
    }()) {
      return this$.cljs$core$IFn$_invoke$arity$11(this$, a, b, c, d, e, f, g, h, i, j);
    } else {
      var x__4030__auto__ = this$ == null ? null : this$;
      return function() {
        var or__3403__auto__ = cljs.core._invoke[goog.typeOf(x__4030__auto__)];
        if (or__3403__auto__) {
          return or__3403__auto__;
        } else {
          var or__3403__auto____$1 = cljs.core._invoke["_"];
          if (or__3403__auto____$1) {
            return or__3403__auto____$1;
          } else {
            throw cljs.core.missing_protocol.call(null, "IFn.-invoke", this$);
          }
        }
      }().call(null, this$, a, b, c, d, e, f, g, h, i, j);
    }
  };
  var _invoke__12 = function(this$, a, b, c, d, e, f, g, h, i, j, k) {
    if (function() {
      var and__3391__auto__ = this$;
      if (and__3391__auto__) {
        return this$.cljs$core$IFn$_invoke$arity$12;
      } else {
        return and__3391__auto__;
      }
    }()) {
      return this$.cljs$core$IFn$_invoke$arity$12(this$, a, b, c, d, e, f, g, h, i, j, k);
    } else {
      var x__4030__auto__ = this$ == null ? null : this$;
      return function() {
        var or__3403__auto__ = cljs.core._invoke[goog.typeOf(x__4030__auto__)];
        if (or__3403__auto__) {
          return or__3403__auto__;
        } else {
          var or__3403__auto____$1 = cljs.core._invoke["_"];
          if (or__3403__auto____$1) {
            return or__3403__auto____$1;
          } else {
            throw cljs.core.missing_protocol.call(null, "IFn.-invoke", this$);
          }
        }
      }().call(null, this$, a, b, c, d, e, f, g, h, i, j, k);
    }
  };
  var _invoke__13 = function(this$, a, b, c, d, e, f, g, h, i, j, k, l) {
    if (function() {
      var and__3391__auto__ = this$;
      if (and__3391__auto__) {
        return this$.cljs$core$IFn$_invoke$arity$13;
      } else {
        return and__3391__auto__;
      }
    }()) {
      return this$.cljs$core$IFn$_invoke$arity$13(this$, a, b, c, d, e, f, g, h, i, j, k, l);
    } else {
      var x__4030__auto__ = this$ == null ? null : this$;
      return function() {
        var or__3403__auto__ = cljs.core._invoke[goog.typeOf(x__4030__auto__)];
        if (or__3403__auto__) {
          return or__3403__auto__;
        } else {
          var or__3403__auto____$1 = cljs.core._invoke["_"];
          if (or__3403__auto____$1) {
            return or__3403__auto____$1;
          } else {
            throw cljs.core.missing_protocol.call(null, "IFn.-invoke", this$);
          }
        }
      }().call(null, this$, a, b, c, d, e, f, g, h, i, j, k, l);
    }
  };
  var _invoke__14 = function(this$, a, b, c, d, e, f, g, h, i, j, k, l, m) {
    if (function() {
      var and__3391__auto__ = this$;
      if (and__3391__auto__) {
        return this$.cljs$core$IFn$_invoke$arity$14;
      } else {
        return and__3391__auto__;
      }
    }()) {
      return this$.cljs$core$IFn$_invoke$arity$14(this$, a, b, c, d, e, f, g, h, i, j, k, l, m);
    } else {
      var x__4030__auto__ = this$ == null ? null : this$;
      return function() {
        var or__3403__auto__ = cljs.core._invoke[goog.typeOf(x__4030__auto__)];
        if (or__3403__auto__) {
          return or__3403__auto__;
        } else {
          var or__3403__auto____$1 = cljs.core._invoke["_"];
          if (or__3403__auto____$1) {
            return or__3403__auto____$1;
          } else {
            throw cljs.core.missing_protocol.call(null, "IFn.-invoke", this$);
          }
        }
      }().call(null, this$, a, b, c, d, e, f, g, h, i, j, k, l, m);
    }
  };
  var _invoke__15 = function(this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n) {
    if (function() {
      var and__3391__auto__ = this$;
      if (and__3391__auto__) {
        return this$.cljs$core$IFn$_invoke$arity$15;
      } else {
        return and__3391__auto__;
      }
    }()) {
      return this$.cljs$core$IFn$_invoke$arity$15(this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n);
    } else {
      var x__4030__auto__ = this$ == null ? null : this$;
      return function() {
        var or__3403__auto__ = cljs.core._invoke[goog.typeOf(x__4030__auto__)];
        if (or__3403__auto__) {
          return or__3403__auto__;
        } else {
          var or__3403__auto____$1 = cljs.core._invoke["_"];
          if (or__3403__auto____$1) {
            return or__3403__auto____$1;
          } else {
            throw cljs.core.missing_protocol.call(null, "IFn.-invoke", this$);
          }
        }
      }().call(null, this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n);
    }
  };
  var _invoke__16 = function(this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o) {
    if (function() {
      var and__3391__auto__ = this$;
      if (and__3391__auto__) {
        return this$.cljs$core$IFn$_invoke$arity$16;
      } else {
        return and__3391__auto__;
      }
    }()) {
      return this$.cljs$core$IFn$_invoke$arity$16(this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o);
    } else {
      var x__4030__auto__ = this$ == null ? null : this$;
      return function() {
        var or__3403__auto__ = cljs.core._invoke[goog.typeOf(x__4030__auto__)];
        if (or__3403__auto__) {
          return or__3403__auto__;
        } else {
          var or__3403__auto____$1 = cljs.core._invoke["_"];
          if (or__3403__auto____$1) {
            return or__3403__auto____$1;
          } else {
            throw cljs.core.missing_protocol.call(null, "IFn.-invoke", this$);
          }
        }
      }().call(null, this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o);
    }
  };
  var _invoke__17 = function(this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p) {
    if (function() {
      var and__3391__auto__ = this$;
      if (and__3391__auto__) {
        return this$.cljs$core$IFn$_invoke$arity$17;
      } else {
        return and__3391__auto__;
      }
    }()) {
      return this$.cljs$core$IFn$_invoke$arity$17(this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p);
    } else {
      var x__4030__auto__ = this$ == null ? null : this$;
      return function() {
        var or__3403__auto__ = cljs.core._invoke[goog.typeOf(x__4030__auto__)];
        if (or__3403__auto__) {
          return or__3403__auto__;
        } else {
          var or__3403__auto____$1 = cljs.core._invoke["_"];
          if (or__3403__auto____$1) {
            return or__3403__auto____$1;
          } else {
            throw cljs.core.missing_protocol.call(null, "IFn.-invoke", this$);
          }
        }
      }().call(null, this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p);
    }
  };
  var _invoke__18 = function(this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q) {
    if (function() {
      var and__3391__auto__ = this$;
      if (and__3391__auto__) {
        return this$.cljs$core$IFn$_invoke$arity$18;
      } else {
        return and__3391__auto__;
      }
    }()) {
      return this$.cljs$core$IFn$_invoke$arity$18(this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q);
    } else {
      var x__4030__auto__ = this$ == null ? null : this$;
      return function() {
        var or__3403__auto__ = cljs.core._invoke[goog.typeOf(x__4030__auto__)];
        if (or__3403__auto__) {
          return or__3403__auto__;
        } else {
          var or__3403__auto____$1 = cljs.core._invoke["_"];
          if (or__3403__auto____$1) {
            return or__3403__auto____$1;
          } else {
            throw cljs.core.missing_protocol.call(null, "IFn.-invoke", this$);
          }
        }
      }().call(null, this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q);
    }
  };
  var _invoke__19 = function(this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, s) {
    if (function() {
      var and__3391__auto__ = this$;
      if (and__3391__auto__) {
        return this$.cljs$core$IFn$_invoke$arity$19;
      } else {
        return and__3391__auto__;
      }
    }()) {
      return this$.cljs$core$IFn$_invoke$arity$19(this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, s);
    } else {
      var x__4030__auto__ = this$ == null ? null : this$;
      return function() {
        var or__3403__auto__ = cljs.core._invoke[goog.typeOf(x__4030__auto__)];
        if (or__3403__auto__) {
          return or__3403__auto__;
        } else {
          var or__3403__auto____$1 = cljs.core._invoke["_"];
          if (or__3403__auto____$1) {
            return or__3403__auto____$1;
          } else {
            throw cljs.core.missing_protocol.call(null, "IFn.-invoke", this$);
          }
        }
      }().call(null, this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, s);
    }
  };
  var _invoke__20 = function(this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, s, t) {
    if (function() {
      var and__3391__auto__ = this$;
      if (and__3391__auto__) {
        return this$.cljs$core$IFn$_invoke$arity$20;
      } else {
        return and__3391__auto__;
      }
    }()) {
      return this$.cljs$core$IFn$_invoke$arity$20(this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, s, t);
    } else {
      var x__4030__auto__ = this$ == null ? null : this$;
      return function() {
        var or__3403__auto__ = cljs.core._invoke[goog.typeOf(x__4030__auto__)];
        if (or__3403__auto__) {
          return or__3403__auto__;
        } else {
          var or__3403__auto____$1 = cljs.core._invoke["_"];
          if (or__3403__auto____$1) {
            return or__3403__auto____$1;
          } else {
            throw cljs.core.missing_protocol.call(null, "IFn.-invoke", this$);
          }
        }
      }().call(null, this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, s, t);
    }
  };
  var _invoke__21 = function(this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, s, t, rest) {
    if (function() {
      var and__3391__auto__ = this$;
      if (and__3391__auto__) {
        return this$.cljs$core$IFn$_invoke$arity$21;
      } else {
        return and__3391__auto__;
      }
    }()) {
      return this$.cljs$core$IFn$_invoke$arity$21(this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, s, t, rest);
    } else {
      var x__4030__auto__ = this$ == null ? null : this$;
      return function() {
        var or__3403__auto__ = cljs.core._invoke[goog.typeOf(x__4030__auto__)];
        if (or__3403__auto__) {
          return or__3403__auto__;
        } else {
          var or__3403__auto____$1 = cljs.core._invoke["_"];
          if (or__3403__auto____$1) {
            return or__3403__auto____$1;
          } else {
            throw cljs.core.missing_protocol.call(null, "IFn.-invoke", this$);
          }
        }
      }().call(null, this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, s, t, rest);
    }
  };
  _invoke = function(this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, s, t, rest) {
    switch(arguments.length) {
      case 1:
        return _invoke__1.call(this, this$);
      case 2:
        return _invoke__2.call(this, this$, a);
      case 3:
        return _invoke__3.call(this, this$, a, b);
      case 4:
        return _invoke__4.call(this, this$, a, b, c);
      case 5:
        return _invoke__5.call(this, this$, a, b, c, d);
      case 6:
        return _invoke__6.call(this, this$, a, b, c, d, e);
      case 7:
        return _invoke__7.call(this, this$, a, b, c, d, e, f);
      case 8:
        return _invoke__8.call(this, this$, a, b, c, d, e, f, g);
      case 9:
        return _invoke__9.call(this, this$, a, b, c, d, e, f, g, h);
      case 10:
        return _invoke__10.call(this, this$, a, b, c, d, e, f, g, h, i);
      case 11:
        return _invoke__11.call(this, this$, a, b, c, d, e, f, g, h, i, j);
      case 12:
        return _invoke__12.call(this, this$, a, b, c, d, e, f, g, h, i, j, k);
      case 13:
        return _invoke__13.call(this, this$, a, b, c, d, e, f, g, h, i, j, k, l);
      case 14:
        return _invoke__14.call(this, this$, a, b, c, d, e, f, g, h, i, j, k, l, m);
      case 15:
        return _invoke__15.call(this, this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n);
      case 16:
        return _invoke__16.call(this, this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o);
      case 17:
        return _invoke__17.call(this, this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p);
      case 18:
        return _invoke__18.call(this, this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q);
      case 19:
        return _invoke__19.call(this, this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, s);
      case 20:
        return _invoke__20.call(this, this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, s, t);
      case 21:
        return _invoke__21.call(this, this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, s, t, rest);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  _invoke.cljs$core$IFn$_invoke$arity$1 = _invoke__1;
  _invoke.cljs$core$IFn$_invoke$arity$2 = _invoke__2;
  _invoke.cljs$core$IFn$_invoke$arity$3 = _invoke__3;
  _invoke.cljs$core$IFn$_invoke$arity$4 = _invoke__4;
  _invoke.cljs$core$IFn$_invoke$arity$5 = _invoke__5;
  _invoke.cljs$core$IFn$_invoke$arity$6 = _invoke__6;
  _invoke.cljs$core$IFn$_invoke$arity$7 = _invoke__7;
  _invoke.cljs$core$IFn$_invoke$arity$8 = _invoke__8;
  _invoke.cljs$core$IFn$_invoke$arity$9 = _invoke__9;
  _invoke.cljs$core$IFn$_invoke$arity$10 = _invoke__10;
  _invoke.cljs$core$IFn$_invoke$arity$11 = _invoke__11;
  _invoke.cljs$core$IFn$_invoke$arity$12 = _invoke__12;
  _invoke.cljs$core$IFn$_invoke$arity$13 = _invoke__13;
  _invoke.cljs$core$IFn$_invoke$arity$14 = _invoke__14;
  _invoke.cljs$core$IFn$_invoke$arity$15 = _invoke__15;
  _invoke.cljs$core$IFn$_invoke$arity$16 = _invoke__16;
  _invoke.cljs$core$IFn$_invoke$arity$17 = _invoke__17;
  _invoke.cljs$core$IFn$_invoke$arity$18 = _invoke__18;
  _invoke.cljs$core$IFn$_invoke$arity$19 = _invoke__19;
  _invoke.cljs$core$IFn$_invoke$arity$20 = _invoke__20;
  _invoke.cljs$core$IFn$_invoke$arity$21 = _invoke__21;
  return _invoke;
}();
cljs.core.ICloneable = function() {
  var obj10602 = {};
  return obj10602;
}();
cljs.core._clone = function _clone(value) {
  if (function() {
    var and__3391__auto__ = value;
    if (and__3391__auto__) {
      return value.cljs$core$ICloneable$_clone$arity$1;
    } else {
      return and__3391__auto__;
    }
  }()) {
    return value.cljs$core$ICloneable$_clone$arity$1(value);
  } else {
    var x__4030__auto__ = value == null ? null : value;
    return function() {
      var or__3403__auto__ = cljs.core._clone[goog.typeOf(x__4030__auto__)];
      if (or__3403__auto__) {
        return or__3403__auto__;
      } else {
        var or__3403__auto____$1 = cljs.core._clone["_"];
        if (or__3403__auto____$1) {
          return or__3403__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "ICloneable.-clone", value);
        }
      }
    }().call(null, value);
  }
};
cljs.core.ICounted = function() {
  var obj10604 = {};
  return obj10604;
}();
cljs.core._count = function _count(coll) {
  if (function() {
    var and__3391__auto__ = coll;
    if (and__3391__auto__) {
      return coll.cljs$core$ICounted$_count$arity$1;
    } else {
      return and__3391__auto__;
    }
  }()) {
    return coll.cljs$core$ICounted$_count$arity$1(coll);
  } else {
    var x__4030__auto__ = coll == null ? null : coll;
    return function() {
      var or__3403__auto__ = cljs.core._count[goog.typeOf(x__4030__auto__)];
      if (or__3403__auto__) {
        return or__3403__auto__;
      } else {
        var or__3403__auto____$1 = cljs.core._count["_"];
        if (or__3403__auto____$1) {
          return or__3403__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "ICounted.-count", coll);
        }
      }
    }().call(null, coll);
  }
};
cljs.core.IEmptyableCollection = function() {
  var obj10606 = {};
  return obj10606;
}();
cljs.core._empty = function _empty(coll) {
  if (function() {
    var and__3391__auto__ = coll;
    if (and__3391__auto__) {
      return coll.cljs$core$IEmptyableCollection$_empty$arity$1;
    } else {
      return and__3391__auto__;
    }
  }()) {
    return coll.cljs$core$IEmptyableCollection$_empty$arity$1(coll);
  } else {
    var x__4030__auto__ = coll == null ? null : coll;
    return function() {
      var or__3403__auto__ = cljs.core._empty[goog.typeOf(x__4030__auto__)];
      if (or__3403__auto__) {
        return or__3403__auto__;
      } else {
        var or__3403__auto____$1 = cljs.core._empty["_"];
        if (or__3403__auto____$1) {
          return or__3403__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "IEmptyableCollection.-empty", coll);
        }
      }
    }().call(null, coll);
  }
};
cljs.core.ICollection = function() {
  var obj10608 = {};
  return obj10608;
}();
cljs.core._conj = function _conj(coll, o) {
  if (function() {
    var and__3391__auto__ = coll;
    if (and__3391__auto__) {
      return coll.cljs$core$ICollection$_conj$arity$2;
    } else {
      return and__3391__auto__;
    }
  }()) {
    return coll.cljs$core$ICollection$_conj$arity$2(coll, o);
  } else {
    var x__4030__auto__ = coll == null ? null : coll;
    return function() {
      var or__3403__auto__ = cljs.core._conj[goog.typeOf(x__4030__auto__)];
      if (or__3403__auto__) {
        return or__3403__auto__;
      } else {
        var or__3403__auto____$1 = cljs.core._conj["_"];
        if (or__3403__auto____$1) {
          return or__3403__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "ICollection.-conj", coll);
        }
      }
    }().call(null, coll, o);
  }
};
cljs.core.IIndexed = function() {
  var obj10610 = {};
  return obj10610;
}();
cljs.core._nth = function() {
  var _nth = null;
  var _nth__2 = function(coll, n) {
    if (function() {
      var and__3391__auto__ = coll;
      if (and__3391__auto__) {
        return coll.cljs$core$IIndexed$_nth$arity$2;
      } else {
        return and__3391__auto__;
      }
    }()) {
      return coll.cljs$core$IIndexed$_nth$arity$2(coll, n);
    } else {
      var x__4030__auto__ = coll == null ? null : coll;
      return function() {
        var or__3403__auto__ = cljs.core._nth[goog.typeOf(x__4030__auto__)];
        if (or__3403__auto__) {
          return or__3403__auto__;
        } else {
          var or__3403__auto____$1 = cljs.core._nth["_"];
          if (or__3403__auto____$1) {
            return or__3403__auto____$1;
          } else {
            throw cljs.core.missing_protocol.call(null, "IIndexed.-nth", coll);
          }
        }
      }().call(null, coll, n);
    }
  };
  var _nth__3 = function(coll, n, not_found) {
    if (function() {
      var and__3391__auto__ = coll;
      if (and__3391__auto__) {
        return coll.cljs$core$IIndexed$_nth$arity$3;
      } else {
        return and__3391__auto__;
      }
    }()) {
      return coll.cljs$core$IIndexed$_nth$arity$3(coll, n, not_found);
    } else {
      var x__4030__auto__ = coll == null ? null : coll;
      return function() {
        var or__3403__auto__ = cljs.core._nth[goog.typeOf(x__4030__auto__)];
        if (or__3403__auto__) {
          return or__3403__auto__;
        } else {
          var or__3403__auto____$1 = cljs.core._nth["_"];
          if (or__3403__auto____$1) {
            return or__3403__auto____$1;
          } else {
            throw cljs.core.missing_protocol.call(null, "IIndexed.-nth", coll);
          }
        }
      }().call(null, coll, n, not_found);
    }
  };
  _nth = function(coll, n, not_found) {
    switch(arguments.length) {
      case 2:
        return _nth__2.call(this, coll, n);
      case 3:
        return _nth__3.call(this, coll, n, not_found);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  _nth.cljs$core$IFn$_invoke$arity$2 = _nth__2;
  _nth.cljs$core$IFn$_invoke$arity$3 = _nth__3;
  return _nth;
}();
cljs.core.ASeq = function() {
  var obj10612 = {};
  return obj10612;
}();
cljs.core.ISeq = function() {
  var obj10614 = {};
  return obj10614;
}();
cljs.core._first = function _first(coll) {
  if (function() {
    var and__3391__auto__ = coll;
    if (and__3391__auto__) {
      return coll.cljs$core$ISeq$_first$arity$1;
    } else {
      return and__3391__auto__;
    }
  }()) {
    return coll.cljs$core$ISeq$_first$arity$1(coll);
  } else {
    var x__4030__auto__ = coll == null ? null : coll;
    return function() {
      var or__3403__auto__ = cljs.core._first[goog.typeOf(x__4030__auto__)];
      if (or__3403__auto__) {
        return or__3403__auto__;
      } else {
        var or__3403__auto____$1 = cljs.core._first["_"];
        if (or__3403__auto____$1) {
          return or__3403__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "ISeq.-first", coll);
        }
      }
    }().call(null, coll);
  }
};
cljs.core._rest = function _rest(coll) {
  if (function() {
    var and__3391__auto__ = coll;
    if (and__3391__auto__) {
      return coll.cljs$core$ISeq$_rest$arity$1;
    } else {
      return and__3391__auto__;
    }
  }()) {
    return coll.cljs$core$ISeq$_rest$arity$1(coll);
  } else {
    var x__4030__auto__ = coll == null ? null : coll;
    return function() {
      var or__3403__auto__ = cljs.core._rest[goog.typeOf(x__4030__auto__)];
      if (or__3403__auto__) {
        return or__3403__auto__;
      } else {
        var or__3403__auto____$1 = cljs.core._rest["_"];
        if (or__3403__auto____$1) {
          return or__3403__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "ISeq.-rest", coll);
        }
      }
    }().call(null, coll);
  }
};
cljs.core.INext = function() {
  var obj10616 = {};
  return obj10616;
}();
cljs.core._next = function _next(coll) {
  if (function() {
    var and__3391__auto__ = coll;
    if (and__3391__auto__) {
      return coll.cljs$core$INext$_next$arity$1;
    } else {
      return and__3391__auto__;
    }
  }()) {
    return coll.cljs$core$INext$_next$arity$1(coll);
  } else {
    var x__4030__auto__ = coll == null ? null : coll;
    return function() {
      var or__3403__auto__ = cljs.core._next[goog.typeOf(x__4030__auto__)];
      if (or__3403__auto__) {
        return or__3403__auto__;
      } else {
        var or__3403__auto____$1 = cljs.core._next["_"];
        if (or__3403__auto____$1) {
          return or__3403__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "INext.-next", coll);
        }
      }
    }().call(null, coll);
  }
};
cljs.core.ILookup = function() {
  var obj10618 = {};
  return obj10618;
}();
cljs.core._lookup = function() {
  var _lookup = null;
  var _lookup__2 = function(o, k) {
    if (function() {
      var and__3391__auto__ = o;
      if (and__3391__auto__) {
        return o.cljs$core$ILookup$_lookup$arity$2;
      } else {
        return and__3391__auto__;
      }
    }()) {
      return o.cljs$core$ILookup$_lookup$arity$2(o, k);
    } else {
      var x__4030__auto__ = o == null ? null : o;
      return function() {
        var or__3403__auto__ = cljs.core._lookup[goog.typeOf(x__4030__auto__)];
        if (or__3403__auto__) {
          return or__3403__auto__;
        } else {
          var or__3403__auto____$1 = cljs.core._lookup["_"];
          if (or__3403__auto____$1) {
            return or__3403__auto____$1;
          } else {
            throw cljs.core.missing_protocol.call(null, "ILookup.-lookup", o);
          }
        }
      }().call(null, o, k);
    }
  };
  var _lookup__3 = function(o, k, not_found) {
    if (function() {
      var and__3391__auto__ = o;
      if (and__3391__auto__) {
        return o.cljs$core$ILookup$_lookup$arity$3;
      } else {
        return and__3391__auto__;
      }
    }()) {
      return o.cljs$core$ILookup$_lookup$arity$3(o, k, not_found);
    } else {
      var x__4030__auto__ = o == null ? null : o;
      return function() {
        var or__3403__auto__ = cljs.core._lookup[goog.typeOf(x__4030__auto__)];
        if (or__3403__auto__) {
          return or__3403__auto__;
        } else {
          var or__3403__auto____$1 = cljs.core._lookup["_"];
          if (or__3403__auto____$1) {
            return or__3403__auto____$1;
          } else {
            throw cljs.core.missing_protocol.call(null, "ILookup.-lookup", o);
          }
        }
      }().call(null, o, k, not_found);
    }
  };
  _lookup = function(o, k, not_found) {
    switch(arguments.length) {
      case 2:
        return _lookup__2.call(this, o, k);
      case 3:
        return _lookup__3.call(this, o, k, not_found);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  _lookup.cljs$core$IFn$_invoke$arity$2 = _lookup__2;
  _lookup.cljs$core$IFn$_invoke$arity$3 = _lookup__3;
  return _lookup;
}();
cljs.core.IAssociative = function() {
  var obj10620 = {};
  return obj10620;
}();
cljs.core._contains_key_QMARK_ = function _contains_key_QMARK_(coll, k) {
  if (function() {
    var and__3391__auto__ = coll;
    if (and__3391__auto__) {
      return coll.cljs$core$IAssociative$_contains_key_QMARK_$arity$2;
    } else {
      return and__3391__auto__;
    }
  }()) {
    return coll.cljs$core$IAssociative$_contains_key_QMARK_$arity$2(coll, k);
  } else {
    var x__4030__auto__ = coll == null ? null : coll;
    return function() {
      var or__3403__auto__ = cljs.core._contains_key_QMARK_[goog.typeOf(x__4030__auto__)];
      if (or__3403__auto__) {
        return or__3403__auto__;
      } else {
        var or__3403__auto____$1 = cljs.core._contains_key_QMARK_["_"];
        if (or__3403__auto____$1) {
          return or__3403__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "IAssociative.-contains-key?", coll);
        }
      }
    }().call(null, coll, k);
  }
};
cljs.core._assoc = function _assoc(coll, k, v) {
  if (function() {
    var and__3391__auto__ = coll;
    if (and__3391__auto__) {
      return coll.cljs$core$IAssociative$_assoc$arity$3;
    } else {
      return and__3391__auto__;
    }
  }()) {
    return coll.cljs$core$IAssociative$_assoc$arity$3(coll, k, v);
  } else {
    var x__4030__auto__ = coll == null ? null : coll;
    return function() {
      var or__3403__auto__ = cljs.core._assoc[goog.typeOf(x__4030__auto__)];
      if (or__3403__auto__) {
        return or__3403__auto__;
      } else {
        var or__3403__auto____$1 = cljs.core._assoc["_"];
        if (or__3403__auto____$1) {
          return or__3403__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "IAssociative.-assoc", coll);
        }
      }
    }().call(null, coll, k, v);
  }
};
cljs.core.IMap = function() {
  var obj10622 = {};
  return obj10622;
}();
cljs.core._dissoc = function _dissoc(coll, k) {
  if (function() {
    var and__3391__auto__ = coll;
    if (and__3391__auto__) {
      return coll.cljs$core$IMap$_dissoc$arity$2;
    } else {
      return and__3391__auto__;
    }
  }()) {
    return coll.cljs$core$IMap$_dissoc$arity$2(coll, k);
  } else {
    var x__4030__auto__ = coll == null ? null : coll;
    return function() {
      var or__3403__auto__ = cljs.core._dissoc[goog.typeOf(x__4030__auto__)];
      if (or__3403__auto__) {
        return or__3403__auto__;
      } else {
        var or__3403__auto____$1 = cljs.core._dissoc["_"];
        if (or__3403__auto____$1) {
          return or__3403__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "IMap.-dissoc", coll);
        }
      }
    }().call(null, coll, k);
  }
};
cljs.core.IMapEntry = function() {
  var obj10624 = {};
  return obj10624;
}();
cljs.core._key = function _key(coll) {
  if (function() {
    var and__3391__auto__ = coll;
    if (and__3391__auto__) {
      return coll.cljs$core$IMapEntry$_key$arity$1;
    } else {
      return and__3391__auto__;
    }
  }()) {
    return coll.cljs$core$IMapEntry$_key$arity$1(coll);
  } else {
    var x__4030__auto__ = coll == null ? null : coll;
    return function() {
      var or__3403__auto__ = cljs.core._key[goog.typeOf(x__4030__auto__)];
      if (or__3403__auto__) {
        return or__3403__auto__;
      } else {
        var or__3403__auto____$1 = cljs.core._key["_"];
        if (or__3403__auto____$1) {
          return or__3403__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "IMapEntry.-key", coll);
        }
      }
    }().call(null, coll);
  }
};
cljs.core._val = function _val(coll) {
  if (function() {
    var and__3391__auto__ = coll;
    if (and__3391__auto__) {
      return coll.cljs$core$IMapEntry$_val$arity$1;
    } else {
      return and__3391__auto__;
    }
  }()) {
    return coll.cljs$core$IMapEntry$_val$arity$1(coll);
  } else {
    var x__4030__auto__ = coll == null ? null : coll;
    return function() {
      var or__3403__auto__ = cljs.core._val[goog.typeOf(x__4030__auto__)];
      if (or__3403__auto__) {
        return or__3403__auto__;
      } else {
        var or__3403__auto____$1 = cljs.core._val["_"];
        if (or__3403__auto____$1) {
          return or__3403__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "IMapEntry.-val", coll);
        }
      }
    }().call(null, coll);
  }
};
cljs.core.ISet = function() {
  var obj10626 = {};
  return obj10626;
}();
cljs.core._disjoin = function _disjoin(coll, v) {
  if (function() {
    var and__3391__auto__ = coll;
    if (and__3391__auto__) {
      return coll.cljs$core$ISet$_disjoin$arity$2;
    } else {
      return and__3391__auto__;
    }
  }()) {
    return coll.cljs$core$ISet$_disjoin$arity$2(coll, v);
  } else {
    var x__4030__auto__ = coll == null ? null : coll;
    return function() {
      var or__3403__auto__ = cljs.core._disjoin[goog.typeOf(x__4030__auto__)];
      if (or__3403__auto__) {
        return or__3403__auto__;
      } else {
        var or__3403__auto____$1 = cljs.core._disjoin["_"];
        if (or__3403__auto____$1) {
          return or__3403__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "ISet.-disjoin", coll);
        }
      }
    }().call(null, coll, v);
  }
};
cljs.core.IStack = function() {
  var obj10628 = {};
  return obj10628;
}();
cljs.core._peek = function _peek(coll) {
  if (function() {
    var and__3391__auto__ = coll;
    if (and__3391__auto__) {
      return coll.cljs$core$IStack$_peek$arity$1;
    } else {
      return and__3391__auto__;
    }
  }()) {
    return coll.cljs$core$IStack$_peek$arity$1(coll);
  } else {
    var x__4030__auto__ = coll == null ? null : coll;
    return function() {
      var or__3403__auto__ = cljs.core._peek[goog.typeOf(x__4030__auto__)];
      if (or__3403__auto__) {
        return or__3403__auto__;
      } else {
        var or__3403__auto____$1 = cljs.core._peek["_"];
        if (or__3403__auto____$1) {
          return or__3403__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "IStack.-peek", coll);
        }
      }
    }().call(null, coll);
  }
};
cljs.core._pop = function _pop(coll) {
  if (function() {
    var and__3391__auto__ = coll;
    if (and__3391__auto__) {
      return coll.cljs$core$IStack$_pop$arity$1;
    } else {
      return and__3391__auto__;
    }
  }()) {
    return coll.cljs$core$IStack$_pop$arity$1(coll);
  } else {
    var x__4030__auto__ = coll == null ? null : coll;
    return function() {
      var or__3403__auto__ = cljs.core._pop[goog.typeOf(x__4030__auto__)];
      if (or__3403__auto__) {
        return or__3403__auto__;
      } else {
        var or__3403__auto____$1 = cljs.core._pop["_"];
        if (or__3403__auto____$1) {
          return or__3403__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "IStack.-pop", coll);
        }
      }
    }().call(null, coll);
  }
};
cljs.core.IVector = function() {
  var obj10630 = {};
  return obj10630;
}();
cljs.core._assoc_n = function _assoc_n(coll, n, val) {
  if (function() {
    var and__3391__auto__ = coll;
    if (and__3391__auto__) {
      return coll.cljs$core$IVector$_assoc_n$arity$3;
    } else {
      return and__3391__auto__;
    }
  }()) {
    return coll.cljs$core$IVector$_assoc_n$arity$3(coll, n, val);
  } else {
    var x__4030__auto__ = coll == null ? null : coll;
    return function() {
      var or__3403__auto__ = cljs.core._assoc_n[goog.typeOf(x__4030__auto__)];
      if (or__3403__auto__) {
        return or__3403__auto__;
      } else {
        var or__3403__auto____$1 = cljs.core._assoc_n["_"];
        if (or__3403__auto____$1) {
          return or__3403__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "IVector.-assoc-n", coll);
        }
      }
    }().call(null, coll, n, val);
  }
};
cljs.core.IDeref = function() {
  var obj10632 = {};
  return obj10632;
}();
cljs.core._deref = function _deref(o) {
  if (function() {
    var and__3391__auto__ = o;
    if (and__3391__auto__) {
      return o.cljs$core$IDeref$_deref$arity$1;
    } else {
      return and__3391__auto__;
    }
  }()) {
    return o.cljs$core$IDeref$_deref$arity$1(o);
  } else {
    var x__4030__auto__ = o == null ? null : o;
    return function() {
      var or__3403__auto__ = cljs.core._deref[goog.typeOf(x__4030__auto__)];
      if (or__3403__auto__) {
        return or__3403__auto__;
      } else {
        var or__3403__auto____$1 = cljs.core._deref["_"];
        if (or__3403__auto____$1) {
          return or__3403__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "IDeref.-deref", o);
        }
      }
    }().call(null, o);
  }
};
cljs.core.IDerefWithTimeout = function() {
  var obj10634 = {};
  return obj10634;
}();
cljs.core._deref_with_timeout = function _deref_with_timeout(o, msec, timeout_val) {
  if (function() {
    var and__3391__auto__ = o;
    if (and__3391__auto__) {
      return o.cljs$core$IDerefWithTimeout$_deref_with_timeout$arity$3;
    } else {
      return and__3391__auto__;
    }
  }()) {
    return o.cljs$core$IDerefWithTimeout$_deref_with_timeout$arity$3(o, msec, timeout_val);
  } else {
    var x__4030__auto__ = o == null ? null : o;
    return function() {
      var or__3403__auto__ = cljs.core._deref_with_timeout[goog.typeOf(x__4030__auto__)];
      if (or__3403__auto__) {
        return or__3403__auto__;
      } else {
        var or__3403__auto____$1 = cljs.core._deref_with_timeout["_"];
        if (or__3403__auto____$1) {
          return or__3403__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "IDerefWithTimeout.-deref-with-timeout", o);
        }
      }
    }().call(null, o, msec, timeout_val);
  }
};
cljs.core.IMeta = function() {
  var obj10636 = {};
  return obj10636;
}();
cljs.core._meta = function _meta(o) {
  if (function() {
    var and__3391__auto__ = o;
    if (and__3391__auto__) {
      return o.cljs$core$IMeta$_meta$arity$1;
    } else {
      return and__3391__auto__;
    }
  }()) {
    return o.cljs$core$IMeta$_meta$arity$1(o);
  } else {
    var x__4030__auto__ = o == null ? null : o;
    return function() {
      var or__3403__auto__ = cljs.core._meta[goog.typeOf(x__4030__auto__)];
      if (or__3403__auto__) {
        return or__3403__auto__;
      } else {
        var or__3403__auto____$1 = cljs.core._meta["_"];
        if (or__3403__auto____$1) {
          return or__3403__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "IMeta.-meta", o);
        }
      }
    }().call(null, o);
  }
};
cljs.core.IWithMeta = function() {
  var obj10638 = {};
  return obj10638;
}();
cljs.core._with_meta = function _with_meta(o, meta) {
  if (function() {
    var and__3391__auto__ = o;
    if (and__3391__auto__) {
      return o.cljs$core$IWithMeta$_with_meta$arity$2;
    } else {
      return and__3391__auto__;
    }
  }()) {
    return o.cljs$core$IWithMeta$_with_meta$arity$2(o, meta);
  } else {
    var x__4030__auto__ = o == null ? null : o;
    return function() {
      var or__3403__auto__ = cljs.core._with_meta[goog.typeOf(x__4030__auto__)];
      if (or__3403__auto__) {
        return or__3403__auto__;
      } else {
        var or__3403__auto____$1 = cljs.core._with_meta["_"];
        if (or__3403__auto____$1) {
          return or__3403__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "IWithMeta.-with-meta", o);
        }
      }
    }().call(null, o, meta);
  }
};
cljs.core.IReduce = function() {
  var obj10640 = {};
  return obj10640;
}();
cljs.core._reduce = function() {
  var _reduce = null;
  var _reduce__2 = function(coll, f) {
    if (function() {
      var and__3391__auto__ = coll;
      if (and__3391__auto__) {
        return coll.cljs$core$IReduce$_reduce$arity$2;
      } else {
        return and__3391__auto__;
      }
    }()) {
      return coll.cljs$core$IReduce$_reduce$arity$2(coll, f);
    } else {
      var x__4030__auto__ = coll == null ? null : coll;
      return function() {
        var or__3403__auto__ = cljs.core._reduce[goog.typeOf(x__4030__auto__)];
        if (or__3403__auto__) {
          return or__3403__auto__;
        } else {
          var or__3403__auto____$1 = cljs.core._reduce["_"];
          if (or__3403__auto____$1) {
            return or__3403__auto____$1;
          } else {
            throw cljs.core.missing_protocol.call(null, "IReduce.-reduce", coll);
          }
        }
      }().call(null, coll, f);
    }
  };
  var _reduce__3 = function(coll, f, start) {
    if (function() {
      var and__3391__auto__ = coll;
      if (and__3391__auto__) {
        return coll.cljs$core$IReduce$_reduce$arity$3;
      } else {
        return and__3391__auto__;
      }
    }()) {
      return coll.cljs$core$IReduce$_reduce$arity$3(coll, f, start);
    } else {
      var x__4030__auto__ = coll == null ? null : coll;
      return function() {
        var or__3403__auto__ = cljs.core._reduce[goog.typeOf(x__4030__auto__)];
        if (or__3403__auto__) {
          return or__3403__auto__;
        } else {
          var or__3403__auto____$1 = cljs.core._reduce["_"];
          if (or__3403__auto____$1) {
            return or__3403__auto____$1;
          } else {
            throw cljs.core.missing_protocol.call(null, "IReduce.-reduce", coll);
          }
        }
      }().call(null, coll, f, start);
    }
  };
  _reduce = function(coll, f, start) {
    switch(arguments.length) {
      case 2:
        return _reduce__2.call(this, coll, f);
      case 3:
        return _reduce__3.call(this, coll, f, start);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  _reduce.cljs$core$IFn$_invoke$arity$2 = _reduce__2;
  _reduce.cljs$core$IFn$_invoke$arity$3 = _reduce__3;
  return _reduce;
}();
cljs.core.IKVReduce = function() {
  var obj10642 = {};
  return obj10642;
}();
cljs.core._kv_reduce = function _kv_reduce(coll, f, init) {
  if (function() {
    var and__3391__auto__ = coll;
    if (and__3391__auto__) {
      return coll.cljs$core$IKVReduce$_kv_reduce$arity$3;
    } else {
      return and__3391__auto__;
    }
  }()) {
    return coll.cljs$core$IKVReduce$_kv_reduce$arity$3(coll, f, init);
  } else {
    var x__4030__auto__ = coll == null ? null : coll;
    return function() {
      var or__3403__auto__ = cljs.core._kv_reduce[goog.typeOf(x__4030__auto__)];
      if (or__3403__auto__) {
        return or__3403__auto__;
      } else {
        var or__3403__auto____$1 = cljs.core._kv_reduce["_"];
        if (or__3403__auto____$1) {
          return or__3403__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "IKVReduce.-kv-reduce", coll);
        }
      }
    }().call(null, coll, f, init);
  }
};
cljs.core.IEquiv = function() {
  var obj10644 = {};
  return obj10644;
}();
cljs.core._equiv = function _equiv(o, other) {
  if (function() {
    var and__3391__auto__ = o;
    if (and__3391__auto__) {
      return o.cljs$core$IEquiv$_equiv$arity$2;
    } else {
      return and__3391__auto__;
    }
  }()) {
    return o.cljs$core$IEquiv$_equiv$arity$2(o, other);
  } else {
    var x__4030__auto__ = o == null ? null : o;
    return function() {
      var or__3403__auto__ = cljs.core._equiv[goog.typeOf(x__4030__auto__)];
      if (or__3403__auto__) {
        return or__3403__auto__;
      } else {
        var or__3403__auto____$1 = cljs.core._equiv["_"];
        if (or__3403__auto____$1) {
          return or__3403__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "IEquiv.-equiv", o);
        }
      }
    }().call(null, o, other);
  }
};
cljs.core.IHash = function() {
  var obj10646 = {};
  return obj10646;
}();
cljs.core._hash = function _hash(o) {
  if (function() {
    var and__3391__auto__ = o;
    if (and__3391__auto__) {
      return o.cljs$core$IHash$_hash$arity$1;
    } else {
      return and__3391__auto__;
    }
  }()) {
    return o.cljs$core$IHash$_hash$arity$1(o);
  } else {
    var x__4030__auto__ = o == null ? null : o;
    return function() {
      var or__3403__auto__ = cljs.core._hash[goog.typeOf(x__4030__auto__)];
      if (or__3403__auto__) {
        return or__3403__auto__;
      } else {
        var or__3403__auto____$1 = cljs.core._hash["_"];
        if (or__3403__auto____$1) {
          return or__3403__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "IHash.-hash", o);
        }
      }
    }().call(null, o);
  }
};
cljs.core.ISeqable = function() {
  var obj10648 = {};
  return obj10648;
}();
cljs.core._seq = function _seq(o) {
  if (function() {
    var and__3391__auto__ = o;
    if (and__3391__auto__) {
      return o.cljs$core$ISeqable$_seq$arity$1;
    } else {
      return and__3391__auto__;
    }
  }()) {
    return o.cljs$core$ISeqable$_seq$arity$1(o);
  } else {
    var x__4030__auto__ = o == null ? null : o;
    return function() {
      var or__3403__auto__ = cljs.core._seq[goog.typeOf(x__4030__auto__)];
      if (or__3403__auto__) {
        return or__3403__auto__;
      } else {
        var or__3403__auto____$1 = cljs.core._seq["_"];
        if (or__3403__auto____$1) {
          return or__3403__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "ISeqable.-seq", o);
        }
      }
    }().call(null, o);
  }
};
cljs.core.ISequential = function() {
  var obj10650 = {};
  return obj10650;
}();
cljs.core.IList = function() {
  var obj10652 = {};
  return obj10652;
}();
cljs.core.IRecord = function() {
  var obj10654 = {};
  return obj10654;
}();
cljs.core.IReversible = function() {
  var obj10656 = {};
  return obj10656;
}();
cljs.core._rseq = function _rseq(coll) {
  if (function() {
    var and__3391__auto__ = coll;
    if (and__3391__auto__) {
      return coll.cljs$core$IReversible$_rseq$arity$1;
    } else {
      return and__3391__auto__;
    }
  }()) {
    return coll.cljs$core$IReversible$_rseq$arity$1(coll);
  } else {
    var x__4030__auto__ = coll == null ? null : coll;
    return function() {
      var or__3403__auto__ = cljs.core._rseq[goog.typeOf(x__4030__auto__)];
      if (or__3403__auto__) {
        return or__3403__auto__;
      } else {
        var or__3403__auto____$1 = cljs.core._rseq["_"];
        if (or__3403__auto____$1) {
          return or__3403__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "IReversible.-rseq", coll);
        }
      }
    }().call(null, coll);
  }
};
cljs.core.ISorted = function() {
  var obj10658 = {};
  return obj10658;
}();
cljs.core._sorted_seq = function _sorted_seq(coll, ascending_QMARK_) {
  if (function() {
    var and__3391__auto__ = coll;
    if (and__3391__auto__) {
      return coll.cljs$core$ISorted$_sorted_seq$arity$2;
    } else {
      return and__3391__auto__;
    }
  }()) {
    return coll.cljs$core$ISorted$_sorted_seq$arity$2(coll, ascending_QMARK_);
  } else {
    var x__4030__auto__ = coll == null ? null : coll;
    return function() {
      var or__3403__auto__ = cljs.core._sorted_seq[goog.typeOf(x__4030__auto__)];
      if (or__3403__auto__) {
        return or__3403__auto__;
      } else {
        var or__3403__auto____$1 = cljs.core._sorted_seq["_"];
        if (or__3403__auto____$1) {
          return or__3403__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "ISorted.-sorted-seq", coll);
        }
      }
    }().call(null, coll, ascending_QMARK_);
  }
};
cljs.core._sorted_seq_from = function _sorted_seq_from(coll, k, ascending_QMARK_) {
  if (function() {
    var and__3391__auto__ = coll;
    if (and__3391__auto__) {
      return coll.cljs$core$ISorted$_sorted_seq_from$arity$3;
    } else {
      return and__3391__auto__;
    }
  }()) {
    return coll.cljs$core$ISorted$_sorted_seq_from$arity$3(coll, k, ascending_QMARK_);
  } else {
    var x__4030__auto__ = coll == null ? null : coll;
    return function() {
      var or__3403__auto__ = cljs.core._sorted_seq_from[goog.typeOf(x__4030__auto__)];
      if (or__3403__auto__) {
        return or__3403__auto__;
      } else {
        var or__3403__auto____$1 = cljs.core._sorted_seq_from["_"];
        if (or__3403__auto____$1) {
          return or__3403__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "ISorted.-sorted-seq-from", coll);
        }
      }
    }().call(null, coll, k, ascending_QMARK_);
  }
};
cljs.core._entry_key = function _entry_key(coll, entry) {
  if (function() {
    var and__3391__auto__ = coll;
    if (and__3391__auto__) {
      return coll.cljs$core$ISorted$_entry_key$arity$2;
    } else {
      return and__3391__auto__;
    }
  }()) {
    return coll.cljs$core$ISorted$_entry_key$arity$2(coll, entry);
  } else {
    var x__4030__auto__ = coll == null ? null : coll;
    return function() {
      var or__3403__auto__ = cljs.core._entry_key[goog.typeOf(x__4030__auto__)];
      if (or__3403__auto__) {
        return or__3403__auto__;
      } else {
        var or__3403__auto____$1 = cljs.core._entry_key["_"];
        if (or__3403__auto____$1) {
          return or__3403__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "ISorted.-entry-key", coll);
        }
      }
    }().call(null, coll, entry);
  }
};
cljs.core._comparator = function _comparator(coll) {
  if (function() {
    var and__3391__auto__ = coll;
    if (and__3391__auto__) {
      return coll.cljs$core$ISorted$_comparator$arity$1;
    } else {
      return and__3391__auto__;
    }
  }()) {
    return coll.cljs$core$ISorted$_comparator$arity$1(coll);
  } else {
    var x__4030__auto__ = coll == null ? null : coll;
    return function() {
      var or__3403__auto__ = cljs.core._comparator[goog.typeOf(x__4030__auto__)];
      if (or__3403__auto__) {
        return or__3403__auto__;
      } else {
        var or__3403__auto____$1 = cljs.core._comparator["_"];
        if (or__3403__auto____$1) {
          return or__3403__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "ISorted.-comparator", coll);
        }
      }
    }().call(null, coll);
  }
};
cljs.core.IWriter = function() {
  var obj10660 = {};
  return obj10660;
}();
cljs.core._write = function _write(writer, s) {
  if (function() {
    var and__3391__auto__ = writer;
    if (and__3391__auto__) {
      return writer.cljs$core$IWriter$_write$arity$2;
    } else {
      return and__3391__auto__;
    }
  }()) {
    return writer.cljs$core$IWriter$_write$arity$2(writer, s);
  } else {
    var x__4030__auto__ = writer == null ? null : writer;
    return function() {
      var or__3403__auto__ = cljs.core._write[goog.typeOf(x__4030__auto__)];
      if (or__3403__auto__) {
        return or__3403__auto__;
      } else {
        var or__3403__auto____$1 = cljs.core._write["_"];
        if (or__3403__auto____$1) {
          return or__3403__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "IWriter.-write", writer);
        }
      }
    }().call(null, writer, s);
  }
};
cljs.core._flush = function _flush(writer) {
  if (function() {
    var and__3391__auto__ = writer;
    if (and__3391__auto__) {
      return writer.cljs$core$IWriter$_flush$arity$1;
    } else {
      return and__3391__auto__;
    }
  }()) {
    return writer.cljs$core$IWriter$_flush$arity$1(writer);
  } else {
    var x__4030__auto__ = writer == null ? null : writer;
    return function() {
      var or__3403__auto__ = cljs.core._flush[goog.typeOf(x__4030__auto__)];
      if (or__3403__auto__) {
        return or__3403__auto__;
      } else {
        var or__3403__auto____$1 = cljs.core._flush["_"];
        if (or__3403__auto____$1) {
          return or__3403__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "IWriter.-flush", writer);
        }
      }
    }().call(null, writer);
  }
};
cljs.core.IPrintWithWriter = function() {
  var obj10662 = {};
  return obj10662;
}();
cljs.core._pr_writer = function _pr_writer(o, writer, opts) {
  if (function() {
    var and__3391__auto__ = o;
    if (and__3391__auto__) {
      return o.cljs$core$IPrintWithWriter$_pr_writer$arity$3;
    } else {
      return and__3391__auto__;
    }
  }()) {
    return o.cljs$core$IPrintWithWriter$_pr_writer$arity$3(o, writer, opts);
  } else {
    var x__4030__auto__ = o == null ? null : o;
    return function() {
      var or__3403__auto__ = cljs.core._pr_writer[goog.typeOf(x__4030__auto__)];
      if (or__3403__auto__) {
        return or__3403__auto__;
      } else {
        var or__3403__auto____$1 = cljs.core._pr_writer["_"];
        if (or__3403__auto____$1) {
          return or__3403__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "IPrintWithWriter.-pr-writer", o);
        }
      }
    }().call(null, o, writer, opts);
  }
};
cljs.core.IPending = function() {
  var obj10664 = {};
  return obj10664;
}();
cljs.core._realized_QMARK_ = function _realized_QMARK_(d) {
  if (function() {
    var and__3391__auto__ = d;
    if (and__3391__auto__) {
      return d.cljs$core$IPending$_realized_QMARK_$arity$1;
    } else {
      return and__3391__auto__;
    }
  }()) {
    return d.cljs$core$IPending$_realized_QMARK_$arity$1(d);
  } else {
    var x__4030__auto__ = d == null ? null : d;
    return function() {
      var or__3403__auto__ = cljs.core._realized_QMARK_[goog.typeOf(x__4030__auto__)];
      if (or__3403__auto__) {
        return or__3403__auto__;
      } else {
        var or__3403__auto____$1 = cljs.core._realized_QMARK_["_"];
        if (or__3403__auto____$1) {
          return or__3403__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "IPending.-realized?", d);
        }
      }
    }().call(null, d);
  }
};
cljs.core.IWatchable = function() {
  var obj10666 = {};
  return obj10666;
}();
cljs.core._notify_watches = function _notify_watches(this$, oldval, newval) {
  if (function() {
    var and__3391__auto__ = this$;
    if (and__3391__auto__) {
      return this$.cljs$core$IWatchable$_notify_watches$arity$3;
    } else {
      return and__3391__auto__;
    }
  }()) {
    return this$.cljs$core$IWatchable$_notify_watches$arity$3(this$, oldval, newval);
  } else {
    var x__4030__auto__ = this$ == null ? null : this$;
    return function() {
      var or__3403__auto__ = cljs.core._notify_watches[goog.typeOf(x__4030__auto__)];
      if (or__3403__auto__) {
        return or__3403__auto__;
      } else {
        var or__3403__auto____$1 = cljs.core._notify_watches["_"];
        if (or__3403__auto____$1) {
          return or__3403__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "IWatchable.-notify-watches", this$);
        }
      }
    }().call(null, this$, oldval, newval);
  }
};
cljs.core._add_watch = function _add_watch(this$, key, f) {
  if (function() {
    var and__3391__auto__ = this$;
    if (and__3391__auto__) {
      return this$.cljs$core$IWatchable$_add_watch$arity$3;
    } else {
      return and__3391__auto__;
    }
  }()) {
    return this$.cljs$core$IWatchable$_add_watch$arity$3(this$, key, f);
  } else {
    var x__4030__auto__ = this$ == null ? null : this$;
    return function() {
      var or__3403__auto__ = cljs.core._add_watch[goog.typeOf(x__4030__auto__)];
      if (or__3403__auto__) {
        return or__3403__auto__;
      } else {
        var or__3403__auto____$1 = cljs.core._add_watch["_"];
        if (or__3403__auto____$1) {
          return or__3403__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "IWatchable.-add-watch", this$);
        }
      }
    }().call(null, this$, key, f);
  }
};
cljs.core._remove_watch = function _remove_watch(this$, key) {
  if (function() {
    var and__3391__auto__ = this$;
    if (and__3391__auto__) {
      return this$.cljs$core$IWatchable$_remove_watch$arity$2;
    } else {
      return and__3391__auto__;
    }
  }()) {
    return this$.cljs$core$IWatchable$_remove_watch$arity$2(this$, key);
  } else {
    var x__4030__auto__ = this$ == null ? null : this$;
    return function() {
      var or__3403__auto__ = cljs.core._remove_watch[goog.typeOf(x__4030__auto__)];
      if (or__3403__auto__) {
        return or__3403__auto__;
      } else {
        var or__3403__auto____$1 = cljs.core._remove_watch["_"];
        if (or__3403__auto____$1) {
          return or__3403__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "IWatchable.-remove-watch", this$);
        }
      }
    }().call(null, this$, key);
  }
};
cljs.core.IEditableCollection = function() {
  var obj10668 = {};
  return obj10668;
}();
cljs.core._as_transient = function _as_transient(coll) {
  if (function() {
    var and__3391__auto__ = coll;
    if (and__3391__auto__) {
      return coll.cljs$core$IEditableCollection$_as_transient$arity$1;
    } else {
      return and__3391__auto__;
    }
  }()) {
    return coll.cljs$core$IEditableCollection$_as_transient$arity$1(coll);
  } else {
    var x__4030__auto__ = coll == null ? null : coll;
    return function() {
      var or__3403__auto__ = cljs.core._as_transient[goog.typeOf(x__4030__auto__)];
      if (or__3403__auto__) {
        return or__3403__auto__;
      } else {
        var or__3403__auto____$1 = cljs.core._as_transient["_"];
        if (or__3403__auto____$1) {
          return or__3403__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "IEditableCollection.-as-transient", coll);
        }
      }
    }().call(null, coll);
  }
};
cljs.core.ITransientCollection = function() {
  var obj10670 = {};
  return obj10670;
}();
cljs.core._conj_BANG_ = function _conj_BANG_(tcoll, val) {
  if (function() {
    var and__3391__auto__ = tcoll;
    if (and__3391__auto__) {
      return tcoll.cljs$core$ITransientCollection$_conj_BANG_$arity$2;
    } else {
      return and__3391__auto__;
    }
  }()) {
    return tcoll.cljs$core$ITransientCollection$_conj_BANG_$arity$2(tcoll, val);
  } else {
    var x__4030__auto__ = tcoll == null ? null : tcoll;
    return function() {
      var or__3403__auto__ = cljs.core._conj_BANG_[goog.typeOf(x__4030__auto__)];
      if (or__3403__auto__) {
        return or__3403__auto__;
      } else {
        var or__3403__auto____$1 = cljs.core._conj_BANG_["_"];
        if (or__3403__auto____$1) {
          return or__3403__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "ITransientCollection.-conj!", tcoll);
        }
      }
    }().call(null, tcoll, val);
  }
};
cljs.core._persistent_BANG_ = function _persistent_BANG_(tcoll) {
  if (function() {
    var and__3391__auto__ = tcoll;
    if (and__3391__auto__) {
      return tcoll.cljs$core$ITransientCollection$_persistent_BANG_$arity$1;
    } else {
      return and__3391__auto__;
    }
  }()) {
    return tcoll.cljs$core$ITransientCollection$_persistent_BANG_$arity$1(tcoll);
  } else {
    var x__4030__auto__ = tcoll == null ? null : tcoll;
    return function() {
      var or__3403__auto__ = cljs.core._persistent_BANG_[goog.typeOf(x__4030__auto__)];
      if (or__3403__auto__) {
        return or__3403__auto__;
      } else {
        var or__3403__auto____$1 = cljs.core._persistent_BANG_["_"];
        if (or__3403__auto____$1) {
          return or__3403__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "ITransientCollection.-persistent!", tcoll);
        }
      }
    }().call(null, tcoll);
  }
};
cljs.core.ITransientAssociative = function() {
  var obj10672 = {};
  return obj10672;
}();
cljs.core._assoc_BANG_ = function _assoc_BANG_(tcoll, key, val) {
  if (function() {
    var and__3391__auto__ = tcoll;
    if (and__3391__auto__) {
      return tcoll.cljs$core$ITransientAssociative$_assoc_BANG_$arity$3;
    } else {
      return and__3391__auto__;
    }
  }()) {
    return tcoll.cljs$core$ITransientAssociative$_assoc_BANG_$arity$3(tcoll, key, val);
  } else {
    var x__4030__auto__ = tcoll == null ? null : tcoll;
    return function() {
      var or__3403__auto__ = cljs.core._assoc_BANG_[goog.typeOf(x__4030__auto__)];
      if (or__3403__auto__) {
        return or__3403__auto__;
      } else {
        var or__3403__auto____$1 = cljs.core._assoc_BANG_["_"];
        if (or__3403__auto____$1) {
          return or__3403__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "ITransientAssociative.-assoc!", tcoll);
        }
      }
    }().call(null, tcoll, key, val);
  }
};
cljs.core.ITransientMap = function() {
  var obj10674 = {};
  return obj10674;
}();
cljs.core._dissoc_BANG_ = function _dissoc_BANG_(tcoll, key) {
  if (function() {
    var and__3391__auto__ = tcoll;
    if (and__3391__auto__) {
      return tcoll.cljs$core$ITransientMap$_dissoc_BANG_$arity$2;
    } else {
      return and__3391__auto__;
    }
  }()) {
    return tcoll.cljs$core$ITransientMap$_dissoc_BANG_$arity$2(tcoll, key);
  } else {
    var x__4030__auto__ = tcoll == null ? null : tcoll;
    return function() {
      var or__3403__auto__ = cljs.core._dissoc_BANG_[goog.typeOf(x__4030__auto__)];
      if (or__3403__auto__) {
        return or__3403__auto__;
      } else {
        var or__3403__auto____$1 = cljs.core._dissoc_BANG_["_"];
        if (or__3403__auto____$1) {
          return or__3403__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "ITransientMap.-dissoc!", tcoll);
        }
      }
    }().call(null, tcoll, key);
  }
};
cljs.core.ITransientVector = function() {
  var obj10676 = {};
  return obj10676;
}();
cljs.core._assoc_n_BANG_ = function _assoc_n_BANG_(tcoll, n, val) {
  if (function() {
    var and__3391__auto__ = tcoll;
    if (and__3391__auto__) {
      return tcoll.cljs$core$ITransientVector$_assoc_n_BANG_$arity$3;
    } else {
      return and__3391__auto__;
    }
  }()) {
    return tcoll.cljs$core$ITransientVector$_assoc_n_BANG_$arity$3(tcoll, n, val);
  } else {
    var x__4030__auto__ = tcoll == null ? null : tcoll;
    return function() {
      var or__3403__auto__ = cljs.core._assoc_n_BANG_[goog.typeOf(x__4030__auto__)];
      if (or__3403__auto__) {
        return or__3403__auto__;
      } else {
        var or__3403__auto____$1 = cljs.core._assoc_n_BANG_["_"];
        if (or__3403__auto____$1) {
          return or__3403__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "ITransientVector.-assoc-n!", tcoll);
        }
      }
    }().call(null, tcoll, n, val);
  }
};
cljs.core._pop_BANG_ = function _pop_BANG_(tcoll) {
  if (function() {
    var and__3391__auto__ = tcoll;
    if (and__3391__auto__) {
      return tcoll.cljs$core$ITransientVector$_pop_BANG_$arity$1;
    } else {
      return and__3391__auto__;
    }
  }()) {
    return tcoll.cljs$core$ITransientVector$_pop_BANG_$arity$1(tcoll);
  } else {
    var x__4030__auto__ = tcoll == null ? null : tcoll;
    return function() {
      var or__3403__auto__ = cljs.core._pop_BANG_[goog.typeOf(x__4030__auto__)];
      if (or__3403__auto__) {
        return or__3403__auto__;
      } else {
        var or__3403__auto____$1 = cljs.core._pop_BANG_["_"];
        if (or__3403__auto____$1) {
          return or__3403__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "ITransientVector.-pop!", tcoll);
        }
      }
    }().call(null, tcoll);
  }
};
cljs.core.ITransientSet = function() {
  var obj10678 = {};
  return obj10678;
}();
cljs.core._disjoin_BANG_ = function _disjoin_BANG_(tcoll, v) {
  if (function() {
    var and__3391__auto__ = tcoll;
    if (and__3391__auto__) {
      return tcoll.cljs$core$ITransientSet$_disjoin_BANG_$arity$2;
    } else {
      return and__3391__auto__;
    }
  }()) {
    return tcoll.cljs$core$ITransientSet$_disjoin_BANG_$arity$2(tcoll, v);
  } else {
    var x__4030__auto__ = tcoll == null ? null : tcoll;
    return function() {
      var or__3403__auto__ = cljs.core._disjoin_BANG_[goog.typeOf(x__4030__auto__)];
      if (or__3403__auto__) {
        return or__3403__auto__;
      } else {
        var or__3403__auto____$1 = cljs.core._disjoin_BANG_["_"];
        if (or__3403__auto____$1) {
          return or__3403__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "ITransientSet.-disjoin!", tcoll);
        }
      }
    }().call(null, tcoll, v);
  }
};
cljs.core.IComparable = function() {
  var obj10680 = {};
  return obj10680;
}();
cljs.core._compare = function _compare(x, y) {
  if (function() {
    var and__3391__auto__ = x;
    if (and__3391__auto__) {
      return x.cljs$core$IComparable$_compare$arity$2;
    } else {
      return and__3391__auto__;
    }
  }()) {
    return x.cljs$core$IComparable$_compare$arity$2(x, y);
  } else {
    var x__4030__auto__ = x == null ? null : x;
    return function() {
      var or__3403__auto__ = cljs.core._compare[goog.typeOf(x__4030__auto__)];
      if (or__3403__auto__) {
        return or__3403__auto__;
      } else {
        var or__3403__auto____$1 = cljs.core._compare["_"];
        if (or__3403__auto____$1) {
          return or__3403__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "IComparable.-compare", x);
        }
      }
    }().call(null, x, y);
  }
};
cljs.core.IChunk = function() {
  var obj10682 = {};
  return obj10682;
}();
cljs.core._drop_first = function _drop_first(coll) {
  if (function() {
    var and__3391__auto__ = coll;
    if (and__3391__auto__) {
      return coll.cljs$core$IChunk$_drop_first$arity$1;
    } else {
      return and__3391__auto__;
    }
  }()) {
    return coll.cljs$core$IChunk$_drop_first$arity$1(coll);
  } else {
    var x__4030__auto__ = coll == null ? null : coll;
    return function() {
      var or__3403__auto__ = cljs.core._drop_first[goog.typeOf(x__4030__auto__)];
      if (or__3403__auto__) {
        return or__3403__auto__;
      } else {
        var or__3403__auto____$1 = cljs.core._drop_first["_"];
        if (or__3403__auto____$1) {
          return or__3403__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "IChunk.-drop-first", coll);
        }
      }
    }().call(null, coll);
  }
};
cljs.core.IChunkedSeq = function() {
  var obj10684 = {};
  return obj10684;
}();
cljs.core._chunked_first = function _chunked_first(coll) {
  if (function() {
    var and__3391__auto__ = coll;
    if (and__3391__auto__) {
      return coll.cljs$core$IChunkedSeq$_chunked_first$arity$1;
    } else {
      return and__3391__auto__;
    }
  }()) {
    return coll.cljs$core$IChunkedSeq$_chunked_first$arity$1(coll);
  } else {
    var x__4030__auto__ = coll == null ? null : coll;
    return function() {
      var or__3403__auto__ = cljs.core._chunked_first[goog.typeOf(x__4030__auto__)];
      if (or__3403__auto__) {
        return or__3403__auto__;
      } else {
        var or__3403__auto____$1 = cljs.core._chunked_first["_"];
        if (or__3403__auto____$1) {
          return or__3403__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "IChunkedSeq.-chunked-first", coll);
        }
      }
    }().call(null, coll);
  }
};
cljs.core._chunked_rest = function _chunked_rest(coll) {
  if (function() {
    var and__3391__auto__ = coll;
    if (and__3391__auto__) {
      return coll.cljs$core$IChunkedSeq$_chunked_rest$arity$1;
    } else {
      return and__3391__auto__;
    }
  }()) {
    return coll.cljs$core$IChunkedSeq$_chunked_rest$arity$1(coll);
  } else {
    var x__4030__auto__ = coll == null ? null : coll;
    return function() {
      var or__3403__auto__ = cljs.core._chunked_rest[goog.typeOf(x__4030__auto__)];
      if (or__3403__auto__) {
        return or__3403__auto__;
      } else {
        var or__3403__auto____$1 = cljs.core._chunked_rest["_"];
        if (or__3403__auto____$1) {
          return or__3403__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "IChunkedSeq.-chunked-rest", coll);
        }
      }
    }().call(null, coll);
  }
};
cljs.core.IChunkedNext = function() {
  var obj10686 = {};
  return obj10686;
}();
cljs.core._chunked_next = function _chunked_next(coll) {
  if (function() {
    var and__3391__auto__ = coll;
    if (and__3391__auto__) {
      return coll.cljs$core$IChunkedNext$_chunked_next$arity$1;
    } else {
      return and__3391__auto__;
    }
  }()) {
    return coll.cljs$core$IChunkedNext$_chunked_next$arity$1(coll);
  } else {
    var x__4030__auto__ = coll == null ? null : coll;
    return function() {
      var or__3403__auto__ = cljs.core._chunked_next[goog.typeOf(x__4030__auto__)];
      if (or__3403__auto__) {
        return or__3403__auto__;
      } else {
        var or__3403__auto____$1 = cljs.core._chunked_next["_"];
        if (or__3403__auto____$1) {
          return or__3403__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "IChunkedNext.-chunked-next", coll);
        }
      }
    }().call(null, coll);
  }
};
cljs.core.INamed = function() {
  var obj10688 = {};
  return obj10688;
}();
cljs.core._name = function _name(x) {
  if (function() {
    var and__3391__auto__ = x;
    if (and__3391__auto__) {
      return x.cljs$core$INamed$_name$arity$1;
    } else {
      return and__3391__auto__;
    }
  }()) {
    return x.cljs$core$INamed$_name$arity$1(x);
  } else {
    var x__4030__auto__ = x == null ? null : x;
    return function() {
      var or__3403__auto__ = cljs.core._name[goog.typeOf(x__4030__auto__)];
      if (or__3403__auto__) {
        return or__3403__auto__;
      } else {
        var or__3403__auto____$1 = cljs.core._name["_"];
        if (or__3403__auto____$1) {
          return or__3403__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "INamed.-name", x);
        }
      }
    }().call(null, x);
  }
};
cljs.core._namespace = function _namespace(x) {
  if (function() {
    var and__3391__auto__ = x;
    if (and__3391__auto__) {
      return x.cljs$core$INamed$_namespace$arity$1;
    } else {
      return and__3391__auto__;
    }
  }()) {
    return x.cljs$core$INamed$_namespace$arity$1(x);
  } else {
    var x__4030__auto__ = x == null ? null : x;
    return function() {
      var or__3403__auto__ = cljs.core._namespace[goog.typeOf(x__4030__auto__)];
      if (or__3403__auto__) {
        return or__3403__auto__;
      } else {
        var or__3403__auto____$1 = cljs.core._namespace["_"];
        if (or__3403__auto____$1) {
          return or__3403__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "INamed.-namespace", x);
        }
      }
    }().call(null, x);
  }
};
cljs.core.StringBufferWriter = function(sb) {
  this.sb = sb;
  this.cljs$lang$protocol_mask$partition1$ = 0;
  this.cljs$lang$protocol_mask$partition0$ = 1073741824;
};
cljs.core.StringBufferWriter.cljs$lang$type = true;
cljs.core.StringBufferWriter.cljs$lang$ctorStr = "cljs.core/StringBufferWriter";
cljs.core.StringBufferWriter.cljs$lang$ctorPrWriter = function(this__3970__auto__, writer__3971__auto__, opt__3972__auto__) {
  return cljs.core._write.call(null, writer__3971__auto__, "cljs.core/StringBufferWriter");
};
cljs.core.StringBufferWriter.prototype.cljs$core$IWriter$_write$arity$2 = function(_, s) {
  var self__ = this;
  var ___$1 = this;
  return self__.sb.append(s);
};
cljs.core.StringBufferWriter.prototype.cljs$core$IWriter$_flush$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return null;
};
cljs.core.__GT_StringBufferWriter = function __GT_StringBufferWriter(sb) {
  return new cljs.core.StringBufferWriter(sb);
};
cljs.core.pr_str_STAR_ = function pr_str_STAR_(obj) {
  var sb = new goog.string.StringBuffer;
  var writer = new cljs.core.StringBufferWriter(sb);
  cljs.core._pr_writer.call(null, obj, writer, cljs.core.pr_opts.call(null));
  cljs.core._flush.call(null, writer);
  return[cljs.core.str(sb)].join("");
};
cljs.core.instance_QMARK_ = function instance_QMARK_(t, o) {
  return o instanceof t;
};
cljs.core.symbol_QMARK_ = function symbol_QMARK_(x) {
  return x instanceof cljs.core.Symbol;
};
cljs.core.hash_symbol = function hash_symbol(sym) {
  return cljs.core.hash_combine.call(null, cljs.core.hash.call(null, sym.ns), cljs.core.hash.call(null, sym.name));
};
cljs.core.compare_symbols = function compare_symbols(a, b) {
  if (cljs.core.truth_(cljs.core._EQ_.call(null, a, b))) {
    return 0;
  } else {
    if (cljs.core.truth_(function() {
      var and__3391__auto__ = cljs.core.not.call(null, a.ns);
      if (and__3391__auto__) {
        return b.ns;
      } else {
        return and__3391__auto__;
      }
    }())) {
      return-1;
    } else {
      if (cljs.core.truth_(a.ns)) {
        if (cljs.core.not.call(null, b.ns)) {
          return 1;
        } else {
          var nsc = cljs.core.compare.call(null, a.ns, b.ns);
          if (nsc === 0) {
            return cljs.core.compare.call(null, a.name, b.name);
          } else {
            return nsc;
          }
        }
      } else {
        if (new cljs.core.Keyword(null, "default", "default", 2558708147)) {
          return cljs.core.compare.call(null, a.name, b.name);
        } else {
          return null;
        }
      }
    }
  }
};
cljs.core.Symbol = function(ns, name, str, _hash, _meta) {
  this.ns = ns;
  this.name = name;
  this.str = str;
  this._hash = _hash;
  this._meta = _meta;
  this.cljs$lang$protocol_mask$partition0$ = 2154168321;
  this.cljs$lang$protocol_mask$partition1$ = 4096;
};
cljs.core.Symbol.cljs$lang$type = true;
cljs.core.Symbol.cljs$lang$ctorStr = "cljs.core/Symbol";
cljs.core.Symbol.cljs$lang$ctorPrWriter = function(this__3970__auto__, writer__3971__auto__, opt__3972__auto__) {
  return cljs.core._write.call(null, writer__3971__auto__, "cljs.core/Symbol");
};
cljs.core.Symbol.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(o, writer, _) {
  var self__ = this;
  var o__$1 = this;
  return cljs.core._write.call(null, writer, self__.str);
};
cljs.core.Symbol.prototype.cljs$core$INamed$_name$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return self__.name;
};
cljs.core.Symbol.prototype.cljs$core$INamed$_namespace$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return self__.ns;
};
cljs.core.Symbol.prototype.cljs$core$IHash$_hash$arity$1 = function(sym) {
  var self__ = this;
  var sym__$1 = this;
  var h__3814__auto__ = self__._hash;
  if (!(h__3814__auto__ == null)) {
    return h__3814__auto__;
  } else {
    var h__3814__auto____$1 = cljs.core.hash_symbol.call(null, sym__$1);
    self__._hash = h__3814__auto____$1;
    return h__3814__auto____$1;
  }
};
cljs.core.Symbol.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(_, new_meta) {
  var self__ = this;
  var ___$1 = this;
  return new cljs.core.Symbol(self__.ns, self__.name, self__.str, self__._hash, new_meta);
};
cljs.core.Symbol.prototype.cljs$core$IMeta$_meta$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return self__._meta;
};
cljs.core.Symbol.prototype.call = function() {
  var G__10690 = null;
  var G__10690__2 = function(self__, coll) {
    var self__ = this;
    var self____$1 = this;
    var sym = self____$1;
    return cljs.core._lookup.call(null, coll, sym, null);
  };
  var G__10690__3 = function(self__, coll, not_found) {
    var self__ = this;
    var self____$1 = this;
    var sym = self____$1;
    return cljs.core._lookup.call(null, coll, sym, not_found);
  };
  G__10690 = function(self__, coll, not_found) {
    switch(arguments.length) {
      case 2:
        return G__10690__2.call(this, self__, coll);
      case 3:
        return G__10690__3.call(this, self__, coll, not_found);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  return G__10690;
}();
cljs.core.Symbol.prototype.apply = function(self__, args10689) {
  var self__ = this;
  var self____$1 = this;
  return self____$1.call.apply(self____$1, [self____$1].concat(cljs.core.aclone.call(null, args10689)));
};
cljs.core.Symbol.prototype.cljs$core$IFn$_invoke$arity$1 = function(coll) {
  var self__ = this;
  var sym = this;
  return cljs.core._lookup.call(null, coll, sym, null);
};
cljs.core.Symbol.prototype.cljs$core$IFn$_invoke$arity$2 = function(coll, not_found) {
  var self__ = this;
  var sym = this;
  return cljs.core._lookup.call(null, coll, sym, not_found);
};
cljs.core.Symbol.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(_, other) {
  var self__ = this;
  var ___$1 = this;
  if (other instanceof cljs.core.Symbol) {
    return self__.str === other.str;
  } else {
    return false;
  }
};
cljs.core.Symbol.prototype.toString = function() {
  var self__ = this;
  var _ = this;
  return self__.str;
};
cljs.core.__GT_Symbol = function __GT_Symbol(ns, name, str, _hash, _meta) {
  return new cljs.core.Symbol(ns, name, str, _hash, _meta);
};
cljs.core.symbol = function() {
  var symbol = null;
  var symbol__1 = function(name) {
    if (name instanceof cljs.core.Symbol) {
      return name;
    } else {
      return symbol.call(null, null, name);
    }
  };
  var symbol__2 = function(ns, name) {
    var sym_str = !(ns == null) ? [cljs.core.str(ns), cljs.core.str("/"), cljs.core.str(name)].join("") : name;
    return new cljs.core.Symbol(ns, name, sym_str, null, null);
  };
  symbol = function(ns, name) {
    switch(arguments.length) {
      case 1:
        return symbol__1.call(this, ns);
      case 2:
        return symbol__2.call(this, ns, name);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  symbol.cljs$core$IFn$_invoke$arity$1 = symbol__1;
  symbol.cljs$core$IFn$_invoke$arity$2 = symbol__2;
  return symbol;
}();
cljs.core.clone = function clone(value) {
  return cljs.core._clone.call(null, value);
};
cljs.core.cloneable_QMARK_ = function cloneable_QMARK_(value) {
  var G__10692 = value;
  if (G__10692) {
    var bit__4053__auto__ = G__10692.cljs$lang$protocol_mask$partition1$ & 8192;
    if (bit__4053__auto__ || G__10692.cljs$core$ICloneable$) {
      return true;
    } else {
      if (!G__10692.cljs$lang$protocol_mask$partition1$) {
        return cljs.core.native_satisfies_QMARK_.call(null, cljs.core.ICloneable, G__10692);
      } else {
        return false;
      }
    }
  } else {
    return cljs.core.native_satisfies_QMARK_.call(null, cljs.core.ICloneable, G__10692);
  }
};
cljs.core.seq = function seq(coll) {
  if (coll == null) {
    return null;
  } else {
    if (function() {
      var G__10694 = coll;
      if (G__10694) {
        var bit__4046__auto__ = G__10694.cljs$lang$protocol_mask$partition0$ & 8388608;
        if (bit__4046__auto__ || G__10694.cljs$core$ISeqable$) {
          return true;
        } else {
          return false;
        }
      } else {
        return false;
      }
    }()) {
      return cljs.core._seq.call(null, coll);
    } else {
      if (coll instanceof Array) {
        if (coll.length === 0) {
          return null;
        } else {
          return new cljs.core.IndexedSeq(coll, 0);
        }
      } else {
        if (typeof coll === "string") {
          if (coll.length === 0) {
            return null;
          } else {
            return new cljs.core.IndexedSeq(coll, 0);
          }
        } else {
          if (cljs.core.native_satisfies_QMARK_.call(null, cljs.core.ISeqable, coll)) {
            return cljs.core._seq.call(null, coll);
          } else {
            if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
              throw new Error([cljs.core.str(coll), cljs.core.str("is not ISeqable")].join(""));
            } else {
              return null;
            }
          }
        }
      }
    }
  }
};
cljs.core.first = function first(coll) {
  if (coll == null) {
    return null;
  } else {
    if (function() {
      var G__10696 = coll;
      if (G__10696) {
        var bit__4046__auto__ = G__10696.cljs$lang$protocol_mask$partition0$ & 64;
        if (bit__4046__auto__ || G__10696.cljs$core$ISeq$) {
          return true;
        } else {
          return false;
        }
      } else {
        return false;
      }
    }()) {
      return cljs.core._first.call(null, coll);
    } else {
      var s = cljs.core.seq.call(null, coll);
      if (s == null) {
        return null;
      } else {
        return cljs.core._first.call(null, s);
      }
    }
  }
};
cljs.core.rest = function rest(coll) {
  if (!(coll == null)) {
    if (function() {
      var G__10698 = coll;
      if (G__10698) {
        var bit__4046__auto__ = G__10698.cljs$lang$protocol_mask$partition0$ & 64;
        if (bit__4046__auto__ || G__10698.cljs$core$ISeq$) {
          return true;
        } else {
          return false;
        }
      } else {
        return false;
      }
    }()) {
      return cljs.core._rest.call(null, coll);
    } else {
      var s = cljs.core.seq.call(null, coll);
      if (s) {
        return cljs.core._rest.call(null, s);
      } else {
        return cljs.core.List.EMPTY;
      }
    }
  } else {
    return cljs.core.List.EMPTY;
  }
};
cljs.core.next = function next(coll) {
  if (coll == null) {
    return null;
  } else {
    if (function() {
      var G__10700 = coll;
      if (G__10700) {
        var bit__4046__auto__ = G__10700.cljs$lang$protocol_mask$partition0$ & 128;
        if (bit__4046__auto__ || G__10700.cljs$core$INext$) {
          return true;
        } else {
          return false;
        }
      } else {
        return false;
      }
    }()) {
      return cljs.core._next.call(null, coll);
    } else {
      return cljs.core.seq.call(null, cljs.core.rest.call(null, coll));
    }
  }
};
cljs.core._EQ_ = function() {
  var _EQ_ = null;
  var _EQ___1 = function(x) {
    return true;
  };
  var _EQ___2 = function(x, y) {
    if (x == null) {
      return y == null;
    } else {
      return x === y || cljs.core._equiv.call(null, x, y);
    }
  };
  var _EQ___3 = function() {
    var G__10701__delegate = function(x, y, more) {
      while (true) {
        if (_EQ_.call(null, x, y)) {
          if (cljs.core.next.call(null, more)) {
            var G__10702 = y;
            var G__10703 = cljs.core.first.call(null, more);
            var G__10704 = cljs.core.next.call(null, more);
            x = G__10702;
            y = G__10703;
            more = G__10704;
            continue;
          } else {
            return _EQ_.call(null, y, cljs.core.first.call(null, more));
          }
        } else {
          return false;
        }
        break;
      }
    };
    var G__10701 = function(x, y, var_args) {
      var more = null;
      if (arguments.length > 2) {
        more = cljs.core.array_seq(Array.prototype.slice.call(arguments, 2), 0);
      }
      return G__10701__delegate.call(this, x, y, more);
    };
    G__10701.cljs$lang$maxFixedArity = 2;
    G__10701.cljs$lang$applyTo = function(arglist__10705) {
      var x = cljs.core.first(arglist__10705);
      arglist__10705 = cljs.core.next(arglist__10705);
      var y = cljs.core.first(arglist__10705);
      var more = cljs.core.rest(arglist__10705);
      return G__10701__delegate(x, y, more);
    };
    G__10701.cljs$core$IFn$_invoke$arity$variadic = G__10701__delegate;
    return G__10701;
  }();
  _EQ_ = function(x, y, var_args) {
    var more = var_args;
    switch(arguments.length) {
      case 1:
        return _EQ___1.call(this, x);
      case 2:
        return _EQ___2.call(this, x, y);
      default:
        return _EQ___3.cljs$core$IFn$_invoke$arity$variadic(x, y, cljs.core.array_seq(arguments, 2));
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  _EQ_.cljs$lang$maxFixedArity = 2;
  _EQ_.cljs$lang$applyTo = _EQ___3.cljs$lang$applyTo;
  _EQ_.cljs$core$IFn$_invoke$arity$1 = _EQ___1;
  _EQ_.cljs$core$IFn$_invoke$arity$2 = _EQ___2;
  _EQ_.cljs$core$IFn$_invoke$arity$variadic = _EQ___3.cljs$core$IFn$_invoke$arity$variadic;
  return _EQ_;
}();
cljs.core.ICounted["null"] = true;
cljs.core._count["null"] = function(_) {
  return 0;
};
Date.prototype.cljs$core$IEquiv$ = true;
Date.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(o, other) {
  var o__$1 = this;
  return other instanceof Date && o__$1.toString() === other.toString();
};
cljs.core.IEquiv["number"] = true;
cljs.core._equiv["number"] = function(x, o) {
  return x === o;
};
cljs.core.IMeta["function"] = true;
cljs.core._meta["function"] = function(_) {
  return null;
};
cljs.core.Fn["function"] = true;
cljs.core.IHash["_"] = true;
cljs.core._hash["_"] = function(o) {
  return goog.getUid(o);
};
cljs.core.inc = function inc(x) {
  return x + 1;
};
cljs.core.Reduced = function(val) {
  this.val = val;
  this.cljs$lang$protocol_mask$partition1$ = 0;
  this.cljs$lang$protocol_mask$partition0$ = 32768;
};
cljs.core.Reduced.cljs$lang$type = true;
cljs.core.Reduced.cljs$lang$ctorStr = "cljs.core/Reduced";
cljs.core.Reduced.cljs$lang$ctorPrWriter = function(this__3970__auto__, writer__3971__auto__, opt__3972__auto__) {
  return cljs.core._write.call(null, writer__3971__auto__, "cljs.core/Reduced");
};
cljs.core.Reduced.prototype.cljs$core$IDeref$_deref$arity$1 = function(o) {
  var self__ = this;
  var o__$1 = this;
  return self__.val;
};
cljs.core.__GT_Reduced = function __GT_Reduced(val) {
  return new cljs.core.Reduced(val);
};
cljs.core.reduced = function reduced(x) {
  return new cljs.core.Reduced(x);
};
cljs.core.reduced_QMARK_ = function reduced_QMARK_(r) {
  return r instanceof cljs.core.Reduced;
};
cljs.core.ci_reduce = function() {
  var ci_reduce = null;
  var ci_reduce__2 = function(cicoll, f) {
    var cnt = cljs.core._count.call(null, cicoll);
    if (cnt === 0) {
      return f.call(null);
    } else {
      var val = cljs.core._nth.call(null, cicoll, 0);
      var n = 1;
      while (true) {
        if (n < cnt) {
          var nval = f.call(null, val, cljs.core._nth.call(null, cicoll, n));
          if (cljs.core.reduced_QMARK_.call(null, nval)) {
            return cljs.core.deref.call(null, nval);
          } else {
            var G__10706 = nval;
            var G__10707 = n + 1;
            val = G__10706;
            n = G__10707;
            continue;
          }
        } else {
          return val;
        }
        break;
      }
    }
  };
  var ci_reduce__3 = function(cicoll, f, val) {
    var cnt = cljs.core._count.call(null, cicoll);
    var val__$1 = val;
    var n = 0;
    while (true) {
      if (n < cnt) {
        var nval = f.call(null, val__$1, cljs.core._nth.call(null, cicoll, n));
        if (cljs.core.reduced_QMARK_.call(null, nval)) {
          return cljs.core.deref.call(null, nval);
        } else {
          var G__10708 = nval;
          var G__10709 = n + 1;
          val__$1 = G__10708;
          n = G__10709;
          continue;
        }
      } else {
        return val__$1;
      }
      break;
    }
  };
  var ci_reduce__4 = function(cicoll, f, val, idx) {
    var cnt = cljs.core._count.call(null, cicoll);
    var val__$1 = val;
    var n = idx;
    while (true) {
      if (n < cnt) {
        var nval = f.call(null, val__$1, cljs.core._nth.call(null, cicoll, n));
        if (cljs.core.reduced_QMARK_.call(null, nval)) {
          return cljs.core.deref.call(null, nval);
        } else {
          var G__10710 = nval;
          var G__10711 = n + 1;
          val__$1 = G__10710;
          n = G__10711;
          continue;
        }
      } else {
        return val__$1;
      }
      break;
    }
  };
  ci_reduce = function(cicoll, f, val, idx) {
    switch(arguments.length) {
      case 2:
        return ci_reduce__2.call(this, cicoll, f);
      case 3:
        return ci_reduce__3.call(this, cicoll, f, val);
      case 4:
        return ci_reduce__4.call(this, cicoll, f, val, idx);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  ci_reduce.cljs$core$IFn$_invoke$arity$2 = ci_reduce__2;
  ci_reduce.cljs$core$IFn$_invoke$arity$3 = ci_reduce__3;
  ci_reduce.cljs$core$IFn$_invoke$arity$4 = ci_reduce__4;
  return ci_reduce;
}();
cljs.core.array_reduce = function() {
  var array_reduce = null;
  var array_reduce__2 = function(arr, f) {
    var cnt = arr.length;
    if (arr.length === 0) {
      return f.call(null);
    } else {
      var val = arr[0];
      var n = 1;
      while (true) {
        if (n < cnt) {
          var nval = f.call(null, val, arr[n]);
          if (cljs.core.reduced_QMARK_.call(null, nval)) {
            return cljs.core.deref.call(null, nval);
          } else {
            var G__10712 = nval;
            var G__10713 = n + 1;
            val = G__10712;
            n = G__10713;
            continue;
          }
        } else {
          return val;
        }
        break;
      }
    }
  };
  var array_reduce__3 = function(arr, f, val) {
    var cnt = arr.length;
    var val__$1 = val;
    var n = 0;
    while (true) {
      if (n < cnt) {
        var nval = f.call(null, val__$1, arr[n]);
        if (cljs.core.reduced_QMARK_.call(null, nval)) {
          return cljs.core.deref.call(null, nval);
        } else {
          var G__10714 = nval;
          var G__10715 = n + 1;
          val__$1 = G__10714;
          n = G__10715;
          continue;
        }
      } else {
        return val__$1;
      }
      break;
    }
  };
  var array_reduce__4 = function(arr, f, val, idx) {
    var cnt = arr.length;
    var val__$1 = val;
    var n = idx;
    while (true) {
      if (n < cnt) {
        var nval = f.call(null, val__$1, arr[n]);
        if (cljs.core.reduced_QMARK_.call(null, nval)) {
          return cljs.core.deref.call(null, nval);
        } else {
          var G__10716 = nval;
          var G__10717 = n + 1;
          val__$1 = G__10716;
          n = G__10717;
          continue;
        }
      } else {
        return val__$1;
      }
      break;
    }
  };
  array_reduce = function(arr, f, val, idx) {
    switch(arguments.length) {
      case 2:
        return array_reduce__2.call(this, arr, f);
      case 3:
        return array_reduce__3.call(this, arr, f, val);
      case 4:
        return array_reduce__4.call(this, arr, f, val, idx);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  array_reduce.cljs$core$IFn$_invoke$arity$2 = array_reduce__2;
  array_reduce.cljs$core$IFn$_invoke$arity$3 = array_reduce__3;
  array_reduce.cljs$core$IFn$_invoke$arity$4 = array_reduce__4;
  return array_reduce;
}();
cljs.core.counted_QMARK_ = function counted_QMARK_(x) {
  var G__10719 = x;
  if (G__10719) {
    var bit__4053__auto__ = G__10719.cljs$lang$protocol_mask$partition0$ & 2;
    if (bit__4053__auto__ || G__10719.cljs$core$ICounted$) {
      return true;
    } else {
      if (!G__10719.cljs$lang$protocol_mask$partition0$) {
        return cljs.core.native_satisfies_QMARK_.call(null, cljs.core.ICounted, G__10719);
      } else {
        return false;
      }
    }
  } else {
    return cljs.core.native_satisfies_QMARK_.call(null, cljs.core.ICounted, G__10719);
  }
};
cljs.core.indexed_QMARK_ = function indexed_QMARK_(x) {
  var G__10721 = x;
  if (G__10721) {
    var bit__4053__auto__ = G__10721.cljs$lang$protocol_mask$partition0$ & 16;
    if (bit__4053__auto__ || G__10721.cljs$core$IIndexed$) {
      return true;
    } else {
      if (!G__10721.cljs$lang$protocol_mask$partition0$) {
        return cljs.core.native_satisfies_QMARK_.call(null, cljs.core.IIndexed, G__10721);
      } else {
        return false;
      }
    }
  } else {
    return cljs.core.native_satisfies_QMARK_.call(null, cljs.core.IIndexed, G__10721);
  }
};
cljs.core.IndexedSeq = function(arr, i) {
  this.arr = arr;
  this.i = i;
  this.cljs$lang$protocol_mask$partition0$ = 166199550;
  this.cljs$lang$protocol_mask$partition1$ = 8192;
};
cljs.core.IndexedSeq.cljs$lang$type = true;
cljs.core.IndexedSeq.cljs$lang$ctorStr = "cljs.core/IndexedSeq";
cljs.core.IndexedSeq.cljs$lang$ctorPrWriter = function(this__3970__auto__, writer__3971__auto__, opt__3972__auto__) {
  return cljs.core._write.call(null, writer__3971__auto__, "cljs.core/IndexedSeq");
};
cljs.core.IndexedSeq.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.hash_coll.call(null, coll__$1);
};
cljs.core.IndexedSeq.prototype.cljs$core$INext$_next$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  if (self__.i + 1 < self__.arr.length) {
    return new cljs.core.IndexedSeq(self__.arr, self__.i + 1);
  } else {
    return null;
  }
};
cljs.core.IndexedSeq.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, o) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.cons.call(null, o, coll__$1);
};
cljs.core.IndexedSeq.prototype.cljs$core$IReversible$_rseq$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var c = cljs.core._count.call(null, coll__$1);
  if (c > 0) {
    return new cljs.core.RSeq(coll__$1, c - 1, null);
  } else {
    return null;
  }
};
cljs.core.IndexedSeq.prototype.toString = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.pr_str_STAR_.call(null, coll);
};
cljs.core.IndexedSeq.prototype.cljs$core$IReduce$_reduce$arity$2 = function(coll, f) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.array_reduce.call(null, self__.arr, f, self__.arr[self__.i], self__.i + 1);
};
cljs.core.IndexedSeq.prototype.cljs$core$IReduce$_reduce$arity$3 = function(coll, f, start) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.array_reduce.call(null, self__.arr, f, start, self__.i);
};
cljs.core.IndexedSeq.prototype.cljs$core$ISeqable$_seq$arity$1 = function(this$) {
  var self__ = this;
  var this$__$1 = this;
  return this$__$1;
};
cljs.core.IndexedSeq.prototype.cljs$core$ICounted$_count$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return self__.arr.length - self__.i;
};
cljs.core.IndexedSeq.prototype.cljs$core$ISeq$_first$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return self__.arr[self__.i];
};
cljs.core.IndexedSeq.prototype.cljs$core$ISeq$_rest$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  if (self__.i + 1 < self__.arr.length) {
    return new cljs.core.IndexedSeq(self__.arr, self__.i + 1);
  } else {
    return cljs.core.List.EMPTY;
  }
};
cljs.core.IndexedSeq.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.equiv_sequential.call(null, coll__$1, other);
};
cljs.core.IndexedSeq.prototype.cljs$core$ICloneable$_clone$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return new cljs.core.IndexedSeq(self__.arr, self__.i);
};
cljs.core.IndexedSeq.prototype.cljs$core$IIndexed$_nth$arity$2 = function(coll, n) {
  var self__ = this;
  var coll__$1 = this;
  var i__$1 = n + self__.i;
  if (i__$1 < self__.arr.length) {
    return self__.arr[i__$1];
  } else {
    return null;
  }
};
cljs.core.IndexedSeq.prototype.cljs$core$IIndexed$_nth$arity$3 = function(coll, n, not_found) {
  var self__ = this;
  var coll__$1 = this;
  var i__$1 = n + self__.i;
  if (i__$1 < self__.arr.length) {
    return self__.arr[i__$1];
  } else {
    return not_found;
  }
};
cljs.core.IndexedSeq.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.List.EMPTY;
};
cljs.core.__GT_IndexedSeq = function __GT_IndexedSeq(arr, i) {
  return new cljs.core.IndexedSeq(arr, i);
};
cljs.core.prim_seq = function() {
  var prim_seq = null;
  var prim_seq__1 = function(prim) {
    return prim_seq.call(null, prim, 0);
  };
  var prim_seq__2 = function(prim, i) {
    if (i < prim.length) {
      return new cljs.core.IndexedSeq(prim, i);
    } else {
      return null;
    }
  };
  prim_seq = function(prim, i) {
    switch(arguments.length) {
      case 1:
        return prim_seq__1.call(this, prim);
      case 2:
        return prim_seq__2.call(this, prim, i);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  prim_seq.cljs$core$IFn$_invoke$arity$1 = prim_seq__1;
  prim_seq.cljs$core$IFn$_invoke$arity$2 = prim_seq__2;
  return prim_seq;
}();
cljs.core.array_seq = function() {
  var array_seq = null;
  var array_seq__1 = function(array) {
    return cljs.core.prim_seq.call(null, array, 0);
  };
  var array_seq__2 = function(array, i) {
    return cljs.core.prim_seq.call(null, array, i);
  };
  array_seq = function(array, i) {
    switch(arguments.length) {
      case 1:
        return array_seq__1.call(this, array);
      case 2:
        return array_seq__2.call(this, array, i);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  array_seq.cljs$core$IFn$_invoke$arity$1 = array_seq__1;
  array_seq.cljs$core$IFn$_invoke$arity$2 = array_seq__2;
  return array_seq;
}();
cljs.core.RSeq = function(ci, i, meta) {
  this.ci = ci;
  this.i = i;
  this.meta = meta;
  this.cljs$lang$protocol_mask$partition0$ = 32374862;
  this.cljs$lang$protocol_mask$partition1$ = 8192;
};
cljs.core.RSeq.cljs$lang$type = true;
cljs.core.RSeq.cljs$lang$ctorStr = "cljs.core/RSeq";
cljs.core.RSeq.cljs$lang$ctorPrWriter = function(this__3970__auto__, writer__3971__auto__, opt__3972__auto__) {
  return cljs.core._write.call(null, writer__3971__auto__, "cljs.core/RSeq");
};
cljs.core.RSeq.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.hash_coll.call(null, coll__$1);
};
cljs.core.RSeq.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, o) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.cons.call(null, o, coll__$1);
};
cljs.core.RSeq.prototype.toString = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.pr_str_STAR_.call(null, coll);
};
cljs.core.RSeq.prototype.cljs$core$IReduce$_reduce$arity$2 = function(col, f) {
  var self__ = this;
  var col__$1 = this;
  return cljs.core.seq_reduce.call(null, f, col__$1);
};
cljs.core.RSeq.prototype.cljs$core$IReduce$_reduce$arity$3 = function(col, f, start) {
  var self__ = this;
  var col__$1 = this;
  return cljs.core.seq_reduce.call(null, f, start, col__$1);
};
cljs.core.RSeq.prototype.cljs$core$ISeqable$_seq$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return coll__$1;
};
cljs.core.RSeq.prototype.cljs$core$ICounted$_count$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.i + 1;
};
cljs.core.RSeq.prototype.cljs$core$ISeq$_first$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core._nth.call(null, self__.ci, self__.i);
};
cljs.core.RSeq.prototype.cljs$core$ISeq$_rest$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  if (self__.i > 0) {
    return new cljs.core.RSeq(self__.ci, self__.i - 1, null);
  } else {
    return null;
  }
};
cljs.core.RSeq.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.equiv_sequential.call(null, coll__$1, other);
};
cljs.core.RSeq.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, new_meta) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.RSeq(self__.ci, self__.i, new_meta);
};
cljs.core.RSeq.prototype.cljs$core$ICloneable$_clone$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return new cljs.core.RSeq(self__.ci, self__.i, self__.meta);
};
cljs.core.RSeq.prototype.cljs$core$IMeta$_meta$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.meta;
};
cljs.core.RSeq.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.with_meta.call(null, cljs.core.List.EMPTY, self__.meta);
};
cljs.core.__GT_RSeq = function __GT_RSeq(ci, i, meta) {
  return new cljs.core.RSeq(ci, i, meta);
};
cljs.core.second = function second(coll) {
  return cljs.core.first.call(null, cljs.core.next.call(null, coll));
};
cljs.core.ffirst = function ffirst(coll) {
  return cljs.core.first.call(null, cljs.core.first.call(null, coll));
};
cljs.core.nfirst = function nfirst(coll) {
  return cljs.core.next.call(null, cljs.core.first.call(null, coll));
};
cljs.core.fnext = function fnext(coll) {
  return cljs.core.first.call(null, cljs.core.next.call(null, coll));
};
cljs.core.nnext = function nnext(coll) {
  return cljs.core.next.call(null, cljs.core.next.call(null, coll));
};
cljs.core.last = function last(s) {
  while (true) {
    var sn = cljs.core.next.call(null, s);
    if (!(sn == null)) {
      var G__10722 = sn;
      s = G__10722;
      continue;
    } else {
      return cljs.core.first.call(null, s);
    }
    break;
  }
};
cljs.core.IEquiv["_"] = true;
cljs.core._equiv["_"] = function(x, o) {
  return x === o;
};
cljs.core.conj = function() {
  var conj = null;
  var conj__2 = function(coll, x) {
    if (!(coll == null)) {
      return cljs.core._conj.call(null, coll, x);
    } else {
      return cljs.core._conj.call(null, cljs.core.List.EMPTY, x);
    }
  };
  var conj__3 = function() {
    var G__10723__delegate = function(coll, x, xs) {
      while (true) {
        if (cljs.core.truth_(xs)) {
          var G__10724 = conj.call(null, coll, x);
          var G__10725 = cljs.core.first.call(null, xs);
          var G__10726 = cljs.core.next.call(null, xs);
          coll = G__10724;
          x = G__10725;
          xs = G__10726;
          continue;
        } else {
          return conj.call(null, coll, x);
        }
        break;
      }
    };
    var G__10723 = function(coll, x, var_args) {
      var xs = null;
      if (arguments.length > 2) {
        xs = cljs.core.array_seq(Array.prototype.slice.call(arguments, 2), 0);
      }
      return G__10723__delegate.call(this, coll, x, xs);
    };
    G__10723.cljs$lang$maxFixedArity = 2;
    G__10723.cljs$lang$applyTo = function(arglist__10727) {
      var coll = cljs.core.first(arglist__10727);
      arglist__10727 = cljs.core.next(arglist__10727);
      var x = cljs.core.first(arglist__10727);
      var xs = cljs.core.rest(arglist__10727);
      return G__10723__delegate(coll, x, xs);
    };
    G__10723.cljs$core$IFn$_invoke$arity$variadic = G__10723__delegate;
    return G__10723;
  }();
  conj = function(coll, x, var_args) {
    var xs = var_args;
    switch(arguments.length) {
      case 2:
        return conj__2.call(this, coll, x);
      default:
        return conj__3.cljs$core$IFn$_invoke$arity$variadic(coll, x, cljs.core.array_seq(arguments, 2));
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  conj.cljs$lang$maxFixedArity = 2;
  conj.cljs$lang$applyTo = conj__3.cljs$lang$applyTo;
  conj.cljs$core$IFn$_invoke$arity$2 = conj__2;
  conj.cljs$core$IFn$_invoke$arity$variadic = conj__3.cljs$core$IFn$_invoke$arity$variadic;
  return conj;
}();
cljs.core.empty = function empty(coll) {
  if (coll == null) {
    return null;
  } else {
    return cljs.core._empty.call(null, coll);
  }
};
cljs.core.accumulating_seq_count = function accumulating_seq_count(coll) {
  var s = cljs.core.seq.call(null, coll);
  var acc = 0;
  while (true) {
    if (cljs.core.counted_QMARK_.call(null, s)) {
      return acc + cljs.core._count.call(null, s);
    } else {
      var G__10728 = cljs.core.next.call(null, s);
      var G__10729 = acc + 1;
      s = G__10728;
      acc = G__10729;
      continue;
    }
    break;
  }
};
cljs.core.count = function count(coll) {
  if (!(coll == null)) {
    if (function() {
      var G__10731 = coll;
      if (G__10731) {
        var bit__4046__auto__ = G__10731.cljs$lang$protocol_mask$partition0$ & 2;
        if (bit__4046__auto__ || G__10731.cljs$core$ICounted$) {
          return true;
        } else {
          return false;
        }
      } else {
        return false;
      }
    }()) {
      return cljs.core._count.call(null, coll);
    } else {
      if (coll instanceof Array) {
        return coll.length;
      } else {
        if (typeof coll === "string") {
          return coll.length;
        } else {
          if (cljs.core.native_satisfies_QMARK_.call(null, cljs.core.ICounted, coll)) {
            return cljs.core._count.call(null, coll);
          } else {
            if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
              return cljs.core.accumulating_seq_count.call(null, coll);
            } else {
              return null;
            }
          }
        }
      }
    }
  } else {
    return 0;
  }
};
cljs.core.linear_traversal_nth = function() {
  var linear_traversal_nth = null;
  var linear_traversal_nth__2 = function(coll, n) {
    while (true) {
      if (coll == null) {
        throw new Error("Index out of bounds");
      } else {
        if (n === 0) {
          if (cljs.core.seq.call(null, coll)) {
            return cljs.core.first.call(null, coll);
          } else {
            throw new Error("Index out of bounds");
          }
        } else {
          if (cljs.core.indexed_QMARK_.call(null, coll)) {
            return cljs.core._nth.call(null, coll, n);
          } else {
            if (cljs.core.seq.call(null, coll)) {
              var G__10732 = cljs.core.next.call(null, coll);
              var G__10733 = n - 1;
              coll = G__10732;
              n = G__10733;
              continue;
            } else {
              if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
                throw new Error("Index out of bounds");
              } else {
                return null;
              }
            }
          }
        }
      }
      break;
    }
  };
  var linear_traversal_nth__3 = function(coll, n, not_found) {
    while (true) {
      if (coll == null) {
        return not_found;
      } else {
        if (n === 0) {
          if (cljs.core.seq.call(null, coll)) {
            return cljs.core.first.call(null, coll);
          } else {
            return not_found;
          }
        } else {
          if (cljs.core.indexed_QMARK_.call(null, coll)) {
            return cljs.core._nth.call(null, coll, n, not_found);
          } else {
            if (cljs.core.seq.call(null, coll)) {
              var G__10734 = cljs.core.next.call(null, coll);
              var G__10735 = n - 1;
              var G__10736 = not_found;
              coll = G__10734;
              n = G__10735;
              not_found = G__10736;
              continue;
            } else {
              if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
                return not_found;
              } else {
                return null;
              }
            }
          }
        }
      }
      break;
    }
  };
  linear_traversal_nth = function(coll, n, not_found) {
    switch(arguments.length) {
      case 2:
        return linear_traversal_nth__2.call(this, coll, n);
      case 3:
        return linear_traversal_nth__3.call(this, coll, n, not_found);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  linear_traversal_nth.cljs$core$IFn$_invoke$arity$2 = linear_traversal_nth__2;
  linear_traversal_nth.cljs$core$IFn$_invoke$arity$3 = linear_traversal_nth__3;
  return linear_traversal_nth;
}();
cljs.core.nth = function() {
  var nth = null;
  var nth__2 = function(coll, n) {
    if (coll == null) {
      return null;
    } else {
      if (function() {
        var G__10741 = coll;
        if (G__10741) {
          var bit__4046__auto__ = G__10741.cljs$lang$protocol_mask$partition0$ & 16;
          if (bit__4046__auto__ || G__10741.cljs$core$IIndexed$) {
            return true;
          } else {
            return false;
          }
        } else {
          return false;
        }
      }()) {
        return cljs.core._nth.call(null, coll, n);
      } else {
        if (coll instanceof Array) {
          if (n < coll.length) {
            return coll[n];
          } else {
            return null;
          }
        } else {
          if (typeof coll === "string") {
            if (n < coll.length) {
              return coll[n];
            } else {
              return null;
            }
          } else {
            if (cljs.core.native_satisfies_QMARK_.call(null, cljs.core.IIndexed, coll)) {
              return cljs.core._nth.call(null, coll, n);
            } else {
              if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
                if (function() {
                  var G__10742 = coll;
                  if (G__10742) {
                    var bit__4053__auto__ = G__10742.cljs$lang$protocol_mask$partition0$ & 64;
                    if (bit__4053__auto__ || G__10742.cljs$core$ISeq$) {
                      return true;
                    } else {
                      if (!G__10742.cljs$lang$protocol_mask$partition0$) {
                        return cljs.core.native_satisfies_QMARK_.call(null, cljs.core.ISeq, G__10742);
                      } else {
                        return false;
                      }
                    }
                  } else {
                    return cljs.core.native_satisfies_QMARK_.call(null, cljs.core.ISeq, G__10742);
                  }
                }()) {
                  return cljs.core.linear_traversal_nth.call(null, coll, n);
                } else {
                  throw new Error([cljs.core.str("nth not supported on this type "), cljs.core.str(cljs.core.type__GT_str.call(null, cljs.core.type.call(null, coll)))].join(""));
                }
              } else {
                return null;
              }
            }
          }
        }
      }
    }
  };
  var nth__3 = function(coll, n, not_found) {
    if (!(coll == null)) {
      if (function() {
        var G__10743 = coll;
        if (G__10743) {
          var bit__4046__auto__ = G__10743.cljs$lang$protocol_mask$partition0$ & 16;
          if (bit__4046__auto__ || G__10743.cljs$core$IIndexed$) {
            return true;
          } else {
            return false;
          }
        } else {
          return false;
        }
      }()) {
        return cljs.core._nth.call(null, coll, n, not_found);
      } else {
        if (coll instanceof Array) {
          if (n < coll.length) {
            return coll[n];
          } else {
            return not_found;
          }
        } else {
          if (typeof coll === "string") {
            if (n < coll.length) {
              return coll[n];
            } else {
              return not_found;
            }
          } else {
            if (cljs.core.native_satisfies_QMARK_.call(null, cljs.core.IIndexed, coll)) {
              return cljs.core._nth.call(null, coll, n);
            } else {
              if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
                if (function() {
                  var G__10744 = coll;
                  if (G__10744) {
                    var bit__4053__auto__ = G__10744.cljs$lang$protocol_mask$partition0$ & 64;
                    if (bit__4053__auto__ || G__10744.cljs$core$ISeq$) {
                      return true;
                    } else {
                      if (!G__10744.cljs$lang$protocol_mask$partition0$) {
                        return cljs.core.native_satisfies_QMARK_.call(null, cljs.core.ISeq, G__10744);
                      } else {
                        return false;
                      }
                    }
                  } else {
                    return cljs.core.native_satisfies_QMARK_.call(null, cljs.core.ISeq, G__10744);
                  }
                }()) {
                  return cljs.core.linear_traversal_nth.call(null, coll, n, not_found);
                } else {
                  throw new Error([cljs.core.str("nth not supported on this type "), cljs.core.str(cljs.core.type__GT_str.call(null, cljs.core.type.call(null, coll)))].join(""));
                }
              } else {
                return null;
              }
            }
          }
        }
      }
    } else {
      return not_found;
    }
  };
  nth = function(coll, n, not_found) {
    switch(arguments.length) {
      case 2:
        return nth__2.call(this, coll, n);
      case 3:
        return nth__3.call(this, coll, n, not_found);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  nth.cljs$core$IFn$_invoke$arity$2 = nth__2;
  nth.cljs$core$IFn$_invoke$arity$3 = nth__3;
  return nth;
}();
cljs.core.get = function() {
  var get = null;
  var get__2 = function(o, k) {
    if (o == null) {
      return null;
    } else {
      if (function() {
        var G__10747 = o;
        if (G__10747) {
          var bit__4046__auto__ = G__10747.cljs$lang$protocol_mask$partition0$ & 256;
          if (bit__4046__auto__ || G__10747.cljs$core$ILookup$) {
            return true;
          } else {
            return false;
          }
        } else {
          return false;
        }
      }()) {
        return cljs.core._lookup.call(null, o, k);
      } else {
        if (o instanceof Array) {
          if (k < o.length) {
            return o[k];
          } else {
            return null;
          }
        } else {
          if (typeof o === "string") {
            if (k < o.length) {
              return o[k];
            } else {
              return null;
            }
          } else {
            if (cljs.core.native_satisfies_QMARK_.call(null, cljs.core.ILookup, o)) {
              return cljs.core._lookup.call(null, o, k);
            } else {
              if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
                return null;
              } else {
                return null;
              }
            }
          }
        }
      }
    }
  };
  var get__3 = function(o, k, not_found) {
    if (!(o == null)) {
      if (function() {
        var G__10748 = o;
        if (G__10748) {
          var bit__4046__auto__ = G__10748.cljs$lang$protocol_mask$partition0$ & 256;
          if (bit__4046__auto__ || G__10748.cljs$core$ILookup$) {
            return true;
          } else {
            return false;
          }
        } else {
          return false;
        }
      }()) {
        return cljs.core._lookup.call(null, o, k, not_found);
      } else {
        if (o instanceof Array) {
          if (k < o.length) {
            return o[k];
          } else {
            return not_found;
          }
        } else {
          if (typeof o === "string") {
            if (k < o.length) {
              return o[k];
            } else {
              return not_found;
            }
          } else {
            if (cljs.core.native_satisfies_QMARK_.call(null, cljs.core.ILookup, o)) {
              return cljs.core._lookup.call(null, o, k, not_found);
            } else {
              if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
                return not_found;
              } else {
                return null;
              }
            }
          }
        }
      }
    } else {
      return not_found;
    }
  };
  get = function(o, k, not_found) {
    switch(arguments.length) {
      case 2:
        return get__2.call(this, o, k);
      case 3:
        return get__3.call(this, o, k, not_found);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  get.cljs$core$IFn$_invoke$arity$2 = get__2;
  get.cljs$core$IFn$_invoke$arity$3 = get__3;
  return get;
}();
cljs.core.assoc = function() {
  var assoc = null;
  var assoc__3 = function(coll, k, v) {
    if (!(coll == null)) {
      return cljs.core._assoc.call(null, coll, k, v);
    } else {
      return cljs.core.PersistentHashMap.fromArrays.call(null, [k], [v]);
    }
  };
  var assoc__4 = function() {
    var G__10749__delegate = function(coll, k, v, kvs) {
      while (true) {
        var ret = assoc.call(null, coll, k, v);
        if (cljs.core.truth_(kvs)) {
          var G__10750 = ret;
          var G__10751 = cljs.core.first.call(null, kvs);
          var G__10752 = cljs.core.second.call(null, kvs);
          var G__10753 = cljs.core.nnext.call(null, kvs);
          coll = G__10750;
          k = G__10751;
          v = G__10752;
          kvs = G__10753;
          continue;
        } else {
          return ret;
        }
        break;
      }
    };
    var G__10749 = function(coll, k, v, var_args) {
      var kvs = null;
      if (arguments.length > 3) {
        kvs = cljs.core.array_seq(Array.prototype.slice.call(arguments, 3), 0);
      }
      return G__10749__delegate.call(this, coll, k, v, kvs);
    };
    G__10749.cljs$lang$maxFixedArity = 3;
    G__10749.cljs$lang$applyTo = function(arglist__10754) {
      var coll = cljs.core.first(arglist__10754);
      arglist__10754 = cljs.core.next(arglist__10754);
      var k = cljs.core.first(arglist__10754);
      arglist__10754 = cljs.core.next(arglist__10754);
      var v = cljs.core.first(arglist__10754);
      var kvs = cljs.core.rest(arglist__10754);
      return G__10749__delegate(coll, k, v, kvs);
    };
    G__10749.cljs$core$IFn$_invoke$arity$variadic = G__10749__delegate;
    return G__10749;
  }();
  assoc = function(coll, k, v, var_args) {
    var kvs = var_args;
    switch(arguments.length) {
      case 3:
        return assoc__3.call(this, coll, k, v);
      default:
        return assoc__4.cljs$core$IFn$_invoke$arity$variadic(coll, k, v, cljs.core.array_seq(arguments, 3));
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  assoc.cljs$lang$maxFixedArity = 3;
  assoc.cljs$lang$applyTo = assoc__4.cljs$lang$applyTo;
  assoc.cljs$core$IFn$_invoke$arity$3 = assoc__3;
  assoc.cljs$core$IFn$_invoke$arity$variadic = assoc__4.cljs$core$IFn$_invoke$arity$variadic;
  return assoc;
}();
cljs.core.dissoc = function() {
  var dissoc = null;
  var dissoc__1 = function(coll) {
    return coll;
  };
  var dissoc__2 = function(coll, k) {
    if (coll == null) {
      return null;
    } else {
      return cljs.core._dissoc.call(null, coll, k);
    }
  };
  var dissoc__3 = function() {
    var G__10755__delegate = function(coll, k, ks) {
      while (true) {
        if (coll == null) {
          return null;
        } else {
          var ret = dissoc.call(null, coll, k);
          if (cljs.core.truth_(ks)) {
            var G__10756 = ret;
            var G__10757 = cljs.core.first.call(null, ks);
            var G__10758 = cljs.core.next.call(null, ks);
            coll = G__10756;
            k = G__10757;
            ks = G__10758;
            continue;
          } else {
            return ret;
          }
        }
        break;
      }
    };
    var G__10755 = function(coll, k, var_args) {
      var ks = null;
      if (arguments.length > 2) {
        ks = cljs.core.array_seq(Array.prototype.slice.call(arguments, 2), 0);
      }
      return G__10755__delegate.call(this, coll, k, ks);
    };
    G__10755.cljs$lang$maxFixedArity = 2;
    G__10755.cljs$lang$applyTo = function(arglist__10759) {
      var coll = cljs.core.first(arglist__10759);
      arglist__10759 = cljs.core.next(arglist__10759);
      var k = cljs.core.first(arglist__10759);
      var ks = cljs.core.rest(arglist__10759);
      return G__10755__delegate(coll, k, ks);
    };
    G__10755.cljs$core$IFn$_invoke$arity$variadic = G__10755__delegate;
    return G__10755;
  }();
  dissoc = function(coll, k, var_args) {
    var ks = var_args;
    switch(arguments.length) {
      case 1:
        return dissoc__1.call(this, coll);
      case 2:
        return dissoc__2.call(this, coll, k);
      default:
        return dissoc__3.cljs$core$IFn$_invoke$arity$variadic(coll, k, cljs.core.array_seq(arguments, 2));
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  dissoc.cljs$lang$maxFixedArity = 2;
  dissoc.cljs$lang$applyTo = dissoc__3.cljs$lang$applyTo;
  dissoc.cljs$core$IFn$_invoke$arity$1 = dissoc__1;
  dissoc.cljs$core$IFn$_invoke$arity$2 = dissoc__2;
  dissoc.cljs$core$IFn$_invoke$arity$variadic = dissoc__3.cljs$core$IFn$_invoke$arity$variadic;
  return dissoc;
}();
cljs.core.fn_QMARK_ = function fn_QMARK_(f) {
  var or__3403__auto__ = goog.isFunction(f);
  if (or__3403__auto__) {
    return or__3403__auto__;
  } else {
    var G__10763 = f;
    if (G__10763) {
      var bit__4053__auto__ = null;
      if (cljs.core.truth_(function() {
        var or__3403__auto____$1 = bit__4053__auto__;
        if (cljs.core.truth_(or__3403__auto____$1)) {
          return or__3403__auto____$1;
        } else {
          return G__10763.cljs$core$Fn$;
        }
      }())) {
        return true;
      } else {
        if (!G__10763.cljs$lang$protocol_mask$partition$) {
          return cljs.core.native_satisfies_QMARK_.call(null, cljs.core.Fn, G__10763);
        } else {
          return false;
        }
      }
    } else {
      return cljs.core.native_satisfies_QMARK_.call(null, cljs.core.Fn, G__10763);
    }
  }
};
cljs.core.with_meta = function with_meta(o, meta) {
  if (cljs.core.fn_QMARK_.call(null, o) && !function() {
    var G__10771 = o;
    if (G__10771) {
      var bit__4053__auto__ = G__10771.cljs$lang$protocol_mask$partition0$ & 262144;
      if (bit__4053__auto__ || G__10771.cljs$core$IWithMeta$) {
        return true;
      } else {
        if (!G__10771.cljs$lang$protocol_mask$partition0$) {
          return cljs.core.native_satisfies_QMARK_.call(null, cljs.core.IWithMeta, G__10771);
        } else {
          return false;
        }
      }
    } else {
      return cljs.core.native_satisfies_QMARK_.call(null, cljs.core.IWithMeta, G__10771);
    }
  }()) {
    return with_meta.call(null, function() {
      if (typeof cljs.core.t10772 !== "undefined") {
      } else {
        cljs.core.t10772 = function(meta, o, with_meta, meta10773) {
          this.meta = meta;
          this.o = o;
          this.with_meta = with_meta;
          this.meta10773 = meta10773;
          this.cljs$lang$protocol_mask$partition1$ = 0;
          this.cljs$lang$protocol_mask$partition0$ = 393217;
        };
        cljs.core.t10772.cljs$lang$type = true;
        cljs.core.t10772.cljs$lang$ctorStr = "cljs.core/t10772";
        cljs.core.t10772.cljs$lang$ctorPrWriter = function(this__3970__auto__, writer__3971__auto__, opt__3972__auto__) {
          return cljs.core._write.call(null, writer__3971__auto__, "cljs.core/t10772");
        };
        cljs.core.t10772.prototype.call = function() {
          var G__10776__delegate = function(self__, args) {
            var self____$1 = this;
            var _ = self____$1;
            return cljs.core.apply.call(null, self__.o, args);
          };
          var G__10776 = function(self__, var_args) {
            var self__ = this;
            var args = null;
            if (arguments.length > 1) {
              args = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
            }
            return G__10776__delegate.call(this, self__, args);
          };
          G__10776.cljs$lang$maxFixedArity = 1;
          G__10776.cljs$lang$applyTo = function(arglist__10777) {
            var self__ = cljs.core.first(arglist__10777);
            var args = cljs.core.rest(arglist__10777);
            return G__10776__delegate(self__, args);
          };
          G__10776.cljs$core$IFn$_invoke$arity$variadic = G__10776__delegate;
          return G__10776;
        }();
        cljs.core.t10772.prototype.apply = function(self__, args10775) {
          var self__ = this;
          var self____$1 = this;
          return self____$1.call.apply(self____$1, [self____$1].concat(cljs.core.aclone.call(null, args10775)));
        };
        cljs.core.t10772.prototype.cljs$core$IFn$_invoke$arity$2 = function() {
          var G__10778__delegate = function(args) {
            var _ = this;
            return cljs.core.apply.call(null, self__.o, args);
          };
          var G__10778 = function(var_args) {
            var self__ = this;
            var args = null;
            if (arguments.length > 0) {
              args = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0), 0);
            }
            return G__10778__delegate.call(this, args);
          };
          G__10778.cljs$lang$maxFixedArity = 0;
          G__10778.cljs$lang$applyTo = function(arglist__10779) {
            var args = cljs.core.seq(arglist__10779);
            return G__10778__delegate(args);
          };
          G__10778.cljs$core$IFn$_invoke$arity$variadic = G__10778__delegate;
          return G__10778;
        }();
        cljs.core.t10772.prototype.cljs$core$Fn$ = true;
        cljs.core.t10772.prototype.cljs$core$IMeta$_meta$arity$1 = function(_10774) {
          var self__ = this;
          var _10774__$1 = this;
          return self__.meta10773;
        };
        cljs.core.t10772.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(_10774, meta10773__$1) {
          var self__ = this;
          var _10774__$1 = this;
          return new cljs.core.t10772(self__.meta, self__.o, self__.with_meta, meta10773__$1);
        };
        cljs.core.__GT_t10772 = function __GT_t10772(meta__$1, o__$1, with_meta__$1, meta10773) {
          return new cljs.core.t10772(meta__$1, o__$1, with_meta__$1, meta10773);
        };
      }
      return new cljs.core.t10772(meta, o, with_meta, null);
    }(), meta);
  } else {
    if (o == null) {
      return null;
    } else {
      return cljs.core._with_meta.call(null, o, meta);
    }
  }
};
cljs.core.meta = function meta(o) {
  if (function() {
    var and__3391__auto__ = !(o == null);
    if (and__3391__auto__) {
      var G__10783 = o;
      if (G__10783) {
        var bit__4053__auto__ = G__10783.cljs$lang$protocol_mask$partition0$ & 131072;
        if (bit__4053__auto__ || G__10783.cljs$core$IMeta$) {
          return true;
        } else {
          if (!G__10783.cljs$lang$protocol_mask$partition0$) {
            return cljs.core.native_satisfies_QMARK_.call(null, cljs.core.IMeta, G__10783);
          } else {
            return false;
          }
        }
      } else {
        return cljs.core.native_satisfies_QMARK_.call(null, cljs.core.IMeta, G__10783);
      }
    } else {
      return and__3391__auto__;
    }
  }()) {
    return cljs.core._meta.call(null, o);
  } else {
    return null;
  }
};
cljs.core.peek = function peek(coll) {
  if (coll == null) {
    return null;
  } else {
    return cljs.core._peek.call(null, coll);
  }
};
cljs.core.pop = function pop(coll) {
  if (coll == null) {
    return null;
  } else {
    return cljs.core._pop.call(null, coll);
  }
};
cljs.core.disj = function() {
  var disj = null;
  var disj__1 = function(coll) {
    return coll;
  };
  var disj__2 = function(coll, k) {
    if (coll == null) {
      return null;
    } else {
      return cljs.core._disjoin.call(null, coll, k);
    }
  };
  var disj__3 = function() {
    var G__10784__delegate = function(coll, k, ks) {
      while (true) {
        if (coll == null) {
          return null;
        } else {
          var ret = disj.call(null, coll, k);
          if (cljs.core.truth_(ks)) {
            var G__10785 = ret;
            var G__10786 = cljs.core.first.call(null, ks);
            var G__10787 = cljs.core.next.call(null, ks);
            coll = G__10785;
            k = G__10786;
            ks = G__10787;
            continue;
          } else {
            return ret;
          }
        }
        break;
      }
    };
    var G__10784 = function(coll, k, var_args) {
      var ks = null;
      if (arguments.length > 2) {
        ks = cljs.core.array_seq(Array.prototype.slice.call(arguments, 2), 0);
      }
      return G__10784__delegate.call(this, coll, k, ks);
    };
    G__10784.cljs$lang$maxFixedArity = 2;
    G__10784.cljs$lang$applyTo = function(arglist__10788) {
      var coll = cljs.core.first(arglist__10788);
      arglist__10788 = cljs.core.next(arglist__10788);
      var k = cljs.core.first(arglist__10788);
      var ks = cljs.core.rest(arglist__10788);
      return G__10784__delegate(coll, k, ks);
    };
    G__10784.cljs$core$IFn$_invoke$arity$variadic = G__10784__delegate;
    return G__10784;
  }();
  disj = function(coll, k, var_args) {
    var ks = var_args;
    switch(arguments.length) {
      case 1:
        return disj__1.call(this, coll);
      case 2:
        return disj__2.call(this, coll, k);
      default:
        return disj__3.cljs$core$IFn$_invoke$arity$variadic(coll, k, cljs.core.array_seq(arguments, 2));
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  disj.cljs$lang$maxFixedArity = 2;
  disj.cljs$lang$applyTo = disj__3.cljs$lang$applyTo;
  disj.cljs$core$IFn$_invoke$arity$1 = disj__1;
  disj.cljs$core$IFn$_invoke$arity$2 = disj__2;
  disj.cljs$core$IFn$_invoke$arity$variadic = disj__3.cljs$core$IFn$_invoke$arity$variadic;
  return disj;
}();
cljs.core.string_hash_cache = function() {
  var obj10790 = {};
  return obj10790;
}();
cljs.core.string_hash_cache_count = 0;
cljs.core.add_to_string_hash_cache = function add_to_string_hash_cache(k) {
  var h = goog.string.hashCode(k);
  cljs.core.string_hash_cache[k] = h;
  cljs.core.string_hash_cache_count = cljs.core.string_hash_cache_count + 1;
  return h;
};
cljs.core.check_string_hash_cache = function check_string_hash_cache(k) {
  if (cljs.core.string_hash_cache_count > 255) {
    cljs.core.string_hash_cache = function() {
      var obj10794 = {};
      return obj10794;
    }();
    cljs.core.string_hash_cache_count = 0;
  } else {
  }
  var h = cljs.core.string_hash_cache[k];
  if (typeof h === "number") {
    return h;
  } else {
    return cljs.core.add_to_string_hash_cache.call(null, k);
  }
};
cljs.core.hash = function hash(o) {
  if (function() {
    var G__10796 = o;
    if (G__10796) {
      var bit__4046__auto__ = G__10796.cljs$lang$protocol_mask$partition0$ & 4194304;
      if (bit__4046__auto__ || G__10796.cljs$core$IHash$) {
        return true;
      } else {
        return false;
      }
    } else {
      return false;
    }
  }()) {
    return cljs.core._hash.call(null, o);
  } else {
    if (typeof o === "number") {
      return Math.floor(o) % 2147483647;
    } else {
      if (o === true) {
        return 1;
      } else {
        if (o === false) {
          return 0;
        } else {
          if (typeof o === "string") {
            return cljs.core.check_string_hash_cache.call(null, o);
          } else {
            if (o == null) {
              return 0;
            } else {
              if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
                return cljs.core._hash.call(null, o);
              } else {
                return null;
              }
            }
          }
        }
      }
    }
  }
};
cljs.core.empty_QMARK_ = function empty_QMARK_(coll) {
  return coll == null || cljs.core.not.call(null, cljs.core.seq.call(null, coll));
};
cljs.core.coll_QMARK_ = function coll_QMARK_(x) {
  if (x == null) {
    return false;
  } else {
    var G__10798 = x;
    if (G__10798) {
      var bit__4053__auto__ = G__10798.cljs$lang$protocol_mask$partition0$ & 8;
      if (bit__4053__auto__ || G__10798.cljs$core$ICollection$) {
        return true;
      } else {
        if (!G__10798.cljs$lang$protocol_mask$partition0$) {
          return cljs.core.native_satisfies_QMARK_.call(null, cljs.core.ICollection, G__10798);
        } else {
          return false;
        }
      }
    } else {
      return cljs.core.native_satisfies_QMARK_.call(null, cljs.core.ICollection, G__10798);
    }
  }
};
cljs.core.set_QMARK_ = function set_QMARK_(x) {
  if (x == null) {
    return false;
  } else {
    var G__10800 = x;
    if (G__10800) {
      var bit__4053__auto__ = G__10800.cljs$lang$protocol_mask$partition0$ & 4096;
      if (bit__4053__auto__ || G__10800.cljs$core$ISet$) {
        return true;
      } else {
        if (!G__10800.cljs$lang$protocol_mask$partition0$) {
          return cljs.core.native_satisfies_QMARK_.call(null, cljs.core.ISet, G__10800);
        } else {
          return false;
        }
      }
    } else {
      return cljs.core.native_satisfies_QMARK_.call(null, cljs.core.ISet, G__10800);
    }
  }
};
cljs.core.associative_QMARK_ = function associative_QMARK_(x) {
  var G__10802 = x;
  if (G__10802) {
    var bit__4053__auto__ = G__10802.cljs$lang$protocol_mask$partition0$ & 512;
    if (bit__4053__auto__ || G__10802.cljs$core$IAssociative$) {
      return true;
    } else {
      if (!G__10802.cljs$lang$protocol_mask$partition0$) {
        return cljs.core.native_satisfies_QMARK_.call(null, cljs.core.IAssociative, G__10802);
      } else {
        return false;
      }
    }
  } else {
    return cljs.core.native_satisfies_QMARK_.call(null, cljs.core.IAssociative, G__10802);
  }
};
cljs.core.sequential_QMARK_ = function sequential_QMARK_(x) {
  var G__10804 = x;
  if (G__10804) {
    var bit__4053__auto__ = G__10804.cljs$lang$protocol_mask$partition0$ & 16777216;
    if (bit__4053__auto__ || G__10804.cljs$core$ISequential$) {
      return true;
    } else {
      if (!G__10804.cljs$lang$protocol_mask$partition0$) {
        return cljs.core.native_satisfies_QMARK_.call(null, cljs.core.ISequential, G__10804);
      } else {
        return false;
      }
    }
  } else {
    return cljs.core.native_satisfies_QMARK_.call(null, cljs.core.ISequential, G__10804);
  }
};
cljs.core.sorted_QMARK_ = function sorted_QMARK_(x) {
  var G__10806 = x;
  if (G__10806) {
    var bit__4053__auto__ = G__10806.cljs$lang$protocol_mask$partition0$ & 268435456;
    if (bit__4053__auto__ || G__10806.cljs$core$ISorted$) {
      return true;
    } else {
      if (!G__10806.cljs$lang$protocol_mask$partition0$) {
        return cljs.core.native_satisfies_QMARK_.call(null, cljs.core.ISorted, G__10806);
      } else {
        return false;
      }
    }
  } else {
    return cljs.core.native_satisfies_QMARK_.call(null, cljs.core.ISorted, G__10806);
  }
};
cljs.core.reduceable_QMARK_ = function reduceable_QMARK_(x) {
  var G__10808 = x;
  if (G__10808) {
    var bit__4053__auto__ = G__10808.cljs$lang$protocol_mask$partition0$ & 524288;
    if (bit__4053__auto__ || G__10808.cljs$core$IReduce$) {
      return true;
    } else {
      if (!G__10808.cljs$lang$protocol_mask$partition0$) {
        return cljs.core.native_satisfies_QMARK_.call(null, cljs.core.IReduce, G__10808);
      } else {
        return false;
      }
    }
  } else {
    return cljs.core.native_satisfies_QMARK_.call(null, cljs.core.IReduce, G__10808);
  }
};
cljs.core.map_QMARK_ = function map_QMARK_(x) {
  if (x == null) {
    return false;
  } else {
    var G__10810 = x;
    if (G__10810) {
      var bit__4053__auto__ = G__10810.cljs$lang$protocol_mask$partition0$ & 1024;
      if (bit__4053__auto__ || G__10810.cljs$core$IMap$) {
        return true;
      } else {
        if (!G__10810.cljs$lang$protocol_mask$partition0$) {
          return cljs.core.native_satisfies_QMARK_.call(null, cljs.core.IMap, G__10810);
        } else {
          return false;
        }
      }
    } else {
      return cljs.core.native_satisfies_QMARK_.call(null, cljs.core.IMap, G__10810);
    }
  }
};
cljs.core.vector_QMARK_ = function vector_QMARK_(x) {
  var G__10812 = x;
  if (G__10812) {
    var bit__4053__auto__ = G__10812.cljs$lang$protocol_mask$partition0$ & 16384;
    if (bit__4053__auto__ || G__10812.cljs$core$IVector$) {
      return true;
    } else {
      if (!G__10812.cljs$lang$protocol_mask$partition0$) {
        return cljs.core.native_satisfies_QMARK_.call(null, cljs.core.IVector, G__10812);
      } else {
        return false;
      }
    }
  } else {
    return cljs.core.native_satisfies_QMARK_.call(null, cljs.core.IVector, G__10812);
  }
};
cljs.core.chunked_seq_QMARK_ = function chunked_seq_QMARK_(x) {
  var G__10814 = x;
  if (G__10814) {
    var bit__4046__auto__ = G__10814.cljs$lang$protocol_mask$partition1$ & 512;
    if (bit__4046__auto__ || G__10814.cljs$core$IChunkedSeq$) {
      return true;
    } else {
      return false;
    }
  } else {
    return false;
  }
};
cljs.core.js_obj = function() {
  var js_obj = null;
  var js_obj__0 = function() {
    var obj10818 = {};
    return obj10818;
  };
  var js_obj__1 = function() {
    var G__10819__delegate = function(keyvals) {
      return cljs.core.apply.call(null, goog.object.create, keyvals);
    };
    var G__10819 = function(var_args) {
      var keyvals = null;
      if (arguments.length > 0) {
        keyvals = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0), 0);
      }
      return G__10819__delegate.call(this, keyvals);
    };
    G__10819.cljs$lang$maxFixedArity = 0;
    G__10819.cljs$lang$applyTo = function(arglist__10820) {
      var keyvals = cljs.core.seq(arglist__10820);
      return G__10819__delegate(keyvals);
    };
    G__10819.cljs$core$IFn$_invoke$arity$variadic = G__10819__delegate;
    return G__10819;
  }();
  js_obj = function(var_args) {
    var keyvals = var_args;
    switch(arguments.length) {
      case 0:
        return js_obj__0.call(this);
      default:
        return js_obj__1.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq(arguments, 0));
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  js_obj.cljs$lang$maxFixedArity = 0;
  js_obj.cljs$lang$applyTo = js_obj__1.cljs$lang$applyTo;
  js_obj.cljs$core$IFn$_invoke$arity$0 = js_obj__0;
  js_obj.cljs$core$IFn$_invoke$arity$variadic = js_obj__1.cljs$core$IFn$_invoke$arity$variadic;
  return js_obj;
}();
cljs.core.js_keys = function js_keys(obj) {
  var keys = [];
  goog.object.forEach(obj, function(val, key, obj__$1) {
    return keys.push(key);
  });
  return keys;
};
cljs.core.js_delete = function js_delete(obj, key) {
  return delete obj[key];
};
cljs.core.array_copy = function array_copy(from, i, to, j, len) {
  var i__$1 = i;
  var j__$1 = j;
  var len__$1 = len;
  while (true) {
    if (len__$1 === 0) {
      return to;
    } else {
      to[j__$1] = from[i__$1];
      var G__10821 = i__$1 + 1;
      var G__10822 = j__$1 + 1;
      var G__10823 = len__$1 - 1;
      i__$1 = G__10821;
      j__$1 = G__10822;
      len__$1 = G__10823;
      continue;
    }
    break;
  }
};
cljs.core.array_copy_downward = function array_copy_downward(from, i, to, j, len) {
  var i__$1 = i + (len - 1);
  var j__$1 = j + (len - 1);
  var len__$1 = len;
  while (true) {
    if (len__$1 === 0) {
      return to;
    } else {
      to[j__$1] = from[i__$1];
      var G__10824 = i__$1 - 1;
      var G__10825 = j__$1 - 1;
      var G__10826 = len__$1 - 1;
      i__$1 = G__10824;
      j__$1 = G__10825;
      len__$1 = G__10826;
      continue;
    }
    break;
  }
};
cljs.core.lookup_sentinel = function() {
  var obj10828 = {};
  return obj10828;
}();
cljs.core.false_QMARK_ = function false_QMARK_(x) {
  return x === false;
};
cljs.core.true_QMARK_ = function true_QMARK_(x) {
  return x === true;
};
cljs.core.undefined_QMARK_ = function undefined_QMARK_(x) {
  return void 0 === x;
};
cljs.core.seq_QMARK_ = function seq_QMARK_(s) {
  if (s == null) {
    return false;
  } else {
    var G__10830 = s;
    if (G__10830) {
      var bit__4053__auto__ = G__10830.cljs$lang$protocol_mask$partition0$ & 64;
      if (bit__4053__auto__ || G__10830.cljs$core$ISeq$) {
        return true;
      } else {
        if (!G__10830.cljs$lang$protocol_mask$partition0$) {
          return cljs.core.native_satisfies_QMARK_.call(null, cljs.core.ISeq, G__10830);
        } else {
          return false;
        }
      }
    } else {
      return cljs.core.native_satisfies_QMARK_.call(null, cljs.core.ISeq, G__10830);
    }
  }
};
cljs.core.seqable_QMARK_ = function seqable_QMARK_(s) {
  var G__10832 = s;
  if (G__10832) {
    var bit__4053__auto__ = G__10832.cljs$lang$protocol_mask$partition0$ & 8388608;
    if (bit__4053__auto__ || G__10832.cljs$core$ISeqable$) {
      return true;
    } else {
      if (!G__10832.cljs$lang$protocol_mask$partition0$) {
        return cljs.core.native_satisfies_QMARK_.call(null, cljs.core.ISeqable, G__10832);
      } else {
        return false;
      }
    }
  } else {
    return cljs.core.native_satisfies_QMARK_.call(null, cljs.core.ISeqable, G__10832);
  }
};
cljs.core.boolean$ = function boolean$(x) {
  if (cljs.core.truth_(x)) {
    return true;
  } else {
    return false;
  }
};
cljs.core.ifn_QMARK_ = function ifn_QMARK_(f) {
  var or__3403__auto__ = cljs.core.fn_QMARK_.call(null, f);
  if (or__3403__auto__) {
    return or__3403__auto__;
  } else {
    var G__10836 = f;
    if (G__10836) {
      var bit__4053__auto__ = G__10836.cljs$lang$protocol_mask$partition0$ & 1;
      if (bit__4053__auto__ || G__10836.cljs$core$IFn$) {
        return true;
      } else {
        if (!G__10836.cljs$lang$protocol_mask$partition0$) {
          return cljs.core.native_satisfies_QMARK_.call(null, cljs.core.IFn, G__10836);
        } else {
          return false;
        }
      }
    } else {
      return cljs.core.native_satisfies_QMARK_.call(null, cljs.core.IFn, G__10836);
    }
  }
};
cljs.core.integer_QMARK_ = function integer_QMARK_(n) {
  return typeof n === "number" && (!isNaN(n) && (!(n === Infinity) && parseFloat(n) === parseInt(n, 10)));
};
cljs.core.contains_QMARK_ = function contains_QMARK_(coll, v) {
  if (cljs.core.get.call(null, coll, v, cljs.core.lookup_sentinel) === cljs.core.lookup_sentinel) {
    return false;
  } else {
    return true;
  }
};
cljs.core.find = function find(coll, k) {
  if (!(coll == null) && (cljs.core.associative_QMARK_.call(null, coll) && cljs.core.contains_QMARK_.call(null, coll, k))) {
    return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [k, cljs.core.get.call(null, coll, k)], null);
  } else {
    return null;
  }
};
cljs.core.distinct_QMARK_ = function() {
  var distinct_QMARK_ = null;
  var distinct_QMARK___1 = function(x) {
    return true;
  };
  var distinct_QMARK___2 = function(x, y) {
    return!cljs.core._EQ_.call(null, x, y);
  };
  var distinct_QMARK___3 = function() {
    var G__10837__delegate = function(x, y, more) {
      if (!cljs.core._EQ_.call(null, x, y)) {
        var s = cljs.core.PersistentHashSet.fromArray([y, x], true);
        var xs = more;
        while (true) {
          var x__$1 = cljs.core.first.call(null, xs);
          var etc = cljs.core.next.call(null, xs);
          if (cljs.core.truth_(xs)) {
            if (cljs.core.contains_QMARK_.call(null, s, x__$1)) {
              return false;
            } else {
              var G__10838 = cljs.core.conj.call(null, s, x__$1);
              var G__10839 = etc;
              s = G__10838;
              xs = G__10839;
              continue;
            }
          } else {
            return true;
          }
          break;
        }
      } else {
        return false;
      }
    };
    var G__10837 = function(x, y, var_args) {
      var more = null;
      if (arguments.length > 2) {
        more = cljs.core.array_seq(Array.prototype.slice.call(arguments, 2), 0);
      }
      return G__10837__delegate.call(this, x, y, more);
    };
    G__10837.cljs$lang$maxFixedArity = 2;
    G__10837.cljs$lang$applyTo = function(arglist__10840) {
      var x = cljs.core.first(arglist__10840);
      arglist__10840 = cljs.core.next(arglist__10840);
      var y = cljs.core.first(arglist__10840);
      var more = cljs.core.rest(arglist__10840);
      return G__10837__delegate(x, y, more);
    };
    G__10837.cljs$core$IFn$_invoke$arity$variadic = G__10837__delegate;
    return G__10837;
  }();
  distinct_QMARK_ = function(x, y, var_args) {
    var more = var_args;
    switch(arguments.length) {
      case 1:
        return distinct_QMARK___1.call(this, x);
      case 2:
        return distinct_QMARK___2.call(this, x, y);
      default:
        return distinct_QMARK___3.cljs$core$IFn$_invoke$arity$variadic(x, y, cljs.core.array_seq(arguments, 2));
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  distinct_QMARK_.cljs$lang$maxFixedArity = 2;
  distinct_QMARK_.cljs$lang$applyTo = distinct_QMARK___3.cljs$lang$applyTo;
  distinct_QMARK_.cljs$core$IFn$_invoke$arity$1 = distinct_QMARK___1;
  distinct_QMARK_.cljs$core$IFn$_invoke$arity$2 = distinct_QMARK___2;
  distinct_QMARK_.cljs$core$IFn$_invoke$arity$variadic = distinct_QMARK___3.cljs$core$IFn$_invoke$arity$variadic;
  return distinct_QMARK_;
}();
cljs.core.sequence = function sequence(coll) {
  if (cljs.core.seq_QMARK_.call(null, coll)) {
    return coll;
  } else {
    var or__3403__auto__ = cljs.core.seq.call(null, coll);
    if (or__3403__auto__) {
      return or__3403__auto__;
    } else {
      return cljs.core.List.EMPTY;
    }
  }
};
cljs.core.compare = function compare(x, y) {
  if (x === y) {
    return 0;
  } else {
    if (x == null) {
      return-1;
    } else {
      if (y == null) {
        return 1;
      } else {
        if (cljs.core.type.call(null, x) === cljs.core.type.call(null, y)) {
          if (function() {
            var G__10842 = x;
            if (G__10842) {
              var bit__4046__auto__ = G__10842.cljs$lang$protocol_mask$partition1$ & 2048;
              if (bit__4046__auto__ || G__10842.cljs$core$IComparable$) {
                return true;
              } else {
                return false;
              }
            } else {
              return false;
            }
          }()) {
            return cljs.core._compare.call(null, x, y);
          } else {
            return goog.array.defaultCompare(x, y);
          }
        } else {
          if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
            throw new Error("compare on non-nil objects of different types");
          } else {
            return null;
          }
        }
      }
    }
  }
};
cljs.core.compare_indexed = function() {
  var compare_indexed = null;
  var compare_indexed__2 = function(xs, ys) {
    var xl = cljs.core.count.call(null, xs);
    var yl = cljs.core.count.call(null, ys);
    if (xl < yl) {
      return-1;
    } else {
      if (xl > yl) {
        return 1;
      } else {
        if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
          return compare_indexed.call(null, xs, ys, xl, 0);
        } else {
          return null;
        }
      }
    }
  };
  var compare_indexed__4 = function(xs, ys, len, n) {
    while (true) {
      var d = cljs.core.compare.call(null, cljs.core.nth.call(null, xs, n), cljs.core.nth.call(null, ys, n));
      if (d === 0 && n + 1 < len) {
        var G__10843 = xs;
        var G__10844 = ys;
        var G__10845 = len;
        var G__10846 = n + 1;
        xs = G__10843;
        ys = G__10844;
        len = G__10845;
        n = G__10846;
        continue;
      } else {
        return d;
      }
      break;
    }
  };
  compare_indexed = function(xs, ys, len, n) {
    switch(arguments.length) {
      case 2:
        return compare_indexed__2.call(this, xs, ys);
      case 4:
        return compare_indexed__4.call(this, xs, ys, len, n);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  compare_indexed.cljs$core$IFn$_invoke$arity$2 = compare_indexed__2;
  compare_indexed.cljs$core$IFn$_invoke$arity$4 = compare_indexed__4;
  return compare_indexed;
}();
cljs.core.fn__GT_comparator = function fn__GT_comparator(f) {
  if (cljs.core._EQ_.call(null, f, cljs.core.compare)) {
    return cljs.core.compare;
  } else {
    return function(x, y) {
      var r = f.call(null, x, y);
      if (typeof r === "number") {
        return r;
      } else {
        if (cljs.core.truth_(r)) {
          return-1;
        } else {
          if (cljs.core.truth_(f.call(null, y, x))) {
            return 1;
          } else {
            return 0;
          }
        }
      }
    };
  }
};
cljs.core.sort = function() {
  var sort = null;
  var sort__1 = function(coll) {
    return sort.call(null, cljs.core.compare, coll);
  };
  var sort__2 = function(comp, coll) {
    if (cljs.core.seq.call(null, coll)) {
      var a = cljs.core.to_array.call(null, coll);
      goog.array.stableSort(a, cljs.core.fn__GT_comparator.call(null, comp));
      return cljs.core.seq.call(null, a);
    } else {
      return cljs.core.List.EMPTY;
    }
  };
  sort = function(comp, coll) {
    switch(arguments.length) {
      case 1:
        return sort__1.call(this, comp);
      case 2:
        return sort__2.call(this, comp, coll);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  sort.cljs$core$IFn$_invoke$arity$1 = sort__1;
  sort.cljs$core$IFn$_invoke$arity$2 = sort__2;
  return sort;
}();
cljs.core.sort_by = function() {
  var sort_by = null;
  var sort_by__2 = function(keyfn, coll) {
    return sort_by.call(null, keyfn, cljs.core.compare, coll);
  };
  var sort_by__3 = function(keyfn, comp, coll) {
    return cljs.core.sort.call(null, function(x, y) {
      return cljs.core.fn__GT_comparator.call(null, comp).call(null, keyfn.call(null, x), keyfn.call(null, y));
    }, coll);
  };
  sort_by = function(keyfn, comp, coll) {
    switch(arguments.length) {
      case 2:
        return sort_by__2.call(this, keyfn, comp);
      case 3:
        return sort_by__3.call(this, keyfn, comp, coll);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  sort_by.cljs$core$IFn$_invoke$arity$2 = sort_by__2;
  sort_by.cljs$core$IFn$_invoke$arity$3 = sort_by__3;
  return sort_by;
}();
cljs.core.seq_reduce = function() {
  var seq_reduce = null;
  var seq_reduce__2 = function(f, coll) {
    var temp__4090__auto__ = cljs.core.seq.call(null, coll);
    if (temp__4090__auto__) {
      var s = temp__4090__auto__;
      return cljs.core.reduce.call(null, f, cljs.core.first.call(null, s), cljs.core.next.call(null, s));
    } else {
      return f.call(null);
    }
  };
  var seq_reduce__3 = function(f, val, coll) {
    var val__$1 = val;
    var coll__$1 = cljs.core.seq.call(null, coll);
    while (true) {
      if (coll__$1) {
        var nval = f.call(null, val__$1, cljs.core.first.call(null, coll__$1));
        if (cljs.core.reduced_QMARK_.call(null, nval)) {
          return cljs.core.deref.call(null, nval);
        } else {
          var G__10847 = nval;
          var G__10848 = cljs.core.next.call(null, coll__$1);
          val__$1 = G__10847;
          coll__$1 = G__10848;
          continue;
        }
      } else {
        return val__$1;
      }
      break;
    }
  };
  seq_reduce = function(f, val, coll) {
    switch(arguments.length) {
      case 2:
        return seq_reduce__2.call(this, f, val);
      case 3:
        return seq_reduce__3.call(this, f, val, coll);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  seq_reduce.cljs$core$IFn$_invoke$arity$2 = seq_reduce__2;
  seq_reduce.cljs$core$IFn$_invoke$arity$3 = seq_reduce__3;
  return seq_reduce;
}();
cljs.core.shuffle = function shuffle(coll) {
  var a = cljs.core.to_array.call(null, coll);
  goog.array.shuffle(a);
  return cljs.core.vec.call(null, a);
};
cljs.core.reduce = function() {
  var reduce = null;
  var reduce__2 = function(f, coll) {
    if (function() {
      var G__10851 = coll;
      if (G__10851) {
        var bit__4046__auto__ = G__10851.cljs$lang$protocol_mask$partition0$ & 524288;
        if (bit__4046__auto__ || G__10851.cljs$core$IReduce$) {
          return true;
        } else {
          return false;
        }
      } else {
        return false;
      }
    }()) {
      return cljs.core._reduce.call(null, coll, f);
    } else {
      if (coll instanceof Array) {
        return cljs.core.array_reduce.call(null, coll, f);
      } else {
        if (typeof coll === "string") {
          return cljs.core.array_reduce.call(null, coll, f);
        } else {
          if (cljs.core.native_satisfies_QMARK_.call(null, cljs.core.IReduce, coll)) {
            return cljs.core._reduce.call(null, coll, f);
          } else {
            if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
              return cljs.core.seq_reduce.call(null, f, coll);
            } else {
              return null;
            }
          }
        }
      }
    }
  };
  var reduce__3 = function(f, val, coll) {
    if (function() {
      var G__10852 = coll;
      if (G__10852) {
        var bit__4046__auto__ = G__10852.cljs$lang$protocol_mask$partition0$ & 524288;
        if (bit__4046__auto__ || G__10852.cljs$core$IReduce$) {
          return true;
        } else {
          return false;
        }
      } else {
        return false;
      }
    }()) {
      return cljs.core._reduce.call(null, coll, f, val);
    } else {
      if (coll instanceof Array) {
        return cljs.core.array_reduce.call(null, coll, f, val);
      } else {
        if (typeof coll === "string") {
          return cljs.core.array_reduce.call(null, coll, f, val);
        } else {
          if (cljs.core.native_satisfies_QMARK_.call(null, cljs.core.IReduce, coll)) {
            return cljs.core._reduce.call(null, coll, f, val);
          } else {
            if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
              return cljs.core.seq_reduce.call(null, f, val, coll);
            } else {
              return null;
            }
          }
        }
      }
    }
  };
  reduce = function(f, val, coll) {
    switch(arguments.length) {
      case 2:
        return reduce__2.call(this, f, val);
      case 3:
        return reduce__3.call(this, f, val, coll);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  reduce.cljs$core$IFn$_invoke$arity$2 = reduce__2;
  reduce.cljs$core$IFn$_invoke$arity$3 = reduce__3;
  return reduce;
}();
cljs.core.reduce_kv = function reduce_kv(f, init, coll) {
  if (!(coll == null)) {
    return cljs.core._kv_reduce.call(null, coll, f, init);
  } else {
    return init;
  }
};
cljs.core._PLUS_ = function() {
  var _PLUS_ = null;
  var _PLUS___0 = function() {
    return 0;
  };
  var _PLUS___1 = function(x) {
    return x;
  };
  var _PLUS___2 = function(x, y) {
    return x + y;
  };
  var _PLUS___3 = function() {
    var G__10853__delegate = function(x, y, more) {
      return cljs.core.reduce.call(null, _PLUS_, x + y, more);
    };
    var G__10853 = function(x, y, var_args) {
      var more = null;
      if (arguments.length > 2) {
        more = cljs.core.array_seq(Array.prototype.slice.call(arguments, 2), 0);
      }
      return G__10853__delegate.call(this, x, y, more);
    };
    G__10853.cljs$lang$maxFixedArity = 2;
    G__10853.cljs$lang$applyTo = function(arglist__10854) {
      var x = cljs.core.first(arglist__10854);
      arglist__10854 = cljs.core.next(arglist__10854);
      var y = cljs.core.first(arglist__10854);
      var more = cljs.core.rest(arglist__10854);
      return G__10853__delegate(x, y, more);
    };
    G__10853.cljs$core$IFn$_invoke$arity$variadic = G__10853__delegate;
    return G__10853;
  }();
  _PLUS_ = function(x, y, var_args) {
    var more = var_args;
    switch(arguments.length) {
      case 0:
        return _PLUS___0.call(this);
      case 1:
        return _PLUS___1.call(this, x);
      case 2:
        return _PLUS___2.call(this, x, y);
      default:
        return _PLUS___3.cljs$core$IFn$_invoke$arity$variadic(x, y, cljs.core.array_seq(arguments, 2));
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  _PLUS_.cljs$lang$maxFixedArity = 2;
  _PLUS_.cljs$lang$applyTo = _PLUS___3.cljs$lang$applyTo;
  _PLUS_.cljs$core$IFn$_invoke$arity$0 = _PLUS___0;
  _PLUS_.cljs$core$IFn$_invoke$arity$1 = _PLUS___1;
  _PLUS_.cljs$core$IFn$_invoke$arity$2 = _PLUS___2;
  _PLUS_.cljs$core$IFn$_invoke$arity$variadic = _PLUS___3.cljs$core$IFn$_invoke$arity$variadic;
  return _PLUS_;
}();
cljs.core._ = function() {
  var _ = null;
  var ___1 = function(x) {
    return-x;
  };
  var ___2 = function(x, y) {
    return x - y;
  };
  var ___3 = function() {
    var G__10855__delegate = function(x, y, more) {
      return cljs.core.reduce.call(null, _, x - y, more);
    };
    var G__10855 = function(x, y, var_args) {
      var more = null;
      if (arguments.length > 2) {
        more = cljs.core.array_seq(Array.prototype.slice.call(arguments, 2), 0);
      }
      return G__10855__delegate.call(this, x, y, more);
    };
    G__10855.cljs$lang$maxFixedArity = 2;
    G__10855.cljs$lang$applyTo = function(arglist__10856) {
      var x = cljs.core.first(arglist__10856);
      arglist__10856 = cljs.core.next(arglist__10856);
      var y = cljs.core.first(arglist__10856);
      var more = cljs.core.rest(arglist__10856);
      return G__10855__delegate(x, y, more);
    };
    G__10855.cljs$core$IFn$_invoke$arity$variadic = G__10855__delegate;
    return G__10855;
  }();
  _ = function(x, y, var_args) {
    var more = var_args;
    switch(arguments.length) {
      case 1:
        return ___1.call(this, x);
      case 2:
        return ___2.call(this, x, y);
      default:
        return ___3.cljs$core$IFn$_invoke$arity$variadic(x, y, cljs.core.array_seq(arguments, 2));
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  _.cljs$lang$maxFixedArity = 2;
  _.cljs$lang$applyTo = ___3.cljs$lang$applyTo;
  _.cljs$core$IFn$_invoke$arity$1 = ___1;
  _.cljs$core$IFn$_invoke$arity$2 = ___2;
  _.cljs$core$IFn$_invoke$arity$variadic = ___3.cljs$core$IFn$_invoke$arity$variadic;
  return _;
}();
cljs.core._STAR_ = function() {
  var _STAR_ = null;
  var _STAR___0 = function() {
    return 1;
  };
  var _STAR___1 = function(x) {
    return x;
  };
  var _STAR___2 = function(x, y) {
    return x * y;
  };
  var _STAR___3 = function() {
    var G__10857__delegate = function(x, y, more) {
      return cljs.core.reduce.call(null, _STAR_, x * y, more);
    };
    var G__10857 = function(x, y, var_args) {
      var more = null;
      if (arguments.length > 2) {
        more = cljs.core.array_seq(Array.prototype.slice.call(arguments, 2), 0);
      }
      return G__10857__delegate.call(this, x, y, more);
    };
    G__10857.cljs$lang$maxFixedArity = 2;
    G__10857.cljs$lang$applyTo = function(arglist__10858) {
      var x = cljs.core.first(arglist__10858);
      arglist__10858 = cljs.core.next(arglist__10858);
      var y = cljs.core.first(arglist__10858);
      var more = cljs.core.rest(arglist__10858);
      return G__10857__delegate(x, y, more);
    };
    G__10857.cljs$core$IFn$_invoke$arity$variadic = G__10857__delegate;
    return G__10857;
  }();
  _STAR_ = function(x, y, var_args) {
    var more = var_args;
    switch(arguments.length) {
      case 0:
        return _STAR___0.call(this);
      case 1:
        return _STAR___1.call(this, x);
      case 2:
        return _STAR___2.call(this, x, y);
      default:
        return _STAR___3.cljs$core$IFn$_invoke$arity$variadic(x, y, cljs.core.array_seq(arguments, 2));
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  _STAR_.cljs$lang$maxFixedArity = 2;
  _STAR_.cljs$lang$applyTo = _STAR___3.cljs$lang$applyTo;
  _STAR_.cljs$core$IFn$_invoke$arity$0 = _STAR___0;
  _STAR_.cljs$core$IFn$_invoke$arity$1 = _STAR___1;
  _STAR_.cljs$core$IFn$_invoke$arity$2 = _STAR___2;
  _STAR_.cljs$core$IFn$_invoke$arity$variadic = _STAR___3.cljs$core$IFn$_invoke$arity$variadic;
  return _STAR_;
}();
cljs.core._SLASH_ = function() {
  var _SLASH_ = null;
  var _SLASH___1 = function(x) {
    return _SLASH_.call(null, 1, x);
  };
  var _SLASH___2 = function(x, y) {
    return x / y;
  };
  var _SLASH___3 = function() {
    var G__10859__delegate = function(x, y, more) {
      return cljs.core.reduce.call(null, _SLASH_, _SLASH_.call(null, x, y), more);
    };
    var G__10859 = function(x, y, var_args) {
      var more = null;
      if (arguments.length > 2) {
        more = cljs.core.array_seq(Array.prototype.slice.call(arguments, 2), 0);
      }
      return G__10859__delegate.call(this, x, y, more);
    };
    G__10859.cljs$lang$maxFixedArity = 2;
    G__10859.cljs$lang$applyTo = function(arglist__10860) {
      var x = cljs.core.first(arglist__10860);
      arglist__10860 = cljs.core.next(arglist__10860);
      var y = cljs.core.first(arglist__10860);
      var more = cljs.core.rest(arglist__10860);
      return G__10859__delegate(x, y, more);
    };
    G__10859.cljs$core$IFn$_invoke$arity$variadic = G__10859__delegate;
    return G__10859;
  }();
  _SLASH_ = function(x, y, var_args) {
    var more = var_args;
    switch(arguments.length) {
      case 1:
        return _SLASH___1.call(this, x);
      case 2:
        return _SLASH___2.call(this, x, y);
      default:
        return _SLASH___3.cljs$core$IFn$_invoke$arity$variadic(x, y, cljs.core.array_seq(arguments, 2));
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  _SLASH_.cljs$lang$maxFixedArity = 2;
  _SLASH_.cljs$lang$applyTo = _SLASH___3.cljs$lang$applyTo;
  _SLASH_.cljs$core$IFn$_invoke$arity$1 = _SLASH___1;
  _SLASH_.cljs$core$IFn$_invoke$arity$2 = _SLASH___2;
  _SLASH_.cljs$core$IFn$_invoke$arity$variadic = _SLASH___3.cljs$core$IFn$_invoke$arity$variadic;
  return _SLASH_;
}();
cljs.core._LT_ = function() {
  var _LT_ = null;
  var _LT___1 = function(x) {
    return true;
  };
  var _LT___2 = function(x, y) {
    return x < y;
  };
  var _LT___3 = function() {
    var G__10861__delegate = function(x, y, more) {
      while (true) {
        if (x < y) {
          if (cljs.core.next.call(null, more)) {
            var G__10862 = y;
            var G__10863 = cljs.core.first.call(null, more);
            var G__10864 = cljs.core.next.call(null, more);
            x = G__10862;
            y = G__10863;
            more = G__10864;
            continue;
          } else {
            return y < cljs.core.first.call(null, more);
          }
        } else {
          return false;
        }
        break;
      }
    };
    var G__10861 = function(x, y, var_args) {
      var more = null;
      if (arguments.length > 2) {
        more = cljs.core.array_seq(Array.prototype.slice.call(arguments, 2), 0);
      }
      return G__10861__delegate.call(this, x, y, more);
    };
    G__10861.cljs$lang$maxFixedArity = 2;
    G__10861.cljs$lang$applyTo = function(arglist__10865) {
      var x = cljs.core.first(arglist__10865);
      arglist__10865 = cljs.core.next(arglist__10865);
      var y = cljs.core.first(arglist__10865);
      var more = cljs.core.rest(arglist__10865);
      return G__10861__delegate(x, y, more);
    };
    G__10861.cljs$core$IFn$_invoke$arity$variadic = G__10861__delegate;
    return G__10861;
  }();
  _LT_ = function(x, y, var_args) {
    var more = var_args;
    switch(arguments.length) {
      case 1:
        return _LT___1.call(this, x);
      case 2:
        return _LT___2.call(this, x, y);
      default:
        return _LT___3.cljs$core$IFn$_invoke$arity$variadic(x, y, cljs.core.array_seq(arguments, 2));
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  _LT_.cljs$lang$maxFixedArity = 2;
  _LT_.cljs$lang$applyTo = _LT___3.cljs$lang$applyTo;
  _LT_.cljs$core$IFn$_invoke$arity$1 = _LT___1;
  _LT_.cljs$core$IFn$_invoke$arity$2 = _LT___2;
  _LT_.cljs$core$IFn$_invoke$arity$variadic = _LT___3.cljs$core$IFn$_invoke$arity$variadic;
  return _LT_;
}();
cljs.core._LT__EQ_ = function() {
  var _LT__EQ_ = null;
  var _LT__EQ___1 = function(x) {
    return true;
  };
  var _LT__EQ___2 = function(x, y) {
    return x <= y;
  };
  var _LT__EQ___3 = function() {
    var G__10866__delegate = function(x, y, more) {
      while (true) {
        if (x <= y) {
          if (cljs.core.next.call(null, more)) {
            var G__10867 = y;
            var G__10868 = cljs.core.first.call(null, more);
            var G__10869 = cljs.core.next.call(null, more);
            x = G__10867;
            y = G__10868;
            more = G__10869;
            continue;
          } else {
            return y <= cljs.core.first.call(null, more);
          }
        } else {
          return false;
        }
        break;
      }
    };
    var G__10866 = function(x, y, var_args) {
      var more = null;
      if (arguments.length > 2) {
        more = cljs.core.array_seq(Array.prototype.slice.call(arguments, 2), 0);
      }
      return G__10866__delegate.call(this, x, y, more);
    };
    G__10866.cljs$lang$maxFixedArity = 2;
    G__10866.cljs$lang$applyTo = function(arglist__10870) {
      var x = cljs.core.first(arglist__10870);
      arglist__10870 = cljs.core.next(arglist__10870);
      var y = cljs.core.first(arglist__10870);
      var more = cljs.core.rest(arglist__10870);
      return G__10866__delegate(x, y, more);
    };
    G__10866.cljs$core$IFn$_invoke$arity$variadic = G__10866__delegate;
    return G__10866;
  }();
  _LT__EQ_ = function(x, y, var_args) {
    var more = var_args;
    switch(arguments.length) {
      case 1:
        return _LT__EQ___1.call(this, x);
      case 2:
        return _LT__EQ___2.call(this, x, y);
      default:
        return _LT__EQ___3.cljs$core$IFn$_invoke$arity$variadic(x, y, cljs.core.array_seq(arguments, 2));
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  _LT__EQ_.cljs$lang$maxFixedArity = 2;
  _LT__EQ_.cljs$lang$applyTo = _LT__EQ___3.cljs$lang$applyTo;
  _LT__EQ_.cljs$core$IFn$_invoke$arity$1 = _LT__EQ___1;
  _LT__EQ_.cljs$core$IFn$_invoke$arity$2 = _LT__EQ___2;
  _LT__EQ_.cljs$core$IFn$_invoke$arity$variadic = _LT__EQ___3.cljs$core$IFn$_invoke$arity$variadic;
  return _LT__EQ_;
}();
cljs.core._GT_ = function() {
  var _GT_ = null;
  var _GT___1 = function(x) {
    return true;
  };
  var _GT___2 = function(x, y) {
    return x > y;
  };
  var _GT___3 = function() {
    var G__10871__delegate = function(x, y, more) {
      while (true) {
        if (x > y) {
          if (cljs.core.next.call(null, more)) {
            var G__10872 = y;
            var G__10873 = cljs.core.first.call(null, more);
            var G__10874 = cljs.core.next.call(null, more);
            x = G__10872;
            y = G__10873;
            more = G__10874;
            continue;
          } else {
            return y > cljs.core.first.call(null, more);
          }
        } else {
          return false;
        }
        break;
      }
    };
    var G__10871 = function(x, y, var_args) {
      var more = null;
      if (arguments.length > 2) {
        more = cljs.core.array_seq(Array.prototype.slice.call(arguments, 2), 0);
      }
      return G__10871__delegate.call(this, x, y, more);
    };
    G__10871.cljs$lang$maxFixedArity = 2;
    G__10871.cljs$lang$applyTo = function(arglist__10875) {
      var x = cljs.core.first(arglist__10875);
      arglist__10875 = cljs.core.next(arglist__10875);
      var y = cljs.core.first(arglist__10875);
      var more = cljs.core.rest(arglist__10875);
      return G__10871__delegate(x, y, more);
    };
    G__10871.cljs$core$IFn$_invoke$arity$variadic = G__10871__delegate;
    return G__10871;
  }();
  _GT_ = function(x, y, var_args) {
    var more = var_args;
    switch(arguments.length) {
      case 1:
        return _GT___1.call(this, x);
      case 2:
        return _GT___2.call(this, x, y);
      default:
        return _GT___3.cljs$core$IFn$_invoke$arity$variadic(x, y, cljs.core.array_seq(arguments, 2));
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  _GT_.cljs$lang$maxFixedArity = 2;
  _GT_.cljs$lang$applyTo = _GT___3.cljs$lang$applyTo;
  _GT_.cljs$core$IFn$_invoke$arity$1 = _GT___1;
  _GT_.cljs$core$IFn$_invoke$arity$2 = _GT___2;
  _GT_.cljs$core$IFn$_invoke$arity$variadic = _GT___3.cljs$core$IFn$_invoke$arity$variadic;
  return _GT_;
}();
cljs.core._GT__EQ_ = function() {
  var _GT__EQ_ = null;
  var _GT__EQ___1 = function(x) {
    return true;
  };
  var _GT__EQ___2 = function(x, y) {
    return x >= y;
  };
  var _GT__EQ___3 = function() {
    var G__10876__delegate = function(x, y, more) {
      while (true) {
        if (x >= y) {
          if (cljs.core.next.call(null, more)) {
            var G__10877 = y;
            var G__10878 = cljs.core.first.call(null, more);
            var G__10879 = cljs.core.next.call(null, more);
            x = G__10877;
            y = G__10878;
            more = G__10879;
            continue;
          } else {
            return y >= cljs.core.first.call(null, more);
          }
        } else {
          return false;
        }
        break;
      }
    };
    var G__10876 = function(x, y, var_args) {
      var more = null;
      if (arguments.length > 2) {
        more = cljs.core.array_seq(Array.prototype.slice.call(arguments, 2), 0);
      }
      return G__10876__delegate.call(this, x, y, more);
    };
    G__10876.cljs$lang$maxFixedArity = 2;
    G__10876.cljs$lang$applyTo = function(arglist__10880) {
      var x = cljs.core.first(arglist__10880);
      arglist__10880 = cljs.core.next(arglist__10880);
      var y = cljs.core.first(arglist__10880);
      var more = cljs.core.rest(arglist__10880);
      return G__10876__delegate(x, y, more);
    };
    G__10876.cljs$core$IFn$_invoke$arity$variadic = G__10876__delegate;
    return G__10876;
  }();
  _GT__EQ_ = function(x, y, var_args) {
    var more = var_args;
    switch(arguments.length) {
      case 1:
        return _GT__EQ___1.call(this, x);
      case 2:
        return _GT__EQ___2.call(this, x, y);
      default:
        return _GT__EQ___3.cljs$core$IFn$_invoke$arity$variadic(x, y, cljs.core.array_seq(arguments, 2));
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  _GT__EQ_.cljs$lang$maxFixedArity = 2;
  _GT__EQ_.cljs$lang$applyTo = _GT__EQ___3.cljs$lang$applyTo;
  _GT__EQ_.cljs$core$IFn$_invoke$arity$1 = _GT__EQ___1;
  _GT__EQ_.cljs$core$IFn$_invoke$arity$2 = _GT__EQ___2;
  _GT__EQ_.cljs$core$IFn$_invoke$arity$variadic = _GT__EQ___3.cljs$core$IFn$_invoke$arity$variadic;
  return _GT__EQ_;
}();
cljs.core.dec = function dec(x) {
  return x - 1;
};
cljs.core.max = function() {
  var max = null;
  var max__1 = function(x) {
    return x;
  };
  var max__2 = function(x, y) {
    var x__3710__auto__ = x;
    var y__3711__auto__ = y;
    return x__3710__auto__ > y__3711__auto__ ? x__3710__auto__ : y__3711__auto__;
  };
  var max__3 = function() {
    var G__10881__delegate = function(x, y, more) {
      return cljs.core.reduce.call(null, max, function() {
        var x__3710__auto__ = x;
        var y__3711__auto__ = y;
        return x__3710__auto__ > y__3711__auto__ ? x__3710__auto__ : y__3711__auto__;
      }(), more);
    };
    var G__10881 = function(x, y, var_args) {
      var more = null;
      if (arguments.length > 2) {
        more = cljs.core.array_seq(Array.prototype.slice.call(arguments, 2), 0);
      }
      return G__10881__delegate.call(this, x, y, more);
    };
    G__10881.cljs$lang$maxFixedArity = 2;
    G__10881.cljs$lang$applyTo = function(arglist__10882) {
      var x = cljs.core.first(arglist__10882);
      arglist__10882 = cljs.core.next(arglist__10882);
      var y = cljs.core.first(arglist__10882);
      var more = cljs.core.rest(arglist__10882);
      return G__10881__delegate(x, y, more);
    };
    G__10881.cljs$core$IFn$_invoke$arity$variadic = G__10881__delegate;
    return G__10881;
  }();
  max = function(x, y, var_args) {
    var more = var_args;
    switch(arguments.length) {
      case 1:
        return max__1.call(this, x);
      case 2:
        return max__2.call(this, x, y);
      default:
        return max__3.cljs$core$IFn$_invoke$arity$variadic(x, y, cljs.core.array_seq(arguments, 2));
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  max.cljs$lang$maxFixedArity = 2;
  max.cljs$lang$applyTo = max__3.cljs$lang$applyTo;
  max.cljs$core$IFn$_invoke$arity$1 = max__1;
  max.cljs$core$IFn$_invoke$arity$2 = max__2;
  max.cljs$core$IFn$_invoke$arity$variadic = max__3.cljs$core$IFn$_invoke$arity$variadic;
  return max;
}();
cljs.core.min = function() {
  var min = null;
  var min__1 = function(x) {
    return x;
  };
  var min__2 = function(x, y) {
    var x__3717__auto__ = x;
    var y__3718__auto__ = y;
    return x__3717__auto__ < y__3718__auto__ ? x__3717__auto__ : y__3718__auto__;
  };
  var min__3 = function() {
    var G__10883__delegate = function(x, y, more) {
      return cljs.core.reduce.call(null, min, function() {
        var x__3717__auto__ = x;
        var y__3718__auto__ = y;
        return x__3717__auto__ < y__3718__auto__ ? x__3717__auto__ : y__3718__auto__;
      }(), more);
    };
    var G__10883 = function(x, y, var_args) {
      var more = null;
      if (arguments.length > 2) {
        more = cljs.core.array_seq(Array.prototype.slice.call(arguments, 2), 0);
      }
      return G__10883__delegate.call(this, x, y, more);
    };
    G__10883.cljs$lang$maxFixedArity = 2;
    G__10883.cljs$lang$applyTo = function(arglist__10884) {
      var x = cljs.core.first(arglist__10884);
      arglist__10884 = cljs.core.next(arglist__10884);
      var y = cljs.core.first(arglist__10884);
      var more = cljs.core.rest(arglist__10884);
      return G__10883__delegate(x, y, more);
    };
    G__10883.cljs$core$IFn$_invoke$arity$variadic = G__10883__delegate;
    return G__10883;
  }();
  min = function(x, y, var_args) {
    var more = var_args;
    switch(arguments.length) {
      case 1:
        return min__1.call(this, x);
      case 2:
        return min__2.call(this, x, y);
      default:
        return min__3.cljs$core$IFn$_invoke$arity$variadic(x, y, cljs.core.array_seq(arguments, 2));
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  min.cljs$lang$maxFixedArity = 2;
  min.cljs$lang$applyTo = min__3.cljs$lang$applyTo;
  min.cljs$core$IFn$_invoke$arity$1 = min__1;
  min.cljs$core$IFn$_invoke$arity$2 = min__2;
  min.cljs$core$IFn$_invoke$arity$variadic = min__3.cljs$core$IFn$_invoke$arity$variadic;
  return min;
}();
cljs.core.byte$ = function byte$(x) {
  return x;
};
cljs.core.char$ = function char$(x) {
  if (typeof x === "number") {
    return String.fromCharCode(x);
  } else {
    if (typeof x === "string" && x.length === 1) {
      return x;
    } else {
      if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
        throw new Error("Argument to char must be a character or number");
      } else {
        return null;
      }
    }
  }
};
cljs.core.short$ = function short$(x) {
  return x;
};
cljs.core.float$ = function float$(x) {
  return x;
};
cljs.core.double$ = function double$(x) {
  return x;
};
cljs.core.unchecked_byte = function unchecked_byte(x) {
  return x;
};
cljs.core.unchecked_char = function unchecked_char(x) {
  return x;
};
cljs.core.unchecked_short = function unchecked_short(x) {
  return x;
};
cljs.core.unchecked_float = function unchecked_float(x) {
  return x;
};
cljs.core.unchecked_double = function unchecked_double(x) {
  return x;
};
cljs.core.unchecked_add = function() {
  var unchecked_add = null;
  var unchecked_add__0 = function() {
    return 0;
  };
  var unchecked_add__1 = function(x) {
    return x;
  };
  var unchecked_add__2 = function(x, y) {
    return x + y;
  };
  var unchecked_add__3 = function() {
    var G__10885__delegate = function(x, y, more) {
      return cljs.core.reduce.call(null, unchecked_add, x + y, more);
    };
    var G__10885 = function(x, y, var_args) {
      var more = null;
      if (arguments.length > 2) {
        more = cljs.core.array_seq(Array.prototype.slice.call(arguments, 2), 0);
      }
      return G__10885__delegate.call(this, x, y, more);
    };
    G__10885.cljs$lang$maxFixedArity = 2;
    G__10885.cljs$lang$applyTo = function(arglist__10886) {
      var x = cljs.core.first(arglist__10886);
      arglist__10886 = cljs.core.next(arglist__10886);
      var y = cljs.core.first(arglist__10886);
      var more = cljs.core.rest(arglist__10886);
      return G__10885__delegate(x, y, more);
    };
    G__10885.cljs$core$IFn$_invoke$arity$variadic = G__10885__delegate;
    return G__10885;
  }();
  unchecked_add = function(x, y, var_args) {
    var more = var_args;
    switch(arguments.length) {
      case 0:
        return unchecked_add__0.call(this);
      case 1:
        return unchecked_add__1.call(this, x);
      case 2:
        return unchecked_add__2.call(this, x, y);
      default:
        return unchecked_add__3.cljs$core$IFn$_invoke$arity$variadic(x, y, cljs.core.array_seq(arguments, 2));
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  unchecked_add.cljs$lang$maxFixedArity = 2;
  unchecked_add.cljs$lang$applyTo = unchecked_add__3.cljs$lang$applyTo;
  unchecked_add.cljs$core$IFn$_invoke$arity$0 = unchecked_add__0;
  unchecked_add.cljs$core$IFn$_invoke$arity$1 = unchecked_add__1;
  unchecked_add.cljs$core$IFn$_invoke$arity$2 = unchecked_add__2;
  unchecked_add.cljs$core$IFn$_invoke$arity$variadic = unchecked_add__3.cljs$core$IFn$_invoke$arity$variadic;
  return unchecked_add;
}();
cljs.core.unchecked_add_int = function() {
  var unchecked_add_int = null;
  var unchecked_add_int__0 = function() {
    return 0;
  };
  var unchecked_add_int__1 = function(x) {
    return x;
  };
  var unchecked_add_int__2 = function(x, y) {
    return x + y;
  };
  var unchecked_add_int__3 = function() {
    var G__10887__delegate = function(x, y, more) {
      return cljs.core.reduce.call(null, unchecked_add_int, x + y, more);
    };
    var G__10887 = function(x, y, var_args) {
      var more = null;
      if (arguments.length > 2) {
        more = cljs.core.array_seq(Array.prototype.slice.call(arguments, 2), 0);
      }
      return G__10887__delegate.call(this, x, y, more);
    };
    G__10887.cljs$lang$maxFixedArity = 2;
    G__10887.cljs$lang$applyTo = function(arglist__10888) {
      var x = cljs.core.first(arglist__10888);
      arglist__10888 = cljs.core.next(arglist__10888);
      var y = cljs.core.first(arglist__10888);
      var more = cljs.core.rest(arglist__10888);
      return G__10887__delegate(x, y, more);
    };
    G__10887.cljs$core$IFn$_invoke$arity$variadic = G__10887__delegate;
    return G__10887;
  }();
  unchecked_add_int = function(x, y, var_args) {
    var more = var_args;
    switch(arguments.length) {
      case 0:
        return unchecked_add_int__0.call(this);
      case 1:
        return unchecked_add_int__1.call(this, x);
      case 2:
        return unchecked_add_int__2.call(this, x, y);
      default:
        return unchecked_add_int__3.cljs$core$IFn$_invoke$arity$variadic(x, y, cljs.core.array_seq(arguments, 2));
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  unchecked_add_int.cljs$lang$maxFixedArity = 2;
  unchecked_add_int.cljs$lang$applyTo = unchecked_add_int__3.cljs$lang$applyTo;
  unchecked_add_int.cljs$core$IFn$_invoke$arity$0 = unchecked_add_int__0;
  unchecked_add_int.cljs$core$IFn$_invoke$arity$1 = unchecked_add_int__1;
  unchecked_add_int.cljs$core$IFn$_invoke$arity$2 = unchecked_add_int__2;
  unchecked_add_int.cljs$core$IFn$_invoke$arity$variadic = unchecked_add_int__3.cljs$core$IFn$_invoke$arity$variadic;
  return unchecked_add_int;
}();
cljs.core.unchecked_dec = function unchecked_dec(x) {
  return x - 1;
};
cljs.core.unchecked_dec_int = function unchecked_dec_int(x) {
  return x - 1;
};
cljs.core.unchecked_divide_int = function() {
  var unchecked_divide_int = null;
  var unchecked_divide_int__1 = function(x) {
    return unchecked_divide_int.call(null, 1, x);
  };
  var unchecked_divide_int__2 = function(x, y) {
    return x / y;
  };
  var unchecked_divide_int__3 = function() {
    var G__10889__delegate = function(x, y, more) {
      return cljs.core.reduce.call(null, unchecked_divide_int, unchecked_divide_int.call(null, x, y), more);
    };
    var G__10889 = function(x, y, var_args) {
      var more = null;
      if (arguments.length > 2) {
        more = cljs.core.array_seq(Array.prototype.slice.call(arguments, 2), 0);
      }
      return G__10889__delegate.call(this, x, y, more);
    };
    G__10889.cljs$lang$maxFixedArity = 2;
    G__10889.cljs$lang$applyTo = function(arglist__10890) {
      var x = cljs.core.first(arglist__10890);
      arglist__10890 = cljs.core.next(arglist__10890);
      var y = cljs.core.first(arglist__10890);
      var more = cljs.core.rest(arglist__10890);
      return G__10889__delegate(x, y, more);
    };
    G__10889.cljs$core$IFn$_invoke$arity$variadic = G__10889__delegate;
    return G__10889;
  }();
  unchecked_divide_int = function(x, y, var_args) {
    var more = var_args;
    switch(arguments.length) {
      case 1:
        return unchecked_divide_int__1.call(this, x);
      case 2:
        return unchecked_divide_int__2.call(this, x, y);
      default:
        return unchecked_divide_int__3.cljs$core$IFn$_invoke$arity$variadic(x, y, cljs.core.array_seq(arguments, 2));
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  unchecked_divide_int.cljs$lang$maxFixedArity = 2;
  unchecked_divide_int.cljs$lang$applyTo = unchecked_divide_int__3.cljs$lang$applyTo;
  unchecked_divide_int.cljs$core$IFn$_invoke$arity$1 = unchecked_divide_int__1;
  unchecked_divide_int.cljs$core$IFn$_invoke$arity$2 = unchecked_divide_int__2;
  unchecked_divide_int.cljs$core$IFn$_invoke$arity$variadic = unchecked_divide_int__3.cljs$core$IFn$_invoke$arity$variadic;
  return unchecked_divide_int;
}();
cljs.core.unchecked_inc = function unchecked_inc(x) {
  return x + 1;
};
cljs.core.unchecked_inc_int = function unchecked_inc_int(x) {
  return x + 1;
};
cljs.core.unchecked_multiply = function() {
  var unchecked_multiply = null;
  var unchecked_multiply__0 = function() {
    return 1;
  };
  var unchecked_multiply__1 = function(x) {
    return x;
  };
  var unchecked_multiply__2 = function(x, y) {
    return x * y;
  };
  var unchecked_multiply__3 = function() {
    var G__10891__delegate = function(x, y, more) {
      return cljs.core.reduce.call(null, unchecked_multiply, x * y, more);
    };
    var G__10891 = function(x, y, var_args) {
      var more = null;
      if (arguments.length > 2) {
        more = cljs.core.array_seq(Array.prototype.slice.call(arguments, 2), 0);
      }
      return G__10891__delegate.call(this, x, y, more);
    };
    G__10891.cljs$lang$maxFixedArity = 2;
    G__10891.cljs$lang$applyTo = function(arglist__10892) {
      var x = cljs.core.first(arglist__10892);
      arglist__10892 = cljs.core.next(arglist__10892);
      var y = cljs.core.first(arglist__10892);
      var more = cljs.core.rest(arglist__10892);
      return G__10891__delegate(x, y, more);
    };
    G__10891.cljs$core$IFn$_invoke$arity$variadic = G__10891__delegate;
    return G__10891;
  }();
  unchecked_multiply = function(x, y, var_args) {
    var more = var_args;
    switch(arguments.length) {
      case 0:
        return unchecked_multiply__0.call(this);
      case 1:
        return unchecked_multiply__1.call(this, x);
      case 2:
        return unchecked_multiply__2.call(this, x, y);
      default:
        return unchecked_multiply__3.cljs$core$IFn$_invoke$arity$variadic(x, y, cljs.core.array_seq(arguments, 2));
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  unchecked_multiply.cljs$lang$maxFixedArity = 2;
  unchecked_multiply.cljs$lang$applyTo = unchecked_multiply__3.cljs$lang$applyTo;
  unchecked_multiply.cljs$core$IFn$_invoke$arity$0 = unchecked_multiply__0;
  unchecked_multiply.cljs$core$IFn$_invoke$arity$1 = unchecked_multiply__1;
  unchecked_multiply.cljs$core$IFn$_invoke$arity$2 = unchecked_multiply__2;
  unchecked_multiply.cljs$core$IFn$_invoke$arity$variadic = unchecked_multiply__3.cljs$core$IFn$_invoke$arity$variadic;
  return unchecked_multiply;
}();
cljs.core.unchecked_multiply_int = function() {
  var unchecked_multiply_int = null;
  var unchecked_multiply_int__0 = function() {
    return 1;
  };
  var unchecked_multiply_int__1 = function(x) {
    return x;
  };
  var unchecked_multiply_int__2 = function(x, y) {
    return x * y;
  };
  var unchecked_multiply_int__3 = function() {
    var G__10893__delegate = function(x, y, more) {
      return cljs.core.reduce.call(null, unchecked_multiply_int, x * y, more);
    };
    var G__10893 = function(x, y, var_args) {
      var more = null;
      if (arguments.length > 2) {
        more = cljs.core.array_seq(Array.prototype.slice.call(arguments, 2), 0);
      }
      return G__10893__delegate.call(this, x, y, more);
    };
    G__10893.cljs$lang$maxFixedArity = 2;
    G__10893.cljs$lang$applyTo = function(arglist__10894) {
      var x = cljs.core.first(arglist__10894);
      arglist__10894 = cljs.core.next(arglist__10894);
      var y = cljs.core.first(arglist__10894);
      var more = cljs.core.rest(arglist__10894);
      return G__10893__delegate(x, y, more);
    };
    G__10893.cljs$core$IFn$_invoke$arity$variadic = G__10893__delegate;
    return G__10893;
  }();
  unchecked_multiply_int = function(x, y, var_args) {
    var more = var_args;
    switch(arguments.length) {
      case 0:
        return unchecked_multiply_int__0.call(this);
      case 1:
        return unchecked_multiply_int__1.call(this, x);
      case 2:
        return unchecked_multiply_int__2.call(this, x, y);
      default:
        return unchecked_multiply_int__3.cljs$core$IFn$_invoke$arity$variadic(x, y, cljs.core.array_seq(arguments, 2));
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  unchecked_multiply_int.cljs$lang$maxFixedArity = 2;
  unchecked_multiply_int.cljs$lang$applyTo = unchecked_multiply_int__3.cljs$lang$applyTo;
  unchecked_multiply_int.cljs$core$IFn$_invoke$arity$0 = unchecked_multiply_int__0;
  unchecked_multiply_int.cljs$core$IFn$_invoke$arity$1 = unchecked_multiply_int__1;
  unchecked_multiply_int.cljs$core$IFn$_invoke$arity$2 = unchecked_multiply_int__2;
  unchecked_multiply_int.cljs$core$IFn$_invoke$arity$variadic = unchecked_multiply_int__3.cljs$core$IFn$_invoke$arity$variadic;
  return unchecked_multiply_int;
}();
cljs.core.unchecked_negate = function unchecked_negate(x) {
  return-x;
};
cljs.core.unchecked_negate_int = function unchecked_negate_int(x) {
  return-x;
};
cljs.core.unchecked_remainder_int = function unchecked_remainder_int(x, n) {
  return cljs.core.mod.call(null, x, n);
};
cljs.core.unchecked_substract = function() {
  var unchecked_substract = null;
  var unchecked_substract__1 = function(x) {
    return-x;
  };
  var unchecked_substract__2 = function(x, y) {
    return x - y;
  };
  var unchecked_substract__3 = function() {
    var G__10895__delegate = function(x, y, more) {
      return cljs.core.reduce.call(null, unchecked_substract, x - y, more);
    };
    var G__10895 = function(x, y, var_args) {
      var more = null;
      if (arguments.length > 2) {
        more = cljs.core.array_seq(Array.prototype.slice.call(arguments, 2), 0);
      }
      return G__10895__delegate.call(this, x, y, more);
    };
    G__10895.cljs$lang$maxFixedArity = 2;
    G__10895.cljs$lang$applyTo = function(arglist__10896) {
      var x = cljs.core.first(arglist__10896);
      arglist__10896 = cljs.core.next(arglist__10896);
      var y = cljs.core.first(arglist__10896);
      var more = cljs.core.rest(arglist__10896);
      return G__10895__delegate(x, y, more);
    };
    G__10895.cljs$core$IFn$_invoke$arity$variadic = G__10895__delegate;
    return G__10895;
  }();
  unchecked_substract = function(x, y, var_args) {
    var more = var_args;
    switch(arguments.length) {
      case 1:
        return unchecked_substract__1.call(this, x);
      case 2:
        return unchecked_substract__2.call(this, x, y);
      default:
        return unchecked_substract__3.cljs$core$IFn$_invoke$arity$variadic(x, y, cljs.core.array_seq(arguments, 2));
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  unchecked_substract.cljs$lang$maxFixedArity = 2;
  unchecked_substract.cljs$lang$applyTo = unchecked_substract__3.cljs$lang$applyTo;
  unchecked_substract.cljs$core$IFn$_invoke$arity$1 = unchecked_substract__1;
  unchecked_substract.cljs$core$IFn$_invoke$arity$2 = unchecked_substract__2;
  unchecked_substract.cljs$core$IFn$_invoke$arity$variadic = unchecked_substract__3.cljs$core$IFn$_invoke$arity$variadic;
  return unchecked_substract;
}();
cljs.core.unchecked_substract_int = function() {
  var unchecked_substract_int = null;
  var unchecked_substract_int__1 = function(x) {
    return-x;
  };
  var unchecked_substract_int__2 = function(x, y) {
    return x - y;
  };
  var unchecked_substract_int__3 = function() {
    var G__10897__delegate = function(x, y, more) {
      return cljs.core.reduce.call(null, unchecked_substract_int, x - y, more);
    };
    var G__10897 = function(x, y, var_args) {
      var more = null;
      if (arguments.length > 2) {
        more = cljs.core.array_seq(Array.prototype.slice.call(arguments, 2), 0);
      }
      return G__10897__delegate.call(this, x, y, more);
    };
    G__10897.cljs$lang$maxFixedArity = 2;
    G__10897.cljs$lang$applyTo = function(arglist__10898) {
      var x = cljs.core.first(arglist__10898);
      arglist__10898 = cljs.core.next(arglist__10898);
      var y = cljs.core.first(arglist__10898);
      var more = cljs.core.rest(arglist__10898);
      return G__10897__delegate(x, y, more);
    };
    G__10897.cljs$core$IFn$_invoke$arity$variadic = G__10897__delegate;
    return G__10897;
  }();
  unchecked_substract_int = function(x, y, var_args) {
    var more = var_args;
    switch(arguments.length) {
      case 1:
        return unchecked_substract_int__1.call(this, x);
      case 2:
        return unchecked_substract_int__2.call(this, x, y);
      default:
        return unchecked_substract_int__3.cljs$core$IFn$_invoke$arity$variadic(x, y, cljs.core.array_seq(arguments, 2));
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  unchecked_substract_int.cljs$lang$maxFixedArity = 2;
  unchecked_substract_int.cljs$lang$applyTo = unchecked_substract_int__3.cljs$lang$applyTo;
  unchecked_substract_int.cljs$core$IFn$_invoke$arity$1 = unchecked_substract_int__1;
  unchecked_substract_int.cljs$core$IFn$_invoke$arity$2 = unchecked_substract_int__2;
  unchecked_substract_int.cljs$core$IFn$_invoke$arity$variadic = unchecked_substract_int__3.cljs$core$IFn$_invoke$arity$variadic;
  return unchecked_substract_int;
}();
cljs.core.fix = function fix(q) {
  if (q >= 0) {
    return Math.floor.call(null, q);
  } else {
    return Math.ceil.call(null, q);
  }
};
cljs.core.int$ = function int$(x) {
  return x | 0;
};
cljs.core.unchecked_int = function unchecked_int(x) {
  return cljs.core.fix.call(null, x);
};
cljs.core.long$ = function long$(x) {
  return cljs.core.fix.call(null, x);
};
cljs.core.unchecked_long = function unchecked_long(x) {
  return cljs.core.fix.call(null, x);
};
cljs.core.booleans = function booleans(x) {
  return x;
};
cljs.core.bytes = function bytes(x) {
  return x;
};
cljs.core.chars = function chars(x) {
  return x;
};
cljs.core.shorts = function shorts(x) {
  return x;
};
cljs.core.ints = function ints(x) {
  return x;
};
cljs.core.floats = function floats(x) {
  return x;
};
cljs.core.doubles = function doubles(x) {
  return x;
};
cljs.core.longs = function longs(x) {
  return x;
};
cljs.core.js_mod = function js_mod(n, d) {
  return n % d;
};
cljs.core.mod = function mod(n, d) {
  return(n % d + d) % d;
};
cljs.core.quot = function quot(n, d) {
  var rem = n % d;
  return cljs.core.fix.call(null, (n - rem) / d);
};
cljs.core.rem = function rem(n, d) {
  var q = cljs.core.quot.call(null, n, d);
  return n - d * q;
};
cljs.core.rand = function() {
  var rand = null;
  var rand__0 = function() {
    return Math.random.call(null);
  };
  var rand__1 = function(n) {
    return n * rand.call(null);
  };
  rand = function(n) {
    switch(arguments.length) {
      case 0:
        return rand__0.call(this);
      case 1:
        return rand__1.call(this, n);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  rand.cljs$core$IFn$_invoke$arity$0 = rand__0;
  rand.cljs$core$IFn$_invoke$arity$1 = rand__1;
  return rand;
}();
cljs.core.rand_int = function rand_int(n) {
  return cljs.core.fix.call(null, cljs.core.rand.call(null, n));
};
cljs.core.bit_xor = function bit_xor(x, y) {
  return x ^ y;
};
cljs.core.bit_and = function bit_and(x, y) {
  return x & y;
};
cljs.core.bit_or = function bit_or(x, y) {
  return x | y;
};
cljs.core.bit_and_not = function bit_and_not(x, y) {
  return x & ~y;
};
cljs.core.bit_clear = function bit_clear(x, n) {
  return x & ~(1 << n);
};
cljs.core.bit_flip = function bit_flip(x, n) {
  return x ^ 1 << n;
};
cljs.core.bit_not = function bit_not(x) {
  return~x;
};
cljs.core.bit_set = function bit_set(x, n) {
  return x | 1 << n;
};
cljs.core.bit_test = function bit_test(x, n) {
  return(x & 1 << n) != 0;
};
cljs.core.bit_shift_left = function bit_shift_left(x, n) {
  return x << n;
};
cljs.core.bit_shift_right = function bit_shift_right(x, n) {
  return x >> n;
};
cljs.core.bit_shift_right_zero_fill = function bit_shift_right_zero_fill(x, n) {
  return x >>> n;
};
cljs.core.unsigned_bit_shift_right = function unsigned_bit_shift_right(x, n) {
  return x >>> n;
};
cljs.core.bit_count = function bit_count(v) {
  var v__$1 = v - (v >> 1 & 1431655765);
  var v__$2 = (v__$1 & 858993459) + (v__$1 >> 2 & 858993459);
  return(v__$2 + (v__$2 >> 4) & 252645135) * 16843009 >> 24;
};
cljs.core._EQ__EQ_ = function() {
  var _EQ__EQ_ = null;
  var _EQ__EQ___1 = function(x) {
    return true;
  };
  var _EQ__EQ___2 = function(x, y) {
    return cljs.core._equiv.call(null, x, y);
  };
  var _EQ__EQ___3 = function() {
    var G__10899__delegate = function(x, y, more) {
      while (true) {
        if (_EQ__EQ_.call(null, x, y)) {
          if (cljs.core.next.call(null, more)) {
            var G__10900 = y;
            var G__10901 = cljs.core.first.call(null, more);
            var G__10902 = cljs.core.next.call(null, more);
            x = G__10900;
            y = G__10901;
            more = G__10902;
            continue;
          } else {
            return _EQ__EQ_.call(null, y, cljs.core.first.call(null, more));
          }
        } else {
          return false;
        }
        break;
      }
    };
    var G__10899 = function(x, y, var_args) {
      var more = null;
      if (arguments.length > 2) {
        more = cljs.core.array_seq(Array.prototype.slice.call(arguments, 2), 0);
      }
      return G__10899__delegate.call(this, x, y, more);
    };
    G__10899.cljs$lang$maxFixedArity = 2;
    G__10899.cljs$lang$applyTo = function(arglist__10903) {
      var x = cljs.core.first(arglist__10903);
      arglist__10903 = cljs.core.next(arglist__10903);
      var y = cljs.core.first(arglist__10903);
      var more = cljs.core.rest(arglist__10903);
      return G__10899__delegate(x, y, more);
    };
    G__10899.cljs$core$IFn$_invoke$arity$variadic = G__10899__delegate;
    return G__10899;
  }();
  _EQ__EQ_ = function(x, y, var_args) {
    var more = var_args;
    switch(arguments.length) {
      case 1:
        return _EQ__EQ___1.call(this, x);
      case 2:
        return _EQ__EQ___2.call(this, x, y);
      default:
        return _EQ__EQ___3.cljs$core$IFn$_invoke$arity$variadic(x, y, cljs.core.array_seq(arguments, 2));
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  _EQ__EQ_.cljs$lang$maxFixedArity = 2;
  _EQ__EQ_.cljs$lang$applyTo = _EQ__EQ___3.cljs$lang$applyTo;
  _EQ__EQ_.cljs$core$IFn$_invoke$arity$1 = _EQ__EQ___1;
  _EQ__EQ_.cljs$core$IFn$_invoke$arity$2 = _EQ__EQ___2;
  _EQ__EQ_.cljs$core$IFn$_invoke$arity$variadic = _EQ__EQ___3.cljs$core$IFn$_invoke$arity$variadic;
  return _EQ__EQ_;
}();
cljs.core.pos_QMARK_ = function pos_QMARK_(n) {
  return n > 0;
};
cljs.core.zero_QMARK_ = function zero_QMARK_(n) {
  return n === 0;
};
cljs.core.neg_QMARK_ = function neg_QMARK_(x) {
  return x < 0;
};
cljs.core.nthnext = function nthnext(coll, n) {
  var n__$1 = n;
  var xs = cljs.core.seq.call(null, coll);
  while (true) {
    if (xs && n__$1 > 0) {
      var G__10904 = n__$1 - 1;
      var G__10905 = cljs.core.next.call(null, xs);
      n__$1 = G__10904;
      xs = G__10905;
      continue;
    } else {
      return xs;
    }
    break;
  }
};
cljs.core.str = function() {
  var str = null;
  var str__0 = function() {
    return "";
  };
  var str__1 = function(x) {
    if (x == null) {
      return "";
    } else {
      return x.toString();
    }
  };
  var str__2 = function() {
    var G__10906__delegate = function(x, ys) {
      var sb = new goog.string.StringBuffer(str.call(null, x));
      var more = ys;
      while (true) {
        if (cljs.core.truth_(more)) {
          var G__10907 = sb.append(str.call(null, cljs.core.first.call(null, more)));
          var G__10908 = cljs.core.next.call(null, more);
          sb = G__10907;
          more = G__10908;
          continue;
        } else {
          return sb.toString();
        }
        break;
      }
    };
    var G__10906 = function(x, var_args) {
      var ys = null;
      if (arguments.length > 1) {
        ys = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
      }
      return G__10906__delegate.call(this, x, ys);
    };
    G__10906.cljs$lang$maxFixedArity = 1;
    G__10906.cljs$lang$applyTo = function(arglist__10909) {
      var x = cljs.core.first(arglist__10909);
      var ys = cljs.core.rest(arglist__10909);
      return G__10906__delegate(x, ys);
    };
    G__10906.cljs$core$IFn$_invoke$arity$variadic = G__10906__delegate;
    return G__10906;
  }();
  str = function(x, var_args) {
    var ys = var_args;
    switch(arguments.length) {
      case 0:
        return str__0.call(this);
      case 1:
        return str__1.call(this, x);
      default:
        return str__2.cljs$core$IFn$_invoke$arity$variadic(x, cljs.core.array_seq(arguments, 1));
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  str.cljs$lang$maxFixedArity = 1;
  str.cljs$lang$applyTo = str__2.cljs$lang$applyTo;
  str.cljs$core$IFn$_invoke$arity$0 = str__0;
  str.cljs$core$IFn$_invoke$arity$1 = str__1;
  str.cljs$core$IFn$_invoke$arity$variadic = str__2.cljs$core$IFn$_invoke$arity$variadic;
  return str;
}();
cljs.core.subs = function() {
  var subs = null;
  var subs__2 = function(s, start) {
    return s.substring(start);
  };
  var subs__3 = function(s, start, end) {
    return s.substring(start, end);
  };
  subs = function(s, start, end) {
    switch(arguments.length) {
      case 2:
        return subs__2.call(this, s, start);
      case 3:
        return subs__3.call(this, s, start, end);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  subs.cljs$core$IFn$_invoke$arity$2 = subs__2;
  subs.cljs$core$IFn$_invoke$arity$3 = subs__3;
  return subs;
}();
cljs.core.equiv_sequential = function equiv_sequential(x, y) {
  return cljs.core.boolean$.call(null, cljs.core.sequential_QMARK_.call(null, y) ? function() {
    var xs = cljs.core.seq.call(null, x);
    var ys = cljs.core.seq.call(null, y);
    while (true) {
      if (xs == null) {
        return ys == null;
      } else {
        if (ys == null) {
          return false;
        } else {
          if (cljs.core._EQ_.call(null, cljs.core.first.call(null, xs), cljs.core.first.call(null, ys))) {
            var G__10910 = cljs.core.next.call(null, xs);
            var G__10911 = cljs.core.next.call(null, ys);
            xs = G__10910;
            ys = G__10911;
            continue;
          } else {
            if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
              return false;
            } else {
              return null;
            }
          }
        }
      }
      break;
    }
  }() : null);
};
cljs.core.hash_combine = function hash_combine(seed, hash) {
  return seed ^ hash + 2654435769 + (seed << 6) + (seed >> 2);
};
cljs.core.hash_coll = function hash_coll(coll) {
  if (cljs.core.seq.call(null, coll)) {
    var res = cljs.core.hash.call(null, cljs.core.first.call(null, coll));
    var s = cljs.core.next.call(null, coll);
    while (true) {
      if (s == null) {
        return res;
      } else {
        var G__10912 = cljs.core.hash_combine.call(null, res, cljs.core.hash.call(null, cljs.core.first.call(null, s)));
        var G__10913 = cljs.core.next.call(null, s);
        res = G__10912;
        s = G__10913;
        continue;
      }
      break;
    }
  } else {
    return 0;
  }
};
cljs.core.hash_imap = function hash_imap(m) {
  var h = 0;
  var s = cljs.core.seq.call(null, m);
  while (true) {
    if (s) {
      var e = cljs.core.first.call(null, s);
      var G__10914 = (h + (cljs.core.hash.call(null, cljs.core.key.call(null, e)) ^ cljs.core.hash.call(null, cljs.core.val.call(null, e)))) % 4503599627370496;
      var G__10915 = cljs.core.next.call(null, s);
      h = G__10914;
      s = G__10915;
      continue;
    } else {
      return h;
    }
    break;
  }
};
cljs.core.hash_iset = function hash_iset(s) {
  var h = 0;
  var s__$1 = cljs.core.seq.call(null, s);
  while (true) {
    if (s__$1) {
      var e = cljs.core.first.call(null, s__$1);
      var G__10916 = (h + cljs.core.hash.call(null, e)) % 4503599627370496;
      var G__10917 = cljs.core.next.call(null, s__$1);
      h = G__10916;
      s__$1 = G__10917;
      continue;
    } else {
      return h;
    }
    break;
  }
};
cljs.core.extend_object_BANG_ = function extend_object_BANG_(obj, fn_map) {
  var seq__10924_10930 = cljs.core.seq.call(null, fn_map);
  var chunk__10925_10931 = null;
  var count__10926_10932 = 0;
  var i__10927_10933 = 0;
  while (true) {
    if (i__10927_10933 < count__10926_10932) {
      var vec__10928_10934 = cljs.core._nth.call(null, chunk__10925_10931, i__10927_10933);
      var key_name_10935 = cljs.core.nth.call(null, vec__10928_10934, 0, null);
      var f_10936 = cljs.core.nth.call(null, vec__10928_10934, 1, null);
      var str_name_10937 = cljs.core.name.call(null, key_name_10935);
      obj[str_name_10937] = f_10936;
      var G__10938 = seq__10924_10930;
      var G__10939 = chunk__10925_10931;
      var G__10940 = count__10926_10932;
      var G__10941 = i__10927_10933 + 1;
      seq__10924_10930 = G__10938;
      chunk__10925_10931 = G__10939;
      count__10926_10932 = G__10940;
      i__10927_10933 = G__10941;
      continue;
    } else {
      var temp__4092__auto___10942 = cljs.core.seq.call(null, seq__10924_10930);
      if (temp__4092__auto___10942) {
        var seq__10924_10943__$1 = temp__4092__auto___10942;
        if (cljs.core.chunked_seq_QMARK_.call(null, seq__10924_10943__$1)) {
          var c__4151__auto___10944 = cljs.core.chunk_first.call(null, seq__10924_10943__$1);
          var G__10945 = cljs.core.chunk_rest.call(null, seq__10924_10943__$1);
          var G__10946 = c__4151__auto___10944;
          var G__10947 = cljs.core.count.call(null, c__4151__auto___10944);
          var G__10948 = 0;
          seq__10924_10930 = G__10945;
          chunk__10925_10931 = G__10946;
          count__10926_10932 = G__10947;
          i__10927_10933 = G__10948;
          continue;
        } else {
          var vec__10929_10949 = cljs.core.first.call(null, seq__10924_10943__$1);
          var key_name_10950 = cljs.core.nth.call(null, vec__10929_10949, 0, null);
          var f_10951 = cljs.core.nth.call(null, vec__10929_10949, 1, null);
          var str_name_10952 = cljs.core.name.call(null, key_name_10950);
          obj[str_name_10952] = f_10951;
          var G__10953 = cljs.core.next.call(null, seq__10924_10943__$1);
          var G__10954 = null;
          var G__10955 = 0;
          var G__10956 = 0;
          seq__10924_10930 = G__10953;
          chunk__10925_10931 = G__10954;
          count__10926_10932 = G__10955;
          i__10927_10933 = G__10956;
          continue;
        }
      } else {
      }
    }
    break;
  }
  return obj;
};
cljs.core.List = function(meta, first, rest, count, __hash) {
  this.meta = meta;
  this.first = first;
  this.rest = rest;
  this.count = count;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition0$ = 65937646;
  this.cljs$lang$protocol_mask$partition1$ = 8192;
};
cljs.core.List.cljs$lang$type = true;
cljs.core.List.cljs$lang$ctorStr = "cljs.core/List";
cljs.core.List.cljs$lang$ctorPrWriter = function(this__3970__auto__, writer__3971__auto__, opt__3972__auto__) {
  return cljs.core._write.call(null, writer__3971__auto__, "cljs.core/List");
};
cljs.core.List.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var h__3814__auto__ = self__.__hash;
  if (!(h__3814__auto__ == null)) {
    return h__3814__auto__;
  } else {
    var h__3814__auto____$1 = cljs.core.hash_coll.call(null, coll__$1);
    self__.__hash = h__3814__auto____$1;
    return h__3814__auto____$1;
  }
};
cljs.core.List.prototype.cljs$core$INext$_next$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  if (self__.count === 1) {
    return null;
  } else {
    return self__.rest;
  }
};
cljs.core.List.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, o) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.List(self__.meta, o, coll__$1, self__.count + 1, null);
};
cljs.core.List.prototype.toString = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.pr_str_STAR_.call(null, coll);
};
cljs.core.List.prototype.cljs$core$IReduce$_reduce$arity$2 = function(coll, f) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.seq_reduce.call(null, f, coll__$1);
};
cljs.core.List.prototype.cljs$core$IReduce$_reduce$arity$3 = function(coll, f, start) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.seq_reduce.call(null, f, start, coll__$1);
};
cljs.core.List.prototype.cljs$core$ISeqable$_seq$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return coll__$1;
};
cljs.core.List.prototype.cljs$core$ICounted$_count$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.count;
};
cljs.core.List.prototype.cljs$core$IStack$_peek$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.first;
};
cljs.core.List.prototype.cljs$core$IStack$_pop$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core._rest.call(null, coll__$1);
};
cljs.core.List.prototype.cljs$core$ISeq$_first$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.first;
};
cljs.core.List.prototype.cljs$core$ISeq$_rest$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  if (self__.count === 1) {
    return cljs.core.List.EMPTY;
  } else {
    return self__.rest;
  }
};
cljs.core.List.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.equiv_sequential.call(null, coll__$1, other);
};
cljs.core.List.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, meta__$1) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.List(meta__$1, self__.first, self__.rest, self__.count, self__.__hash);
};
cljs.core.List.prototype.cljs$core$ICloneable$_clone$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return new cljs.core.List(self__.meta, self__.first, self__.rest, self__.count, self__.__hash);
};
cljs.core.List.prototype.cljs$core$IMeta$_meta$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.meta;
};
cljs.core.List.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.List.EMPTY;
};
cljs.core.__GT_List = function __GT_List(meta, first, rest, count, __hash) {
  return new cljs.core.List(meta, first, rest, count, __hash);
};
cljs.core.EmptyList = function(meta) {
  this.meta = meta;
  this.cljs$lang$protocol_mask$partition0$ = 65937614;
  this.cljs$lang$protocol_mask$partition1$ = 8192;
};
cljs.core.EmptyList.cljs$lang$type = true;
cljs.core.EmptyList.cljs$lang$ctorStr = "cljs.core/EmptyList";
cljs.core.EmptyList.cljs$lang$ctorPrWriter = function(this__3970__auto__, writer__3971__auto__, opt__3972__auto__) {
  return cljs.core._write.call(null, writer__3971__auto__, "cljs.core/EmptyList");
};
cljs.core.EmptyList.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return 0;
};
cljs.core.EmptyList.prototype.cljs$core$INext$_next$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return null;
};
cljs.core.EmptyList.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, o) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.List(self__.meta, o, null, 1, null);
};
cljs.core.EmptyList.prototype.toString = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.pr_str_STAR_.call(null, coll);
};
cljs.core.EmptyList.prototype.cljs$core$IReduce$_reduce$arity$2 = function(coll, f) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.seq_reduce.call(null, f, coll__$1);
};
cljs.core.EmptyList.prototype.cljs$core$IReduce$_reduce$arity$3 = function(coll, f, start) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.seq_reduce.call(null, f, start, coll__$1);
};
cljs.core.EmptyList.prototype.cljs$core$ISeqable$_seq$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return null;
};
cljs.core.EmptyList.prototype.cljs$core$ICounted$_count$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return 0;
};
cljs.core.EmptyList.prototype.cljs$core$IStack$_peek$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return null;
};
cljs.core.EmptyList.prototype.cljs$core$IStack$_pop$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  throw new Error("Can't pop empty list");
};
cljs.core.EmptyList.prototype.cljs$core$ISeq$_first$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return null;
};
cljs.core.EmptyList.prototype.cljs$core$ISeq$_rest$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.List.EMPTY;
};
cljs.core.EmptyList.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.equiv_sequential.call(null, coll__$1, other);
};
cljs.core.EmptyList.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, meta__$1) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.EmptyList(meta__$1);
};
cljs.core.EmptyList.prototype.cljs$core$ICloneable$_clone$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return new cljs.core.EmptyList(self__.meta);
};
cljs.core.EmptyList.prototype.cljs$core$IMeta$_meta$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.meta;
};
cljs.core.EmptyList.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return coll__$1;
};
cljs.core.__GT_EmptyList = function __GT_EmptyList(meta) {
  return new cljs.core.EmptyList(meta);
};
cljs.core.List.EMPTY = new cljs.core.EmptyList(null);
cljs.core.reversible_QMARK_ = function reversible_QMARK_(coll) {
  var G__10958 = coll;
  if (G__10958) {
    var bit__4053__auto__ = G__10958.cljs$lang$protocol_mask$partition0$ & 134217728;
    if (bit__4053__auto__ || G__10958.cljs$core$IReversible$) {
      return true;
    } else {
      if (!G__10958.cljs$lang$protocol_mask$partition0$) {
        return cljs.core.native_satisfies_QMARK_.call(null, cljs.core.IReversible, G__10958);
      } else {
        return false;
      }
    }
  } else {
    return cljs.core.native_satisfies_QMARK_.call(null, cljs.core.IReversible, G__10958);
  }
};
cljs.core.rseq = function rseq(coll) {
  return cljs.core._rseq.call(null, coll);
};
cljs.core.reverse = function reverse(coll) {
  if (cljs.core.reversible_QMARK_.call(null, coll)) {
    return cljs.core.rseq.call(null, coll);
  } else {
    return cljs.core.reduce.call(null, cljs.core.conj, cljs.core.List.EMPTY, coll);
  }
};
cljs.core.list = function() {
  var list__delegate = function(xs) {
    var arr = xs instanceof cljs.core.IndexedSeq && xs.i === 0 ? xs.arr : function() {
      var arr = [];
      var xs__$1 = xs;
      while (true) {
        if (!(xs__$1 == null)) {
          arr.push(cljs.core._first.call(null, xs__$1));
          var G__10959 = cljs.core._next.call(null, xs__$1);
          xs__$1 = G__10959;
          continue;
        } else {
          return arr;
        }
        break;
      }
    }();
    var i = arr.length;
    var r = cljs.core.List.EMPTY;
    while (true) {
      if (i > 0) {
        var G__10960 = i - 1;
        var G__10961 = cljs.core._conj.call(null, r, arr[i - 1]);
        i = G__10960;
        r = G__10961;
        continue;
      } else {
        return r;
      }
      break;
    }
  };
  var list = function(var_args) {
    var xs = null;
    if (arguments.length > 0) {
      xs = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0), 0);
    }
    return list__delegate.call(this, xs);
  };
  list.cljs$lang$maxFixedArity = 0;
  list.cljs$lang$applyTo = function(arglist__10962) {
    var xs = cljs.core.seq(arglist__10962);
    return list__delegate(xs);
  };
  list.cljs$core$IFn$_invoke$arity$variadic = list__delegate;
  return list;
}();
cljs.core.Cons = function(meta, first, rest, __hash) {
  this.meta = meta;
  this.first = first;
  this.rest = rest;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition0$ = 65929452;
  this.cljs$lang$protocol_mask$partition1$ = 8192;
};
cljs.core.Cons.cljs$lang$type = true;
cljs.core.Cons.cljs$lang$ctorStr = "cljs.core/Cons";
cljs.core.Cons.cljs$lang$ctorPrWriter = function(this__3970__auto__, writer__3971__auto__, opt__3972__auto__) {
  return cljs.core._write.call(null, writer__3971__auto__, "cljs.core/Cons");
};
cljs.core.Cons.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var h__3814__auto__ = self__.__hash;
  if (!(h__3814__auto__ == null)) {
    return h__3814__auto__;
  } else {
    var h__3814__auto____$1 = cljs.core.hash_coll.call(null, coll__$1);
    self__.__hash = h__3814__auto____$1;
    return h__3814__auto____$1;
  }
};
cljs.core.Cons.prototype.cljs$core$INext$_next$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  if (self__.rest == null) {
    return null;
  } else {
    return cljs.core.seq.call(null, self__.rest);
  }
};
cljs.core.Cons.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, o) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.Cons(null, o, coll__$1, self__.__hash);
};
cljs.core.Cons.prototype.toString = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.pr_str_STAR_.call(null, coll);
};
cljs.core.Cons.prototype.cljs$core$IReduce$_reduce$arity$2 = function(coll, f) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.seq_reduce.call(null, f, coll__$1);
};
cljs.core.Cons.prototype.cljs$core$IReduce$_reduce$arity$3 = function(coll, f, start) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.seq_reduce.call(null, f, start, coll__$1);
};
cljs.core.Cons.prototype.cljs$core$ISeqable$_seq$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return coll__$1;
};
cljs.core.Cons.prototype.cljs$core$ISeq$_first$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.first;
};
cljs.core.Cons.prototype.cljs$core$ISeq$_rest$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  if (self__.rest == null) {
    return cljs.core.List.EMPTY;
  } else {
    return self__.rest;
  }
};
cljs.core.Cons.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.equiv_sequential.call(null, coll__$1, other);
};
cljs.core.Cons.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, meta__$1) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.Cons(meta__$1, self__.first, self__.rest, self__.__hash);
};
cljs.core.Cons.prototype.cljs$core$ICloneable$_clone$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return new cljs.core.Cons(self__.meta, self__.first, self__.rest, self__.__hash);
};
cljs.core.Cons.prototype.cljs$core$IMeta$_meta$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.meta;
};
cljs.core.Cons.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.with_meta.call(null, cljs.core.List.EMPTY, self__.meta);
};
cljs.core.__GT_Cons = function __GT_Cons(meta, first, rest, __hash) {
  return new cljs.core.Cons(meta, first, rest, __hash);
};
cljs.core.cons = function cons(x, coll) {
  if (function() {
    var or__3403__auto__ = coll == null;
    if (or__3403__auto__) {
      return or__3403__auto__;
    } else {
      var G__10966 = coll;
      if (G__10966) {
        var bit__4046__auto__ = G__10966.cljs$lang$protocol_mask$partition0$ & 64;
        if (bit__4046__auto__ || G__10966.cljs$core$ISeq$) {
          return true;
        } else {
          return false;
        }
      } else {
        return false;
      }
    }
  }()) {
    return new cljs.core.Cons(null, x, coll, null);
  } else {
    return new cljs.core.Cons(null, x, cljs.core.seq.call(null, coll), null);
  }
};
cljs.core.list_QMARK_ = function list_QMARK_(x) {
  var G__10968 = x;
  if (G__10968) {
    var bit__4053__auto__ = G__10968.cljs$lang$protocol_mask$partition0$ & 33554432;
    if (bit__4053__auto__ || G__10968.cljs$core$IList$) {
      return true;
    } else {
      if (!G__10968.cljs$lang$protocol_mask$partition0$) {
        return cljs.core.native_satisfies_QMARK_.call(null, cljs.core.IList, G__10968);
      } else {
        return false;
      }
    }
  } else {
    return cljs.core.native_satisfies_QMARK_.call(null, cljs.core.IList, G__10968);
  }
};
cljs.core.Keyword = function(ns, name, fqn, _hash) {
  this.ns = ns;
  this.name = name;
  this.fqn = fqn;
  this._hash = _hash;
  this.cljs$lang$protocol_mask$partition0$ = 2153775105;
  this.cljs$lang$protocol_mask$partition1$ = 4096;
};
cljs.core.Keyword.cljs$lang$type = true;
cljs.core.Keyword.cljs$lang$ctorStr = "cljs.core/Keyword";
cljs.core.Keyword.cljs$lang$ctorPrWriter = function(this__3970__auto__, writer__3971__auto__, opt__3972__auto__) {
  return cljs.core._write.call(null, writer__3971__auto__, "cljs.core/Keyword");
};
cljs.core.Keyword.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(o, writer, _) {
  var self__ = this;
  var o__$1 = this;
  return cljs.core._write.call(null, writer, [cljs.core.str(":"), cljs.core.str(self__.fqn)].join(""));
};
cljs.core.Keyword.prototype.cljs$core$INamed$_name$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return self__.name;
};
cljs.core.Keyword.prototype.cljs$core$INamed$_namespace$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return self__.ns;
};
cljs.core.Keyword.prototype.cljs$core$IHash$_hash$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  if (self__._hash == null) {
    self__._hash = cljs.core.hash_combine.call(null, cljs.core.hash.call(null, self__.ns), cljs.core.hash.call(null, self__.name)) + 2654435769;
    return self__._hash;
  } else {
    return self__._hash;
  }
};
cljs.core.Keyword.prototype.call = function() {
  var G__10970 = null;
  var G__10970__2 = function(self__, coll) {
    var self__ = this;
    var self____$1 = this;
    var kw = self____$1;
    return cljs.core.get.call(null, coll, kw);
  };
  var G__10970__3 = function(self__, coll, not_found) {
    var self__ = this;
    var self____$1 = this;
    var kw = self____$1;
    return cljs.core.get.call(null, coll, kw, not_found);
  };
  G__10970 = function(self__, coll, not_found) {
    switch(arguments.length) {
      case 2:
        return G__10970__2.call(this, self__, coll);
      case 3:
        return G__10970__3.call(this, self__, coll, not_found);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  return G__10970;
}();
cljs.core.Keyword.prototype.apply = function(self__, args10969) {
  var self__ = this;
  var self____$1 = this;
  return self____$1.call.apply(self____$1, [self____$1].concat(cljs.core.aclone.call(null, args10969)));
};
cljs.core.Keyword.prototype.cljs$core$IFn$_invoke$arity$1 = function(coll) {
  var self__ = this;
  var kw = this;
  return cljs.core.get.call(null, coll, kw);
};
cljs.core.Keyword.prototype.cljs$core$IFn$_invoke$arity$2 = function(coll, not_found) {
  var self__ = this;
  var kw = this;
  return cljs.core.get.call(null, coll, kw, not_found);
};
cljs.core.Keyword.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(_, other) {
  var self__ = this;
  var ___$1 = this;
  if (other instanceof cljs.core.Keyword) {
    return self__.fqn === other.fqn;
  } else {
    return false;
  }
};
cljs.core.Keyword.prototype.toString = function() {
  var self__ = this;
  var _ = this;
  return[cljs.core.str(":"), cljs.core.str(self__.fqn)].join("");
};
cljs.core.__GT_Keyword = function __GT_Keyword(ns, name, fqn, _hash) {
  return new cljs.core.Keyword(ns, name, fqn, _hash);
};
cljs.core.keyword_QMARK_ = function keyword_QMARK_(x) {
  return x instanceof cljs.core.Keyword;
};
cljs.core.keyword_identical_QMARK_ = function keyword_identical_QMARK_(x, y) {
  if (x === y) {
    return true;
  } else {
    if (x instanceof cljs.core.Keyword && y instanceof cljs.core.Keyword) {
      return x.fqn === y.fqn;
    } else {
      return false;
    }
  }
};
cljs.core.namespace = function namespace(x) {
  if (function() {
    var G__10972 = x;
    if (G__10972) {
      var bit__4046__auto__ = G__10972.cljs$lang$protocol_mask$partition1$ & 4096;
      if (bit__4046__auto__ || G__10972.cljs$core$INamed$) {
        return true;
      } else {
        return false;
      }
    } else {
      return false;
    }
  }()) {
    return cljs.core._namespace.call(null, x);
  } else {
    throw new Error([cljs.core.str("Doesn't support namespace: "), cljs.core.str(x)].join(""));
  }
};
cljs.core.keyword = function() {
  var keyword = null;
  var keyword__1 = function(name) {
    if (name instanceof cljs.core.Keyword) {
      return name;
    } else {
      if (name instanceof cljs.core.Symbol) {
        return new cljs.core.Keyword(cljs.core.namespace.call(null, name), cljs.core.name.call(null, name), name.str, null);
      } else {
        if (typeof name === "string") {
          var parts = name.split("/");
          if (parts.length === 2) {
            return new cljs.core.Keyword(parts[0], parts[1], name, null);
          } else {
            return new cljs.core.Keyword(null, parts[0], name, null);
          }
        } else {
          return null;
        }
      }
    }
  };
  var keyword__2 = function(ns, name) {
    return new cljs.core.Keyword(ns, name, [cljs.core.str(cljs.core.truth_(ns) ? [cljs.core.str(ns), cljs.core.str("/")].join("") : null), cljs.core.str(name)].join(""), null);
  };
  keyword = function(ns, name) {
    switch(arguments.length) {
      case 1:
        return keyword__1.call(this, ns);
      case 2:
        return keyword__2.call(this, ns, name);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  keyword.cljs$core$IFn$_invoke$arity$1 = keyword__1;
  keyword.cljs$core$IFn$_invoke$arity$2 = keyword__2;
  return keyword;
}();
cljs.core.LazySeq = function(meta, fn, s, __hash) {
  this.meta = meta;
  this.fn = fn;
  this.s = s;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition1$ = 0;
  this.cljs$lang$protocol_mask$partition0$ = 32374988;
};
cljs.core.LazySeq.cljs$lang$type = true;
cljs.core.LazySeq.cljs$lang$ctorStr = "cljs.core/LazySeq";
cljs.core.LazySeq.cljs$lang$ctorPrWriter = function(this__3970__auto__, writer__3971__auto__, opt__3972__auto__) {
  return cljs.core._write.call(null, writer__3971__auto__, "cljs.core/LazySeq");
};
cljs.core.LazySeq.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var h__3814__auto__ = self__.__hash;
  if (!(h__3814__auto__ == null)) {
    return h__3814__auto__;
  } else {
    var h__3814__auto____$1 = cljs.core.hash_coll.call(null, coll__$1);
    self__.__hash = h__3814__auto____$1;
    return h__3814__auto____$1;
  }
};
cljs.core.LazySeq.prototype.cljs$core$INext$_next$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  cljs.core._seq.call(null, coll__$1);
  if (self__.s == null) {
    return null;
  } else {
    return cljs.core.next.call(null, self__.s);
  }
};
cljs.core.LazySeq.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, o) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.cons.call(null, o, coll__$1);
};
cljs.core.LazySeq.prototype.toString = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.pr_str_STAR_.call(null, coll);
};
cljs.core.LazySeq.prototype.sval = function() {
  var self__ = this;
  var coll = this;
  if (self__.fn == null) {
    return self__.s;
  } else {
    self__.s = self__.fn.call(null);
    self__.fn = null;
    return self__.s;
  }
};
cljs.core.LazySeq.prototype.cljs$core$IReduce$_reduce$arity$2 = function(coll, f) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.seq_reduce.call(null, f, coll__$1);
};
cljs.core.LazySeq.prototype.cljs$core$IReduce$_reduce$arity$3 = function(coll, f, start) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.seq_reduce.call(null, f, start, coll__$1);
};
cljs.core.LazySeq.prototype.cljs$core$ISeqable$_seq$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  coll__$1.sval();
  if (self__.s == null) {
    return null;
  } else {
    var ls = self__.s;
    while (true) {
      if (ls instanceof cljs.core.LazySeq) {
        var G__10973 = ls.sval();
        ls = G__10973;
        continue;
      } else {
        self__.s = ls;
        return cljs.core.seq.call(null, self__.s);
      }
      break;
    }
  }
};
cljs.core.LazySeq.prototype.cljs$core$ISeq$_first$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  cljs.core._seq.call(null, coll__$1);
  if (self__.s == null) {
    return null;
  } else {
    return cljs.core.first.call(null, self__.s);
  }
};
cljs.core.LazySeq.prototype.cljs$core$ISeq$_rest$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  cljs.core._seq.call(null, coll__$1);
  if (!(self__.s == null)) {
    return cljs.core.rest.call(null, self__.s);
  } else {
    return cljs.core.List.EMPTY;
  }
};
cljs.core.LazySeq.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.equiv_sequential.call(null, coll__$1, other);
};
cljs.core.LazySeq.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, meta__$1) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.LazySeq(meta__$1, self__.fn, self__.s, self__.__hash);
};
cljs.core.LazySeq.prototype.cljs$core$IMeta$_meta$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.meta;
};
cljs.core.LazySeq.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.with_meta.call(null, cljs.core.List.EMPTY, self__.meta);
};
cljs.core.__GT_LazySeq = function __GT_LazySeq(meta, fn, s, __hash) {
  return new cljs.core.LazySeq(meta, fn, s, __hash);
};
cljs.core.ChunkBuffer = function(buf, end) {
  this.buf = buf;
  this.end = end;
  this.cljs$lang$protocol_mask$partition1$ = 0;
  this.cljs$lang$protocol_mask$partition0$ = 2;
};
cljs.core.ChunkBuffer.cljs$lang$type = true;
cljs.core.ChunkBuffer.cljs$lang$ctorStr = "cljs.core/ChunkBuffer";
cljs.core.ChunkBuffer.cljs$lang$ctorPrWriter = function(this__3970__auto__, writer__3971__auto__, opt__3972__auto__) {
  return cljs.core._write.call(null, writer__3971__auto__, "cljs.core/ChunkBuffer");
};
cljs.core.ChunkBuffer.prototype.cljs$core$ICounted$_count$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return self__.end;
};
cljs.core.ChunkBuffer.prototype.add = function(o) {
  var self__ = this;
  var _ = this;
  self__.buf[self__.end] = o;
  return self__.end = self__.end + 1;
};
cljs.core.ChunkBuffer.prototype.chunk = function(o) {
  var self__ = this;
  var _ = this;
  var ret = new cljs.core.ArrayChunk(self__.buf, 0, self__.end);
  self__.buf = null;
  return ret;
};
cljs.core.__GT_ChunkBuffer = function __GT_ChunkBuffer(buf, end) {
  return new cljs.core.ChunkBuffer(buf, end);
};
cljs.core.chunk_buffer = function chunk_buffer(capacity) {
  return new cljs.core.ChunkBuffer(new Array(capacity), 0);
};
cljs.core.ArrayChunk = function(arr, off, end) {
  this.arr = arr;
  this.off = off;
  this.end = end;
  this.cljs$lang$protocol_mask$partition1$ = 0;
  this.cljs$lang$protocol_mask$partition0$ = 524306;
};
cljs.core.ArrayChunk.cljs$lang$type = true;
cljs.core.ArrayChunk.cljs$lang$ctorStr = "cljs.core/ArrayChunk";
cljs.core.ArrayChunk.cljs$lang$ctorPrWriter = function(this__3970__auto__, writer__3971__auto__, opt__3972__auto__) {
  return cljs.core._write.call(null, writer__3971__auto__, "cljs.core/ArrayChunk");
};
cljs.core.ArrayChunk.prototype.cljs$core$IReduce$_reduce$arity$2 = function(coll, f) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.array_reduce.call(null, self__.arr, f, self__.arr[self__.off], self__.off + 1);
};
cljs.core.ArrayChunk.prototype.cljs$core$IReduce$_reduce$arity$3 = function(coll, f, start) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.array_reduce.call(null, self__.arr, f, start, self__.off);
};
cljs.core.ArrayChunk.prototype.cljs$core$IChunk$ = true;
cljs.core.ArrayChunk.prototype.cljs$core$IChunk$_drop_first$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  if (self__.off === self__.end) {
    throw new Error("-drop-first of empty chunk");
  } else {
    return new cljs.core.ArrayChunk(self__.arr, self__.off + 1, self__.end);
  }
};
cljs.core.ArrayChunk.prototype.cljs$core$IIndexed$_nth$arity$2 = function(coll, i) {
  var self__ = this;
  var coll__$1 = this;
  return self__.arr[self__.off + i];
};
cljs.core.ArrayChunk.prototype.cljs$core$IIndexed$_nth$arity$3 = function(coll, i, not_found) {
  var self__ = this;
  var coll__$1 = this;
  if (i >= 0 && i < self__.end - self__.off) {
    return self__.arr[self__.off + i];
  } else {
    return not_found;
  }
};
cljs.core.ArrayChunk.prototype.cljs$core$ICounted$_count$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return self__.end - self__.off;
};
cljs.core.__GT_ArrayChunk = function __GT_ArrayChunk(arr, off, end) {
  return new cljs.core.ArrayChunk(arr, off, end);
};
cljs.core.array_chunk = function() {
  var array_chunk = null;
  var array_chunk__1 = function(arr) {
    return new cljs.core.ArrayChunk(arr, 0, arr.length);
  };
  var array_chunk__2 = function(arr, off) {
    return new cljs.core.ArrayChunk(arr, off, arr.length);
  };
  var array_chunk__3 = function(arr, off, end) {
    return new cljs.core.ArrayChunk(arr, off, end);
  };
  array_chunk = function(arr, off, end) {
    switch(arguments.length) {
      case 1:
        return array_chunk__1.call(this, arr);
      case 2:
        return array_chunk__2.call(this, arr, off);
      case 3:
        return array_chunk__3.call(this, arr, off, end);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  array_chunk.cljs$core$IFn$_invoke$arity$1 = array_chunk__1;
  array_chunk.cljs$core$IFn$_invoke$arity$2 = array_chunk__2;
  array_chunk.cljs$core$IFn$_invoke$arity$3 = array_chunk__3;
  return array_chunk;
}();
cljs.core.ChunkedCons = function(chunk, more, meta, __hash) {
  this.chunk = chunk;
  this.more = more;
  this.meta = meta;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition0$ = 31850732;
  this.cljs$lang$protocol_mask$partition1$ = 1536;
};
cljs.core.ChunkedCons.cljs$lang$type = true;
cljs.core.ChunkedCons.cljs$lang$ctorStr = "cljs.core/ChunkedCons";
cljs.core.ChunkedCons.cljs$lang$ctorPrWriter = function(this__3970__auto__, writer__3971__auto__, opt__3972__auto__) {
  return cljs.core._write.call(null, writer__3971__auto__, "cljs.core/ChunkedCons");
};
cljs.core.ChunkedCons.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var h__3814__auto__ = self__.__hash;
  if (!(h__3814__auto__ == null)) {
    return h__3814__auto__;
  } else {
    var h__3814__auto____$1 = cljs.core.hash_coll.call(null, coll__$1);
    self__.__hash = h__3814__auto____$1;
    return h__3814__auto____$1;
  }
};
cljs.core.ChunkedCons.prototype.cljs$core$INext$_next$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  if (cljs.core._count.call(null, self__.chunk) > 1) {
    return new cljs.core.ChunkedCons(cljs.core._drop_first.call(null, self__.chunk), self__.more, self__.meta, null);
  } else {
    var more__$1 = cljs.core._seq.call(null, self__.more);
    if (more__$1 == null) {
      return null;
    } else {
      return more__$1;
    }
  }
};
cljs.core.ChunkedCons.prototype.cljs$core$ICollection$_conj$arity$2 = function(this$, o) {
  var self__ = this;
  var this$__$1 = this;
  return cljs.core.cons.call(null, o, this$__$1);
};
cljs.core.ChunkedCons.prototype.toString = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.pr_str_STAR_.call(null, coll);
};
cljs.core.ChunkedCons.prototype.cljs$core$ISeqable$_seq$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return coll__$1;
};
cljs.core.ChunkedCons.prototype.cljs$core$ISeq$_first$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core._nth.call(null, self__.chunk, 0);
};
cljs.core.ChunkedCons.prototype.cljs$core$ISeq$_rest$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  if (cljs.core._count.call(null, self__.chunk) > 1) {
    return new cljs.core.ChunkedCons(cljs.core._drop_first.call(null, self__.chunk), self__.more, self__.meta, null);
  } else {
    if (self__.more == null) {
      return cljs.core.List.EMPTY;
    } else {
      return self__.more;
    }
  }
};
cljs.core.ChunkedCons.prototype.cljs$core$IChunkedNext$_chunked_next$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  if (self__.more == null) {
    return null;
  } else {
    return self__.more;
  }
};
cljs.core.ChunkedCons.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.equiv_sequential.call(null, coll__$1, other);
};
cljs.core.ChunkedCons.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, m) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.ChunkedCons(self__.chunk, self__.more, m, self__.__hash);
};
cljs.core.ChunkedCons.prototype.cljs$core$IMeta$_meta$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.meta;
};
cljs.core.ChunkedCons.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.with_meta.call(null, cljs.core.List.EMPTY, self__.meta);
};
cljs.core.ChunkedCons.prototype.cljs$core$IChunkedSeq$_chunked_first$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.chunk;
};
cljs.core.ChunkedCons.prototype.cljs$core$IChunkedSeq$_chunked_rest$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  if (self__.more == null) {
    return cljs.core.List.EMPTY;
  } else {
    return self__.more;
  }
};
cljs.core.__GT_ChunkedCons = function __GT_ChunkedCons(chunk, more, meta, __hash) {
  return new cljs.core.ChunkedCons(chunk, more, meta, __hash);
};
cljs.core.chunk_cons = function chunk_cons(chunk, rest) {
  if (cljs.core._count.call(null, chunk) === 0) {
    return rest;
  } else {
    return new cljs.core.ChunkedCons(chunk, rest, null, null);
  }
};
cljs.core.chunk_append = function chunk_append(b, x) {
  return b.add(x);
};
cljs.core.chunk = function chunk(b) {
  return b.chunk();
};
cljs.core.chunk_first = function chunk_first(s) {
  return cljs.core._chunked_first.call(null, s);
};
cljs.core.chunk_rest = function chunk_rest(s) {
  return cljs.core._chunked_rest.call(null, s);
};
cljs.core.chunk_next = function chunk_next(s) {
  if (function() {
    var G__10975 = s;
    if (G__10975) {
      var bit__4046__auto__ = G__10975.cljs$lang$protocol_mask$partition1$ & 1024;
      if (bit__4046__auto__ || G__10975.cljs$core$IChunkedNext$) {
        return true;
      } else {
        return false;
      }
    } else {
      return false;
    }
  }()) {
    return cljs.core._chunked_next.call(null, s);
  } else {
    return cljs.core.seq.call(null, cljs.core._chunked_rest.call(null, s));
  }
};
cljs.core.to_array = function to_array(s) {
  var ary = [];
  var s__$1 = s;
  while (true) {
    if (cljs.core.seq.call(null, s__$1)) {
      ary.push(cljs.core.first.call(null, s__$1));
      var G__10976 = cljs.core.next.call(null, s__$1);
      s__$1 = G__10976;
      continue;
    } else {
      return ary;
    }
    break;
  }
};
cljs.core.to_array_2d = function to_array_2d(coll) {
  var ret = new Array(cljs.core.count.call(null, coll));
  var i_10977 = 0;
  var xs_10978 = cljs.core.seq.call(null, coll);
  while (true) {
    if (xs_10978) {
      ret[i_10977] = cljs.core.to_array.call(null, cljs.core.first.call(null, xs_10978));
      var G__10979 = i_10977 + 1;
      var G__10980 = cljs.core.next.call(null, xs_10978);
      i_10977 = G__10979;
      xs_10978 = G__10980;
      continue;
    } else {
    }
    break;
  }
  return ret;
};
cljs.core.int_array = function() {
  var int_array = null;
  var int_array__1 = function(size_or_seq) {
    if (typeof size_or_seq === "number") {
      return int_array.call(null, size_or_seq, null);
    } else {
      return cljs.core.into_array.call(null, size_or_seq);
    }
  };
  var int_array__2 = function(size, init_val_or_seq) {
    var a = new Array(size);
    if (cljs.core.seq_QMARK_.call(null, init_val_or_seq)) {
      var s = cljs.core.seq.call(null, init_val_or_seq);
      var i = 0;
      var s__$1 = s;
      while (true) {
        if (s__$1 && i < size) {
          a[i] = cljs.core.first.call(null, s__$1);
          var G__10981 = i + 1;
          var G__10982 = cljs.core.next.call(null, s__$1);
          i = G__10981;
          s__$1 = G__10982;
          continue;
        } else {
          return a;
        }
        break;
      }
    } else {
      var n__4251__auto___10983 = size;
      var i_10984 = 0;
      while (true) {
        if (i_10984 < n__4251__auto___10983) {
          a[i_10984] = init_val_or_seq;
          var G__10985 = i_10984 + 1;
          i_10984 = G__10985;
          continue;
        } else {
        }
        break;
      }
      return a;
    }
  };
  int_array = function(size, init_val_or_seq) {
    switch(arguments.length) {
      case 1:
        return int_array__1.call(this, size);
      case 2:
        return int_array__2.call(this, size, init_val_or_seq);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  int_array.cljs$core$IFn$_invoke$arity$1 = int_array__1;
  int_array.cljs$core$IFn$_invoke$arity$2 = int_array__2;
  return int_array;
}();
cljs.core.long_array = function() {
  var long_array = null;
  var long_array__1 = function(size_or_seq) {
    if (typeof size_or_seq === "number") {
      return long_array.call(null, size_or_seq, null);
    } else {
      return cljs.core.into_array.call(null, size_or_seq);
    }
  };
  var long_array__2 = function(size, init_val_or_seq) {
    var a = new Array(size);
    if (cljs.core.seq_QMARK_.call(null, init_val_or_seq)) {
      var s = cljs.core.seq.call(null, init_val_or_seq);
      var i = 0;
      var s__$1 = s;
      while (true) {
        if (s__$1 && i < size) {
          a[i] = cljs.core.first.call(null, s__$1);
          var G__10986 = i + 1;
          var G__10987 = cljs.core.next.call(null, s__$1);
          i = G__10986;
          s__$1 = G__10987;
          continue;
        } else {
          return a;
        }
        break;
      }
    } else {
      var n__4251__auto___10988 = size;
      var i_10989 = 0;
      while (true) {
        if (i_10989 < n__4251__auto___10988) {
          a[i_10989] = init_val_or_seq;
          var G__10990 = i_10989 + 1;
          i_10989 = G__10990;
          continue;
        } else {
        }
        break;
      }
      return a;
    }
  };
  long_array = function(size, init_val_or_seq) {
    switch(arguments.length) {
      case 1:
        return long_array__1.call(this, size);
      case 2:
        return long_array__2.call(this, size, init_val_or_seq);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  long_array.cljs$core$IFn$_invoke$arity$1 = long_array__1;
  long_array.cljs$core$IFn$_invoke$arity$2 = long_array__2;
  return long_array;
}();
cljs.core.double_array = function() {
  var double_array = null;
  var double_array__1 = function(size_or_seq) {
    if (typeof size_or_seq === "number") {
      return double_array.call(null, size_or_seq, null);
    } else {
      return cljs.core.into_array.call(null, size_or_seq);
    }
  };
  var double_array__2 = function(size, init_val_or_seq) {
    var a = new Array(size);
    if (cljs.core.seq_QMARK_.call(null, init_val_or_seq)) {
      var s = cljs.core.seq.call(null, init_val_or_seq);
      var i = 0;
      var s__$1 = s;
      while (true) {
        if (s__$1 && i < size) {
          a[i] = cljs.core.first.call(null, s__$1);
          var G__10991 = i + 1;
          var G__10992 = cljs.core.next.call(null, s__$1);
          i = G__10991;
          s__$1 = G__10992;
          continue;
        } else {
          return a;
        }
        break;
      }
    } else {
      var n__4251__auto___10993 = size;
      var i_10994 = 0;
      while (true) {
        if (i_10994 < n__4251__auto___10993) {
          a[i_10994] = init_val_or_seq;
          var G__10995 = i_10994 + 1;
          i_10994 = G__10995;
          continue;
        } else {
        }
        break;
      }
      return a;
    }
  };
  double_array = function(size, init_val_or_seq) {
    switch(arguments.length) {
      case 1:
        return double_array__1.call(this, size);
      case 2:
        return double_array__2.call(this, size, init_val_or_seq);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  double_array.cljs$core$IFn$_invoke$arity$1 = double_array__1;
  double_array.cljs$core$IFn$_invoke$arity$2 = double_array__2;
  return double_array;
}();
cljs.core.object_array = function() {
  var object_array = null;
  var object_array__1 = function(size_or_seq) {
    if (typeof size_or_seq === "number") {
      return object_array.call(null, size_or_seq, null);
    } else {
      return cljs.core.into_array.call(null, size_or_seq);
    }
  };
  var object_array__2 = function(size, init_val_or_seq) {
    var a = new Array(size);
    if (cljs.core.seq_QMARK_.call(null, init_val_or_seq)) {
      var s = cljs.core.seq.call(null, init_val_or_seq);
      var i = 0;
      var s__$1 = s;
      while (true) {
        if (s__$1 && i < size) {
          a[i] = cljs.core.first.call(null, s__$1);
          var G__10996 = i + 1;
          var G__10997 = cljs.core.next.call(null, s__$1);
          i = G__10996;
          s__$1 = G__10997;
          continue;
        } else {
          return a;
        }
        break;
      }
    } else {
      var n__4251__auto___10998 = size;
      var i_10999 = 0;
      while (true) {
        if (i_10999 < n__4251__auto___10998) {
          a[i_10999] = init_val_or_seq;
          var G__11000 = i_10999 + 1;
          i_10999 = G__11000;
          continue;
        } else {
        }
        break;
      }
      return a;
    }
  };
  object_array = function(size, init_val_or_seq) {
    switch(arguments.length) {
      case 1:
        return object_array__1.call(this, size);
      case 2:
        return object_array__2.call(this, size, init_val_or_seq);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  object_array.cljs$core$IFn$_invoke$arity$1 = object_array__1;
  object_array.cljs$core$IFn$_invoke$arity$2 = object_array__2;
  return object_array;
}();
cljs.core.bounded_count = function bounded_count(s, n) {
  if (cljs.core.counted_QMARK_.call(null, s)) {
    return cljs.core.count.call(null, s);
  } else {
    var s__$1 = s;
    var i = n;
    var sum = 0;
    while (true) {
      if (i > 0 && cljs.core.seq.call(null, s__$1)) {
        var G__11001 = cljs.core.next.call(null, s__$1);
        var G__11002 = i - 1;
        var G__11003 = sum + 1;
        s__$1 = G__11001;
        i = G__11002;
        sum = G__11003;
        continue;
      } else {
        return sum;
      }
      break;
    }
  }
};
cljs.core.spread = function spread(arglist) {
  if (arglist == null) {
    return null;
  } else {
    if (cljs.core.next.call(null, arglist) == null) {
      return cljs.core.seq.call(null, cljs.core.first.call(null, arglist));
    } else {
      if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
        return cljs.core.cons.call(null, cljs.core.first.call(null, arglist), spread.call(null, cljs.core.next.call(null, arglist)));
      } else {
        return null;
      }
    }
  }
};
cljs.core.concat = function() {
  var concat = null;
  var concat__0 = function() {
    return new cljs.core.LazySeq(null, function() {
      return null;
    }, null, null);
  };
  var concat__1 = function(x) {
    return new cljs.core.LazySeq(null, function() {
      return x;
    }, null, null);
  };
  var concat__2 = function(x, y) {
    return new cljs.core.LazySeq(null, function() {
      var s = cljs.core.seq.call(null, x);
      if (s) {
        if (cljs.core.chunked_seq_QMARK_.call(null, s)) {
          return cljs.core.chunk_cons.call(null, cljs.core.chunk_first.call(null, s), concat.call(null, cljs.core.chunk_rest.call(null, s), y));
        } else {
          return cljs.core.cons.call(null, cljs.core.first.call(null, s), concat.call(null, cljs.core.rest.call(null, s), y));
        }
      } else {
        return y;
      }
    }, null, null);
  };
  var concat__3 = function() {
    var G__11004__delegate = function(x, y, zs) {
      var cat = function cat(xys, zs__$1) {
        return new cljs.core.LazySeq(null, function() {
          var xys__$1 = cljs.core.seq.call(null, xys);
          if (xys__$1) {
            if (cljs.core.chunked_seq_QMARK_.call(null, xys__$1)) {
              return cljs.core.chunk_cons.call(null, cljs.core.chunk_first.call(null, xys__$1), cat.call(null, cljs.core.chunk_rest.call(null, xys__$1), zs__$1));
            } else {
              return cljs.core.cons.call(null, cljs.core.first.call(null, xys__$1), cat.call(null, cljs.core.rest.call(null, xys__$1), zs__$1));
            }
          } else {
            if (cljs.core.truth_(zs__$1)) {
              return cat.call(null, cljs.core.first.call(null, zs__$1), cljs.core.next.call(null, zs__$1));
            } else {
              return null;
            }
          }
        }, null, null);
      };
      return cat.call(null, concat.call(null, x, y), zs);
    };
    var G__11004 = function(x, y, var_args) {
      var zs = null;
      if (arguments.length > 2) {
        zs = cljs.core.array_seq(Array.prototype.slice.call(arguments, 2), 0);
      }
      return G__11004__delegate.call(this, x, y, zs);
    };
    G__11004.cljs$lang$maxFixedArity = 2;
    G__11004.cljs$lang$applyTo = function(arglist__11005) {
      var x = cljs.core.first(arglist__11005);
      arglist__11005 = cljs.core.next(arglist__11005);
      var y = cljs.core.first(arglist__11005);
      var zs = cljs.core.rest(arglist__11005);
      return G__11004__delegate(x, y, zs);
    };
    G__11004.cljs$core$IFn$_invoke$arity$variadic = G__11004__delegate;
    return G__11004;
  }();
  concat = function(x, y, var_args) {
    var zs = var_args;
    switch(arguments.length) {
      case 0:
        return concat__0.call(this);
      case 1:
        return concat__1.call(this, x);
      case 2:
        return concat__2.call(this, x, y);
      default:
        return concat__3.cljs$core$IFn$_invoke$arity$variadic(x, y, cljs.core.array_seq(arguments, 2));
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  concat.cljs$lang$maxFixedArity = 2;
  concat.cljs$lang$applyTo = concat__3.cljs$lang$applyTo;
  concat.cljs$core$IFn$_invoke$arity$0 = concat__0;
  concat.cljs$core$IFn$_invoke$arity$1 = concat__1;
  concat.cljs$core$IFn$_invoke$arity$2 = concat__2;
  concat.cljs$core$IFn$_invoke$arity$variadic = concat__3.cljs$core$IFn$_invoke$arity$variadic;
  return concat;
}();
cljs.core.list_STAR_ = function() {
  var list_STAR_ = null;
  var list_STAR___1 = function(args) {
    return cljs.core.seq.call(null, args);
  };
  var list_STAR___2 = function(a, args) {
    return cljs.core.cons.call(null, a, args);
  };
  var list_STAR___3 = function(a, b, args) {
    return cljs.core.cons.call(null, a, cljs.core.cons.call(null, b, args));
  };
  var list_STAR___4 = function(a, b, c, args) {
    return cljs.core.cons.call(null, a, cljs.core.cons.call(null, b, cljs.core.cons.call(null, c, args)));
  };
  var list_STAR___5 = function() {
    var G__11006__delegate = function(a, b, c, d, more) {
      return cljs.core.cons.call(null, a, cljs.core.cons.call(null, b, cljs.core.cons.call(null, c, cljs.core.cons.call(null, d, cljs.core.spread.call(null, more)))));
    };
    var G__11006 = function(a, b, c, d, var_args) {
      var more = null;
      if (arguments.length > 4) {
        more = cljs.core.array_seq(Array.prototype.slice.call(arguments, 4), 0);
      }
      return G__11006__delegate.call(this, a, b, c, d, more);
    };
    G__11006.cljs$lang$maxFixedArity = 4;
    G__11006.cljs$lang$applyTo = function(arglist__11007) {
      var a = cljs.core.first(arglist__11007);
      arglist__11007 = cljs.core.next(arglist__11007);
      var b = cljs.core.first(arglist__11007);
      arglist__11007 = cljs.core.next(arglist__11007);
      var c = cljs.core.first(arglist__11007);
      arglist__11007 = cljs.core.next(arglist__11007);
      var d = cljs.core.first(arglist__11007);
      var more = cljs.core.rest(arglist__11007);
      return G__11006__delegate(a, b, c, d, more);
    };
    G__11006.cljs$core$IFn$_invoke$arity$variadic = G__11006__delegate;
    return G__11006;
  }();
  list_STAR_ = function(a, b, c, d, var_args) {
    var more = var_args;
    switch(arguments.length) {
      case 1:
        return list_STAR___1.call(this, a);
      case 2:
        return list_STAR___2.call(this, a, b);
      case 3:
        return list_STAR___3.call(this, a, b, c);
      case 4:
        return list_STAR___4.call(this, a, b, c, d);
      default:
        return list_STAR___5.cljs$core$IFn$_invoke$arity$variadic(a, b, c, d, cljs.core.array_seq(arguments, 4));
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  list_STAR_.cljs$lang$maxFixedArity = 4;
  list_STAR_.cljs$lang$applyTo = list_STAR___5.cljs$lang$applyTo;
  list_STAR_.cljs$core$IFn$_invoke$arity$1 = list_STAR___1;
  list_STAR_.cljs$core$IFn$_invoke$arity$2 = list_STAR___2;
  list_STAR_.cljs$core$IFn$_invoke$arity$3 = list_STAR___3;
  list_STAR_.cljs$core$IFn$_invoke$arity$4 = list_STAR___4;
  list_STAR_.cljs$core$IFn$_invoke$arity$variadic = list_STAR___5.cljs$core$IFn$_invoke$arity$variadic;
  return list_STAR_;
}();
cljs.core.transient$ = function transient$(coll) {
  return cljs.core._as_transient.call(null, coll);
};
cljs.core.persistent_BANG_ = function persistent_BANG_(tcoll) {
  return cljs.core._persistent_BANG_.call(null, tcoll);
};
cljs.core.conj_BANG_ = function() {
  var conj_BANG_ = null;
  var conj_BANG___2 = function(tcoll, val) {
    return cljs.core._conj_BANG_.call(null, tcoll, val);
  };
  var conj_BANG___3 = function() {
    var G__11008__delegate = function(tcoll, val, vals) {
      while (true) {
        var ntcoll = cljs.core._conj_BANG_.call(null, tcoll, val);
        if (cljs.core.truth_(vals)) {
          var G__11009 = ntcoll;
          var G__11010 = cljs.core.first.call(null, vals);
          var G__11011 = cljs.core.next.call(null, vals);
          tcoll = G__11009;
          val = G__11010;
          vals = G__11011;
          continue;
        } else {
          return ntcoll;
        }
        break;
      }
    };
    var G__11008 = function(tcoll, val, var_args) {
      var vals = null;
      if (arguments.length > 2) {
        vals = cljs.core.array_seq(Array.prototype.slice.call(arguments, 2), 0);
      }
      return G__11008__delegate.call(this, tcoll, val, vals);
    };
    G__11008.cljs$lang$maxFixedArity = 2;
    G__11008.cljs$lang$applyTo = function(arglist__11012) {
      var tcoll = cljs.core.first(arglist__11012);
      arglist__11012 = cljs.core.next(arglist__11012);
      var val = cljs.core.first(arglist__11012);
      var vals = cljs.core.rest(arglist__11012);
      return G__11008__delegate(tcoll, val, vals);
    };
    G__11008.cljs$core$IFn$_invoke$arity$variadic = G__11008__delegate;
    return G__11008;
  }();
  conj_BANG_ = function(tcoll, val, var_args) {
    var vals = var_args;
    switch(arguments.length) {
      case 2:
        return conj_BANG___2.call(this, tcoll, val);
      default:
        return conj_BANG___3.cljs$core$IFn$_invoke$arity$variadic(tcoll, val, cljs.core.array_seq(arguments, 2));
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  conj_BANG_.cljs$lang$maxFixedArity = 2;
  conj_BANG_.cljs$lang$applyTo = conj_BANG___3.cljs$lang$applyTo;
  conj_BANG_.cljs$core$IFn$_invoke$arity$2 = conj_BANG___2;
  conj_BANG_.cljs$core$IFn$_invoke$arity$variadic = conj_BANG___3.cljs$core$IFn$_invoke$arity$variadic;
  return conj_BANG_;
}();
cljs.core.assoc_BANG_ = function() {
  var assoc_BANG_ = null;
  var assoc_BANG___3 = function(tcoll, key, val) {
    return cljs.core._assoc_BANG_.call(null, tcoll, key, val);
  };
  var assoc_BANG___4 = function() {
    var G__11013__delegate = function(tcoll, key, val, kvs) {
      while (true) {
        var ntcoll = cljs.core._assoc_BANG_.call(null, tcoll, key, val);
        if (cljs.core.truth_(kvs)) {
          var G__11014 = ntcoll;
          var G__11015 = cljs.core.first.call(null, kvs);
          var G__11016 = cljs.core.second.call(null, kvs);
          var G__11017 = cljs.core.nnext.call(null, kvs);
          tcoll = G__11014;
          key = G__11015;
          val = G__11016;
          kvs = G__11017;
          continue;
        } else {
          return ntcoll;
        }
        break;
      }
    };
    var G__11013 = function(tcoll, key, val, var_args) {
      var kvs = null;
      if (arguments.length > 3) {
        kvs = cljs.core.array_seq(Array.prototype.slice.call(arguments, 3), 0);
      }
      return G__11013__delegate.call(this, tcoll, key, val, kvs);
    };
    G__11013.cljs$lang$maxFixedArity = 3;
    G__11013.cljs$lang$applyTo = function(arglist__11018) {
      var tcoll = cljs.core.first(arglist__11018);
      arglist__11018 = cljs.core.next(arglist__11018);
      var key = cljs.core.first(arglist__11018);
      arglist__11018 = cljs.core.next(arglist__11018);
      var val = cljs.core.first(arglist__11018);
      var kvs = cljs.core.rest(arglist__11018);
      return G__11013__delegate(tcoll, key, val, kvs);
    };
    G__11013.cljs$core$IFn$_invoke$arity$variadic = G__11013__delegate;
    return G__11013;
  }();
  assoc_BANG_ = function(tcoll, key, val, var_args) {
    var kvs = var_args;
    switch(arguments.length) {
      case 3:
        return assoc_BANG___3.call(this, tcoll, key, val);
      default:
        return assoc_BANG___4.cljs$core$IFn$_invoke$arity$variadic(tcoll, key, val, cljs.core.array_seq(arguments, 3));
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  assoc_BANG_.cljs$lang$maxFixedArity = 3;
  assoc_BANG_.cljs$lang$applyTo = assoc_BANG___4.cljs$lang$applyTo;
  assoc_BANG_.cljs$core$IFn$_invoke$arity$3 = assoc_BANG___3;
  assoc_BANG_.cljs$core$IFn$_invoke$arity$variadic = assoc_BANG___4.cljs$core$IFn$_invoke$arity$variadic;
  return assoc_BANG_;
}();
cljs.core.dissoc_BANG_ = function() {
  var dissoc_BANG_ = null;
  var dissoc_BANG___2 = function(tcoll, key) {
    return cljs.core._dissoc_BANG_.call(null, tcoll, key);
  };
  var dissoc_BANG___3 = function() {
    var G__11019__delegate = function(tcoll, key, ks) {
      while (true) {
        var ntcoll = cljs.core._dissoc_BANG_.call(null, tcoll, key);
        if (cljs.core.truth_(ks)) {
          var G__11020 = ntcoll;
          var G__11021 = cljs.core.first.call(null, ks);
          var G__11022 = cljs.core.next.call(null, ks);
          tcoll = G__11020;
          key = G__11021;
          ks = G__11022;
          continue;
        } else {
          return ntcoll;
        }
        break;
      }
    };
    var G__11019 = function(tcoll, key, var_args) {
      var ks = null;
      if (arguments.length > 2) {
        ks = cljs.core.array_seq(Array.prototype.slice.call(arguments, 2), 0);
      }
      return G__11019__delegate.call(this, tcoll, key, ks);
    };
    G__11019.cljs$lang$maxFixedArity = 2;
    G__11019.cljs$lang$applyTo = function(arglist__11023) {
      var tcoll = cljs.core.first(arglist__11023);
      arglist__11023 = cljs.core.next(arglist__11023);
      var key = cljs.core.first(arglist__11023);
      var ks = cljs.core.rest(arglist__11023);
      return G__11019__delegate(tcoll, key, ks);
    };
    G__11019.cljs$core$IFn$_invoke$arity$variadic = G__11019__delegate;
    return G__11019;
  }();
  dissoc_BANG_ = function(tcoll, key, var_args) {
    var ks = var_args;
    switch(arguments.length) {
      case 2:
        return dissoc_BANG___2.call(this, tcoll, key);
      default:
        return dissoc_BANG___3.cljs$core$IFn$_invoke$arity$variadic(tcoll, key, cljs.core.array_seq(arguments, 2));
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  dissoc_BANG_.cljs$lang$maxFixedArity = 2;
  dissoc_BANG_.cljs$lang$applyTo = dissoc_BANG___3.cljs$lang$applyTo;
  dissoc_BANG_.cljs$core$IFn$_invoke$arity$2 = dissoc_BANG___2;
  dissoc_BANG_.cljs$core$IFn$_invoke$arity$variadic = dissoc_BANG___3.cljs$core$IFn$_invoke$arity$variadic;
  return dissoc_BANG_;
}();
cljs.core.pop_BANG_ = function pop_BANG_(tcoll) {
  return cljs.core._pop_BANG_.call(null, tcoll);
};
cljs.core.disj_BANG_ = function() {
  var disj_BANG_ = null;
  var disj_BANG___2 = function(tcoll, val) {
    return cljs.core._disjoin_BANG_.call(null, tcoll, val);
  };
  var disj_BANG___3 = function() {
    var G__11024__delegate = function(tcoll, val, vals) {
      while (true) {
        var ntcoll = cljs.core._disjoin_BANG_.call(null, tcoll, val);
        if (cljs.core.truth_(vals)) {
          var G__11025 = ntcoll;
          var G__11026 = cljs.core.first.call(null, vals);
          var G__11027 = cljs.core.next.call(null, vals);
          tcoll = G__11025;
          val = G__11026;
          vals = G__11027;
          continue;
        } else {
          return ntcoll;
        }
        break;
      }
    };
    var G__11024 = function(tcoll, val, var_args) {
      var vals = null;
      if (arguments.length > 2) {
        vals = cljs.core.array_seq(Array.prototype.slice.call(arguments, 2), 0);
      }
      return G__11024__delegate.call(this, tcoll, val, vals);
    };
    G__11024.cljs$lang$maxFixedArity = 2;
    G__11024.cljs$lang$applyTo = function(arglist__11028) {
      var tcoll = cljs.core.first(arglist__11028);
      arglist__11028 = cljs.core.next(arglist__11028);
      var val = cljs.core.first(arglist__11028);
      var vals = cljs.core.rest(arglist__11028);
      return G__11024__delegate(tcoll, val, vals);
    };
    G__11024.cljs$core$IFn$_invoke$arity$variadic = G__11024__delegate;
    return G__11024;
  }();
  disj_BANG_ = function(tcoll, val, var_args) {
    var vals = var_args;
    switch(arguments.length) {
      case 2:
        return disj_BANG___2.call(this, tcoll, val);
      default:
        return disj_BANG___3.cljs$core$IFn$_invoke$arity$variadic(tcoll, val, cljs.core.array_seq(arguments, 2));
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  disj_BANG_.cljs$lang$maxFixedArity = 2;
  disj_BANG_.cljs$lang$applyTo = disj_BANG___3.cljs$lang$applyTo;
  disj_BANG_.cljs$core$IFn$_invoke$arity$2 = disj_BANG___2;
  disj_BANG_.cljs$core$IFn$_invoke$arity$variadic = disj_BANG___3.cljs$core$IFn$_invoke$arity$variadic;
  return disj_BANG_;
}();
cljs.core.apply_to = function apply_to(f, argc, args) {
  var args__$1 = cljs.core.seq.call(null, args);
  if (argc === 0) {
    return f.call(null);
  } else {
    var a = cljs.core._first.call(null, args__$1);
    var args__$2 = cljs.core._rest.call(null, args__$1);
    if (argc === 1) {
      if (f.cljs$core$IFn$_invoke$arity$1) {
        return f.cljs$core$IFn$_invoke$arity$1(a);
      } else {
        return f.call(null, a);
      }
    } else {
      var b = cljs.core._first.call(null, args__$2);
      var args__$3 = cljs.core._rest.call(null, args__$2);
      if (argc === 2) {
        if (f.cljs$core$IFn$_invoke$arity$2) {
          return f.cljs$core$IFn$_invoke$arity$2(a, b);
        } else {
          return f.call(null, a, b);
        }
      } else {
        var c = cljs.core._first.call(null, args__$3);
        var args__$4 = cljs.core._rest.call(null, args__$3);
        if (argc === 3) {
          if (f.cljs$core$IFn$_invoke$arity$3) {
            return f.cljs$core$IFn$_invoke$arity$3(a, b, c);
          } else {
            return f.call(null, a, b, c);
          }
        } else {
          var d = cljs.core._first.call(null, args__$4);
          var args__$5 = cljs.core._rest.call(null, args__$4);
          if (argc === 4) {
            if (f.cljs$core$IFn$_invoke$arity$4) {
              return f.cljs$core$IFn$_invoke$arity$4(a, b, c, d);
            } else {
              return f.call(null, a, b, c, d);
            }
          } else {
            var e = cljs.core._first.call(null, args__$5);
            var args__$6 = cljs.core._rest.call(null, args__$5);
            if (argc === 5) {
              if (f.cljs$core$IFn$_invoke$arity$5) {
                return f.cljs$core$IFn$_invoke$arity$5(a, b, c, d, e);
              } else {
                return f.call(null, a, b, c, d, e);
              }
            } else {
              var f__$1 = cljs.core._first.call(null, args__$6);
              var args__$7 = cljs.core._rest.call(null, args__$6);
              if (argc === 6) {
                if (f__$1.cljs$core$IFn$_invoke$arity$6) {
                  return f__$1.cljs$core$IFn$_invoke$arity$6(a, b, c, d, e, f__$1);
                } else {
                  return f__$1.call(null, a, b, c, d, e, f__$1);
                }
              } else {
                var g = cljs.core._first.call(null, args__$7);
                var args__$8 = cljs.core._rest.call(null, args__$7);
                if (argc === 7) {
                  if (f__$1.cljs$core$IFn$_invoke$arity$7) {
                    return f__$1.cljs$core$IFn$_invoke$arity$7(a, b, c, d, e, f__$1, g);
                  } else {
                    return f__$1.call(null, a, b, c, d, e, f__$1, g);
                  }
                } else {
                  var h = cljs.core._first.call(null, args__$8);
                  var args__$9 = cljs.core._rest.call(null, args__$8);
                  if (argc === 8) {
                    if (f__$1.cljs$core$IFn$_invoke$arity$8) {
                      return f__$1.cljs$core$IFn$_invoke$arity$8(a, b, c, d, e, f__$1, g, h);
                    } else {
                      return f__$1.call(null, a, b, c, d, e, f__$1, g, h);
                    }
                  } else {
                    var i = cljs.core._first.call(null, args__$9);
                    var args__$10 = cljs.core._rest.call(null, args__$9);
                    if (argc === 9) {
                      if (f__$1.cljs$core$IFn$_invoke$arity$9) {
                        return f__$1.cljs$core$IFn$_invoke$arity$9(a, b, c, d, e, f__$1, g, h, i);
                      } else {
                        return f__$1.call(null, a, b, c, d, e, f__$1, g, h, i);
                      }
                    } else {
                      var j = cljs.core._first.call(null, args__$10);
                      var args__$11 = cljs.core._rest.call(null, args__$10);
                      if (argc === 10) {
                        if (f__$1.cljs$core$IFn$_invoke$arity$10) {
                          return f__$1.cljs$core$IFn$_invoke$arity$10(a, b, c, d, e, f__$1, g, h, i, j);
                        } else {
                          return f__$1.call(null, a, b, c, d, e, f__$1, g, h, i, j);
                        }
                      } else {
                        var k = cljs.core._first.call(null, args__$11);
                        var args__$12 = cljs.core._rest.call(null, args__$11);
                        if (argc === 11) {
                          if (f__$1.cljs$core$IFn$_invoke$arity$11) {
                            return f__$1.cljs$core$IFn$_invoke$arity$11(a, b, c, d, e, f__$1, g, h, i, j, k);
                          } else {
                            return f__$1.call(null, a, b, c, d, e, f__$1, g, h, i, j, k);
                          }
                        } else {
                          var l = cljs.core._first.call(null, args__$12);
                          var args__$13 = cljs.core._rest.call(null, args__$12);
                          if (argc === 12) {
                            if (f__$1.cljs$core$IFn$_invoke$arity$12) {
                              return f__$1.cljs$core$IFn$_invoke$arity$12(a, b, c, d, e, f__$1, g, h, i, j, k, l);
                            } else {
                              return f__$1.call(null, a, b, c, d, e, f__$1, g, h, i, j, k, l);
                            }
                          } else {
                            var m = cljs.core._first.call(null, args__$13);
                            var args__$14 = cljs.core._rest.call(null, args__$13);
                            if (argc === 13) {
                              if (f__$1.cljs$core$IFn$_invoke$arity$13) {
                                return f__$1.cljs$core$IFn$_invoke$arity$13(a, b, c, d, e, f__$1, g, h, i, j, k, l, m);
                              } else {
                                return f__$1.call(null, a, b, c, d, e, f__$1, g, h, i, j, k, l, m);
                              }
                            } else {
                              var n = cljs.core._first.call(null, args__$14);
                              var args__$15 = cljs.core._rest.call(null, args__$14);
                              if (argc === 14) {
                                if (f__$1.cljs$core$IFn$_invoke$arity$14) {
                                  return f__$1.cljs$core$IFn$_invoke$arity$14(a, b, c, d, e, f__$1, g, h, i, j, k, l, m, n);
                                } else {
                                  return f__$1.call(null, a, b, c, d, e, f__$1, g, h, i, j, k, l, m, n);
                                }
                              } else {
                                var o = cljs.core._first.call(null, args__$15);
                                var args__$16 = cljs.core._rest.call(null, args__$15);
                                if (argc === 15) {
                                  if (f__$1.cljs$core$IFn$_invoke$arity$15) {
                                    return f__$1.cljs$core$IFn$_invoke$arity$15(a, b, c, d, e, f__$1, g, h, i, j, k, l, m, n, o);
                                  } else {
                                    return f__$1.call(null, a, b, c, d, e, f__$1, g, h, i, j, k, l, m, n, o);
                                  }
                                } else {
                                  var p = cljs.core._first.call(null, args__$16);
                                  var args__$17 = cljs.core._rest.call(null, args__$16);
                                  if (argc === 16) {
                                    if (f__$1.cljs$core$IFn$_invoke$arity$16) {
                                      return f__$1.cljs$core$IFn$_invoke$arity$16(a, b, c, d, e, f__$1, g, h, i, j, k, l, m, n, o, p);
                                    } else {
                                      return f__$1.call(null, a, b, c, d, e, f__$1, g, h, i, j, k, l, m, n, o, p);
                                    }
                                  } else {
                                    var q = cljs.core._first.call(null, args__$17);
                                    var args__$18 = cljs.core._rest.call(null, args__$17);
                                    if (argc === 17) {
                                      if (f__$1.cljs$core$IFn$_invoke$arity$17) {
                                        return f__$1.cljs$core$IFn$_invoke$arity$17(a, b, c, d, e, f__$1, g, h, i, j, k, l, m, n, o, p, q);
                                      } else {
                                        return f__$1.call(null, a, b, c, d, e, f__$1, g, h, i, j, k, l, m, n, o, p, q);
                                      }
                                    } else {
                                      var r = cljs.core._first.call(null, args__$18);
                                      var args__$19 = cljs.core._rest.call(null, args__$18);
                                      if (argc === 18) {
                                        if (f__$1.cljs$core$IFn$_invoke$arity$18) {
                                          return f__$1.cljs$core$IFn$_invoke$arity$18(a, b, c, d, e, f__$1, g, h, i, j, k, l, m, n, o, p, q, r);
                                        } else {
                                          return f__$1.call(null, a, b, c, d, e, f__$1, g, h, i, j, k, l, m, n, o, p, q, r);
                                        }
                                      } else {
                                        var s = cljs.core._first.call(null, args__$19);
                                        var args__$20 = cljs.core._rest.call(null, args__$19);
                                        if (argc === 19) {
                                          if (f__$1.cljs$core$IFn$_invoke$arity$19) {
                                            return f__$1.cljs$core$IFn$_invoke$arity$19(a, b, c, d, e, f__$1, g, h, i, j, k, l, m, n, o, p, q, r, s);
                                          } else {
                                            return f__$1.call(null, a, b, c, d, e, f__$1, g, h, i, j, k, l, m, n, o, p, q, r, s);
                                          }
                                        } else {
                                          var t = cljs.core._first.call(null, args__$20);
                                          var args__$21 = cljs.core._rest.call(null, args__$20);
                                          if (argc === 20) {
                                            if (f__$1.cljs$core$IFn$_invoke$arity$20) {
                                              return f__$1.cljs$core$IFn$_invoke$arity$20(a, b, c, d, e, f__$1, g, h, i, j, k, l, m, n, o, p, q, r, s, t);
                                            } else {
                                              return f__$1.call(null, a, b, c, d, e, f__$1, g, h, i, j, k, l, m, n, o, p, q, r, s, t);
                                            }
                                          } else {
                                            throw new Error("Only up to 20 arguments supported on functions");
                                          }
                                        }
                                      }
                                    }
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
  }
};
cljs.core.apply = function() {
  var apply = null;
  var apply__2 = function(f, args) {
    var fixed_arity = f.cljs$lang$maxFixedArity;
    if (f.cljs$lang$applyTo) {
      var bc = cljs.core.bounded_count.call(null, args, fixed_arity + 1);
      if (bc <= fixed_arity) {
        return cljs.core.apply_to.call(null, f, bc, args);
      } else {
        return f.cljs$lang$applyTo(args);
      }
    } else {
      return f.apply(f, cljs.core.to_array.call(null, args));
    }
  };
  var apply__3 = function(f, x, args) {
    var arglist = cljs.core.list_STAR_.call(null, x, args);
    var fixed_arity = f.cljs$lang$maxFixedArity;
    if (f.cljs$lang$applyTo) {
      var bc = cljs.core.bounded_count.call(null, arglist, fixed_arity + 1);
      if (bc <= fixed_arity) {
        return cljs.core.apply_to.call(null, f, bc, arglist);
      } else {
        return f.cljs$lang$applyTo(arglist);
      }
    } else {
      return f.apply(f, cljs.core.to_array.call(null, arglist));
    }
  };
  var apply__4 = function(f, x, y, args) {
    var arglist = cljs.core.list_STAR_.call(null, x, y, args);
    var fixed_arity = f.cljs$lang$maxFixedArity;
    if (f.cljs$lang$applyTo) {
      var bc = cljs.core.bounded_count.call(null, arglist, fixed_arity + 1);
      if (bc <= fixed_arity) {
        return cljs.core.apply_to.call(null, f, bc, arglist);
      } else {
        return f.cljs$lang$applyTo(arglist);
      }
    } else {
      return f.apply(f, cljs.core.to_array.call(null, arglist));
    }
  };
  var apply__5 = function(f, x, y, z, args) {
    var arglist = cljs.core.list_STAR_.call(null, x, y, z, args);
    var fixed_arity = f.cljs$lang$maxFixedArity;
    if (f.cljs$lang$applyTo) {
      var bc = cljs.core.bounded_count.call(null, arglist, fixed_arity + 1);
      if (bc <= fixed_arity) {
        return cljs.core.apply_to.call(null, f, bc, arglist);
      } else {
        return f.cljs$lang$applyTo(arglist);
      }
    } else {
      return f.apply(f, cljs.core.to_array.call(null, arglist));
    }
  };
  var apply__6 = function() {
    var G__11029__delegate = function(f, a, b, c, d, args) {
      var arglist = cljs.core.cons.call(null, a, cljs.core.cons.call(null, b, cljs.core.cons.call(null, c, cljs.core.cons.call(null, d, cljs.core.spread.call(null, args)))));
      var fixed_arity = f.cljs$lang$maxFixedArity;
      if (f.cljs$lang$applyTo) {
        var bc = cljs.core.bounded_count.call(null, arglist, fixed_arity + 1);
        if (bc <= fixed_arity) {
          return cljs.core.apply_to.call(null, f, bc, arglist);
        } else {
          return f.cljs$lang$applyTo(arglist);
        }
      } else {
        return f.apply(f, cljs.core.to_array.call(null, arglist));
      }
    };
    var G__11029 = function(f, a, b, c, d, var_args) {
      var args = null;
      if (arguments.length > 5) {
        args = cljs.core.array_seq(Array.prototype.slice.call(arguments, 5), 0);
      }
      return G__11029__delegate.call(this, f, a, b, c, d, args);
    };
    G__11029.cljs$lang$maxFixedArity = 5;
    G__11029.cljs$lang$applyTo = function(arglist__11030) {
      var f = cljs.core.first(arglist__11030);
      arglist__11030 = cljs.core.next(arglist__11030);
      var a = cljs.core.first(arglist__11030);
      arglist__11030 = cljs.core.next(arglist__11030);
      var b = cljs.core.first(arglist__11030);
      arglist__11030 = cljs.core.next(arglist__11030);
      var c = cljs.core.first(arglist__11030);
      arglist__11030 = cljs.core.next(arglist__11030);
      var d = cljs.core.first(arglist__11030);
      var args = cljs.core.rest(arglist__11030);
      return G__11029__delegate(f, a, b, c, d, args);
    };
    G__11029.cljs$core$IFn$_invoke$arity$variadic = G__11029__delegate;
    return G__11029;
  }();
  apply = function(f, a, b, c, d, var_args) {
    var args = var_args;
    switch(arguments.length) {
      case 2:
        return apply__2.call(this, f, a);
      case 3:
        return apply__3.call(this, f, a, b);
      case 4:
        return apply__4.call(this, f, a, b, c);
      case 5:
        return apply__5.call(this, f, a, b, c, d);
      default:
        return apply__6.cljs$core$IFn$_invoke$arity$variadic(f, a, b, c, d, cljs.core.array_seq(arguments, 5));
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  apply.cljs$lang$maxFixedArity = 5;
  apply.cljs$lang$applyTo = apply__6.cljs$lang$applyTo;
  apply.cljs$core$IFn$_invoke$arity$2 = apply__2;
  apply.cljs$core$IFn$_invoke$arity$3 = apply__3;
  apply.cljs$core$IFn$_invoke$arity$4 = apply__4;
  apply.cljs$core$IFn$_invoke$arity$5 = apply__5;
  apply.cljs$core$IFn$_invoke$arity$variadic = apply__6.cljs$core$IFn$_invoke$arity$variadic;
  return apply;
}();
cljs.core.vary_meta = function() {
  var vary_meta = null;
  var vary_meta__2 = function(obj, f) {
    return cljs.core.with_meta.call(null, obj, f.call(null, cljs.core.meta.call(null, obj)));
  };
  var vary_meta__3 = function(obj, f, a) {
    return cljs.core.with_meta.call(null, obj, f.call(null, cljs.core.meta.call(null, obj), a));
  };
  var vary_meta__4 = function(obj, f, a, b) {
    return cljs.core.with_meta.call(null, obj, f.call(null, cljs.core.meta.call(null, obj), a, b));
  };
  var vary_meta__5 = function(obj, f, a, b, c) {
    return cljs.core.with_meta.call(null, obj, f.call(null, cljs.core.meta.call(null, obj), a, b, c));
  };
  var vary_meta__6 = function(obj, f, a, b, c, d) {
    return cljs.core.with_meta.call(null, obj, f.call(null, cljs.core.meta.call(null, obj), a, b, c, d));
  };
  var vary_meta__7 = function() {
    var G__11031__delegate = function(obj, f, a, b, c, d, args) {
      return cljs.core.with_meta.call(null, obj, cljs.core.apply.call(null, f, cljs.core.meta.call(null, obj), a, b, c, d, args));
    };
    var G__11031 = function(obj, f, a, b, c, d, var_args) {
      var args = null;
      if (arguments.length > 6) {
        args = cljs.core.array_seq(Array.prototype.slice.call(arguments, 6), 0);
      }
      return G__11031__delegate.call(this, obj, f, a, b, c, d, args);
    };
    G__11031.cljs$lang$maxFixedArity = 6;
    G__11031.cljs$lang$applyTo = function(arglist__11032) {
      var obj = cljs.core.first(arglist__11032);
      arglist__11032 = cljs.core.next(arglist__11032);
      var f = cljs.core.first(arglist__11032);
      arglist__11032 = cljs.core.next(arglist__11032);
      var a = cljs.core.first(arglist__11032);
      arglist__11032 = cljs.core.next(arglist__11032);
      var b = cljs.core.first(arglist__11032);
      arglist__11032 = cljs.core.next(arglist__11032);
      var c = cljs.core.first(arglist__11032);
      arglist__11032 = cljs.core.next(arglist__11032);
      var d = cljs.core.first(arglist__11032);
      var args = cljs.core.rest(arglist__11032);
      return G__11031__delegate(obj, f, a, b, c, d, args);
    };
    G__11031.cljs$core$IFn$_invoke$arity$variadic = G__11031__delegate;
    return G__11031;
  }();
  vary_meta = function(obj, f, a, b, c, d, var_args) {
    var args = var_args;
    switch(arguments.length) {
      case 2:
        return vary_meta__2.call(this, obj, f);
      case 3:
        return vary_meta__3.call(this, obj, f, a);
      case 4:
        return vary_meta__4.call(this, obj, f, a, b);
      case 5:
        return vary_meta__5.call(this, obj, f, a, b, c);
      case 6:
        return vary_meta__6.call(this, obj, f, a, b, c, d);
      default:
        return vary_meta__7.cljs$core$IFn$_invoke$arity$variadic(obj, f, a, b, c, d, cljs.core.array_seq(arguments, 6));
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  vary_meta.cljs$lang$maxFixedArity = 6;
  vary_meta.cljs$lang$applyTo = vary_meta__7.cljs$lang$applyTo;
  vary_meta.cljs$core$IFn$_invoke$arity$2 = vary_meta__2;
  vary_meta.cljs$core$IFn$_invoke$arity$3 = vary_meta__3;
  vary_meta.cljs$core$IFn$_invoke$arity$4 = vary_meta__4;
  vary_meta.cljs$core$IFn$_invoke$arity$5 = vary_meta__5;
  vary_meta.cljs$core$IFn$_invoke$arity$6 = vary_meta__6;
  vary_meta.cljs$core$IFn$_invoke$arity$variadic = vary_meta__7.cljs$core$IFn$_invoke$arity$variadic;
  return vary_meta;
}();
cljs.core.not_EQ_ = function() {
  var not_EQ_ = null;
  var not_EQ___1 = function(x) {
    return false;
  };
  var not_EQ___2 = function(x, y) {
    return!cljs.core._EQ_.call(null, x, y);
  };
  var not_EQ___3 = function() {
    var G__11033__delegate = function(x, y, more) {
      return cljs.core.not.call(null, cljs.core.apply.call(null, cljs.core._EQ_, x, y, more));
    };
    var G__11033 = function(x, y, var_args) {
      var more = null;
      if (arguments.length > 2) {
        more = cljs.core.array_seq(Array.prototype.slice.call(arguments, 2), 0);
      }
      return G__11033__delegate.call(this, x, y, more);
    };
    G__11033.cljs$lang$maxFixedArity = 2;
    G__11033.cljs$lang$applyTo = function(arglist__11034) {
      var x = cljs.core.first(arglist__11034);
      arglist__11034 = cljs.core.next(arglist__11034);
      var y = cljs.core.first(arglist__11034);
      var more = cljs.core.rest(arglist__11034);
      return G__11033__delegate(x, y, more);
    };
    G__11033.cljs$core$IFn$_invoke$arity$variadic = G__11033__delegate;
    return G__11033;
  }();
  not_EQ_ = function(x, y, var_args) {
    var more = var_args;
    switch(arguments.length) {
      case 1:
        return not_EQ___1.call(this, x);
      case 2:
        return not_EQ___2.call(this, x, y);
      default:
        return not_EQ___3.cljs$core$IFn$_invoke$arity$variadic(x, y, cljs.core.array_seq(arguments, 2));
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  not_EQ_.cljs$lang$maxFixedArity = 2;
  not_EQ_.cljs$lang$applyTo = not_EQ___3.cljs$lang$applyTo;
  not_EQ_.cljs$core$IFn$_invoke$arity$1 = not_EQ___1;
  not_EQ_.cljs$core$IFn$_invoke$arity$2 = not_EQ___2;
  not_EQ_.cljs$core$IFn$_invoke$arity$variadic = not_EQ___3.cljs$core$IFn$_invoke$arity$variadic;
  return not_EQ_;
}();
cljs.core.not_empty = function not_empty(coll) {
  if (cljs.core.seq.call(null, coll)) {
    return coll;
  } else {
    return null;
  }
};
cljs.core.every_QMARK_ = function every_QMARK_(pred, coll) {
  while (true) {
    if (cljs.core.seq.call(null, coll) == null) {
      return true;
    } else {
      if (cljs.core.truth_(pred.call(null, cljs.core.first.call(null, coll)))) {
        var G__11035 = pred;
        var G__11036 = cljs.core.next.call(null, coll);
        pred = G__11035;
        coll = G__11036;
        continue;
      } else {
        if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
          return false;
        } else {
          return null;
        }
      }
    }
    break;
  }
};
cljs.core.not_every_QMARK_ = function not_every_QMARK_(pred, coll) {
  return!cljs.core.every_QMARK_.call(null, pred, coll);
};
cljs.core.some = function some(pred, coll) {
  while (true) {
    if (cljs.core.seq.call(null, coll)) {
      var or__3403__auto__ = pred.call(null, cljs.core.first.call(null, coll));
      if (cljs.core.truth_(or__3403__auto__)) {
        return or__3403__auto__;
      } else {
        var G__11037 = pred;
        var G__11038 = cljs.core.next.call(null, coll);
        pred = G__11037;
        coll = G__11038;
        continue;
      }
    } else {
      return null;
    }
    break;
  }
};
cljs.core.not_any_QMARK_ = function not_any_QMARK_(pred, coll) {
  return cljs.core.not.call(null, cljs.core.some.call(null, pred, coll));
};
cljs.core.even_QMARK_ = function even_QMARK_(n) {
  if (cljs.core.integer_QMARK_.call(null, n)) {
    return(n & 1) === 0;
  } else {
    throw new Error([cljs.core.str("Argument must be an integer: "), cljs.core.str(n)].join(""));
  }
};
cljs.core.odd_QMARK_ = function odd_QMARK_(n) {
  return!cljs.core.even_QMARK_.call(null, n);
};
cljs.core.identity = function identity(x) {
  return x;
};
cljs.core.complement = function complement(f) {
  return function() {
    var G__11039 = null;
    var G__11039__0 = function() {
      return cljs.core.not.call(null, f.call(null));
    };
    var G__11039__1 = function(x) {
      return cljs.core.not.call(null, f.call(null, x));
    };
    var G__11039__2 = function(x, y) {
      return cljs.core.not.call(null, f.call(null, x, y));
    };
    var G__11039__3 = function() {
      var G__11040__delegate = function(x, y, zs) {
        return cljs.core.not.call(null, cljs.core.apply.call(null, f, x, y, zs));
      };
      var G__11040 = function(x, y, var_args) {
        var zs = null;
        if (arguments.length > 2) {
          zs = cljs.core.array_seq(Array.prototype.slice.call(arguments, 2), 0);
        }
        return G__11040__delegate.call(this, x, y, zs);
      };
      G__11040.cljs$lang$maxFixedArity = 2;
      G__11040.cljs$lang$applyTo = function(arglist__11041) {
        var x = cljs.core.first(arglist__11041);
        arglist__11041 = cljs.core.next(arglist__11041);
        var y = cljs.core.first(arglist__11041);
        var zs = cljs.core.rest(arglist__11041);
        return G__11040__delegate(x, y, zs);
      };
      G__11040.cljs$core$IFn$_invoke$arity$variadic = G__11040__delegate;
      return G__11040;
    }();
    G__11039 = function(x, y, var_args) {
      var zs = var_args;
      switch(arguments.length) {
        case 0:
          return G__11039__0.call(this);
        case 1:
          return G__11039__1.call(this, x);
        case 2:
          return G__11039__2.call(this, x, y);
        default:
          return G__11039__3.cljs$core$IFn$_invoke$arity$variadic(x, y, cljs.core.array_seq(arguments, 2));
      }
      throw new Error("Invalid arity: " + arguments.length);
    };
    G__11039.cljs$lang$maxFixedArity = 2;
    G__11039.cljs$lang$applyTo = G__11039__3.cljs$lang$applyTo;
    return G__11039;
  }();
};
cljs.core.constantly = function constantly(x) {
  return function() {
    var G__11042__delegate = function(args) {
      return x;
    };
    var G__11042 = function(var_args) {
      var args = null;
      if (arguments.length > 0) {
        args = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0), 0);
      }
      return G__11042__delegate.call(this, args);
    };
    G__11042.cljs$lang$maxFixedArity = 0;
    G__11042.cljs$lang$applyTo = function(arglist__11043) {
      var args = cljs.core.seq(arglist__11043);
      return G__11042__delegate(args);
    };
    G__11042.cljs$core$IFn$_invoke$arity$variadic = G__11042__delegate;
    return G__11042;
  }();
};
cljs.core.comp = function() {
  var comp = null;
  var comp__0 = function() {
    return cljs.core.identity;
  };
  var comp__1 = function(f) {
    return f;
  };
  var comp__2 = function(f, g) {
    return function() {
      var G__11044 = null;
      var G__11044__0 = function() {
        return f.call(null, g.call(null));
      };
      var G__11044__1 = function(x) {
        return f.call(null, g.call(null, x));
      };
      var G__11044__2 = function(x, y) {
        return f.call(null, g.call(null, x, y));
      };
      var G__11044__3 = function(x, y, z) {
        return f.call(null, g.call(null, x, y, z));
      };
      var G__11044__4 = function() {
        var G__11045__delegate = function(x, y, z, args) {
          return f.call(null, cljs.core.apply.call(null, g, x, y, z, args));
        };
        var G__11045 = function(x, y, z, var_args) {
          var args = null;
          if (arguments.length > 3) {
            args = cljs.core.array_seq(Array.prototype.slice.call(arguments, 3), 0);
          }
          return G__11045__delegate.call(this, x, y, z, args);
        };
        G__11045.cljs$lang$maxFixedArity = 3;
        G__11045.cljs$lang$applyTo = function(arglist__11046) {
          var x = cljs.core.first(arglist__11046);
          arglist__11046 = cljs.core.next(arglist__11046);
          var y = cljs.core.first(arglist__11046);
          arglist__11046 = cljs.core.next(arglist__11046);
          var z = cljs.core.first(arglist__11046);
          var args = cljs.core.rest(arglist__11046);
          return G__11045__delegate(x, y, z, args);
        };
        G__11045.cljs$core$IFn$_invoke$arity$variadic = G__11045__delegate;
        return G__11045;
      }();
      G__11044 = function(x, y, z, var_args) {
        var args = var_args;
        switch(arguments.length) {
          case 0:
            return G__11044__0.call(this);
          case 1:
            return G__11044__1.call(this, x);
          case 2:
            return G__11044__2.call(this, x, y);
          case 3:
            return G__11044__3.call(this, x, y, z);
          default:
            return G__11044__4.cljs$core$IFn$_invoke$arity$variadic(x, y, z, cljs.core.array_seq(arguments, 3));
        }
        throw new Error("Invalid arity: " + arguments.length);
      };
      G__11044.cljs$lang$maxFixedArity = 3;
      G__11044.cljs$lang$applyTo = G__11044__4.cljs$lang$applyTo;
      return G__11044;
    }();
  };
  var comp__3 = function(f, g, h) {
    return function() {
      var G__11047 = null;
      var G__11047__0 = function() {
        return f.call(null, g.call(null, h.call(null)));
      };
      var G__11047__1 = function(x) {
        return f.call(null, g.call(null, h.call(null, x)));
      };
      var G__11047__2 = function(x, y) {
        return f.call(null, g.call(null, h.call(null, x, y)));
      };
      var G__11047__3 = function(x, y, z) {
        return f.call(null, g.call(null, h.call(null, x, y, z)));
      };
      var G__11047__4 = function() {
        var G__11048__delegate = function(x, y, z, args) {
          return f.call(null, g.call(null, cljs.core.apply.call(null, h, x, y, z, args)));
        };
        var G__11048 = function(x, y, z, var_args) {
          var args = null;
          if (arguments.length > 3) {
            args = cljs.core.array_seq(Array.prototype.slice.call(arguments, 3), 0);
          }
          return G__11048__delegate.call(this, x, y, z, args);
        };
        G__11048.cljs$lang$maxFixedArity = 3;
        G__11048.cljs$lang$applyTo = function(arglist__11049) {
          var x = cljs.core.first(arglist__11049);
          arglist__11049 = cljs.core.next(arglist__11049);
          var y = cljs.core.first(arglist__11049);
          arglist__11049 = cljs.core.next(arglist__11049);
          var z = cljs.core.first(arglist__11049);
          var args = cljs.core.rest(arglist__11049);
          return G__11048__delegate(x, y, z, args);
        };
        G__11048.cljs$core$IFn$_invoke$arity$variadic = G__11048__delegate;
        return G__11048;
      }();
      G__11047 = function(x, y, z, var_args) {
        var args = var_args;
        switch(arguments.length) {
          case 0:
            return G__11047__0.call(this);
          case 1:
            return G__11047__1.call(this, x);
          case 2:
            return G__11047__2.call(this, x, y);
          case 3:
            return G__11047__3.call(this, x, y, z);
          default:
            return G__11047__4.cljs$core$IFn$_invoke$arity$variadic(x, y, z, cljs.core.array_seq(arguments, 3));
        }
        throw new Error("Invalid arity: " + arguments.length);
      };
      G__11047.cljs$lang$maxFixedArity = 3;
      G__11047.cljs$lang$applyTo = G__11047__4.cljs$lang$applyTo;
      return G__11047;
    }();
  };
  var comp__4 = function() {
    var G__11050__delegate = function(f1, f2, f3, fs) {
      var fs__$1 = cljs.core.reverse.call(null, cljs.core.list_STAR_.call(null, f1, f2, f3, fs));
      return function() {
        var G__11051__delegate = function(args) {
          var ret = cljs.core.apply.call(null, cljs.core.first.call(null, fs__$1), args);
          var fs__$2 = cljs.core.next.call(null, fs__$1);
          while (true) {
            if (fs__$2) {
              var G__11052 = cljs.core.first.call(null, fs__$2).call(null, ret);
              var G__11053 = cljs.core.next.call(null, fs__$2);
              ret = G__11052;
              fs__$2 = G__11053;
              continue;
            } else {
              return ret;
            }
            break;
          }
        };
        var G__11051 = function(var_args) {
          var args = null;
          if (arguments.length > 0) {
            args = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0), 0);
          }
          return G__11051__delegate.call(this, args);
        };
        G__11051.cljs$lang$maxFixedArity = 0;
        G__11051.cljs$lang$applyTo = function(arglist__11054) {
          var args = cljs.core.seq(arglist__11054);
          return G__11051__delegate(args);
        };
        G__11051.cljs$core$IFn$_invoke$arity$variadic = G__11051__delegate;
        return G__11051;
      }();
    };
    var G__11050 = function(f1, f2, f3, var_args) {
      var fs = null;
      if (arguments.length > 3) {
        fs = cljs.core.array_seq(Array.prototype.slice.call(arguments, 3), 0);
      }
      return G__11050__delegate.call(this, f1, f2, f3, fs);
    };
    G__11050.cljs$lang$maxFixedArity = 3;
    G__11050.cljs$lang$applyTo = function(arglist__11055) {
      var f1 = cljs.core.first(arglist__11055);
      arglist__11055 = cljs.core.next(arglist__11055);
      var f2 = cljs.core.first(arglist__11055);
      arglist__11055 = cljs.core.next(arglist__11055);
      var f3 = cljs.core.first(arglist__11055);
      var fs = cljs.core.rest(arglist__11055);
      return G__11050__delegate(f1, f2, f3, fs);
    };
    G__11050.cljs$core$IFn$_invoke$arity$variadic = G__11050__delegate;
    return G__11050;
  }();
  comp = function(f1, f2, f3, var_args) {
    var fs = var_args;
    switch(arguments.length) {
      case 0:
        return comp__0.call(this);
      case 1:
        return comp__1.call(this, f1);
      case 2:
        return comp__2.call(this, f1, f2);
      case 3:
        return comp__3.call(this, f1, f2, f3);
      default:
        return comp__4.cljs$core$IFn$_invoke$arity$variadic(f1, f2, f3, cljs.core.array_seq(arguments, 3));
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  comp.cljs$lang$maxFixedArity = 3;
  comp.cljs$lang$applyTo = comp__4.cljs$lang$applyTo;
  comp.cljs$core$IFn$_invoke$arity$0 = comp__0;
  comp.cljs$core$IFn$_invoke$arity$1 = comp__1;
  comp.cljs$core$IFn$_invoke$arity$2 = comp__2;
  comp.cljs$core$IFn$_invoke$arity$3 = comp__3;
  comp.cljs$core$IFn$_invoke$arity$variadic = comp__4.cljs$core$IFn$_invoke$arity$variadic;
  return comp;
}();
cljs.core.partial = function() {
  var partial = null;
  var partial__1 = function(f) {
    return f;
  };
  var partial__2 = function(f, arg1) {
    return function() {
      var G__11056__delegate = function(args) {
        return cljs.core.apply.call(null, f, arg1, args);
      };
      var G__11056 = function(var_args) {
        var args = null;
        if (arguments.length > 0) {
          args = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0), 0);
        }
        return G__11056__delegate.call(this, args);
      };
      G__11056.cljs$lang$maxFixedArity = 0;
      G__11056.cljs$lang$applyTo = function(arglist__11057) {
        var args = cljs.core.seq(arglist__11057);
        return G__11056__delegate(args);
      };
      G__11056.cljs$core$IFn$_invoke$arity$variadic = G__11056__delegate;
      return G__11056;
    }();
  };
  var partial__3 = function(f, arg1, arg2) {
    return function() {
      var G__11058__delegate = function(args) {
        return cljs.core.apply.call(null, f, arg1, arg2, args);
      };
      var G__11058 = function(var_args) {
        var args = null;
        if (arguments.length > 0) {
          args = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0), 0);
        }
        return G__11058__delegate.call(this, args);
      };
      G__11058.cljs$lang$maxFixedArity = 0;
      G__11058.cljs$lang$applyTo = function(arglist__11059) {
        var args = cljs.core.seq(arglist__11059);
        return G__11058__delegate(args);
      };
      G__11058.cljs$core$IFn$_invoke$arity$variadic = G__11058__delegate;
      return G__11058;
    }();
  };
  var partial__4 = function(f, arg1, arg2, arg3) {
    return function() {
      var G__11060__delegate = function(args) {
        return cljs.core.apply.call(null, f, arg1, arg2, arg3, args);
      };
      var G__11060 = function(var_args) {
        var args = null;
        if (arguments.length > 0) {
          args = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0), 0);
        }
        return G__11060__delegate.call(this, args);
      };
      G__11060.cljs$lang$maxFixedArity = 0;
      G__11060.cljs$lang$applyTo = function(arglist__11061) {
        var args = cljs.core.seq(arglist__11061);
        return G__11060__delegate(args);
      };
      G__11060.cljs$core$IFn$_invoke$arity$variadic = G__11060__delegate;
      return G__11060;
    }();
  };
  var partial__5 = function() {
    var G__11062__delegate = function(f, arg1, arg2, arg3, more) {
      return function() {
        var G__11063__delegate = function(args) {
          return cljs.core.apply.call(null, f, arg1, arg2, arg3, cljs.core.concat.call(null, more, args));
        };
        var G__11063 = function(var_args) {
          var args = null;
          if (arguments.length > 0) {
            args = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0), 0);
          }
          return G__11063__delegate.call(this, args);
        };
        G__11063.cljs$lang$maxFixedArity = 0;
        G__11063.cljs$lang$applyTo = function(arglist__11064) {
          var args = cljs.core.seq(arglist__11064);
          return G__11063__delegate(args);
        };
        G__11063.cljs$core$IFn$_invoke$arity$variadic = G__11063__delegate;
        return G__11063;
      }();
    };
    var G__11062 = function(f, arg1, arg2, arg3, var_args) {
      var more = null;
      if (arguments.length > 4) {
        more = cljs.core.array_seq(Array.prototype.slice.call(arguments, 4), 0);
      }
      return G__11062__delegate.call(this, f, arg1, arg2, arg3, more);
    };
    G__11062.cljs$lang$maxFixedArity = 4;
    G__11062.cljs$lang$applyTo = function(arglist__11065) {
      var f = cljs.core.first(arglist__11065);
      arglist__11065 = cljs.core.next(arglist__11065);
      var arg1 = cljs.core.first(arglist__11065);
      arglist__11065 = cljs.core.next(arglist__11065);
      var arg2 = cljs.core.first(arglist__11065);
      arglist__11065 = cljs.core.next(arglist__11065);
      var arg3 = cljs.core.first(arglist__11065);
      var more = cljs.core.rest(arglist__11065);
      return G__11062__delegate(f, arg1, arg2, arg3, more);
    };
    G__11062.cljs$core$IFn$_invoke$arity$variadic = G__11062__delegate;
    return G__11062;
  }();
  partial = function(f, arg1, arg2, arg3, var_args) {
    var more = var_args;
    switch(arguments.length) {
      case 1:
        return partial__1.call(this, f);
      case 2:
        return partial__2.call(this, f, arg1);
      case 3:
        return partial__3.call(this, f, arg1, arg2);
      case 4:
        return partial__4.call(this, f, arg1, arg2, arg3);
      default:
        return partial__5.cljs$core$IFn$_invoke$arity$variadic(f, arg1, arg2, arg3, cljs.core.array_seq(arguments, 4));
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  partial.cljs$lang$maxFixedArity = 4;
  partial.cljs$lang$applyTo = partial__5.cljs$lang$applyTo;
  partial.cljs$core$IFn$_invoke$arity$1 = partial__1;
  partial.cljs$core$IFn$_invoke$arity$2 = partial__2;
  partial.cljs$core$IFn$_invoke$arity$3 = partial__3;
  partial.cljs$core$IFn$_invoke$arity$4 = partial__4;
  partial.cljs$core$IFn$_invoke$arity$variadic = partial__5.cljs$core$IFn$_invoke$arity$variadic;
  return partial;
}();
cljs.core.fnil = function() {
  var fnil = null;
  var fnil__2 = function(f, x) {
    return function() {
      var G__11066 = null;
      var G__11066__1 = function(a) {
        return f.call(null, a == null ? x : a);
      };
      var G__11066__2 = function(a, b) {
        return f.call(null, a == null ? x : a, b);
      };
      var G__11066__3 = function(a, b, c) {
        return f.call(null, a == null ? x : a, b, c);
      };
      var G__11066__4 = function() {
        var G__11067__delegate = function(a, b, c, ds) {
          return cljs.core.apply.call(null, f, a == null ? x : a, b, c, ds);
        };
        var G__11067 = function(a, b, c, var_args) {
          var ds = null;
          if (arguments.length > 3) {
            ds = cljs.core.array_seq(Array.prototype.slice.call(arguments, 3), 0);
          }
          return G__11067__delegate.call(this, a, b, c, ds);
        };
        G__11067.cljs$lang$maxFixedArity = 3;
        G__11067.cljs$lang$applyTo = function(arglist__11068) {
          var a = cljs.core.first(arglist__11068);
          arglist__11068 = cljs.core.next(arglist__11068);
          var b = cljs.core.first(arglist__11068);
          arglist__11068 = cljs.core.next(arglist__11068);
          var c = cljs.core.first(arglist__11068);
          var ds = cljs.core.rest(arglist__11068);
          return G__11067__delegate(a, b, c, ds);
        };
        G__11067.cljs$core$IFn$_invoke$arity$variadic = G__11067__delegate;
        return G__11067;
      }();
      G__11066 = function(a, b, c, var_args) {
        var ds = var_args;
        switch(arguments.length) {
          case 1:
            return G__11066__1.call(this, a);
          case 2:
            return G__11066__2.call(this, a, b);
          case 3:
            return G__11066__3.call(this, a, b, c);
          default:
            return G__11066__4.cljs$core$IFn$_invoke$arity$variadic(a, b, c, cljs.core.array_seq(arguments, 3));
        }
        throw new Error("Invalid arity: " + arguments.length);
      };
      G__11066.cljs$lang$maxFixedArity = 3;
      G__11066.cljs$lang$applyTo = G__11066__4.cljs$lang$applyTo;
      return G__11066;
    }();
  };
  var fnil__3 = function(f, x, y) {
    return function() {
      var G__11069 = null;
      var G__11069__2 = function(a, b) {
        return f.call(null, a == null ? x : a, b == null ? y : b);
      };
      var G__11069__3 = function(a, b, c) {
        return f.call(null, a == null ? x : a, b == null ? y : b, c);
      };
      var G__11069__4 = function() {
        var G__11070__delegate = function(a, b, c, ds) {
          return cljs.core.apply.call(null, f, a == null ? x : a, b == null ? y : b, c, ds);
        };
        var G__11070 = function(a, b, c, var_args) {
          var ds = null;
          if (arguments.length > 3) {
            ds = cljs.core.array_seq(Array.prototype.slice.call(arguments, 3), 0);
          }
          return G__11070__delegate.call(this, a, b, c, ds);
        };
        G__11070.cljs$lang$maxFixedArity = 3;
        G__11070.cljs$lang$applyTo = function(arglist__11071) {
          var a = cljs.core.first(arglist__11071);
          arglist__11071 = cljs.core.next(arglist__11071);
          var b = cljs.core.first(arglist__11071);
          arglist__11071 = cljs.core.next(arglist__11071);
          var c = cljs.core.first(arglist__11071);
          var ds = cljs.core.rest(arglist__11071);
          return G__11070__delegate(a, b, c, ds);
        };
        G__11070.cljs$core$IFn$_invoke$arity$variadic = G__11070__delegate;
        return G__11070;
      }();
      G__11069 = function(a, b, c, var_args) {
        var ds = var_args;
        switch(arguments.length) {
          case 2:
            return G__11069__2.call(this, a, b);
          case 3:
            return G__11069__3.call(this, a, b, c);
          default:
            return G__11069__4.cljs$core$IFn$_invoke$arity$variadic(a, b, c, cljs.core.array_seq(arguments, 3));
        }
        throw new Error("Invalid arity: " + arguments.length);
      };
      G__11069.cljs$lang$maxFixedArity = 3;
      G__11069.cljs$lang$applyTo = G__11069__4.cljs$lang$applyTo;
      return G__11069;
    }();
  };
  var fnil__4 = function(f, x, y, z) {
    return function() {
      var G__11072 = null;
      var G__11072__2 = function(a, b) {
        return f.call(null, a == null ? x : a, b == null ? y : b);
      };
      var G__11072__3 = function(a, b, c) {
        return f.call(null, a == null ? x : a, b == null ? y : b, c == null ? z : c);
      };
      var G__11072__4 = function() {
        var G__11073__delegate = function(a, b, c, ds) {
          return cljs.core.apply.call(null, f, a == null ? x : a, b == null ? y : b, c == null ? z : c, ds);
        };
        var G__11073 = function(a, b, c, var_args) {
          var ds = null;
          if (arguments.length > 3) {
            ds = cljs.core.array_seq(Array.prototype.slice.call(arguments, 3), 0);
          }
          return G__11073__delegate.call(this, a, b, c, ds);
        };
        G__11073.cljs$lang$maxFixedArity = 3;
        G__11073.cljs$lang$applyTo = function(arglist__11074) {
          var a = cljs.core.first(arglist__11074);
          arglist__11074 = cljs.core.next(arglist__11074);
          var b = cljs.core.first(arglist__11074);
          arglist__11074 = cljs.core.next(arglist__11074);
          var c = cljs.core.first(arglist__11074);
          var ds = cljs.core.rest(arglist__11074);
          return G__11073__delegate(a, b, c, ds);
        };
        G__11073.cljs$core$IFn$_invoke$arity$variadic = G__11073__delegate;
        return G__11073;
      }();
      G__11072 = function(a, b, c, var_args) {
        var ds = var_args;
        switch(arguments.length) {
          case 2:
            return G__11072__2.call(this, a, b);
          case 3:
            return G__11072__3.call(this, a, b, c);
          default:
            return G__11072__4.cljs$core$IFn$_invoke$arity$variadic(a, b, c, cljs.core.array_seq(arguments, 3));
        }
        throw new Error("Invalid arity: " + arguments.length);
      };
      G__11072.cljs$lang$maxFixedArity = 3;
      G__11072.cljs$lang$applyTo = G__11072__4.cljs$lang$applyTo;
      return G__11072;
    }();
  };
  fnil = function(f, x, y, z) {
    switch(arguments.length) {
      case 2:
        return fnil__2.call(this, f, x);
      case 3:
        return fnil__3.call(this, f, x, y);
      case 4:
        return fnil__4.call(this, f, x, y, z);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  fnil.cljs$core$IFn$_invoke$arity$2 = fnil__2;
  fnil.cljs$core$IFn$_invoke$arity$3 = fnil__3;
  fnil.cljs$core$IFn$_invoke$arity$4 = fnil__4;
  return fnil;
}();
cljs.core.map_indexed = function map_indexed(f, coll) {
  var mapi = function mapi(idx, coll__$1) {
    return new cljs.core.LazySeq(null, function() {
      var temp__4092__auto__ = cljs.core.seq.call(null, coll__$1);
      if (temp__4092__auto__) {
        var s = temp__4092__auto__;
        if (cljs.core.chunked_seq_QMARK_.call(null, s)) {
          var c = cljs.core.chunk_first.call(null, s);
          var size = cljs.core.count.call(null, c);
          var b = cljs.core.chunk_buffer.call(null, size);
          var n__4251__auto___11075 = size;
          var i_11076 = 0;
          while (true) {
            if (i_11076 < n__4251__auto___11075) {
              cljs.core.chunk_append.call(null, b, f.call(null, idx + i_11076, cljs.core._nth.call(null, c, i_11076)));
              var G__11077 = i_11076 + 1;
              i_11076 = G__11077;
              continue;
            } else {
            }
            break;
          }
          return cljs.core.chunk_cons.call(null, cljs.core.chunk.call(null, b), mapi.call(null, idx + size, cljs.core.chunk_rest.call(null, s)));
        } else {
          return cljs.core.cons.call(null, f.call(null, idx, cljs.core.first.call(null, s)), mapi.call(null, idx + 1, cljs.core.rest.call(null, s)));
        }
      } else {
        return null;
      }
    }, null, null);
  };
  return mapi.call(null, 0, coll);
};
cljs.core.keep = function keep(f, coll) {
  return new cljs.core.LazySeq(null, function() {
    var temp__4092__auto__ = cljs.core.seq.call(null, coll);
    if (temp__4092__auto__) {
      var s = temp__4092__auto__;
      if (cljs.core.chunked_seq_QMARK_.call(null, s)) {
        var c = cljs.core.chunk_first.call(null, s);
        var size = cljs.core.count.call(null, c);
        var b = cljs.core.chunk_buffer.call(null, size);
        var n__4251__auto___11078 = size;
        var i_11079 = 0;
        while (true) {
          if (i_11079 < n__4251__auto___11078) {
            var x_11080 = f.call(null, cljs.core._nth.call(null, c, i_11079));
            if (x_11080 == null) {
            } else {
              cljs.core.chunk_append.call(null, b, x_11080);
            }
            var G__11081 = i_11079 + 1;
            i_11079 = G__11081;
            continue;
          } else {
          }
          break;
        }
        return cljs.core.chunk_cons.call(null, cljs.core.chunk.call(null, b), keep.call(null, f, cljs.core.chunk_rest.call(null, s)));
      } else {
        var x = f.call(null, cljs.core.first.call(null, s));
        if (x == null) {
          return keep.call(null, f, cljs.core.rest.call(null, s));
        } else {
          return cljs.core.cons.call(null, x, keep.call(null, f, cljs.core.rest.call(null, s)));
        }
      }
    } else {
      return null;
    }
  }, null, null);
};
cljs.core.keep_indexed = function keep_indexed(f, coll) {
  var keepi = function keepi(idx, coll__$1) {
    return new cljs.core.LazySeq(null, function() {
      var temp__4092__auto__ = cljs.core.seq.call(null, coll__$1);
      if (temp__4092__auto__) {
        var s = temp__4092__auto__;
        if (cljs.core.chunked_seq_QMARK_.call(null, s)) {
          var c = cljs.core.chunk_first.call(null, s);
          var size = cljs.core.count.call(null, c);
          var b = cljs.core.chunk_buffer.call(null, size);
          var n__4251__auto___11082 = size;
          var i_11083 = 0;
          while (true) {
            if (i_11083 < n__4251__auto___11082) {
              var x_11084 = f.call(null, idx + i_11083, cljs.core._nth.call(null, c, i_11083));
              if (x_11084 == null) {
              } else {
                cljs.core.chunk_append.call(null, b, x_11084);
              }
              var G__11085 = i_11083 + 1;
              i_11083 = G__11085;
              continue;
            } else {
            }
            break;
          }
          return cljs.core.chunk_cons.call(null, cljs.core.chunk.call(null, b), keepi.call(null, idx + size, cljs.core.chunk_rest.call(null, s)));
        } else {
          var x = f.call(null, idx, cljs.core.first.call(null, s));
          if (x == null) {
            return keepi.call(null, idx + 1, cljs.core.rest.call(null, s));
          } else {
            return cljs.core.cons.call(null, x, keepi.call(null, idx + 1, cljs.core.rest.call(null, s)));
          }
        }
      } else {
        return null;
      }
    }, null, null);
  };
  return keepi.call(null, 0, coll);
};
cljs.core.every_pred = function() {
  var every_pred = null;
  var every_pred__1 = function(p) {
    return function() {
      var ep1 = null;
      var ep1__0 = function() {
        return true;
      };
      var ep1__1 = function(x) {
        return cljs.core.boolean$.call(null, p.call(null, x));
      };
      var ep1__2 = function(x, y) {
        return cljs.core.boolean$.call(null, function() {
          var and__3391__auto__ = p.call(null, x);
          if (cljs.core.truth_(and__3391__auto__)) {
            return p.call(null, y);
          } else {
            return and__3391__auto__;
          }
        }());
      };
      var ep1__3 = function(x, y, z) {
        return cljs.core.boolean$.call(null, function() {
          var and__3391__auto__ = p.call(null, x);
          if (cljs.core.truth_(and__3391__auto__)) {
            var and__3391__auto____$1 = p.call(null, y);
            if (cljs.core.truth_(and__3391__auto____$1)) {
              return p.call(null, z);
            } else {
              return and__3391__auto____$1;
            }
          } else {
            return and__3391__auto__;
          }
        }());
      };
      var ep1__4 = function() {
        var G__11092__delegate = function(x, y, z, args) {
          return cljs.core.boolean$.call(null, ep1.call(null, x, y, z) && cljs.core.every_QMARK_.call(null, p, args));
        };
        var G__11092 = function(x, y, z, var_args) {
          var args = null;
          if (arguments.length > 3) {
            args = cljs.core.array_seq(Array.prototype.slice.call(arguments, 3), 0);
          }
          return G__11092__delegate.call(this, x, y, z, args);
        };
        G__11092.cljs$lang$maxFixedArity = 3;
        G__11092.cljs$lang$applyTo = function(arglist__11093) {
          var x = cljs.core.first(arglist__11093);
          arglist__11093 = cljs.core.next(arglist__11093);
          var y = cljs.core.first(arglist__11093);
          arglist__11093 = cljs.core.next(arglist__11093);
          var z = cljs.core.first(arglist__11093);
          var args = cljs.core.rest(arglist__11093);
          return G__11092__delegate(x, y, z, args);
        };
        G__11092.cljs$core$IFn$_invoke$arity$variadic = G__11092__delegate;
        return G__11092;
      }();
      ep1 = function(x, y, z, var_args) {
        var args = var_args;
        switch(arguments.length) {
          case 0:
            return ep1__0.call(this);
          case 1:
            return ep1__1.call(this, x);
          case 2:
            return ep1__2.call(this, x, y);
          case 3:
            return ep1__3.call(this, x, y, z);
          default:
            return ep1__4.cljs$core$IFn$_invoke$arity$variadic(x, y, z, cljs.core.array_seq(arguments, 3));
        }
        throw new Error("Invalid arity: " + arguments.length);
      };
      ep1.cljs$lang$maxFixedArity = 3;
      ep1.cljs$lang$applyTo = ep1__4.cljs$lang$applyTo;
      ep1.cljs$core$IFn$_invoke$arity$0 = ep1__0;
      ep1.cljs$core$IFn$_invoke$arity$1 = ep1__1;
      ep1.cljs$core$IFn$_invoke$arity$2 = ep1__2;
      ep1.cljs$core$IFn$_invoke$arity$3 = ep1__3;
      ep1.cljs$core$IFn$_invoke$arity$variadic = ep1__4.cljs$core$IFn$_invoke$arity$variadic;
      return ep1;
    }();
  };
  var every_pred__2 = function(p1, p2) {
    return function() {
      var ep2 = null;
      var ep2__0 = function() {
        return true;
      };
      var ep2__1 = function(x) {
        return cljs.core.boolean$.call(null, function() {
          var and__3391__auto__ = p1.call(null, x);
          if (cljs.core.truth_(and__3391__auto__)) {
            return p2.call(null, x);
          } else {
            return and__3391__auto__;
          }
        }());
      };
      var ep2__2 = function(x, y) {
        return cljs.core.boolean$.call(null, function() {
          var and__3391__auto__ = p1.call(null, x);
          if (cljs.core.truth_(and__3391__auto__)) {
            var and__3391__auto____$1 = p1.call(null, y);
            if (cljs.core.truth_(and__3391__auto____$1)) {
              var and__3391__auto____$2 = p2.call(null, x);
              if (cljs.core.truth_(and__3391__auto____$2)) {
                return p2.call(null, y);
              } else {
                return and__3391__auto____$2;
              }
            } else {
              return and__3391__auto____$1;
            }
          } else {
            return and__3391__auto__;
          }
        }());
      };
      var ep2__3 = function(x, y, z) {
        return cljs.core.boolean$.call(null, function() {
          var and__3391__auto__ = p1.call(null, x);
          if (cljs.core.truth_(and__3391__auto__)) {
            var and__3391__auto____$1 = p1.call(null, y);
            if (cljs.core.truth_(and__3391__auto____$1)) {
              var and__3391__auto____$2 = p1.call(null, z);
              if (cljs.core.truth_(and__3391__auto____$2)) {
                var and__3391__auto____$3 = p2.call(null, x);
                if (cljs.core.truth_(and__3391__auto____$3)) {
                  var and__3391__auto____$4 = p2.call(null, y);
                  if (cljs.core.truth_(and__3391__auto____$4)) {
                    return p2.call(null, z);
                  } else {
                    return and__3391__auto____$4;
                  }
                } else {
                  return and__3391__auto____$3;
                }
              } else {
                return and__3391__auto____$2;
              }
            } else {
              return and__3391__auto____$1;
            }
          } else {
            return and__3391__auto__;
          }
        }());
      };
      var ep2__4 = function() {
        var G__11094__delegate = function(x, y, z, args) {
          return cljs.core.boolean$.call(null, ep2.call(null, x, y, z) && cljs.core.every_QMARK_.call(null, function(p1__11086_SHARP_) {
            var and__3391__auto__ = p1.call(null, p1__11086_SHARP_);
            if (cljs.core.truth_(and__3391__auto__)) {
              return p2.call(null, p1__11086_SHARP_);
            } else {
              return and__3391__auto__;
            }
          }, args));
        };
        var G__11094 = function(x, y, z, var_args) {
          var args = null;
          if (arguments.length > 3) {
            args = cljs.core.array_seq(Array.prototype.slice.call(arguments, 3), 0);
          }
          return G__11094__delegate.call(this, x, y, z, args);
        };
        G__11094.cljs$lang$maxFixedArity = 3;
        G__11094.cljs$lang$applyTo = function(arglist__11095) {
          var x = cljs.core.first(arglist__11095);
          arglist__11095 = cljs.core.next(arglist__11095);
          var y = cljs.core.first(arglist__11095);
          arglist__11095 = cljs.core.next(arglist__11095);
          var z = cljs.core.first(arglist__11095);
          var args = cljs.core.rest(arglist__11095);
          return G__11094__delegate(x, y, z, args);
        };
        G__11094.cljs$core$IFn$_invoke$arity$variadic = G__11094__delegate;
        return G__11094;
      }();
      ep2 = function(x, y, z, var_args) {
        var args = var_args;
        switch(arguments.length) {
          case 0:
            return ep2__0.call(this);
          case 1:
            return ep2__1.call(this, x);
          case 2:
            return ep2__2.call(this, x, y);
          case 3:
            return ep2__3.call(this, x, y, z);
          default:
            return ep2__4.cljs$core$IFn$_invoke$arity$variadic(x, y, z, cljs.core.array_seq(arguments, 3));
        }
        throw new Error("Invalid arity: " + arguments.length);
      };
      ep2.cljs$lang$maxFixedArity = 3;
      ep2.cljs$lang$applyTo = ep2__4.cljs$lang$applyTo;
      ep2.cljs$core$IFn$_invoke$arity$0 = ep2__0;
      ep2.cljs$core$IFn$_invoke$arity$1 = ep2__1;
      ep2.cljs$core$IFn$_invoke$arity$2 = ep2__2;
      ep2.cljs$core$IFn$_invoke$arity$3 = ep2__3;
      ep2.cljs$core$IFn$_invoke$arity$variadic = ep2__4.cljs$core$IFn$_invoke$arity$variadic;
      return ep2;
    }();
  };
  var every_pred__3 = function(p1, p2, p3) {
    return function() {
      var ep3 = null;
      var ep3__0 = function() {
        return true;
      };
      var ep3__1 = function(x) {
        return cljs.core.boolean$.call(null, function() {
          var and__3391__auto__ = p1.call(null, x);
          if (cljs.core.truth_(and__3391__auto__)) {
            var and__3391__auto____$1 = p2.call(null, x);
            if (cljs.core.truth_(and__3391__auto____$1)) {
              return p3.call(null, x);
            } else {
              return and__3391__auto____$1;
            }
          } else {
            return and__3391__auto__;
          }
        }());
      };
      var ep3__2 = function(x, y) {
        return cljs.core.boolean$.call(null, function() {
          var and__3391__auto__ = p1.call(null, x);
          if (cljs.core.truth_(and__3391__auto__)) {
            var and__3391__auto____$1 = p2.call(null, x);
            if (cljs.core.truth_(and__3391__auto____$1)) {
              var and__3391__auto____$2 = p3.call(null, x);
              if (cljs.core.truth_(and__3391__auto____$2)) {
                var and__3391__auto____$3 = p1.call(null, y);
                if (cljs.core.truth_(and__3391__auto____$3)) {
                  var and__3391__auto____$4 = p2.call(null, y);
                  if (cljs.core.truth_(and__3391__auto____$4)) {
                    return p3.call(null, y);
                  } else {
                    return and__3391__auto____$4;
                  }
                } else {
                  return and__3391__auto____$3;
                }
              } else {
                return and__3391__auto____$2;
              }
            } else {
              return and__3391__auto____$1;
            }
          } else {
            return and__3391__auto__;
          }
        }());
      };
      var ep3__3 = function(x, y, z) {
        return cljs.core.boolean$.call(null, function() {
          var and__3391__auto__ = p1.call(null, x);
          if (cljs.core.truth_(and__3391__auto__)) {
            var and__3391__auto____$1 = p2.call(null, x);
            if (cljs.core.truth_(and__3391__auto____$1)) {
              var and__3391__auto____$2 = p3.call(null, x);
              if (cljs.core.truth_(and__3391__auto____$2)) {
                var and__3391__auto____$3 = p1.call(null, y);
                if (cljs.core.truth_(and__3391__auto____$3)) {
                  var and__3391__auto____$4 = p2.call(null, y);
                  if (cljs.core.truth_(and__3391__auto____$4)) {
                    var and__3391__auto____$5 = p3.call(null, y);
                    if (cljs.core.truth_(and__3391__auto____$5)) {
                      var and__3391__auto____$6 = p1.call(null, z);
                      if (cljs.core.truth_(and__3391__auto____$6)) {
                        var and__3391__auto____$7 = p2.call(null, z);
                        if (cljs.core.truth_(and__3391__auto____$7)) {
                          return p3.call(null, z);
                        } else {
                          return and__3391__auto____$7;
                        }
                      } else {
                        return and__3391__auto____$6;
                      }
                    } else {
                      return and__3391__auto____$5;
                    }
                  } else {
                    return and__3391__auto____$4;
                  }
                } else {
                  return and__3391__auto____$3;
                }
              } else {
                return and__3391__auto____$2;
              }
            } else {
              return and__3391__auto____$1;
            }
          } else {
            return and__3391__auto__;
          }
        }());
      };
      var ep3__4 = function() {
        var G__11096__delegate = function(x, y, z, args) {
          return cljs.core.boolean$.call(null, ep3.call(null, x, y, z) && cljs.core.every_QMARK_.call(null, function(p1__11087_SHARP_) {
            var and__3391__auto__ = p1.call(null, p1__11087_SHARP_);
            if (cljs.core.truth_(and__3391__auto__)) {
              var and__3391__auto____$1 = p2.call(null, p1__11087_SHARP_);
              if (cljs.core.truth_(and__3391__auto____$1)) {
                return p3.call(null, p1__11087_SHARP_);
              } else {
                return and__3391__auto____$1;
              }
            } else {
              return and__3391__auto__;
            }
          }, args));
        };
        var G__11096 = function(x, y, z, var_args) {
          var args = null;
          if (arguments.length > 3) {
            args = cljs.core.array_seq(Array.prototype.slice.call(arguments, 3), 0);
          }
          return G__11096__delegate.call(this, x, y, z, args);
        };
        G__11096.cljs$lang$maxFixedArity = 3;
        G__11096.cljs$lang$applyTo = function(arglist__11097) {
          var x = cljs.core.first(arglist__11097);
          arglist__11097 = cljs.core.next(arglist__11097);
          var y = cljs.core.first(arglist__11097);
          arglist__11097 = cljs.core.next(arglist__11097);
          var z = cljs.core.first(arglist__11097);
          var args = cljs.core.rest(arglist__11097);
          return G__11096__delegate(x, y, z, args);
        };
        G__11096.cljs$core$IFn$_invoke$arity$variadic = G__11096__delegate;
        return G__11096;
      }();
      ep3 = function(x, y, z, var_args) {
        var args = var_args;
        switch(arguments.length) {
          case 0:
            return ep3__0.call(this);
          case 1:
            return ep3__1.call(this, x);
          case 2:
            return ep3__2.call(this, x, y);
          case 3:
            return ep3__3.call(this, x, y, z);
          default:
            return ep3__4.cljs$core$IFn$_invoke$arity$variadic(x, y, z, cljs.core.array_seq(arguments, 3));
        }
        throw new Error("Invalid arity: " + arguments.length);
      };
      ep3.cljs$lang$maxFixedArity = 3;
      ep3.cljs$lang$applyTo = ep3__4.cljs$lang$applyTo;
      ep3.cljs$core$IFn$_invoke$arity$0 = ep3__0;
      ep3.cljs$core$IFn$_invoke$arity$1 = ep3__1;
      ep3.cljs$core$IFn$_invoke$arity$2 = ep3__2;
      ep3.cljs$core$IFn$_invoke$arity$3 = ep3__3;
      ep3.cljs$core$IFn$_invoke$arity$variadic = ep3__4.cljs$core$IFn$_invoke$arity$variadic;
      return ep3;
    }();
  };
  var every_pred__4 = function() {
    var G__11098__delegate = function(p1, p2, p3, ps) {
      var ps__$1 = cljs.core.list_STAR_.call(null, p1, p2, p3, ps);
      return function() {
        var epn = null;
        var epn__0 = function() {
          return true;
        };
        var epn__1 = function(x) {
          return cljs.core.every_QMARK_.call(null, function(p1__11088_SHARP_) {
            return p1__11088_SHARP_.call(null, x);
          }, ps__$1);
        };
        var epn__2 = function(x, y) {
          return cljs.core.every_QMARK_.call(null, function(p1__11089_SHARP_) {
            var and__3391__auto__ = p1__11089_SHARP_.call(null, x);
            if (cljs.core.truth_(and__3391__auto__)) {
              return p1__11089_SHARP_.call(null, y);
            } else {
              return and__3391__auto__;
            }
          }, ps__$1);
        };
        var epn__3 = function(x, y, z) {
          return cljs.core.every_QMARK_.call(null, function(p1__11090_SHARP_) {
            var and__3391__auto__ = p1__11090_SHARP_.call(null, x);
            if (cljs.core.truth_(and__3391__auto__)) {
              var and__3391__auto____$1 = p1__11090_SHARP_.call(null, y);
              if (cljs.core.truth_(and__3391__auto____$1)) {
                return p1__11090_SHARP_.call(null, z);
              } else {
                return and__3391__auto____$1;
              }
            } else {
              return and__3391__auto__;
            }
          }, ps__$1);
        };
        var epn__4 = function() {
          var G__11099__delegate = function(x, y, z, args) {
            return cljs.core.boolean$.call(null, epn.call(null, x, y, z) && cljs.core.every_QMARK_.call(null, function(p1__11091_SHARP_) {
              return cljs.core.every_QMARK_.call(null, p1__11091_SHARP_, args);
            }, ps__$1));
          };
          var G__11099 = function(x, y, z, var_args) {
            var args = null;
            if (arguments.length > 3) {
              args = cljs.core.array_seq(Array.prototype.slice.call(arguments, 3), 0);
            }
            return G__11099__delegate.call(this, x, y, z, args);
          };
          G__11099.cljs$lang$maxFixedArity = 3;
          G__11099.cljs$lang$applyTo = function(arglist__11100) {
            var x = cljs.core.first(arglist__11100);
            arglist__11100 = cljs.core.next(arglist__11100);
            var y = cljs.core.first(arglist__11100);
            arglist__11100 = cljs.core.next(arglist__11100);
            var z = cljs.core.first(arglist__11100);
            var args = cljs.core.rest(arglist__11100);
            return G__11099__delegate(x, y, z, args);
          };
          G__11099.cljs$core$IFn$_invoke$arity$variadic = G__11099__delegate;
          return G__11099;
        }();
        epn = function(x, y, z, var_args) {
          var args = var_args;
          switch(arguments.length) {
            case 0:
              return epn__0.call(this);
            case 1:
              return epn__1.call(this, x);
            case 2:
              return epn__2.call(this, x, y);
            case 3:
              return epn__3.call(this, x, y, z);
            default:
              return epn__4.cljs$core$IFn$_invoke$arity$variadic(x, y, z, cljs.core.array_seq(arguments, 3));
          }
          throw new Error("Invalid arity: " + arguments.length);
        };
        epn.cljs$lang$maxFixedArity = 3;
        epn.cljs$lang$applyTo = epn__4.cljs$lang$applyTo;
        epn.cljs$core$IFn$_invoke$arity$0 = epn__0;
        epn.cljs$core$IFn$_invoke$arity$1 = epn__1;
        epn.cljs$core$IFn$_invoke$arity$2 = epn__2;
        epn.cljs$core$IFn$_invoke$arity$3 = epn__3;
        epn.cljs$core$IFn$_invoke$arity$variadic = epn__4.cljs$core$IFn$_invoke$arity$variadic;
        return epn;
      }();
    };
    var G__11098 = function(p1, p2, p3, var_args) {
      var ps = null;
      if (arguments.length > 3) {
        ps = cljs.core.array_seq(Array.prototype.slice.call(arguments, 3), 0);
      }
      return G__11098__delegate.call(this, p1, p2, p3, ps);
    };
    G__11098.cljs$lang$maxFixedArity = 3;
    G__11098.cljs$lang$applyTo = function(arglist__11101) {
      var p1 = cljs.core.first(arglist__11101);
      arglist__11101 = cljs.core.next(arglist__11101);
      var p2 = cljs.core.first(arglist__11101);
      arglist__11101 = cljs.core.next(arglist__11101);
      var p3 = cljs.core.first(arglist__11101);
      var ps = cljs.core.rest(arglist__11101);
      return G__11098__delegate(p1, p2, p3, ps);
    };
    G__11098.cljs$core$IFn$_invoke$arity$variadic = G__11098__delegate;
    return G__11098;
  }();
  every_pred = function(p1, p2, p3, var_args) {
    var ps = var_args;
    switch(arguments.length) {
      case 1:
        return every_pred__1.call(this, p1);
      case 2:
        return every_pred__2.call(this, p1, p2);
      case 3:
        return every_pred__3.call(this, p1, p2, p3);
      default:
        return every_pred__4.cljs$core$IFn$_invoke$arity$variadic(p1, p2, p3, cljs.core.array_seq(arguments, 3));
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  every_pred.cljs$lang$maxFixedArity = 3;
  every_pred.cljs$lang$applyTo = every_pred__4.cljs$lang$applyTo;
  every_pred.cljs$core$IFn$_invoke$arity$1 = every_pred__1;
  every_pred.cljs$core$IFn$_invoke$arity$2 = every_pred__2;
  every_pred.cljs$core$IFn$_invoke$arity$3 = every_pred__3;
  every_pred.cljs$core$IFn$_invoke$arity$variadic = every_pred__4.cljs$core$IFn$_invoke$arity$variadic;
  return every_pred;
}();
cljs.core.some_fn = function() {
  var some_fn = null;
  var some_fn__1 = function(p) {
    return function() {
      var sp1 = null;
      var sp1__0 = function() {
        return null;
      };
      var sp1__1 = function(x) {
        return p.call(null, x);
      };
      var sp1__2 = function(x, y) {
        var or__3403__auto__ = p.call(null, x);
        if (cljs.core.truth_(or__3403__auto__)) {
          return or__3403__auto__;
        } else {
          return p.call(null, y);
        }
      };
      var sp1__3 = function(x, y, z) {
        var or__3403__auto__ = p.call(null, x);
        if (cljs.core.truth_(or__3403__auto__)) {
          return or__3403__auto__;
        } else {
          var or__3403__auto____$1 = p.call(null, y);
          if (cljs.core.truth_(or__3403__auto____$1)) {
            return or__3403__auto____$1;
          } else {
            return p.call(null, z);
          }
        }
      };
      var sp1__4 = function() {
        var G__11108__delegate = function(x, y, z, args) {
          var or__3403__auto__ = sp1.call(null, x, y, z);
          if (cljs.core.truth_(or__3403__auto__)) {
            return or__3403__auto__;
          } else {
            return cljs.core.some.call(null, p, args);
          }
        };
        var G__11108 = function(x, y, z, var_args) {
          var args = null;
          if (arguments.length > 3) {
            args = cljs.core.array_seq(Array.prototype.slice.call(arguments, 3), 0);
          }
          return G__11108__delegate.call(this, x, y, z, args);
        };
        G__11108.cljs$lang$maxFixedArity = 3;
        G__11108.cljs$lang$applyTo = function(arglist__11109) {
          var x = cljs.core.first(arglist__11109);
          arglist__11109 = cljs.core.next(arglist__11109);
          var y = cljs.core.first(arglist__11109);
          arglist__11109 = cljs.core.next(arglist__11109);
          var z = cljs.core.first(arglist__11109);
          var args = cljs.core.rest(arglist__11109);
          return G__11108__delegate(x, y, z, args);
        };
        G__11108.cljs$core$IFn$_invoke$arity$variadic = G__11108__delegate;
        return G__11108;
      }();
      sp1 = function(x, y, z, var_args) {
        var args = var_args;
        switch(arguments.length) {
          case 0:
            return sp1__0.call(this);
          case 1:
            return sp1__1.call(this, x);
          case 2:
            return sp1__2.call(this, x, y);
          case 3:
            return sp1__3.call(this, x, y, z);
          default:
            return sp1__4.cljs$core$IFn$_invoke$arity$variadic(x, y, z, cljs.core.array_seq(arguments, 3));
        }
        throw new Error("Invalid arity: " + arguments.length);
      };
      sp1.cljs$lang$maxFixedArity = 3;
      sp1.cljs$lang$applyTo = sp1__4.cljs$lang$applyTo;
      sp1.cljs$core$IFn$_invoke$arity$0 = sp1__0;
      sp1.cljs$core$IFn$_invoke$arity$1 = sp1__1;
      sp1.cljs$core$IFn$_invoke$arity$2 = sp1__2;
      sp1.cljs$core$IFn$_invoke$arity$3 = sp1__3;
      sp1.cljs$core$IFn$_invoke$arity$variadic = sp1__4.cljs$core$IFn$_invoke$arity$variadic;
      return sp1;
    }();
  };
  var some_fn__2 = function(p1, p2) {
    return function() {
      var sp2 = null;
      var sp2__0 = function() {
        return null;
      };
      var sp2__1 = function(x) {
        var or__3403__auto__ = p1.call(null, x);
        if (cljs.core.truth_(or__3403__auto__)) {
          return or__3403__auto__;
        } else {
          return p2.call(null, x);
        }
      };
      var sp2__2 = function(x, y) {
        var or__3403__auto__ = p1.call(null, x);
        if (cljs.core.truth_(or__3403__auto__)) {
          return or__3403__auto__;
        } else {
          var or__3403__auto____$1 = p1.call(null, y);
          if (cljs.core.truth_(or__3403__auto____$1)) {
            return or__3403__auto____$1;
          } else {
            var or__3403__auto____$2 = p2.call(null, x);
            if (cljs.core.truth_(or__3403__auto____$2)) {
              return or__3403__auto____$2;
            } else {
              return p2.call(null, y);
            }
          }
        }
      };
      var sp2__3 = function(x, y, z) {
        var or__3403__auto__ = p1.call(null, x);
        if (cljs.core.truth_(or__3403__auto__)) {
          return or__3403__auto__;
        } else {
          var or__3403__auto____$1 = p1.call(null, y);
          if (cljs.core.truth_(or__3403__auto____$1)) {
            return or__3403__auto____$1;
          } else {
            var or__3403__auto____$2 = p1.call(null, z);
            if (cljs.core.truth_(or__3403__auto____$2)) {
              return or__3403__auto____$2;
            } else {
              var or__3403__auto____$3 = p2.call(null, x);
              if (cljs.core.truth_(or__3403__auto____$3)) {
                return or__3403__auto____$3;
              } else {
                var or__3403__auto____$4 = p2.call(null, y);
                if (cljs.core.truth_(or__3403__auto____$4)) {
                  return or__3403__auto____$4;
                } else {
                  return p2.call(null, z);
                }
              }
            }
          }
        }
      };
      var sp2__4 = function() {
        var G__11110__delegate = function(x, y, z, args) {
          var or__3403__auto__ = sp2.call(null, x, y, z);
          if (cljs.core.truth_(or__3403__auto__)) {
            return or__3403__auto__;
          } else {
            return cljs.core.some.call(null, function(p1__11102_SHARP_) {
              var or__3403__auto____$1 = p1.call(null, p1__11102_SHARP_);
              if (cljs.core.truth_(or__3403__auto____$1)) {
                return or__3403__auto____$1;
              } else {
                return p2.call(null, p1__11102_SHARP_);
              }
            }, args);
          }
        };
        var G__11110 = function(x, y, z, var_args) {
          var args = null;
          if (arguments.length > 3) {
            args = cljs.core.array_seq(Array.prototype.slice.call(arguments, 3), 0);
          }
          return G__11110__delegate.call(this, x, y, z, args);
        };
        G__11110.cljs$lang$maxFixedArity = 3;
        G__11110.cljs$lang$applyTo = function(arglist__11111) {
          var x = cljs.core.first(arglist__11111);
          arglist__11111 = cljs.core.next(arglist__11111);
          var y = cljs.core.first(arglist__11111);
          arglist__11111 = cljs.core.next(arglist__11111);
          var z = cljs.core.first(arglist__11111);
          var args = cljs.core.rest(arglist__11111);
          return G__11110__delegate(x, y, z, args);
        };
        G__11110.cljs$core$IFn$_invoke$arity$variadic = G__11110__delegate;
        return G__11110;
      }();
      sp2 = function(x, y, z, var_args) {
        var args = var_args;
        switch(arguments.length) {
          case 0:
            return sp2__0.call(this);
          case 1:
            return sp2__1.call(this, x);
          case 2:
            return sp2__2.call(this, x, y);
          case 3:
            return sp2__3.call(this, x, y, z);
          default:
            return sp2__4.cljs$core$IFn$_invoke$arity$variadic(x, y, z, cljs.core.array_seq(arguments, 3));
        }
        throw new Error("Invalid arity: " + arguments.length);
      };
      sp2.cljs$lang$maxFixedArity = 3;
      sp2.cljs$lang$applyTo = sp2__4.cljs$lang$applyTo;
      sp2.cljs$core$IFn$_invoke$arity$0 = sp2__0;
      sp2.cljs$core$IFn$_invoke$arity$1 = sp2__1;
      sp2.cljs$core$IFn$_invoke$arity$2 = sp2__2;
      sp2.cljs$core$IFn$_invoke$arity$3 = sp2__3;
      sp2.cljs$core$IFn$_invoke$arity$variadic = sp2__4.cljs$core$IFn$_invoke$arity$variadic;
      return sp2;
    }();
  };
  var some_fn__3 = function(p1, p2, p3) {
    return function() {
      var sp3 = null;
      var sp3__0 = function() {
        return null;
      };
      var sp3__1 = function(x) {
        var or__3403__auto__ = p1.call(null, x);
        if (cljs.core.truth_(or__3403__auto__)) {
          return or__3403__auto__;
        } else {
          var or__3403__auto____$1 = p2.call(null, x);
          if (cljs.core.truth_(or__3403__auto____$1)) {
            return or__3403__auto____$1;
          } else {
            return p3.call(null, x);
          }
        }
      };
      var sp3__2 = function(x, y) {
        var or__3403__auto__ = p1.call(null, x);
        if (cljs.core.truth_(or__3403__auto__)) {
          return or__3403__auto__;
        } else {
          var or__3403__auto____$1 = p2.call(null, x);
          if (cljs.core.truth_(or__3403__auto____$1)) {
            return or__3403__auto____$1;
          } else {
            var or__3403__auto____$2 = p3.call(null, x);
            if (cljs.core.truth_(or__3403__auto____$2)) {
              return or__3403__auto____$2;
            } else {
              var or__3403__auto____$3 = p1.call(null, y);
              if (cljs.core.truth_(or__3403__auto____$3)) {
                return or__3403__auto____$3;
              } else {
                var or__3403__auto____$4 = p2.call(null, y);
                if (cljs.core.truth_(or__3403__auto____$4)) {
                  return or__3403__auto____$4;
                } else {
                  return p3.call(null, y);
                }
              }
            }
          }
        }
      };
      var sp3__3 = function(x, y, z) {
        var or__3403__auto__ = p1.call(null, x);
        if (cljs.core.truth_(or__3403__auto__)) {
          return or__3403__auto__;
        } else {
          var or__3403__auto____$1 = p2.call(null, x);
          if (cljs.core.truth_(or__3403__auto____$1)) {
            return or__3403__auto____$1;
          } else {
            var or__3403__auto____$2 = p3.call(null, x);
            if (cljs.core.truth_(or__3403__auto____$2)) {
              return or__3403__auto____$2;
            } else {
              var or__3403__auto____$3 = p1.call(null, y);
              if (cljs.core.truth_(or__3403__auto____$3)) {
                return or__3403__auto____$3;
              } else {
                var or__3403__auto____$4 = p2.call(null, y);
                if (cljs.core.truth_(or__3403__auto____$4)) {
                  return or__3403__auto____$4;
                } else {
                  var or__3403__auto____$5 = p3.call(null, y);
                  if (cljs.core.truth_(or__3403__auto____$5)) {
                    return or__3403__auto____$5;
                  } else {
                    var or__3403__auto____$6 = p1.call(null, z);
                    if (cljs.core.truth_(or__3403__auto____$6)) {
                      return or__3403__auto____$6;
                    } else {
                      var or__3403__auto____$7 = p2.call(null, z);
                      if (cljs.core.truth_(or__3403__auto____$7)) {
                        return or__3403__auto____$7;
                      } else {
                        return p3.call(null, z);
                      }
                    }
                  }
                }
              }
            }
          }
        }
      };
      var sp3__4 = function() {
        var G__11112__delegate = function(x, y, z, args) {
          var or__3403__auto__ = sp3.call(null, x, y, z);
          if (cljs.core.truth_(or__3403__auto__)) {
            return or__3403__auto__;
          } else {
            return cljs.core.some.call(null, function(p1__11103_SHARP_) {
              var or__3403__auto____$1 = p1.call(null, p1__11103_SHARP_);
              if (cljs.core.truth_(or__3403__auto____$1)) {
                return or__3403__auto____$1;
              } else {
                var or__3403__auto____$2 = p2.call(null, p1__11103_SHARP_);
                if (cljs.core.truth_(or__3403__auto____$2)) {
                  return or__3403__auto____$2;
                } else {
                  return p3.call(null, p1__11103_SHARP_);
                }
              }
            }, args);
          }
        };
        var G__11112 = function(x, y, z, var_args) {
          var args = null;
          if (arguments.length > 3) {
            args = cljs.core.array_seq(Array.prototype.slice.call(arguments, 3), 0);
          }
          return G__11112__delegate.call(this, x, y, z, args);
        };
        G__11112.cljs$lang$maxFixedArity = 3;
        G__11112.cljs$lang$applyTo = function(arglist__11113) {
          var x = cljs.core.first(arglist__11113);
          arglist__11113 = cljs.core.next(arglist__11113);
          var y = cljs.core.first(arglist__11113);
          arglist__11113 = cljs.core.next(arglist__11113);
          var z = cljs.core.first(arglist__11113);
          var args = cljs.core.rest(arglist__11113);
          return G__11112__delegate(x, y, z, args);
        };
        G__11112.cljs$core$IFn$_invoke$arity$variadic = G__11112__delegate;
        return G__11112;
      }();
      sp3 = function(x, y, z, var_args) {
        var args = var_args;
        switch(arguments.length) {
          case 0:
            return sp3__0.call(this);
          case 1:
            return sp3__1.call(this, x);
          case 2:
            return sp3__2.call(this, x, y);
          case 3:
            return sp3__3.call(this, x, y, z);
          default:
            return sp3__4.cljs$core$IFn$_invoke$arity$variadic(x, y, z, cljs.core.array_seq(arguments, 3));
        }
        throw new Error("Invalid arity: " + arguments.length);
      };
      sp3.cljs$lang$maxFixedArity = 3;
      sp3.cljs$lang$applyTo = sp3__4.cljs$lang$applyTo;
      sp3.cljs$core$IFn$_invoke$arity$0 = sp3__0;
      sp3.cljs$core$IFn$_invoke$arity$1 = sp3__1;
      sp3.cljs$core$IFn$_invoke$arity$2 = sp3__2;
      sp3.cljs$core$IFn$_invoke$arity$3 = sp3__3;
      sp3.cljs$core$IFn$_invoke$arity$variadic = sp3__4.cljs$core$IFn$_invoke$arity$variadic;
      return sp3;
    }();
  };
  var some_fn__4 = function() {
    var G__11114__delegate = function(p1, p2, p3, ps) {
      var ps__$1 = cljs.core.list_STAR_.call(null, p1, p2, p3, ps);
      return function() {
        var spn = null;
        var spn__0 = function() {
          return null;
        };
        var spn__1 = function(x) {
          return cljs.core.some.call(null, function(p1__11104_SHARP_) {
            return p1__11104_SHARP_.call(null, x);
          }, ps__$1);
        };
        var spn__2 = function(x, y) {
          return cljs.core.some.call(null, function(p1__11105_SHARP_) {
            var or__3403__auto__ = p1__11105_SHARP_.call(null, x);
            if (cljs.core.truth_(or__3403__auto__)) {
              return or__3403__auto__;
            } else {
              return p1__11105_SHARP_.call(null, y);
            }
          }, ps__$1);
        };
        var spn__3 = function(x, y, z) {
          return cljs.core.some.call(null, function(p1__11106_SHARP_) {
            var or__3403__auto__ = p1__11106_SHARP_.call(null, x);
            if (cljs.core.truth_(or__3403__auto__)) {
              return or__3403__auto__;
            } else {
              var or__3403__auto____$1 = p1__11106_SHARP_.call(null, y);
              if (cljs.core.truth_(or__3403__auto____$1)) {
                return or__3403__auto____$1;
              } else {
                return p1__11106_SHARP_.call(null, z);
              }
            }
          }, ps__$1);
        };
        var spn__4 = function() {
          var G__11115__delegate = function(x, y, z, args) {
            var or__3403__auto__ = spn.call(null, x, y, z);
            if (cljs.core.truth_(or__3403__auto__)) {
              return or__3403__auto__;
            } else {
              return cljs.core.some.call(null, function(p1__11107_SHARP_) {
                return cljs.core.some.call(null, p1__11107_SHARP_, args);
              }, ps__$1);
            }
          };
          var G__11115 = function(x, y, z, var_args) {
            var args = null;
            if (arguments.length > 3) {
              args = cljs.core.array_seq(Array.prototype.slice.call(arguments, 3), 0);
            }
            return G__11115__delegate.call(this, x, y, z, args);
          };
          G__11115.cljs$lang$maxFixedArity = 3;
          G__11115.cljs$lang$applyTo = function(arglist__11116) {
            var x = cljs.core.first(arglist__11116);
            arglist__11116 = cljs.core.next(arglist__11116);
            var y = cljs.core.first(arglist__11116);
            arglist__11116 = cljs.core.next(arglist__11116);
            var z = cljs.core.first(arglist__11116);
            var args = cljs.core.rest(arglist__11116);
            return G__11115__delegate(x, y, z, args);
          };
          G__11115.cljs$core$IFn$_invoke$arity$variadic = G__11115__delegate;
          return G__11115;
        }();
        spn = function(x, y, z, var_args) {
          var args = var_args;
          switch(arguments.length) {
            case 0:
              return spn__0.call(this);
            case 1:
              return spn__1.call(this, x);
            case 2:
              return spn__2.call(this, x, y);
            case 3:
              return spn__3.call(this, x, y, z);
            default:
              return spn__4.cljs$core$IFn$_invoke$arity$variadic(x, y, z, cljs.core.array_seq(arguments, 3));
          }
          throw new Error("Invalid arity: " + arguments.length);
        };
        spn.cljs$lang$maxFixedArity = 3;
        spn.cljs$lang$applyTo = spn__4.cljs$lang$applyTo;
        spn.cljs$core$IFn$_invoke$arity$0 = spn__0;
        spn.cljs$core$IFn$_invoke$arity$1 = spn__1;
        spn.cljs$core$IFn$_invoke$arity$2 = spn__2;
        spn.cljs$core$IFn$_invoke$arity$3 = spn__3;
        spn.cljs$core$IFn$_invoke$arity$variadic = spn__4.cljs$core$IFn$_invoke$arity$variadic;
        return spn;
      }();
    };
    var G__11114 = function(p1, p2, p3, var_args) {
      var ps = null;
      if (arguments.length > 3) {
        ps = cljs.core.array_seq(Array.prototype.slice.call(arguments, 3), 0);
      }
      return G__11114__delegate.call(this, p1, p2, p3, ps);
    };
    G__11114.cljs$lang$maxFixedArity = 3;
    G__11114.cljs$lang$applyTo = function(arglist__11117) {
      var p1 = cljs.core.first(arglist__11117);
      arglist__11117 = cljs.core.next(arglist__11117);
      var p2 = cljs.core.first(arglist__11117);
      arglist__11117 = cljs.core.next(arglist__11117);
      var p3 = cljs.core.first(arglist__11117);
      var ps = cljs.core.rest(arglist__11117);
      return G__11114__delegate(p1, p2, p3, ps);
    };
    G__11114.cljs$core$IFn$_invoke$arity$variadic = G__11114__delegate;
    return G__11114;
  }();
  some_fn = function(p1, p2, p3, var_args) {
    var ps = var_args;
    switch(arguments.length) {
      case 1:
        return some_fn__1.call(this, p1);
      case 2:
        return some_fn__2.call(this, p1, p2);
      case 3:
        return some_fn__3.call(this, p1, p2, p3);
      default:
        return some_fn__4.cljs$core$IFn$_invoke$arity$variadic(p1, p2, p3, cljs.core.array_seq(arguments, 3));
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  some_fn.cljs$lang$maxFixedArity = 3;
  some_fn.cljs$lang$applyTo = some_fn__4.cljs$lang$applyTo;
  some_fn.cljs$core$IFn$_invoke$arity$1 = some_fn__1;
  some_fn.cljs$core$IFn$_invoke$arity$2 = some_fn__2;
  some_fn.cljs$core$IFn$_invoke$arity$3 = some_fn__3;
  some_fn.cljs$core$IFn$_invoke$arity$variadic = some_fn__4.cljs$core$IFn$_invoke$arity$variadic;
  return some_fn;
}();
cljs.core.map = function() {
  var map = null;
  var map__2 = function(f, coll) {
    return new cljs.core.LazySeq(null, function() {
      var temp__4092__auto__ = cljs.core.seq.call(null, coll);
      if (temp__4092__auto__) {
        var s = temp__4092__auto__;
        if (cljs.core.chunked_seq_QMARK_.call(null, s)) {
          var c = cljs.core.chunk_first.call(null, s);
          var size = cljs.core.count.call(null, c);
          var b = cljs.core.chunk_buffer.call(null, size);
          var n__4251__auto___11119 = size;
          var i_11120 = 0;
          while (true) {
            if (i_11120 < n__4251__auto___11119) {
              cljs.core.chunk_append.call(null, b, f.call(null, cljs.core._nth.call(null, c, i_11120)));
              var G__11121 = i_11120 + 1;
              i_11120 = G__11121;
              continue;
            } else {
            }
            break;
          }
          return cljs.core.chunk_cons.call(null, cljs.core.chunk.call(null, b), map.call(null, f, cljs.core.chunk_rest.call(null, s)));
        } else {
          return cljs.core.cons.call(null, f.call(null, cljs.core.first.call(null, s)), map.call(null, f, cljs.core.rest.call(null, s)));
        }
      } else {
        return null;
      }
    }, null, null);
  };
  var map__3 = function(f, c1, c2) {
    return new cljs.core.LazySeq(null, function() {
      var s1 = cljs.core.seq.call(null, c1);
      var s2 = cljs.core.seq.call(null, c2);
      if (s1 && s2) {
        return cljs.core.cons.call(null, f.call(null, cljs.core.first.call(null, s1), cljs.core.first.call(null, s2)), map.call(null, f, cljs.core.rest.call(null, s1), cljs.core.rest.call(null, s2)));
      } else {
        return null;
      }
    }, null, null);
  };
  var map__4 = function(f, c1, c2, c3) {
    return new cljs.core.LazySeq(null, function() {
      var s1 = cljs.core.seq.call(null, c1);
      var s2 = cljs.core.seq.call(null, c2);
      var s3 = cljs.core.seq.call(null, c3);
      if (s1 && (s2 && s3)) {
        return cljs.core.cons.call(null, f.call(null, cljs.core.first.call(null, s1), cljs.core.first.call(null, s2), cljs.core.first.call(null, s3)), map.call(null, f, cljs.core.rest.call(null, s1), cljs.core.rest.call(null, s2), cljs.core.rest.call(null, s3)));
      } else {
        return null;
      }
    }, null, null);
  };
  var map__5 = function() {
    var G__11122__delegate = function(f, c1, c2, c3, colls) {
      var step = function step(cs) {
        return new cljs.core.LazySeq(null, function() {
          var ss = map.call(null, cljs.core.seq, cs);
          if (cljs.core.every_QMARK_.call(null, cljs.core.identity, ss)) {
            return cljs.core.cons.call(null, map.call(null, cljs.core.first, ss), step.call(null, map.call(null, cljs.core.rest, ss)));
          } else {
            return null;
          }
        }, null, null);
      };
      return map.call(null, function(p1__11118_SHARP_) {
        return cljs.core.apply.call(null, f, p1__11118_SHARP_);
      }, step.call(null, cljs.core.conj.call(null, colls, c3, c2, c1)));
    };
    var G__11122 = function(f, c1, c2, c3, var_args) {
      var colls = null;
      if (arguments.length > 4) {
        colls = cljs.core.array_seq(Array.prototype.slice.call(arguments, 4), 0);
      }
      return G__11122__delegate.call(this, f, c1, c2, c3, colls);
    };
    G__11122.cljs$lang$maxFixedArity = 4;
    G__11122.cljs$lang$applyTo = function(arglist__11123) {
      var f = cljs.core.first(arglist__11123);
      arglist__11123 = cljs.core.next(arglist__11123);
      var c1 = cljs.core.first(arglist__11123);
      arglist__11123 = cljs.core.next(arglist__11123);
      var c2 = cljs.core.first(arglist__11123);
      arglist__11123 = cljs.core.next(arglist__11123);
      var c3 = cljs.core.first(arglist__11123);
      var colls = cljs.core.rest(arglist__11123);
      return G__11122__delegate(f, c1, c2, c3, colls);
    };
    G__11122.cljs$core$IFn$_invoke$arity$variadic = G__11122__delegate;
    return G__11122;
  }();
  map = function(f, c1, c2, c3, var_args) {
    var colls = var_args;
    switch(arguments.length) {
      case 2:
        return map__2.call(this, f, c1);
      case 3:
        return map__3.call(this, f, c1, c2);
      case 4:
        return map__4.call(this, f, c1, c2, c3);
      default:
        return map__5.cljs$core$IFn$_invoke$arity$variadic(f, c1, c2, c3, cljs.core.array_seq(arguments, 4));
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  map.cljs$lang$maxFixedArity = 4;
  map.cljs$lang$applyTo = map__5.cljs$lang$applyTo;
  map.cljs$core$IFn$_invoke$arity$2 = map__2;
  map.cljs$core$IFn$_invoke$arity$3 = map__3;
  map.cljs$core$IFn$_invoke$arity$4 = map__4;
  map.cljs$core$IFn$_invoke$arity$variadic = map__5.cljs$core$IFn$_invoke$arity$variadic;
  return map;
}();
cljs.core.take = function take(n, coll) {
  return new cljs.core.LazySeq(null, function() {
    if (n > 0) {
      var temp__4092__auto__ = cljs.core.seq.call(null, coll);
      if (temp__4092__auto__) {
        var s = temp__4092__auto__;
        return cljs.core.cons.call(null, cljs.core.first.call(null, s), take.call(null, n - 1, cljs.core.rest.call(null, s)));
      } else {
        return null;
      }
    } else {
      return null;
    }
  }, null, null);
};
cljs.core.drop = function drop(n, coll) {
  var step = function(n__$1, coll__$1) {
    while (true) {
      var s = cljs.core.seq.call(null, coll__$1);
      if (n__$1 > 0 && s) {
        var G__11124 = n__$1 - 1;
        var G__11125 = cljs.core.rest.call(null, s);
        n__$1 = G__11124;
        coll__$1 = G__11125;
        continue;
      } else {
        return s;
      }
      break;
    }
  };
  return new cljs.core.LazySeq(null, function() {
    return step.call(null, n, coll);
  }, null, null);
};
cljs.core.drop_last = function() {
  var drop_last = null;
  var drop_last__1 = function(s) {
    return drop_last.call(null, 1, s);
  };
  var drop_last__2 = function(n, s) {
    return cljs.core.map.call(null, function(x, _) {
      return x;
    }, s, cljs.core.drop.call(null, n, s));
  };
  drop_last = function(n, s) {
    switch(arguments.length) {
      case 1:
        return drop_last__1.call(this, n);
      case 2:
        return drop_last__2.call(this, n, s);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  drop_last.cljs$core$IFn$_invoke$arity$1 = drop_last__1;
  drop_last.cljs$core$IFn$_invoke$arity$2 = drop_last__2;
  return drop_last;
}();
cljs.core.take_last = function take_last(n, coll) {
  var s = cljs.core.seq.call(null, coll);
  var lead = cljs.core.seq.call(null, cljs.core.drop.call(null, n, coll));
  while (true) {
    if (lead) {
      var G__11126 = cljs.core.next.call(null, s);
      var G__11127 = cljs.core.next.call(null, lead);
      s = G__11126;
      lead = G__11127;
      continue;
    } else {
      return s;
    }
    break;
  }
};
cljs.core.drop_while = function drop_while(pred, coll) {
  var step = function(pred__$1, coll__$1) {
    while (true) {
      var s = cljs.core.seq.call(null, coll__$1);
      if (cljs.core.truth_(function() {
        var and__3391__auto__ = s;
        if (and__3391__auto__) {
          return pred__$1.call(null, cljs.core.first.call(null, s));
        } else {
          return and__3391__auto__;
        }
      }())) {
        var G__11128 = pred__$1;
        var G__11129 = cljs.core.rest.call(null, s);
        pred__$1 = G__11128;
        coll__$1 = G__11129;
        continue;
      } else {
        return s;
      }
      break;
    }
  };
  return new cljs.core.LazySeq(null, function() {
    return step.call(null, pred, coll);
  }, null, null);
};
cljs.core.cycle = function cycle(coll) {
  return new cljs.core.LazySeq(null, function() {
    var temp__4092__auto__ = cljs.core.seq.call(null, coll);
    if (temp__4092__auto__) {
      var s = temp__4092__auto__;
      return cljs.core.concat.call(null, s, cycle.call(null, s));
    } else {
      return null;
    }
  }, null, null);
};
cljs.core.split_at = function split_at(n, coll) {
  return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.take.call(null, n, coll), cljs.core.drop.call(null, n, coll)], null);
};
cljs.core.repeat = function() {
  var repeat = null;
  var repeat__1 = function(x) {
    return new cljs.core.LazySeq(null, function() {
      return cljs.core.cons.call(null, x, repeat.call(null, x));
    }, null, null);
  };
  var repeat__2 = function(n, x) {
    return cljs.core.take.call(null, n, repeat.call(null, x));
  };
  repeat = function(n, x) {
    switch(arguments.length) {
      case 1:
        return repeat__1.call(this, n);
      case 2:
        return repeat__2.call(this, n, x);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  repeat.cljs$core$IFn$_invoke$arity$1 = repeat__1;
  repeat.cljs$core$IFn$_invoke$arity$2 = repeat__2;
  return repeat;
}();
cljs.core.replicate = function replicate(n, x) {
  return cljs.core.take.call(null, n, cljs.core.repeat.call(null, x));
};
cljs.core.repeatedly = function() {
  var repeatedly = null;
  var repeatedly__1 = function(f) {
    return new cljs.core.LazySeq(null, function() {
      return cljs.core.cons.call(null, f.call(null), repeatedly.call(null, f));
    }, null, null);
  };
  var repeatedly__2 = function(n, f) {
    return cljs.core.take.call(null, n, repeatedly.call(null, f));
  };
  repeatedly = function(n, f) {
    switch(arguments.length) {
      case 1:
        return repeatedly__1.call(this, n);
      case 2:
        return repeatedly__2.call(this, n, f);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  repeatedly.cljs$core$IFn$_invoke$arity$1 = repeatedly__1;
  repeatedly.cljs$core$IFn$_invoke$arity$2 = repeatedly__2;
  return repeatedly;
}();
cljs.core.iterate = function iterate(f, x) {
  return cljs.core.cons.call(null, x, new cljs.core.LazySeq(null, function() {
    return iterate.call(null, f, f.call(null, x));
  }, null, null));
};
cljs.core.interleave = function() {
  var interleave = null;
  var interleave__2 = function(c1, c2) {
    return new cljs.core.LazySeq(null, function() {
      var s1 = cljs.core.seq.call(null, c1);
      var s2 = cljs.core.seq.call(null, c2);
      if (s1 && s2) {
        return cljs.core.cons.call(null, cljs.core.first.call(null, s1), cljs.core.cons.call(null, cljs.core.first.call(null, s2), interleave.call(null, cljs.core.rest.call(null, s1), cljs.core.rest.call(null, s2))));
      } else {
        return null;
      }
    }, null, null);
  };
  var interleave__3 = function() {
    var G__11130__delegate = function(c1, c2, colls) {
      return new cljs.core.LazySeq(null, function() {
        var ss = cljs.core.map.call(null, cljs.core.seq, cljs.core.conj.call(null, colls, c2, c1));
        if (cljs.core.every_QMARK_.call(null, cljs.core.identity, ss)) {
          return cljs.core.concat.call(null, cljs.core.map.call(null, cljs.core.first, ss), cljs.core.apply.call(null, interleave, cljs.core.map.call(null, cljs.core.rest, ss)));
        } else {
          return null;
        }
      }, null, null);
    };
    var G__11130 = function(c1, c2, var_args) {
      var colls = null;
      if (arguments.length > 2) {
        colls = cljs.core.array_seq(Array.prototype.slice.call(arguments, 2), 0);
      }
      return G__11130__delegate.call(this, c1, c2, colls);
    };
    G__11130.cljs$lang$maxFixedArity = 2;
    G__11130.cljs$lang$applyTo = function(arglist__11131) {
      var c1 = cljs.core.first(arglist__11131);
      arglist__11131 = cljs.core.next(arglist__11131);
      var c2 = cljs.core.first(arglist__11131);
      var colls = cljs.core.rest(arglist__11131);
      return G__11130__delegate(c1, c2, colls);
    };
    G__11130.cljs$core$IFn$_invoke$arity$variadic = G__11130__delegate;
    return G__11130;
  }();
  interleave = function(c1, c2, var_args) {
    var colls = var_args;
    switch(arguments.length) {
      case 2:
        return interleave__2.call(this, c1, c2);
      default:
        return interleave__3.cljs$core$IFn$_invoke$arity$variadic(c1, c2, cljs.core.array_seq(arguments, 2));
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  interleave.cljs$lang$maxFixedArity = 2;
  interleave.cljs$lang$applyTo = interleave__3.cljs$lang$applyTo;
  interleave.cljs$core$IFn$_invoke$arity$2 = interleave__2;
  interleave.cljs$core$IFn$_invoke$arity$variadic = interleave__3.cljs$core$IFn$_invoke$arity$variadic;
  return interleave;
}();
cljs.core.interpose = function interpose(sep, coll) {
  return cljs.core.drop.call(null, 1, cljs.core.interleave.call(null, cljs.core.repeat.call(null, sep), coll));
};
cljs.core.flatten1 = function flatten1(colls) {
  var cat = function cat(coll, colls__$1) {
    return new cljs.core.LazySeq(null, function() {
      var temp__4090__auto__ = cljs.core.seq.call(null, coll);
      if (temp__4090__auto__) {
        var coll__$1 = temp__4090__auto__;
        return cljs.core.cons.call(null, cljs.core.first.call(null, coll__$1), cat.call(null, cljs.core.rest.call(null, coll__$1), colls__$1));
      } else {
        if (cljs.core.seq.call(null, colls__$1)) {
          return cat.call(null, cljs.core.first.call(null, colls__$1), cljs.core.rest.call(null, colls__$1));
        } else {
          return null;
        }
      }
    }, null, null);
  };
  return cat.call(null, null, colls);
};
cljs.core.mapcat = function() {
  var mapcat = null;
  var mapcat__2 = function(f, coll) {
    return cljs.core.flatten1.call(null, cljs.core.map.call(null, f, coll));
  };
  var mapcat__3 = function() {
    var G__11132__delegate = function(f, coll, colls) {
      return cljs.core.flatten1.call(null, cljs.core.apply.call(null, cljs.core.map, f, coll, colls));
    };
    var G__11132 = function(f, coll, var_args) {
      var colls = null;
      if (arguments.length > 2) {
        colls = cljs.core.array_seq(Array.prototype.slice.call(arguments, 2), 0);
      }
      return G__11132__delegate.call(this, f, coll, colls);
    };
    G__11132.cljs$lang$maxFixedArity = 2;
    G__11132.cljs$lang$applyTo = function(arglist__11133) {
      var f = cljs.core.first(arglist__11133);
      arglist__11133 = cljs.core.next(arglist__11133);
      var coll = cljs.core.first(arglist__11133);
      var colls = cljs.core.rest(arglist__11133);
      return G__11132__delegate(f, coll, colls);
    };
    G__11132.cljs$core$IFn$_invoke$arity$variadic = G__11132__delegate;
    return G__11132;
  }();
  mapcat = function(f, coll, var_args) {
    var colls = var_args;
    switch(arguments.length) {
      case 2:
        return mapcat__2.call(this, f, coll);
      default:
        return mapcat__3.cljs$core$IFn$_invoke$arity$variadic(f, coll, cljs.core.array_seq(arguments, 2));
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  mapcat.cljs$lang$maxFixedArity = 2;
  mapcat.cljs$lang$applyTo = mapcat__3.cljs$lang$applyTo;
  mapcat.cljs$core$IFn$_invoke$arity$2 = mapcat__2;
  mapcat.cljs$core$IFn$_invoke$arity$variadic = mapcat__3.cljs$core$IFn$_invoke$arity$variadic;
  return mapcat;
}();
cljs.core.filter = function filter(pred, coll) {
  return new cljs.core.LazySeq(null, function() {
    var temp__4092__auto__ = cljs.core.seq.call(null, coll);
    if (temp__4092__auto__) {
      var s = temp__4092__auto__;
      if (cljs.core.chunked_seq_QMARK_.call(null, s)) {
        var c = cljs.core.chunk_first.call(null, s);
        var size = cljs.core.count.call(null, c);
        var b = cljs.core.chunk_buffer.call(null, size);
        var n__4251__auto___11134 = size;
        var i_11135 = 0;
        while (true) {
          if (i_11135 < n__4251__auto___11134) {
            if (cljs.core.truth_(pred.call(null, cljs.core._nth.call(null, c, i_11135)))) {
              cljs.core.chunk_append.call(null, b, cljs.core._nth.call(null, c, i_11135));
            } else {
            }
            var G__11136 = i_11135 + 1;
            i_11135 = G__11136;
            continue;
          } else {
          }
          break;
        }
        return cljs.core.chunk_cons.call(null, cljs.core.chunk.call(null, b), filter.call(null, pred, cljs.core.chunk_rest.call(null, s)));
      } else {
        var f = cljs.core.first.call(null, s);
        var r = cljs.core.rest.call(null, s);
        if (cljs.core.truth_(pred.call(null, f))) {
          return cljs.core.cons.call(null, f, filter.call(null, pred, r));
        } else {
          return filter.call(null, pred, r);
        }
      }
    } else {
      return null;
    }
  }, null, null);
};
cljs.core.remove = function remove(pred, coll) {
  return cljs.core.filter.call(null, cljs.core.complement.call(null, pred), coll);
};
cljs.core.tree_seq = function tree_seq(branch_QMARK_, children, root) {
  var walk = function walk(node) {
    return new cljs.core.LazySeq(null, function() {
      return cljs.core.cons.call(null, node, cljs.core.truth_(branch_QMARK_.call(null, node)) ? cljs.core.mapcat.call(null, walk, children.call(null, node)) : null);
    }, null, null);
  };
  return walk.call(null, root);
};
cljs.core.flatten = function flatten(x) {
  return cljs.core.filter.call(null, function(p1__11137_SHARP_) {
    return!cljs.core.sequential_QMARK_.call(null, p1__11137_SHARP_);
  }, cljs.core.rest.call(null, cljs.core.tree_seq.call(null, cljs.core.sequential_QMARK_, cljs.core.seq, x)));
};
cljs.core.into = function into(to, from) {
  if (!(to == null)) {
    if (function() {
      var G__11139 = to;
      if (G__11139) {
        var bit__4046__auto__ = G__11139.cljs$lang$protocol_mask$partition1$ & 4;
        if (bit__4046__auto__ || G__11139.cljs$core$IEditableCollection$) {
          return true;
        } else {
          return false;
        }
      } else {
        return false;
      }
    }()) {
      return cljs.core.persistent_BANG_.call(null, cljs.core.reduce.call(null, cljs.core._conj_BANG_, cljs.core.transient$.call(null, to), from));
    } else {
      return cljs.core.reduce.call(null, cljs.core._conj, to, from);
    }
  } else {
    return cljs.core.reduce.call(null, cljs.core.conj, cljs.core.List.EMPTY, from);
  }
};
cljs.core.mapv = function() {
  var mapv = null;
  var mapv__2 = function(f, coll) {
    return cljs.core.persistent_BANG_.call(null, cljs.core.reduce.call(null, function(v, o) {
      return cljs.core.conj_BANG_.call(null, v, f.call(null, o));
    }, cljs.core.transient$.call(null, cljs.core.PersistentVector.EMPTY), coll));
  };
  var mapv__3 = function(f, c1, c2) {
    return cljs.core.into.call(null, cljs.core.PersistentVector.EMPTY, cljs.core.map.call(null, f, c1, c2));
  };
  var mapv__4 = function(f, c1, c2, c3) {
    return cljs.core.into.call(null, cljs.core.PersistentVector.EMPTY, cljs.core.map.call(null, f, c1, c2, c3));
  };
  var mapv__5 = function() {
    var G__11140__delegate = function(f, c1, c2, c3, colls) {
      return cljs.core.into.call(null, cljs.core.PersistentVector.EMPTY, cljs.core.apply.call(null, cljs.core.map, f, c1, c2, c3, colls));
    };
    var G__11140 = function(f, c1, c2, c3, var_args) {
      var colls = null;
      if (arguments.length > 4) {
        colls = cljs.core.array_seq(Array.prototype.slice.call(arguments, 4), 0);
      }
      return G__11140__delegate.call(this, f, c1, c2, c3, colls);
    };
    G__11140.cljs$lang$maxFixedArity = 4;
    G__11140.cljs$lang$applyTo = function(arglist__11141) {
      var f = cljs.core.first(arglist__11141);
      arglist__11141 = cljs.core.next(arglist__11141);
      var c1 = cljs.core.first(arglist__11141);
      arglist__11141 = cljs.core.next(arglist__11141);
      var c2 = cljs.core.first(arglist__11141);
      arglist__11141 = cljs.core.next(arglist__11141);
      var c3 = cljs.core.first(arglist__11141);
      var colls = cljs.core.rest(arglist__11141);
      return G__11140__delegate(f, c1, c2, c3, colls);
    };
    G__11140.cljs$core$IFn$_invoke$arity$variadic = G__11140__delegate;
    return G__11140;
  }();
  mapv = function(f, c1, c2, c3, var_args) {
    var colls = var_args;
    switch(arguments.length) {
      case 2:
        return mapv__2.call(this, f, c1);
      case 3:
        return mapv__3.call(this, f, c1, c2);
      case 4:
        return mapv__4.call(this, f, c1, c2, c3);
      default:
        return mapv__5.cljs$core$IFn$_invoke$arity$variadic(f, c1, c2, c3, cljs.core.array_seq(arguments, 4));
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  mapv.cljs$lang$maxFixedArity = 4;
  mapv.cljs$lang$applyTo = mapv__5.cljs$lang$applyTo;
  mapv.cljs$core$IFn$_invoke$arity$2 = mapv__2;
  mapv.cljs$core$IFn$_invoke$arity$3 = mapv__3;
  mapv.cljs$core$IFn$_invoke$arity$4 = mapv__4;
  mapv.cljs$core$IFn$_invoke$arity$variadic = mapv__5.cljs$core$IFn$_invoke$arity$variadic;
  return mapv;
}();
cljs.core.filterv = function filterv(pred, coll) {
  return cljs.core.persistent_BANG_.call(null, cljs.core.reduce.call(null, function(v, o) {
    if (cljs.core.truth_(pred.call(null, o))) {
      return cljs.core.conj_BANG_.call(null, v, o);
    } else {
      return v;
    }
  }, cljs.core.transient$.call(null, cljs.core.PersistentVector.EMPTY), coll));
};
cljs.core.partition = function() {
  var partition = null;
  var partition__2 = function(n, coll) {
    return partition.call(null, n, n, coll);
  };
  var partition__3 = function(n, step, coll) {
    return new cljs.core.LazySeq(null, function() {
      var temp__4092__auto__ = cljs.core.seq.call(null, coll);
      if (temp__4092__auto__) {
        var s = temp__4092__auto__;
        var p = cljs.core.take.call(null, n, s);
        if (n === cljs.core.count.call(null, p)) {
          return cljs.core.cons.call(null, p, partition.call(null, n, step, cljs.core.drop.call(null, step, s)));
        } else {
          return null;
        }
      } else {
        return null;
      }
    }, null, null);
  };
  var partition__4 = function(n, step, pad, coll) {
    return new cljs.core.LazySeq(null, function() {
      var temp__4092__auto__ = cljs.core.seq.call(null, coll);
      if (temp__4092__auto__) {
        var s = temp__4092__auto__;
        var p = cljs.core.take.call(null, n, s);
        if (n === cljs.core.count.call(null, p)) {
          return cljs.core.cons.call(null, p, partition.call(null, n, step, pad, cljs.core.drop.call(null, step, s)));
        } else {
          return cljs.core._conj.call(null, cljs.core.List.EMPTY, cljs.core.take.call(null, n, cljs.core.concat.call(null, p, pad)));
        }
      } else {
        return null;
      }
    }, null, null);
  };
  partition = function(n, step, pad, coll) {
    switch(arguments.length) {
      case 2:
        return partition__2.call(this, n, step);
      case 3:
        return partition__3.call(this, n, step, pad);
      case 4:
        return partition__4.call(this, n, step, pad, coll);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  partition.cljs$core$IFn$_invoke$arity$2 = partition__2;
  partition.cljs$core$IFn$_invoke$arity$3 = partition__3;
  partition.cljs$core$IFn$_invoke$arity$4 = partition__4;
  return partition;
}();
cljs.core.get_in = function() {
  var get_in = null;
  var get_in__2 = function(m, ks) {
    return get_in.call(null, m, ks, null);
  };
  var get_in__3 = function(m, ks, not_found) {
    var sentinel = cljs.core.lookup_sentinel;
    var m__$1 = m;
    var ks__$1 = cljs.core.seq.call(null, ks);
    while (true) {
      if (ks__$1) {
        if (!function() {
          var G__11143 = m__$1;
          if (G__11143) {
            var bit__4053__auto__ = G__11143.cljs$lang$protocol_mask$partition0$ & 256;
            if (bit__4053__auto__ || G__11143.cljs$core$ILookup$) {
              return true;
            } else {
              if (!G__11143.cljs$lang$protocol_mask$partition0$) {
                return cljs.core.native_satisfies_QMARK_.call(null, cljs.core.ILookup, G__11143);
              } else {
                return false;
              }
            }
          } else {
            return cljs.core.native_satisfies_QMARK_.call(null, cljs.core.ILookup, G__11143);
          }
        }()) {
          return not_found;
        } else {
          var m__$2 = cljs.core.get.call(null, m__$1, cljs.core.first.call(null, ks__$1), sentinel);
          if (sentinel === m__$2) {
            return not_found;
          } else {
            var G__11144 = sentinel;
            var G__11145 = m__$2;
            var G__11146 = cljs.core.next.call(null, ks__$1);
            sentinel = G__11144;
            m__$1 = G__11145;
            ks__$1 = G__11146;
            continue;
          }
        }
      } else {
        return m__$1;
      }
      break;
    }
  };
  get_in = function(m, ks, not_found) {
    switch(arguments.length) {
      case 2:
        return get_in__2.call(this, m, ks);
      case 3:
        return get_in__3.call(this, m, ks, not_found);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  get_in.cljs$core$IFn$_invoke$arity$2 = get_in__2;
  get_in.cljs$core$IFn$_invoke$arity$3 = get_in__3;
  return get_in;
}();
cljs.core.assoc_in = function assoc_in(m, p__11147, v) {
  var vec__11149 = p__11147;
  var k = cljs.core.nth.call(null, vec__11149, 0, null);
  var ks = cljs.core.nthnext.call(null, vec__11149, 1);
  if (ks) {
    return cljs.core.assoc.call(null, m, k, assoc_in.call(null, cljs.core.get.call(null, m, k), ks, v));
  } else {
    return cljs.core.assoc.call(null, m, k, v);
  }
};
cljs.core.update_in = function() {
  var update_in = null;
  var update_in__3 = function(m, p__11150, f) {
    var vec__11160 = p__11150;
    var k = cljs.core.nth.call(null, vec__11160, 0, null);
    var ks = cljs.core.nthnext.call(null, vec__11160, 1);
    if (ks) {
      return cljs.core.assoc.call(null, m, k, update_in.call(null, cljs.core.get.call(null, m, k), ks, f));
    } else {
      return cljs.core.assoc.call(null, m, k, f.call(null, cljs.core.get.call(null, m, k)));
    }
  };
  var update_in__4 = function(m, p__11151, f, a) {
    var vec__11161 = p__11151;
    var k = cljs.core.nth.call(null, vec__11161, 0, null);
    var ks = cljs.core.nthnext.call(null, vec__11161, 1);
    if (ks) {
      return cljs.core.assoc.call(null, m, k, update_in.call(null, cljs.core.get.call(null, m, k), ks, f, a));
    } else {
      return cljs.core.assoc.call(null, m, k, f.call(null, cljs.core.get.call(null, m, k), a));
    }
  };
  var update_in__5 = function(m, p__11152, f, a, b) {
    var vec__11162 = p__11152;
    var k = cljs.core.nth.call(null, vec__11162, 0, null);
    var ks = cljs.core.nthnext.call(null, vec__11162, 1);
    if (ks) {
      return cljs.core.assoc.call(null, m, k, update_in.call(null, cljs.core.get.call(null, m, k), ks, f, a, b));
    } else {
      return cljs.core.assoc.call(null, m, k, f.call(null, cljs.core.get.call(null, m, k), a, b));
    }
  };
  var update_in__6 = function(m, p__11153, f, a, b, c) {
    var vec__11163 = p__11153;
    var k = cljs.core.nth.call(null, vec__11163, 0, null);
    var ks = cljs.core.nthnext.call(null, vec__11163, 1);
    if (ks) {
      return cljs.core.assoc.call(null, m, k, update_in.call(null, cljs.core.get.call(null, m, k), ks, f, a, b, c));
    } else {
      return cljs.core.assoc.call(null, m, k, f.call(null, cljs.core.get.call(null, m, k), a, b, c));
    }
  };
  var update_in__7 = function() {
    var G__11165__delegate = function(m, p__11154, f, a, b, c, args) {
      var vec__11164 = p__11154;
      var k = cljs.core.nth.call(null, vec__11164, 0, null);
      var ks = cljs.core.nthnext.call(null, vec__11164, 1);
      if (ks) {
        return cljs.core.assoc.call(null, m, k, cljs.core.apply.call(null, update_in, cljs.core.get.call(null, m, k), ks, f, a, b, c, args));
      } else {
        return cljs.core.assoc.call(null, m, k, cljs.core.apply.call(null, f, cljs.core.get.call(null, m, k), a, b, c, args));
      }
    };
    var G__11165 = function(m, p__11154, f, a, b, c, var_args) {
      var args = null;
      if (arguments.length > 6) {
        args = cljs.core.array_seq(Array.prototype.slice.call(arguments, 6), 0);
      }
      return G__11165__delegate.call(this, m, p__11154, f, a, b, c, args);
    };
    G__11165.cljs$lang$maxFixedArity = 6;
    G__11165.cljs$lang$applyTo = function(arglist__11166) {
      var m = cljs.core.first(arglist__11166);
      arglist__11166 = cljs.core.next(arglist__11166);
      var p__11154 = cljs.core.first(arglist__11166);
      arglist__11166 = cljs.core.next(arglist__11166);
      var f = cljs.core.first(arglist__11166);
      arglist__11166 = cljs.core.next(arglist__11166);
      var a = cljs.core.first(arglist__11166);
      arglist__11166 = cljs.core.next(arglist__11166);
      var b = cljs.core.first(arglist__11166);
      arglist__11166 = cljs.core.next(arglist__11166);
      var c = cljs.core.first(arglist__11166);
      var args = cljs.core.rest(arglist__11166);
      return G__11165__delegate(m, p__11154, f, a, b, c, args);
    };
    G__11165.cljs$core$IFn$_invoke$arity$variadic = G__11165__delegate;
    return G__11165;
  }();
  update_in = function(m, p__11154, f, a, b, c, var_args) {
    var args = var_args;
    switch(arguments.length) {
      case 3:
        return update_in__3.call(this, m, p__11154, f);
      case 4:
        return update_in__4.call(this, m, p__11154, f, a);
      case 5:
        return update_in__5.call(this, m, p__11154, f, a, b);
      case 6:
        return update_in__6.call(this, m, p__11154, f, a, b, c);
      default:
        return update_in__7.cljs$core$IFn$_invoke$arity$variadic(m, p__11154, f, a, b, c, cljs.core.array_seq(arguments, 6));
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  update_in.cljs$lang$maxFixedArity = 6;
  update_in.cljs$lang$applyTo = update_in__7.cljs$lang$applyTo;
  update_in.cljs$core$IFn$_invoke$arity$3 = update_in__3;
  update_in.cljs$core$IFn$_invoke$arity$4 = update_in__4;
  update_in.cljs$core$IFn$_invoke$arity$5 = update_in__5;
  update_in.cljs$core$IFn$_invoke$arity$6 = update_in__6;
  update_in.cljs$core$IFn$_invoke$arity$variadic = update_in__7.cljs$core$IFn$_invoke$arity$variadic;
  return update_in;
}();
cljs.core.VectorNode = function(edit, arr) {
  this.edit = edit;
  this.arr = arr;
};
cljs.core.VectorNode.cljs$lang$type = true;
cljs.core.VectorNode.cljs$lang$ctorStr = "cljs.core/VectorNode";
cljs.core.VectorNode.cljs$lang$ctorPrWriter = function(this__3973__auto__, writer__3974__auto__, opts__3975__auto__) {
  return cljs.core._write.call(null, writer__3974__auto__, "cljs.core/VectorNode");
};
cljs.core.__GT_VectorNode = function __GT_VectorNode(edit, arr) {
  return new cljs.core.VectorNode(edit, arr);
};
cljs.core.pv_fresh_node = function pv_fresh_node(edit) {
  return new cljs.core.VectorNode(edit, [null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null]);
};
cljs.core.pv_aget = function pv_aget(node, idx) {
  return node.arr[idx];
};
cljs.core.pv_aset = function pv_aset(node, idx, val) {
  return node.arr[idx] = val;
};
cljs.core.pv_clone_node = function pv_clone_node(node) {
  return new cljs.core.VectorNode(node.edit, cljs.core.aclone.call(null, node.arr));
};
cljs.core.tail_off = function tail_off(pv) {
  var cnt = pv.cnt;
  if (cnt < 32) {
    return 0;
  } else {
    return cnt - 1 >>> 5 << 5;
  }
};
cljs.core.new_path = function new_path(edit, level, node) {
  var ll = level;
  var ret = node;
  while (true) {
    if (ll === 0) {
      return ret;
    } else {
      var embed = ret;
      var r = cljs.core.pv_fresh_node.call(null, edit);
      var _ = cljs.core.pv_aset.call(null, r, 0, embed);
      var G__11167 = ll - 5;
      var G__11168 = r;
      ll = G__11167;
      ret = G__11168;
      continue;
    }
    break;
  }
};
cljs.core.push_tail = function push_tail(pv, level, parent, tailnode) {
  var ret = cljs.core.pv_clone_node.call(null, parent);
  var subidx = pv.cnt - 1 >>> level & 31;
  if (5 === level) {
    cljs.core.pv_aset.call(null, ret, subidx, tailnode);
    return ret;
  } else {
    var child = cljs.core.pv_aget.call(null, parent, subidx);
    if (!(child == null)) {
      var node_to_insert = push_tail.call(null, pv, level - 5, child, tailnode);
      cljs.core.pv_aset.call(null, ret, subidx, node_to_insert);
      return ret;
    } else {
      var node_to_insert = cljs.core.new_path.call(null, null, level - 5, tailnode);
      cljs.core.pv_aset.call(null, ret, subidx, node_to_insert);
      return ret;
    }
  }
};
cljs.core.vector_index_out_of_bounds = function vector_index_out_of_bounds(i, cnt) {
  throw new Error([cljs.core.str("No item "), cljs.core.str(i), cljs.core.str(" in vector of length "), cljs.core.str(cnt)].join(""));
};
cljs.core.array_for = function array_for(pv, i) {
  if (0 <= i && i < pv.cnt) {
    if (i >= cljs.core.tail_off.call(null, pv)) {
      return pv.tail;
    } else {
      var node = pv.root;
      var level = pv.shift;
      while (true) {
        if (level > 0) {
          var G__11169 = cljs.core.pv_aget.call(null, node, i >>> level & 31);
          var G__11170 = level - 5;
          node = G__11169;
          level = G__11170;
          continue;
        } else {
          return node.arr;
        }
        break;
      }
    }
  } else {
    return cljs.core.vector_index_out_of_bounds.call(null, i, pv.cnt);
  }
};
cljs.core.do_assoc = function do_assoc(pv, level, node, i, val) {
  var ret = cljs.core.pv_clone_node.call(null, node);
  if (level === 0) {
    cljs.core.pv_aset.call(null, ret, i & 31, val);
    return ret;
  } else {
    var subidx = i >>> level & 31;
    cljs.core.pv_aset.call(null, ret, subidx, do_assoc.call(null, pv, level - 5, cljs.core.pv_aget.call(null, node, subidx), i, val));
    return ret;
  }
};
cljs.core.pop_tail = function pop_tail(pv, level, node) {
  var subidx = pv.cnt - 2 >>> level & 31;
  if (level > 5) {
    var new_child = pop_tail.call(null, pv, level - 5, cljs.core.pv_aget.call(null, node, subidx));
    if (new_child == null && subidx === 0) {
      return null;
    } else {
      var ret = cljs.core.pv_clone_node.call(null, node);
      cljs.core.pv_aset.call(null, ret, subidx, new_child);
      return ret;
    }
  } else {
    if (subidx === 0) {
      return null;
    } else {
      if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
        var ret = cljs.core.pv_clone_node.call(null, node);
        cljs.core.pv_aset.call(null, ret, subidx, null);
        return ret;
      } else {
        return null;
      }
    }
  }
};
cljs.core.PersistentVector = function(meta, cnt, shift, root, tail, __hash) {
  this.meta = meta;
  this.cnt = cnt;
  this.shift = shift;
  this.root = root;
  this.tail = tail;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition1$ = 8196;
  this.cljs$lang$protocol_mask$partition0$ = 167668511;
};
cljs.core.PersistentVector.cljs$lang$type = true;
cljs.core.PersistentVector.cljs$lang$ctorStr = "cljs.core/PersistentVector";
cljs.core.PersistentVector.cljs$lang$ctorPrWriter = function(this__3970__auto__, writer__3971__auto__, opt__3972__auto__) {
  return cljs.core._write.call(null, writer__3971__auto__, "cljs.core/PersistentVector");
};
cljs.core.PersistentVector.prototype.cljs$core$IEditableCollection$_as_transient$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.TransientVector(self__.cnt, self__.shift, cljs.core.tv_editable_root.call(null, self__.root), cljs.core.tv_editable_tail.call(null, self__.tail));
};
cljs.core.PersistentVector.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var h__3814__auto__ = self__.__hash;
  if (!(h__3814__auto__ == null)) {
    return h__3814__auto__;
  } else {
    var h__3814__auto____$1 = cljs.core.hash_coll.call(null, coll__$1);
    self__.__hash = h__3814__auto____$1;
    return h__3814__auto____$1;
  }
};
cljs.core.PersistentVector.prototype.cljs$core$ILookup$_lookup$arity$2 = function(coll, k) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core._nth.call(null, coll__$1, k, null);
};
cljs.core.PersistentVector.prototype.cljs$core$ILookup$_lookup$arity$3 = function(coll, k, not_found) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core._nth.call(null, coll__$1, k, not_found);
};
cljs.core.PersistentVector.prototype.cljs$core$IAssociative$_assoc$arity$3 = function(coll, k, v) {
  var self__ = this;
  var coll__$1 = this;
  if (0 <= k && k < self__.cnt) {
    if (cljs.core.tail_off.call(null, coll__$1) <= k) {
      var new_tail = cljs.core.aclone.call(null, self__.tail);
      new_tail[k & 31] = v;
      return new cljs.core.PersistentVector(self__.meta, self__.cnt, self__.shift, self__.root, new_tail, null);
    } else {
      return new cljs.core.PersistentVector(self__.meta, self__.cnt, self__.shift, cljs.core.do_assoc.call(null, coll__$1, self__.shift, self__.root, k, v), self__.tail, null);
    }
  } else {
    if (k === self__.cnt) {
      return cljs.core._conj.call(null, coll__$1, v);
    } else {
      if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
        throw new Error([cljs.core.str("Index "), cljs.core.str(k), cljs.core.str(" out of bounds  [0,"), cljs.core.str(self__.cnt), cljs.core.str("]")].join(""));
      } else {
        return null;
      }
    }
  }
};
cljs.core.PersistentVector.prototype.call = function() {
  var G__11172 = null;
  var G__11172__2 = function(self__, k) {
    var self__ = this;
    var self____$1 = this;
    var coll = self____$1;
    return coll.cljs$core$IIndexed$_nth$arity$2(null, k);
  };
  var G__11172__3 = function(self__, k, not_found) {
    var self__ = this;
    var self____$1 = this;
    var coll = self____$1;
    return coll.cljs$core$IIndexed$_nth$arity$3(null, k, not_found);
  };
  G__11172 = function(self__, k, not_found) {
    switch(arguments.length) {
      case 2:
        return G__11172__2.call(this, self__, k);
      case 3:
        return G__11172__3.call(this, self__, k, not_found);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  return G__11172;
}();
cljs.core.PersistentVector.prototype.apply = function(self__, args11171) {
  var self__ = this;
  var self____$1 = this;
  return self____$1.call.apply(self____$1, [self____$1].concat(cljs.core.aclone.call(null, args11171)));
};
cljs.core.PersistentVector.prototype.cljs$core$IFn$_invoke$arity$1 = function(k) {
  var self__ = this;
  var coll = this;
  return coll.cljs$core$IIndexed$_nth$arity$2(null, k);
};
cljs.core.PersistentVector.prototype.cljs$core$IFn$_invoke$arity$2 = function(k, not_found) {
  var self__ = this;
  var coll = this;
  return coll.cljs$core$IIndexed$_nth$arity$3(null, k, not_found);
};
cljs.core.PersistentVector.prototype.cljs$core$IKVReduce$_kv_reduce$arity$3 = function(v, f, init) {
  var self__ = this;
  var v__$1 = this;
  var step_init = [0, init];
  var i = 0;
  while (true) {
    if (i < self__.cnt) {
      var arr = cljs.core.array_for.call(null, v__$1, i);
      var len = arr.length;
      var init__$1 = function() {
        var j = 0;
        var init__$1 = step_init[1];
        while (true) {
          if (j < len) {
            var init__$2 = f.call(null, init__$1, j + i, arr[j]);
            if (cljs.core.reduced_QMARK_.call(null, init__$2)) {
              return init__$2;
            } else {
              var G__11173 = j + 1;
              var G__11174 = init__$2;
              j = G__11173;
              init__$1 = G__11174;
              continue;
            }
          } else {
            step_init[0] = len;
            step_init[1] = init__$1;
            return init__$1;
          }
          break;
        }
      }();
      if (cljs.core.reduced_QMARK_.call(null, init__$1)) {
        return cljs.core.deref.call(null, init__$1);
      } else {
        var G__11175 = i + step_init[0];
        i = G__11175;
        continue;
      }
    } else {
      return step_init[1];
    }
    break;
  }
};
cljs.core.PersistentVector.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, o) {
  var self__ = this;
  var coll__$1 = this;
  if (self__.cnt - cljs.core.tail_off.call(null, coll__$1) < 32) {
    var len = self__.tail.length;
    var new_tail = new Array(len + 1);
    var n__4251__auto___11176 = len;
    var i_11177 = 0;
    while (true) {
      if (i_11177 < n__4251__auto___11176) {
        new_tail[i_11177] = self__.tail[i_11177];
        var G__11178 = i_11177 + 1;
        i_11177 = G__11178;
        continue;
      } else {
      }
      break;
    }
    new_tail[len] = o;
    return new cljs.core.PersistentVector(self__.meta, self__.cnt + 1, self__.shift, self__.root, new_tail, null);
  } else {
    var root_overflow_QMARK_ = self__.cnt >>> 5 > 1 << self__.shift;
    var new_shift = root_overflow_QMARK_ ? self__.shift + 5 : self__.shift;
    var new_root = root_overflow_QMARK_ ? function() {
      var n_r = cljs.core.pv_fresh_node.call(null, null);
      cljs.core.pv_aset.call(null, n_r, 0, self__.root);
      cljs.core.pv_aset.call(null, n_r, 1, cljs.core.new_path.call(null, null, self__.shift, new cljs.core.VectorNode(null, self__.tail)));
      return n_r;
    }() : cljs.core.push_tail.call(null, coll__$1, self__.shift, self__.root, new cljs.core.VectorNode(null, self__.tail));
    return new cljs.core.PersistentVector(self__.meta, self__.cnt + 1, new_shift, new_root, [o], null);
  }
};
cljs.core.PersistentVector.prototype.cljs$core$IReversible$_rseq$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  if (self__.cnt > 0) {
    return new cljs.core.RSeq(coll__$1, self__.cnt - 1, null);
  } else {
    return null;
  }
};
cljs.core.PersistentVector.prototype.cljs$core$IMapEntry$_key$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core._nth.call(null, coll__$1, 0);
};
cljs.core.PersistentVector.prototype.cljs$core$IMapEntry$_val$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core._nth.call(null, coll__$1, 1);
};
cljs.core.PersistentVector.prototype.toString = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.pr_str_STAR_.call(null, coll);
};
cljs.core.PersistentVector.prototype.cljs$core$IReduce$_reduce$arity$2 = function(v, f) {
  var self__ = this;
  var v__$1 = this;
  return cljs.core.ci_reduce.call(null, v__$1, f);
};
cljs.core.PersistentVector.prototype.cljs$core$IReduce$_reduce$arity$3 = function(v, f, start) {
  var self__ = this;
  var v__$1 = this;
  return cljs.core.ci_reduce.call(null, v__$1, f, start);
};
cljs.core.PersistentVector.prototype.cljs$core$ISeqable$_seq$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  if (self__.cnt === 0) {
    return null;
  } else {
    if (self__.cnt < 32) {
      return cljs.core.array_seq.call(null, self__.tail);
    } else {
      if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
        return cljs.core.chunked_seq.call(null, coll__$1, 0, 0);
      } else {
        return null;
      }
    }
  }
};
cljs.core.PersistentVector.prototype.cljs$core$ICounted$_count$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.cnt;
};
cljs.core.PersistentVector.prototype.cljs$core$IStack$_peek$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  if (self__.cnt > 0) {
    return cljs.core._nth.call(null, coll__$1, self__.cnt - 1);
  } else {
    return null;
  }
};
cljs.core.PersistentVector.prototype.cljs$core$IStack$_pop$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  if (self__.cnt === 0) {
    throw new Error("Can't pop empty vector");
  } else {
    if (1 === self__.cnt) {
      return cljs.core._with_meta.call(null, cljs.core.PersistentVector.EMPTY, self__.meta);
    } else {
      if (1 < self__.cnt - cljs.core.tail_off.call(null, coll__$1)) {
        return new cljs.core.PersistentVector(self__.meta, self__.cnt - 1, self__.shift, self__.root, self__.tail.slice(0, -1), null);
      } else {
        if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
          var new_tail = cljs.core.array_for.call(null, coll__$1, self__.cnt - 2);
          var nr = cljs.core.pop_tail.call(null, coll__$1, self__.shift, self__.root);
          var new_root = nr == null ? cljs.core.PersistentVector.EMPTY_NODE : nr;
          var cnt_1 = self__.cnt - 1;
          if (5 < self__.shift && cljs.core.pv_aget.call(null, new_root, 1) == null) {
            return new cljs.core.PersistentVector(self__.meta, cnt_1, self__.shift - 5, cljs.core.pv_aget.call(null, new_root, 0), new_tail, null);
          } else {
            return new cljs.core.PersistentVector(self__.meta, cnt_1, self__.shift, new_root, new_tail, null);
          }
        } else {
          return null;
        }
      }
    }
  }
};
cljs.core.PersistentVector.prototype.cljs$core$IVector$_assoc_n$arity$3 = function(coll, n, val) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core._assoc.call(null, coll__$1, n, val);
};
cljs.core.PersistentVector.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.equiv_sequential.call(null, coll__$1, other);
};
cljs.core.PersistentVector.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, meta__$1) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.PersistentVector(meta__$1, self__.cnt, self__.shift, self__.root, self__.tail, self__.__hash);
};
cljs.core.PersistentVector.prototype.cljs$core$ICloneable$_clone$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return new cljs.core.PersistentVector(self__.meta, self__.cnt, self__.shift, self__.root, self__.tail, self__.__hash);
};
cljs.core.PersistentVector.prototype.cljs$core$IMeta$_meta$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.meta;
};
cljs.core.PersistentVector.prototype.cljs$core$IIndexed$_nth$arity$2 = function(coll, n) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.array_for.call(null, coll__$1, n)[n & 31];
};
cljs.core.PersistentVector.prototype.cljs$core$IIndexed$_nth$arity$3 = function(coll, n, not_found) {
  var self__ = this;
  var coll__$1 = this;
  if (0 <= n && n < self__.cnt) {
    return cljs.core._nth.call(null, coll__$1, n);
  } else {
    return not_found;
  }
};
cljs.core.PersistentVector.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.with_meta.call(null, cljs.core.PersistentVector.EMPTY, self__.meta);
};
cljs.core.__GT_PersistentVector = function __GT_PersistentVector(meta, cnt, shift, root, tail, __hash) {
  return new cljs.core.PersistentVector(meta, cnt, shift, root, tail, __hash);
};
cljs.core.PersistentVector.EMPTY_NODE = new cljs.core.VectorNode(null, [null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null]);
cljs.core.PersistentVector.EMPTY = new cljs.core.PersistentVector(null, 0, 5, cljs.core.PersistentVector.EMPTY_NODE, [], 0);
cljs.core.PersistentVector.fromArray = function(xs, no_clone) {
  var l = xs.length;
  var xs__$1 = no_clone ? xs : cljs.core.aclone.call(null, xs);
  if (l < 32) {
    return new cljs.core.PersistentVector(null, l, 5, cljs.core.PersistentVector.EMPTY_NODE, xs__$1, null);
  } else {
    var node = xs__$1.slice(0, 32);
    var v = new cljs.core.PersistentVector(null, 32, 5, cljs.core.PersistentVector.EMPTY_NODE, node, null);
    var i = 32;
    var out = cljs.core._as_transient.call(null, v);
    while (true) {
      if (i < l) {
        var G__11179 = i + 1;
        var G__11180 = cljs.core.conj_BANG_.call(null, out, xs__$1[i]);
        i = G__11179;
        out = G__11180;
        continue;
      } else {
        return cljs.core.persistent_BANG_.call(null, out);
      }
      break;
    }
  }
};
cljs.core.vec = function vec(coll) {
  return cljs.core._persistent_BANG_.call(null, cljs.core.reduce.call(null, cljs.core._conj_BANG_, cljs.core._as_transient.call(null, cljs.core.PersistentVector.EMPTY), coll));
};
cljs.core.vector = function() {
  var vector__delegate = function(args) {
    if (args instanceof cljs.core.IndexedSeq && args.i === 0) {
      return cljs.core.PersistentVector.fromArray.call(null, args.arr, true);
    } else {
      return cljs.core.vec.call(null, args);
    }
  };
  var vector = function(var_args) {
    var args = null;
    if (arguments.length > 0) {
      args = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0), 0);
    }
    return vector__delegate.call(this, args);
  };
  vector.cljs$lang$maxFixedArity = 0;
  vector.cljs$lang$applyTo = function(arglist__11181) {
    var args = cljs.core.seq(arglist__11181);
    return vector__delegate(args);
  };
  vector.cljs$core$IFn$_invoke$arity$variadic = vector__delegate;
  return vector;
}();
cljs.core.ChunkedSeq = function(vec, node, i, off, meta, __hash) {
  this.vec = vec;
  this.node = node;
  this.i = i;
  this.off = off;
  this.meta = meta;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition0$ = 32243948;
  this.cljs$lang$protocol_mask$partition1$ = 1536;
};
cljs.core.ChunkedSeq.cljs$lang$type = true;
cljs.core.ChunkedSeq.cljs$lang$ctorStr = "cljs.core/ChunkedSeq";
cljs.core.ChunkedSeq.cljs$lang$ctorPrWriter = function(this__3970__auto__, writer__3971__auto__, opt__3972__auto__) {
  return cljs.core._write.call(null, writer__3971__auto__, "cljs.core/ChunkedSeq");
};
cljs.core.ChunkedSeq.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var h__3814__auto__ = self__.__hash;
  if (!(h__3814__auto__ == null)) {
    return h__3814__auto__;
  } else {
    var h__3814__auto____$1 = cljs.core.hash_coll.call(null, coll__$1);
    self__.__hash = h__3814__auto____$1;
    return h__3814__auto____$1;
  }
};
cljs.core.ChunkedSeq.prototype.cljs$core$INext$_next$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  if (self__.off + 1 < self__.node.length) {
    var s = cljs.core.chunked_seq.call(null, self__.vec, self__.node, self__.i, self__.off + 1);
    if (s == null) {
      return null;
    } else {
      return s;
    }
  } else {
    return cljs.core._chunked_next.call(null, coll__$1);
  }
};
cljs.core.ChunkedSeq.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, o) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.cons.call(null, o, coll__$1);
};
cljs.core.ChunkedSeq.prototype.toString = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.pr_str_STAR_.call(null, coll);
};
cljs.core.ChunkedSeq.prototype.cljs$core$IReduce$_reduce$arity$2 = function(coll, f) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.ci_reduce.call(null, cljs.core.subvec.call(null, self__.vec, self__.i + self__.off, cljs.core.count.call(null, self__.vec)), f);
};
cljs.core.ChunkedSeq.prototype.cljs$core$IReduce$_reduce$arity$3 = function(coll, f, start) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.ci_reduce.call(null, cljs.core.subvec.call(null, self__.vec, self__.i + self__.off, cljs.core.count.call(null, self__.vec)), f, start);
};
cljs.core.ChunkedSeq.prototype.cljs$core$ISeqable$_seq$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return coll__$1;
};
cljs.core.ChunkedSeq.prototype.cljs$core$ISeq$_first$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.node[self__.off];
};
cljs.core.ChunkedSeq.prototype.cljs$core$ISeq$_rest$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  if (self__.off + 1 < self__.node.length) {
    var s = cljs.core.chunked_seq.call(null, self__.vec, self__.node, self__.i, self__.off + 1);
    if (s == null) {
      return cljs.core.List.EMPTY;
    } else {
      return s;
    }
  } else {
    return cljs.core._chunked_rest.call(null, coll__$1);
  }
};
cljs.core.ChunkedSeq.prototype.cljs$core$IChunkedNext$_chunked_next$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var l = self__.node.length;
  var s = self__.i + l < cljs.core._count.call(null, self__.vec) ? cljs.core.chunked_seq.call(null, self__.vec, self__.i + l, 0) : null;
  if (s == null) {
    return null;
  } else {
    return s;
  }
};
cljs.core.ChunkedSeq.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.equiv_sequential.call(null, coll__$1, other);
};
cljs.core.ChunkedSeq.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, m) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.chunked_seq.call(null, self__.vec, self__.node, self__.i, self__.off, m);
};
cljs.core.ChunkedSeq.prototype.cljs$core$IWithMeta$_meta$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.meta;
};
cljs.core.ChunkedSeq.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.with_meta.call(null, cljs.core.PersistentVector.EMPTY, self__.meta);
};
cljs.core.ChunkedSeq.prototype.cljs$core$IChunkedSeq$_chunked_first$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.array_chunk.call(null, self__.node, self__.off);
};
cljs.core.ChunkedSeq.prototype.cljs$core$IChunkedSeq$_chunked_rest$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var l = self__.node.length;
  var s = self__.i + l < cljs.core._count.call(null, self__.vec) ? cljs.core.chunked_seq.call(null, self__.vec, self__.i + l, 0) : null;
  if (s == null) {
    return cljs.core.List.EMPTY;
  } else {
    return s;
  }
};
cljs.core.__GT_ChunkedSeq = function __GT_ChunkedSeq(vec, node, i, off, meta, __hash) {
  return new cljs.core.ChunkedSeq(vec, node, i, off, meta, __hash);
};
cljs.core.chunked_seq = function() {
  var chunked_seq = null;
  var chunked_seq__3 = function(vec, i, off) {
    return new cljs.core.ChunkedSeq(vec, cljs.core.array_for.call(null, vec, i), i, off, null, null);
  };
  var chunked_seq__4 = function(vec, node, i, off) {
    return new cljs.core.ChunkedSeq(vec, node, i, off, null, null);
  };
  var chunked_seq__5 = function(vec, node, i, off, meta) {
    return new cljs.core.ChunkedSeq(vec, node, i, off, meta, null);
  };
  chunked_seq = function(vec, node, i, off, meta) {
    switch(arguments.length) {
      case 3:
        return chunked_seq__3.call(this, vec, node, i);
      case 4:
        return chunked_seq__4.call(this, vec, node, i, off);
      case 5:
        return chunked_seq__5.call(this, vec, node, i, off, meta);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  chunked_seq.cljs$core$IFn$_invoke$arity$3 = chunked_seq__3;
  chunked_seq.cljs$core$IFn$_invoke$arity$4 = chunked_seq__4;
  chunked_seq.cljs$core$IFn$_invoke$arity$5 = chunked_seq__5;
  return chunked_seq;
}();
cljs.core.Subvec = function(meta, v, start, end, __hash) {
  this.meta = meta;
  this.v = v;
  this.start = start;
  this.end = end;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition0$ = 32400159;
  this.cljs$lang$protocol_mask$partition1$ = 8192;
};
cljs.core.Subvec.cljs$lang$type = true;
cljs.core.Subvec.cljs$lang$ctorStr = "cljs.core/Subvec";
cljs.core.Subvec.cljs$lang$ctorPrWriter = function(this__3970__auto__, writer__3971__auto__, opt__3972__auto__) {
  return cljs.core._write.call(null, writer__3971__auto__, "cljs.core/Subvec");
};
cljs.core.Subvec.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var h__3814__auto__ = self__.__hash;
  if (!(h__3814__auto__ == null)) {
    return h__3814__auto__;
  } else {
    var h__3814__auto____$1 = cljs.core.hash_coll.call(null, coll__$1);
    self__.__hash = h__3814__auto____$1;
    return h__3814__auto____$1;
  }
};
cljs.core.Subvec.prototype.cljs$core$ILookup$_lookup$arity$2 = function(coll, k) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core._nth.call(null, coll__$1, k, null);
};
cljs.core.Subvec.prototype.cljs$core$ILookup$_lookup$arity$3 = function(coll, k, not_found) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core._nth.call(null, coll__$1, k, not_found);
};
cljs.core.Subvec.prototype.cljs$core$IAssociative$_assoc$arity$3 = function(coll, key, val) {
  var self__ = this;
  var coll__$1 = this;
  var v_pos = self__.start + key;
  return cljs.core.build_subvec.call(null, self__.meta, cljs.core.assoc.call(null, self__.v, v_pos, val), self__.start, function() {
    var x__3710__auto__ = self__.end;
    var y__3711__auto__ = v_pos + 1;
    return x__3710__auto__ > y__3711__auto__ ? x__3710__auto__ : y__3711__auto__;
  }(), null);
};
cljs.core.Subvec.prototype.call = function() {
  var G__11183 = null;
  var G__11183__2 = function(self__, k) {
    var self__ = this;
    var self____$1 = this;
    var coll = self____$1;
    return coll.cljs$core$IIndexed$_nth$arity$2(null, k);
  };
  var G__11183__3 = function(self__, k, not_found) {
    var self__ = this;
    var self____$1 = this;
    var coll = self____$1;
    return coll.cljs$core$IIndexed$_nth$arity$3(null, k, not_found);
  };
  G__11183 = function(self__, k, not_found) {
    switch(arguments.length) {
      case 2:
        return G__11183__2.call(this, self__, k);
      case 3:
        return G__11183__3.call(this, self__, k, not_found);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  return G__11183;
}();
cljs.core.Subvec.prototype.apply = function(self__, args11182) {
  var self__ = this;
  var self____$1 = this;
  return self____$1.call.apply(self____$1, [self____$1].concat(cljs.core.aclone.call(null, args11182)));
};
cljs.core.Subvec.prototype.cljs$core$IFn$_invoke$arity$1 = function(k) {
  var self__ = this;
  var coll = this;
  return coll.cljs$core$IIndexed$_nth$arity$2(null, k);
};
cljs.core.Subvec.prototype.cljs$core$IFn$_invoke$arity$2 = function(k, not_found) {
  var self__ = this;
  var coll = this;
  return coll.cljs$core$IIndexed$_nth$arity$3(null, k, not_found);
};
cljs.core.Subvec.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, o) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.build_subvec.call(null, self__.meta, cljs.core._assoc_n.call(null, self__.v, self__.end, o), self__.start, self__.end + 1, null);
};
cljs.core.Subvec.prototype.toString = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.pr_str_STAR_.call(null, coll);
};
cljs.core.Subvec.prototype.cljs$core$IReduce$_reduce$arity$2 = function(coll, f) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.ci_reduce.call(null, coll__$1, f);
};
cljs.core.Subvec.prototype.cljs$core$IReduce$_reduce$arity$3 = function(coll, f, start__$1) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.ci_reduce.call(null, coll__$1, f, start__$1);
};
cljs.core.Subvec.prototype.cljs$core$ISeqable$_seq$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var subvec_seq = function subvec_seq(i) {
    if (i === self__.end) {
      return null;
    } else {
      return cljs.core.cons.call(null, cljs.core._nth.call(null, self__.v, i), new cljs.core.LazySeq(null, function() {
        return subvec_seq.call(null, i + 1);
      }, null, null));
    }
  };
  return subvec_seq.call(null, self__.start);
};
cljs.core.Subvec.prototype.cljs$core$ICounted$_count$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.end - self__.start;
};
cljs.core.Subvec.prototype.cljs$core$IStack$_peek$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core._nth.call(null, self__.v, self__.end - 1);
};
cljs.core.Subvec.prototype.cljs$core$IStack$_pop$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  if (self__.start === self__.end) {
    throw new Error("Can't pop empty vector");
  } else {
    return cljs.core.build_subvec.call(null, self__.meta, self__.v, self__.start, self__.end - 1, null);
  }
};
cljs.core.Subvec.prototype.cljs$core$IVector$_assoc_n$arity$3 = function(coll, n, val) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core._assoc.call(null, coll__$1, n, val);
};
cljs.core.Subvec.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.equiv_sequential.call(null, coll__$1, other);
};
cljs.core.Subvec.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, meta__$1) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.build_subvec.call(null, meta__$1, self__.v, self__.start, self__.end, self__.__hash);
};
cljs.core.Subvec.prototype.cljs$core$ICloneable$_clone$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return new cljs.core.Subvec(self__.meta, self__.v, self__.start, self__.end, self__.__hash);
};
cljs.core.Subvec.prototype.cljs$core$IMeta$_meta$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.meta;
};
cljs.core.Subvec.prototype.cljs$core$IIndexed$_nth$arity$2 = function(coll, n) {
  var self__ = this;
  var coll__$1 = this;
  if (n < 0 || self__.end <= self__.start + n) {
    return cljs.core.vector_index_out_of_bounds.call(null, n, self__.end - self__.start);
  } else {
    return cljs.core._nth.call(null, self__.v, self__.start + n);
  }
};
cljs.core.Subvec.prototype.cljs$core$IIndexed$_nth$arity$3 = function(coll, n, not_found) {
  var self__ = this;
  var coll__$1 = this;
  if (n < 0 || self__.end <= self__.start + n) {
    return not_found;
  } else {
    return cljs.core._nth.call(null, self__.v, self__.start + n, not_found);
  }
};
cljs.core.Subvec.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.with_meta.call(null, cljs.core.PersistentVector.EMPTY, self__.meta);
};
cljs.core.__GT_Subvec = function __GT_Subvec(meta, v, start, end, __hash) {
  return new cljs.core.Subvec(meta, v, start, end, __hash);
};
cljs.core.build_subvec = function build_subvec(meta, v, start, end, __hash) {
  while (true) {
    if (v instanceof cljs.core.Subvec) {
      var G__11184 = meta;
      var G__11185 = v.v;
      var G__11186 = v.start + start;
      var G__11187 = v.start + end;
      var G__11188 = __hash;
      meta = G__11184;
      v = G__11185;
      start = G__11186;
      end = G__11187;
      __hash = G__11188;
      continue;
    } else {
      var c = cljs.core.count.call(null, v);
      if (start < 0 || (end < 0 || (start > c || end > c))) {
        throw new Error("Index out of bounds");
      } else {
      }
      return new cljs.core.Subvec(meta, v, start, end, __hash);
    }
    break;
  }
};
cljs.core.subvec = function() {
  var subvec = null;
  var subvec__2 = function(v, start) {
    return subvec.call(null, v, start, cljs.core.count.call(null, v));
  };
  var subvec__3 = function(v, start, end) {
    return cljs.core.build_subvec.call(null, null, v, start, end, null);
  };
  subvec = function(v, start, end) {
    switch(arguments.length) {
      case 2:
        return subvec__2.call(this, v, start);
      case 3:
        return subvec__3.call(this, v, start, end);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  subvec.cljs$core$IFn$_invoke$arity$2 = subvec__2;
  subvec.cljs$core$IFn$_invoke$arity$3 = subvec__3;
  return subvec;
}();
cljs.core.tv_ensure_editable = function tv_ensure_editable(edit, node) {
  if (edit === node.edit) {
    return node;
  } else {
    return new cljs.core.VectorNode(edit, cljs.core.aclone.call(null, node.arr));
  }
};
cljs.core.tv_editable_root = function tv_editable_root(node) {
  return new cljs.core.VectorNode(function() {
    var obj11192 = {};
    return obj11192;
  }(), cljs.core.aclone.call(null, node.arr));
};
cljs.core.tv_editable_tail = function tv_editable_tail(tl) {
  var ret = [null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null];
  cljs.core.array_copy.call(null, tl, 0, ret, 0, tl.length);
  return ret;
};
cljs.core.tv_push_tail = function tv_push_tail(tv, level, parent, tail_node) {
  var ret = cljs.core.tv_ensure_editable.call(null, tv.root.edit, parent);
  var subidx = tv.cnt - 1 >>> level & 31;
  cljs.core.pv_aset.call(null, ret, subidx, level === 5 ? tail_node : function() {
    var child = cljs.core.pv_aget.call(null, ret, subidx);
    if (!(child == null)) {
      return tv_push_tail.call(null, tv, level - 5, child, tail_node);
    } else {
      return cljs.core.new_path.call(null, tv.root.edit, level - 5, tail_node);
    }
  }());
  return ret;
};
cljs.core.tv_pop_tail = function tv_pop_tail(tv, level, node) {
  var node__$1 = cljs.core.tv_ensure_editable.call(null, tv.root.edit, node);
  var subidx = tv.cnt - 2 >>> level & 31;
  if (level > 5) {
    var new_child = tv_pop_tail.call(null, tv, level - 5, cljs.core.pv_aget.call(null, node__$1, subidx));
    if (new_child == null && subidx === 0) {
      return null;
    } else {
      cljs.core.pv_aset.call(null, node__$1, subidx, new_child);
      return node__$1;
    }
  } else {
    if (subidx === 0) {
      return null;
    } else {
      if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
        cljs.core.pv_aset.call(null, node__$1, subidx, null);
        return node__$1;
      } else {
        return null;
      }
    }
  }
};
cljs.core.editable_array_for = function editable_array_for(tv, i) {
  if (0 <= i && i < tv.cnt) {
    if (i >= cljs.core.tail_off.call(null, tv)) {
      return tv.tail;
    } else {
      var root = tv.root;
      var node = root;
      var level = tv.shift;
      while (true) {
        if (level > 0) {
          var G__11193 = cljs.core.tv_ensure_editable.call(null, root.edit, cljs.core.pv_aget.call(null, node, i >>> level & 31));
          var G__11194 = level - 5;
          node = G__11193;
          level = G__11194;
          continue;
        } else {
          return node.arr;
        }
        break;
      }
    }
  } else {
    throw new Error([cljs.core.str("No item "), cljs.core.str(i), cljs.core.str(" in transient vector of length "), cljs.core.str(tv.cnt)].join(""));
  }
};
cljs.core.TransientVector = function(cnt, shift, root, tail) {
  this.cnt = cnt;
  this.shift = shift;
  this.root = root;
  this.tail = tail;
  this.cljs$lang$protocol_mask$partition0$ = 275;
  this.cljs$lang$protocol_mask$partition1$ = 88;
};
cljs.core.TransientVector.cljs$lang$type = true;
cljs.core.TransientVector.cljs$lang$ctorStr = "cljs.core/TransientVector";
cljs.core.TransientVector.cljs$lang$ctorPrWriter = function(this__3970__auto__, writer__3971__auto__, opt__3972__auto__) {
  return cljs.core._write.call(null, writer__3971__auto__, "cljs.core/TransientVector");
};
cljs.core.TransientVector.prototype.call = function() {
  var G__11196 = null;
  var G__11196__2 = function(self__, k) {
    var self__ = this;
    var self____$1 = this;
    var coll = self____$1;
    return coll.cljs$core$ILookup$_lookup$arity$2(null, k);
  };
  var G__11196__3 = function(self__, k, not_found) {
    var self__ = this;
    var self____$1 = this;
    var coll = self____$1;
    return coll.cljs$core$ILookup$_lookup$arity$3(null, k, not_found);
  };
  G__11196 = function(self__, k, not_found) {
    switch(arguments.length) {
      case 2:
        return G__11196__2.call(this, self__, k);
      case 3:
        return G__11196__3.call(this, self__, k, not_found);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  return G__11196;
}();
cljs.core.TransientVector.prototype.apply = function(self__, args11195) {
  var self__ = this;
  var self____$1 = this;
  return self____$1.call.apply(self____$1, [self____$1].concat(cljs.core.aclone.call(null, args11195)));
};
cljs.core.TransientVector.prototype.cljs$core$IFn$_invoke$arity$1 = function(k) {
  var self__ = this;
  var coll = this;
  return coll.cljs$core$ILookup$_lookup$arity$2(null, k);
};
cljs.core.TransientVector.prototype.cljs$core$IFn$_invoke$arity$2 = function(k, not_found) {
  var self__ = this;
  var coll = this;
  return coll.cljs$core$ILookup$_lookup$arity$3(null, k, not_found);
};
cljs.core.TransientVector.prototype.cljs$core$ILookup$_lookup$arity$2 = function(coll, k) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core._nth.call(null, coll__$1, k, null);
};
cljs.core.TransientVector.prototype.cljs$core$ILookup$_lookup$arity$3 = function(coll, k, not_found) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core._nth.call(null, coll__$1, k, not_found);
};
cljs.core.TransientVector.prototype.cljs$core$IIndexed$_nth$arity$2 = function(coll, n) {
  var self__ = this;
  var coll__$1 = this;
  if (self__.root.edit) {
    return cljs.core.array_for.call(null, coll__$1, n)[n & 31];
  } else {
    throw new Error("nth after persistent!");
  }
};
cljs.core.TransientVector.prototype.cljs$core$IIndexed$_nth$arity$3 = function(coll, n, not_found) {
  var self__ = this;
  var coll__$1 = this;
  if (0 <= n && n < self__.cnt) {
    return cljs.core._nth.call(null, coll__$1, n);
  } else {
    return not_found;
  }
};
cljs.core.TransientVector.prototype.cljs$core$ICounted$_count$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  if (self__.root.edit) {
    return self__.cnt;
  } else {
    throw new Error("count after persistent!");
  }
};
cljs.core.TransientVector.prototype.cljs$core$ITransientVector$_assoc_n_BANG_$arity$3 = function(tcoll, n, val) {
  var self__ = this;
  var tcoll__$1 = this;
  if (self__.root.edit) {
    if (0 <= n && n < self__.cnt) {
      if (cljs.core.tail_off.call(null, tcoll__$1) <= n) {
        self__.tail[n & 31] = val;
        return tcoll__$1;
      } else {
        var new_root = function go(level, node) {
          var node__$1 = cljs.core.tv_ensure_editable.call(null, self__.root.edit, node);
          if (level === 0) {
            cljs.core.pv_aset.call(null, node__$1, n & 31, val);
            return node__$1;
          } else {
            var subidx = n >>> level & 31;
            cljs.core.pv_aset.call(null, node__$1, subidx, go.call(null, level - 5, cljs.core.pv_aget.call(null, node__$1, subidx)));
            return node__$1;
          }
        }.call(null, self__.shift, self__.root);
        self__.root = new_root;
        return tcoll__$1;
      }
    } else {
      if (n === self__.cnt) {
        return cljs.core._conj_BANG_.call(null, tcoll__$1, val);
      } else {
        if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
          throw new Error([cljs.core.str("Index "), cljs.core.str(n), cljs.core.str(" out of bounds for TransientVector of length"), cljs.core.str(self__.cnt)].join(""));
        } else {
          return null;
        }
      }
    }
  } else {
    throw new Error("assoc! after persistent!");
  }
};
cljs.core.TransientVector.prototype.cljs$core$ITransientVector$_pop_BANG_$arity$1 = function(tcoll) {
  var self__ = this;
  var tcoll__$1 = this;
  if (self__.root.edit) {
    if (self__.cnt === 0) {
      throw new Error("Can't pop empty vector");
    } else {
      if (1 === self__.cnt) {
        self__.cnt = 0;
        return tcoll__$1;
      } else {
        if ((self__.cnt - 1 & 31) > 0) {
          self__.cnt = self__.cnt - 1;
          return tcoll__$1;
        } else {
          if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
            var new_tail = cljs.core.editable_array_for.call(null, tcoll__$1, self__.cnt - 2);
            var new_root = function() {
              var nr = cljs.core.tv_pop_tail.call(null, tcoll__$1, self__.shift, self__.root);
              if (!(nr == null)) {
                return nr;
              } else {
                return new cljs.core.VectorNode(self__.root.edit, [null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null]);
              }
            }();
            if (5 < self__.shift && cljs.core.pv_aget.call(null, new_root, 1) == null) {
              var new_root__$1 = cljs.core.tv_ensure_editable.call(null, self__.root.edit, cljs.core.pv_aget.call(null, new_root, 0));
              self__.root = new_root__$1;
              self__.shift = self__.shift - 5;
              self__.cnt = self__.cnt - 1;
              self__.tail = new_tail;
              return tcoll__$1;
            } else {
              self__.root = new_root;
              self__.cnt = self__.cnt - 1;
              self__.tail = new_tail;
              return tcoll__$1;
            }
          } else {
            return null;
          }
        }
      }
    }
  } else {
    throw new Error("pop! after persistent!");
  }
};
cljs.core.TransientVector.prototype.cljs$core$ITransientAssociative$_assoc_BANG_$arity$3 = function(tcoll, key, val) {
  var self__ = this;
  var tcoll__$1 = this;
  return cljs.core._assoc_n_BANG_.call(null, tcoll__$1, key, val);
};
cljs.core.TransientVector.prototype.cljs$core$ITransientCollection$_conj_BANG_$arity$2 = function(tcoll, o) {
  var self__ = this;
  var tcoll__$1 = this;
  if (self__.root.edit) {
    if (self__.cnt - cljs.core.tail_off.call(null, tcoll__$1) < 32) {
      self__.tail[self__.cnt & 31] = o;
      self__.cnt = self__.cnt + 1;
      return tcoll__$1;
    } else {
      var tail_node = new cljs.core.VectorNode(self__.root.edit, self__.tail);
      var new_tail = [null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null];
      new_tail[0] = o;
      self__.tail = new_tail;
      if (self__.cnt >>> 5 > 1 << self__.shift) {
        var new_root_array = [null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null];
        var new_shift = self__.shift + 5;
        new_root_array[0] = self__.root;
        new_root_array[1] = cljs.core.new_path.call(null, self__.root.edit, self__.shift, tail_node);
        self__.root = new cljs.core.VectorNode(self__.root.edit, new_root_array);
        self__.shift = new_shift;
        self__.cnt = self__.cnt + 1;
        return tcoll__$1;
      } else {
        var new_root = cljs.core.tv_push_tail.call(null, tcoll__$1, self__.shift, self__.root, tail_node);
        self__.root = new_root;
        self__.cnt = self__.cnt + 1;
        return tcoll__$1;
      }
    }
  } else {
    throw new Error("conj! after persistent!");
  }
};
cljs.core.TransientVector.prototype.cljs$core$ITransientCollection$_persistent_BANG_$arity$1 = function(tcoll) {
  var self__ = this;
  var tcoll__$1 = this;
  if (self__.root.edit) {
    self__.root.edit = null;
    var len = self__.cnt - cljs.core.tail_off.call(null, tcoll__$1);
    var trimmed_tail = new Array(len);
    cljs.core.array_copy.call(null, self__.tail, 0, trimmed_tail, 0, len);
    return new cljs.core.PersistentVector(null, self__.cnt, self__.shift, self__.root, trimmed_tail, null);
  } else {
    throw new Error("persistent! called twice");
  }
};
cljs.core.__GT_TransientVector = function __GT_TransientVector(cnt, shift, root, tail) {
  return new cljs.core.TransientVector(cnt, shift, root, tail);
};
cljs.core.PersistentQueueSeq = function(meta, front, rear, __hash) {
  this.meta = meta;
  this.front = front;
  this.rear = rear;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition1$ = 0;
  this.cljs$lang$protocol_mask$partition0$ = 31850572;
};
cljs.core.PersistentQueueSeq.cljs$lang$type = true;
cljs.core.PersistentQueueSeq.cljs$lang$ctorStr = "cljs.core/PersistentQueueSeq";
cljs.core.PersistentQueueSeq.cljs$lang$ctorPrWriter = function(this__3970__auto__, writer__3971__auto__, opt__3972__auto__) {
  return cljs.core._write.call(null, writer__3971__auto__, "cljs.core/PersistentQueueSeq");
};
cljs.core.PersistentQueueSeq.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var h__3814__auto__ = self__.__hash;
  if (!(h__3814__auto__ == null)) {
    return h__3814__auto__;
  } else {
    var h__3814__auto____$1 = cljs.core.hash_coll.call(null, coll__$1);
    self__.__hash = h__3814__auto____$1;
    return h__3814__auto____$1;
  }
};
cljs.core.PersistentQueueSeq.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, o) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.cons.call(null, o, coll__$1);
};
cljs.core.PersistentQueueSeq.prototype.toString = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.pr_str_STAR_.call(null, coll);
};
cljs.core.PersistentQueueSeq.prototype.cljs$core$ISeqable$_seq$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return coll__$1;
};
cljs.core.PersistentQueueSeq.prototype.cljs$core$ISeq$_first$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.first.call(null, self__.front);
};
cljs.core.PersistentQueueSeq.prototype.cljs$core$ISeq$_rest$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var temp__4090__auto__ = cljs.core.next.call(null, self__.front);
  if (temp__4090__auto__) {
    var f1 = temp__4090__auto__;
    return new cljs.core.PersistentQueueSeq(self__.meta, f1, self__.rear, null);
  } else {
    if (self__.rear == null) {
      return cljs.core._empty.call(null, coll__$1);
    } else {
      return new cljs.core.PersistentQueueSeq(self__.meta, self__.rear, null, null);
    }
  }
};
cljs.core.PersistentQueueSeq.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.equiv_sequential.call(null, coll__$1, other);
};
cljs.core.PersistentQueueSeq.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, meta__$1) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.PersistentQueueSeq(meta__$1, self__.front, self__.rear, self__.__hash);
};
cljs.core.PersistentQueueSeq.prototype.cljs$core$IMeta$_meta$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.meta;
};
cljs.core.PersistentQueueSeq.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.with_meta.call(null, cljs.core.List.EMPTY, self__.meta);
};
cljs.core.__GT_PersistentQueueSeq = function __GT_PersistentQueueSeq(meta, front, rear, __hash) {
  return new cljs.core.PersistentQueueSeq(meta, front, rear, __hash);
};
cljs.core.PersistentQueue = function(meta, count, front, rear, __hash) {
  this.meta = meta;
  this.count = count;
  this.front = front;
  this.rear = rear;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition0$ = 31858766;
  this.cljs$lang$protocol_mask$partition1$ = 8192;
};
cljs.core.PersistentQueue.cljs$lang$type = true;
cljs.core.PersistentQueue.cljs$lang$ctorStr = "cljs.core/PersistentQueue";
cljs.core.PersistentQueue.cljs$lang$ctorPrWriter = function(this__3970__auto__, writer__3971__auto__, opt__3972__auto__) {
  return cljs.core._write.call(null, writer__3971__auto__, "cljs.core/PersistentQueue");
};
cljs.core.PersistentQueue.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var h__3814__auto__ = self__.__hash;
  if (!(h__3814__auto__ == null)) {
    return h__3814__auto__;
  } else {
    var h__3814__auto____$1 = cljs.core.hash_coll.call(null, coll__$1);
    self__.__hash = h__3814__auto____$1;
    return h__3814__auto____$1;
  }
};
cljs.core.PersistentQueue.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, o) {
  var self__ = this;
  var coll__$1 = this;
  if (cljs.core.truth_(self__.front)) {
    return new cljs.core.PersistentQueue(self__.meta, self__.count + 1, self__.front, cljs.core.conj.call(null, function() {
      var or__3403__auto__ = self__.rear;
      if (cljs.core.truth_(or__3403__auto__)) {
        return or__3403__auto__;
      } else {
        return cljs.core.PersistentVector.EMPTY;
      }
    }(), o), null);
  } else {
    return new cljs.core.PersistentQueue(self__.meta, self__.count + 1, cljs.core.conj.call(null, self__.front, o), cljs.core.PersistentVector.EMPTY, null);
  }
};
cljs.core.PersistentQueue.prototype.toString = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.pr_str_STAR_.call(null, coll);
};
cljs.core.PersistentQueue.prototype.cljs$core$ISeqable$_seq$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var rear__$1 = cljs.core.seq.call(null, self__.rear);
  if (cljs.core.truth_(function() {
    var or__3403__auto__ = self__.front;
    if (cljs.core.truth_(or__3403__auto__)) {
      return or__3403__auto__;
    } else {
      return rear__$1;
    }
  }())) {
    return new cljs.core.PersistentQueueSeq(null, self__.front, cljs.core.seq.call(null, rear__$1), null);
  } else {
    return null;
  }
};
cljs.core.PersistentQueue.prototype.cljs$core$ICounted$_count$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.count;
};
cljs.core.PersistentQueue.prototype.cljs$core$IStack$_peek$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.first.call(null, self__.front);
};
cljs.core.PersistentQueue.prototype.cljs$core$IStack$_pop$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  if (cljs.core.truth_(self__.front)) {
    var temp__4090__auto__ = cljs.core.next.call(null, self__.front);
    if (temp__4090__auto__) {
      var f1 = temp__4090__auto__;
      return new cljs.core.PersistentQueue(self__.meta, self__.count - 1, f1, self__.rear, null);
    } else {
      return new cljs.core.PersistentQueue(self__.meta, self__.count - 1, cljs.core.seq.call(null, self__.rear), cljs.core.PersistentVector.EMPTY, null);
    }
  } else {
    return coll__$1;
  }
};
cljs.core.PersistentQueue.prototype.cljs$core$ISeq$_first$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.first.call(null, self__.front);
};
cljs.core.PersistentQueue.prototype.cljs$core$ISeq$_rest$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.rest.call(null, cljs.core.seq.call(null, coll__$1));
};
cljs.core.PersistentQueue.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.equiv_sequential.call(null, coll__$1, other);
};
cljs.core.PersistentQueue.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, meta__$1) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.PersistentQueue(meta__$1, self__.count, self__.front, self__.rear, self__.__hash);
};
cljs.core.PersistentQueue.prototype.cljs$core$ICloneable$_clone$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.PersistentQueue(self__.meta, self__.count, self__.front, self__.rear, self__.__hash);
};
cljs.core.PersistentQueue.prototype.cljs$core$IMeta$_meta$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.meta;
};
cljs.core.PersistentQueue.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.PersistentQueue.EMPTY;
};
cljs.core.__GT_PersistentQueue = function __GT_PersistentQueue(meta, count, front, rear, __hash) {
  return new cljs.core.PersistentQueue(meta, count, front, rear, __hash);
};
cljs.core.PersistentQueue.EMPTY = new cljs.core.PersistentQueue(null, 0, null, cljs.core.PersistentVector.EMPTY, 0);
cljs.core.NeverEquiv = function() {
  this.cljs$lang$protocol_mask$partition1$ = 0;
  this.cljs$lang$protocol_mask$partition0$ = 2097152;
};
cljs.core.NeverEquiv.cljs$lang$type = true;
cljs.core.NeverEquiv.cljs$lang$ctorStr = "cljs.core/NeverEquiv";
cljs.core.NeverEquiv.cljs$lang$ctorPrWriter = function(this__3970__auto__, writer__3971__auto__, opt__3972__auto__) {
  return cljs.core._write.call(null, writer__3971__auto__, "cljs.core/NeverEquiv");
};
cljs.core.NeverEquiv.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(o, other) {
  var self__ = this;
  var o__$1 = this;
  return false;
};
cljs.core.__GT_NeverEquiv = function __GT_NeverEquiv() {
  return new cljs.core.NeverEquiv;
};
cljs.core.never_equiv = new cljs.core.NeverEquiv;
cljs.core.equiv_map = function equiv_map(x, y) {
  return cljs.core.boolean$.call(null, cljs.core.map_QMARK_.call(null, y) ? cljs.core.count.call(null, x) === cljs.core.count.call(null, y) ? cljs.core.every_QMARK_.call(null, cljs.core.identity, cljs.core.map.call(null, function(xkv) {
    return cljs.core._EQ_.call(null, cljs.core.get.call(null, y, cljs.core.first.call(null, xkv), cljs.core.never_equiv), cljs.core.second.call(null, xkv));
  }, x)) : null : null);
};
cljs.core.scan_array = function scan_array(incr, k, array) {
  var len = array.length;
  var i = 0;
  while (true) {
    if (i < len) {
      if (k === array[i]) {
        return i;
      } else {
        var G__11197 = i + incr;
        i = G__11197;
        continue;
      }
    } else {
      return null;
    }
    break;
  }
};
cljs.core.obj_map_compare_keys = function obj_map_compare_keys(a, b) {
  var a__$1 = cljs.core.hash.call(null, a);
  var b__$1 = cljs.core.hash.call(null, b);
  if (a__$1 < b__$1) {
    return-1;
  } else {
    if (a__$1 > b__$1) {
      return 1;
    } else {
      if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
        return 0;
      } else {
        return null;
      }
    }
  }
};
cljs.core.obj_map__GT_hash_map = function obj_map__GT_hash_map(m, k, v) {
  var ks = m.keys;
  var len = ks.length;
  var so = m.strobj;
  var mm = cljs.core.meta.call(null, m);
  var i = 0;
  var out = cljs.core.transient$.call(null, cljs.core.PersistentHashMap.EMPTY);
  while (true) {
    if (i < len) {
      var k__$1 = ks[i];
      var G__11198 = i + 1;
      var G__11199 = cljs.core.assoc_BANG_.call(null, out, k__$1, so[k__$1]);
      i = G__11198;
      out = G__11199;
      continue;
    } else {
      return cljs.core.with_meta.call(null, cljs.core.persistent_BANG_.call(null, cljs.core.assoc_BANG_.call(null, out, k, v)), mm);
    }
    break;
  }
};
cljs.core.obj_clone = function obj_clone(obj, ks) {
  var new_obj = function() {
    var obj11203 = {};
    return obj11203;
  }();
  var l = ks.length;
  var i_11204 = 0;
  while (true) {
    if (i_11204 < l) {
      var k_11205 = ks[i_11204];
      new_obj[k_11205] = obj[k_11205];
      var G__11206 = i_11204 + 1;
      i_11204 = G__11206;
      continue;
    } else {
    }
    break;
  }
  return new_obj;
};
cljs.core.ObjMap = function(meta, keys, strobj, update_count, __hash) {
  this.meta = meta;
  this.keys = keys;
  this.strobj = strobj;
  this.update_count = update_count;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition1$ = 4;
  this.cljs$lang$protocol_mask$partition0$ = 16123663;
};
cljs.core.ObjMap.cljs$lang$type = true;
cljs.core.ObjMap.cljs$lang$ctorStr = "cljs.core/ObjMap";
cljs.core.ObjMap.cljs$lang$ctorPrWriter = function(this__3970__auto__, writer__3971__auto__, opt__3972__auto__) {
  return cljs.core._write.call(null, writer__3971__auto__, "cljs.core/ObjMap");
};
cljs.core.ObjMap.prototype.cljs$core$IEditableCollection$_as_transient$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.transient$.call(null, cljs.core.into.call(null, cljs.core.PersistentHashMap.EMPTY, coll__$1));
};
cljs.core.ObjMap.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var h__3814__auto__ = self__.__hash;
  if (!(h__3814__auto__ == null)) {
    return h__3814__auto__;
  } else {
    var h__3814__auto____$1 = cljs.core.hash_imap.call(null, coll__$1);
    self__.__hash = h__3814__auto____$1;
    return h__3814__auto____$1;
  }
};
cljs.core.ObjMap.prototype.cljs$core$ILookup$_lookup$arity$2 = function(coll, k) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core._lookup.call(null, coll__$1, k, null);
};
cljs.core.ObjMap.prototype.cljs$core$ILookup$_lookup$arity$3 = function(coll, k, not_found) {
  var self__ = this;
  var coll__$1 = this;
  if (goog.isString(k) && !(cljs.core.scan_array.call(null, 1, k, self__.keys) == null)) {
    return self__.strobj[k];
  } else {
    return not_found;
  }
};
cljs.core.ObjMap.prototype.cljs$core$IAssociative$_assoc$arity$3 = function(coll, k, v) {
  var self__ = this;
  var coll__$1 = this;
  if (goog.isString(k)) {
    if (self__.update_count > cljs.core.ObjMap.HASHMAP_THRESHOLD || self__.keys.length >= cljs.core.ObjMap.HASHMAP_THRESHOLD) {
      return cljs.core.obj_map__GT_hash_map.call(null, coll__$1, k, v);
    } else {
      if (!(cljs.core.scan_array.call(null, 1, k, self__.keys) == null)) {
        var new_strobj = cljs.core.obj_clone.call(null, self__.strobj, self__.keys);
        new_strobj[k] = v;
        return new cljs.core.ObjMap(self__.meta, self__.keys, new_strobj, self__.update_count + 1, null);
      } else {
        var new_strobj = cljs.core.obj_clone.call(null, self__.strobj, self__.keys);
        var new_keys = cljs.core.aclone.call(null, self__.keys);
        new_strobj[k] = v;
        new_keys.push(k);
        return new cljs.core.ObjMap(self__.meta, new_keys, new_strobj, self__.update_count + 1, null);
      }
    }
  } else {
    return cljs.core.obj_map__GT_hash_map.call(null, coll__$1, k, v);
  }
};
cljs.core.ObjMap.prototype.cljs$core$IAssociative$_contains_key_QMARK_$arity$2 = function(coll, k) {
  var self__ = this;
  var coll__$1 = this;
  if (goog.isString(k) && !(cljs.core.scan_array.call(null, 1, k, self__.keys) == null)) {
    return true;
  } else {
    return false;
  }
};
cljs.core.ObjMap.prototype.call = function() {
  var G__11209 = null;
  var G__11209__2 = function(self__, k) {
    var self__ = this;
    var self____$1 = this;
    var coll = self____$1;
    return coll.cljs$core$ILookup$_lookup$arity$2(null, k);
  };
  var G__11209__3 = function(self__, k, not_found) {
    var self__ = this;
    var self____$1 = this;
    var coll = self____$1;
    return coll.cljs$core$ILookup$_lookup$arity$3(null, k, not_found);
  };
  G__11209 = function(self__, k, not_found) {
    switch(arguments.length) {
      case 2:
        return G__11209__2.call(this, self__, k);
      case 3:
        return G__11209__3.call(this, self__, k, not_found);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  return G__11209;
}();
cljs.core.ObjMap.prototype.apply = function(self__, args11208) {
  var self__ = this;
  var self____$1 = this;
  return self____$1.call.apply(self____$1, [self____$1].concat(cljs.core.aclone.call(null, args11208)));
};
cljs.core.ObjMap.prototype.cljs$core$IFn$_invoke$arity$1 = function(k) {
  var self__ = this;
  var coll = this;
  return coll.cljs$core$ILookup$_lookup$arity$2(null, k);
};
cljs.core.ObjMap.prototype.cljs$core$IFn$_invoke$arity$2 = function(k, not_found) {
  var self__ = this;
  var coll = this;
  return coll.cljs$core$ILookup$_lookup$arity$3(null, k, not_found);
};
cljs.core.ObjMap.prototype.cljs$core$IKVReduce$_kv_reduce$arity$3 = function(coll, f, init) {
  var self__ = this;
  var coll__$1 = this;
  var len = self__.keys.length;
  var keys__$1 = self__.keys.sort(cljs.core.obj_map_compare_keys);
  var init__$1 = init;
  while (true) {
    if (cljs.core.seq.call(null, keys__$1)) {
      var k = cljs.core.first.call(null, keys__$1);
      var init__$2 = f.call(null, init__$1, k, self__.strobj[k]);
      if (cljs.core.reduced_QMARK_.call(null, init__$2)) {
        return cljs.core.deref.call(null, init__$2);
      } else {
        var G__11210 = cljs.core.rest.call(null, keys__$1);
        var G__11211 = init__$2;
        keys__$1 = G__11210;
        init__$1 = G__11211;
        continue;
      }
    } else {
      return init__$1;
    }
    break;
  }
};
cljs.core.ObjMap.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, entry) {
  var self__ = this;
  var coll__$1 = this;
  if (cljs.core.vector_QMARK_.call(null, entry)) {
    return cljs.core._assoc.call(null, coll__$1, cljs.core._nth.call(null, entry, 0), cljs.core._nth.call(null, entry, 1));
  } else {
    return cljs.core.reduce.call(null, cljs.core._conj, coll__$1, entry);
  }
};
cljs.core.ObjMap.prototype.toString = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.pr_str_STAR_.call(null, coll);
};
cljs.core.ObjMap.prototype.cljs$core$ISeqable$_seq$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  if (self__.keys.length > 0) {
    return cljs.core.map.call(null, function(p1__11207_SHARP_) {
      return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [p1__11207_SHARP_, self__.strobj[p1__11207_SHARP_]], null);
    }, self__.keys.sort(cljs.core.obj_map_compare_keys));
  } else {
    return null;
  }
};
cljs.core.ObjMap.prototype.cljs$core$ICounted$_count$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.keys.length;
};
cljs.core.ObjMap.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.equiv_map.call(null, coll__$1, other);
};
cljs.core.ObjMap.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, meta__$1) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.ObjMap(meta__$1, self__.keys, self__.strobj, self__.update_count, self__.__hash);
};
cljs.core.ObjMap.prototype.cljs$core$IMeta$_meta$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.meta;
};
cljs.core.ObjMap.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.with_meta.call(null, cljs.core.ObjMap.EMPTY, self__.meta);
};
cljs.core.ObjMap.prototype.cljs$core$IMap$_dissoc$arity$2 = function(coll, k) {
  var self__ = this;
  var coll__$1 = this;
  if (goog.isString(k) && !(cljs.core.scan_array.call(null, 1, k, self__.keys) == null)) {
    var new_keys = cljs.core.aclone.call(null, self__.keys);
    var new_strobj = cljs.core.obj_clone.call(null, self__.strobj, self__.keys);
    new_keys.splice(cljs.core.scan_array.call(null, 1, k, new_keys), 1);
    delete new_strobj[k];
    return new cljs.core.ObjMap(self__.meta, new_keys, new_strobj, self__.update_count + 1, null);
  } else {
    return coll__$1;
  }
};
cljs.core.__GT_ObjMap = function __GT_ObjMap(meta, keys, strobj, update_count, __hash) {
  return new cljs.core.ObjMap(meta, keys, strobj, update_count, __hash);
};
cljs.core.ObjMap.EMPTY = new cljs.core.ObjMap(null, [], function() {
  var obj11213 = {};
  return obj11213;
}(), 0, 0);
cljs.core.ObjMap.HASHMAP_THRESHOLD = 8;
cljs.core.ObjMap.fromObject = function(ks, obj) {
  return new cljs.core.ObjMap(null, ks, obj, 0, null);
};
cljs.core.array_map_index_of_nil_QMARK_ = function array_map_index_of_nil_QMARK_(arr, m, k) {
  var len = arr.length;
  var i = 0;
  while (true) {
    if (len <= i) {
      return-1;
    } else {
      if (arr[i] == null) {
        return i;
      } else {
        if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
          var G__11214 = i + 2;
          i = G__11214;
          continue;
        } else {
          return null;
        }
      }
    }
    break;
  }
};
cljs.core.array_map_index_of_keyword_QMARK_ = function array_map_index_of_keyword_QMARK_(arr, m, k) {
  var len = arr.length;
  var kstr = k.fqn;
  var i = 0;
  while (true) {
    if (len <= i) {
      return-1;
    } else {
      if (function() {
        var k_SINGLEQUOTE_ = arr[i];
        return k_SINGLEQUOTE_ instanceof cljs.core.Keyword && kstr === k_SINGLEQUOTE_.fqn;
      }()) {
        return i;
      } else {
        if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
          var G__11215 = i + 2;
          i = G__11215;
          continue;
        } else {
          return null;
        }
      }
    }
    break;
  }
};
cljs.core.array_map_index_of_symbol_QMARK_ = function array_map_index_of_symbol_QMARK_(arr, m, k) {
  var len = arr.length;
  var kstr = k.str;
  var i = 0;
  while (true) {
    if (len <= i) {
      return-1;
    } else {
      if (function() {
        var k_SINGLEQUOTE_ = arr[i];
        return k_SINGLEQUOTE_ instanceof cljs.core.Symbol && kstr === k_SINGLEQUOTE_.str;
      }()) {
        return i;
      } else {
        if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
          var G__11216 = i + 2;
          i = G__11216;
          continue;
        } else {
          return null;
        }
      }
    }
    break;
  }
};
cljs.core.array_map_index_of_identical_QMARK_ = function array_map_index_of_identical_QMARK_(arr, m, k) {
  var len = arr.length;
  var i = 0;
  while (true) {
    if (len <= i) {
      return-1;
    } else {
      if (k === arr[i]) {
        return i;
      } else {
        if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
          var G__11217 = i + 2;
          i = G__11217;
          continue;
        } else {
          return null;
        }
      }
    }
    break;
  }
};
cljs.core.array_map_index_of_equiv_QMARK_ = function array_map_index_of_equiv_QMARK_(arr, m, k) {
  var len = arr.length;
  var i = 0;
  while (true) {
    if (len <= i) {
      return-1;
    } else {
      if (cljs.core._EQ_.call(null, k, arr[i])) {
        return i;
      } else {
        if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
          var G__11218 = i + 2;
          i = G__11218;
          continue;
        } else {
          return null;
        }
      }
    }
    break;
  }
};
cljs.core.array_map_index_of = function array_map_index_of(m, k) {
  var arr = m.arr;
  if (k instanceof cljs.core.Keyword) {
    return cljs.core.array_map_index_of_keyword_QMARK_.call(null, arr, m, k);
  } else {
    if (goog.isString(k) || typeof k === "number") {
      return cljs.core.array_map_index_of_identical_QMARK_.call(null, arr, m, k);
    } else {
      if (k instanceof cljs.core.Symbol) {
        return cljs.core.array_map_index_of_symbol_QMARK_.call(null, arr, m, k);
      } else {
        if (k == null) {
          return cljs.core.array_map_index_of_nil_QMARK_.call(null, arr, m, k);
        } else {
          if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
            return cljs.core.array_map_index_of_equiv_QMARK_.call(null, arr, m, k);
          } else {
            return null;
          }
        }
      }
    }
  }
};
cljs.core.array_map_extend_kv = function array_map_extend_kv(m, k, v) {
  var arr = m.arr;
  var l = arr.length;
  var narr = new Array(l + 2);
  var i_11219 = 0;
  while (true) {
    if (i_11219 < l) {
      narr[i_11219] = arr[i_11219];
      var G__11220 = i_11219 + 1;
      i_11219 = G__11220;
      continue;
    } else {
    }
    break;
  }
  narr[l] = k;
  narr[l + 1] = v;
  return narr;
};
cljs.core.PersistentArrayMapSeq = function(arr, i, _meta) {
  this.arr = arr;
  this.i = i;
  this._meta = _meta;
  this.cljs$lang$protocol_mask$partition1$ = 0;
  this.cljs$lang$protocol_mask$partition0$ = 32374990;
};
cljs.core.PersistentArrayMapSeq.cljs$lang$type = true;
cljs.core.PersistentArrayMapSeq.cljs$lang$ctorStr = "cljs.core/PersistentArrayMapSeq";
cljs.core.PersistentArrayMapSeq.cljs$lang$ctorPrWriter = function(this__3970__auto__, writer__3971__auto__, opt__3972__auto__) {
  return cljs.core._write.call(null, writer__3971__auto__, "cljs.core/PersistentArrayMapSeq");
};
cljs.core.PersistentArrayMapSeq.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.hash_coll.call(null, coll__$1);
};
cljs.core.PersistentArrayMapSeq.prototype.cljs$core$INext$_next$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  if (self__.i < self__.arr.length - 2) {
    return new cljs.core.PersistentArrayMapSeq(self__.arr, self__.i + 2, self__._meta);
  } else {
    return null;
  }
};
cljs.core.PersistentArrayMapSeq.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, o) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.cons.call(null, o, coll__$1);
};
cljs.core.PersistentArrayMapSeq.prototype.toString = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.pr_str_STAR_.call(null, coll);
};
cljs.core.PersistentArrayMapSeq.prototype.cljs$core$IReduce$_reduce$arity$2 = function(coll, f) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.seq_reduce.call(null, f, coll__$1);
};
cljs.core.PersistentArrayMapSeq.prototype.cljs$core$IReduce$_reduce$arity$3 = function(coll, f, start) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.seq_reduce.call(null, f, start, coll__$1);
};
cljs.core.PersistentArrayMapSeq.prototype.cljs$core$ISeqable$_seq$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return coll__$1;
};
cljs.core.PersistentArrayMapSeq.prototype.cljs$core$ICounted$_count$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return(self__.arr.length - self__.i) / 2;
};
cljs.core.PersistentArrayMapSeq.prototype.cljs$core$ISeq$_first$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [self__.arr[self__.i], self__.arr[self__.i + 1]], null);
};
cljs.core.PersistentArrayMapSeq.prototype.cljs$core$ISeq$_rest$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  if (self__.i < self__.arr.length - 2) {
    return new cljs.core.PersistentArrayMapSeq(self__.arr, self__.i + 2, self__._meta);
  } else {
    return cljs.core.List.EMPTY;
  }
};
cljs.core.PersistentArrayMapSeq.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.equiv_sequential.call(null, coll__$1, other);
};
cljs.core.PersistentArrayMapSeq.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, new_meta) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.PersistentArrayMapSeq(self__.arr, self__.i, new_meta);
};
cljs.core.PersistentArrayMapSeq.prototype.cljs$core$IMeta$_meta$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__._meta;
};
cljs.core.PersistentArrayMapSeq.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.with_meta.call(null, cljs.core.List.EMPTY, self__._meta);
};
cljs.core.__GT_PersistentArrayMapSeq = function __GT_PersistentArrayMapSeq(arr, i, _meta) {
  return new cljs.core.PersistentArrayMapSeq(arr, i, _meta);
};
cljs.core.persistent_array_map_seq = function persistent_array_map_seq(arr, i, _meta) {
  if (i <= arr.length - 2) {
    return new cljs.core.PersistentArrayMapSeq(arr, i, _meta);
  } else {
    return null;
  }
};
cljs.core.PersistentArrayMap = function(meta, cnt, arr, __hash) {
  this.meta = meta;
  this.cnt = cnt;
  this.arr = arr;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition1$ = 8196;
  this.cljs$lang$protocol_mask$partition0$ = 16123663;
};
cljs.core.PersistentArrayMap.cljs$lang$type = true;
cljs.core.PersistentArrayMap.cljs$lang$ctorStr = "cljs.core/PersistentArrayMap";
cljs.core.PersistentArrayMap.cljs$lang$ctorPrWriter = function(this__3970__auto__, writer__3971__auto__, opt__3972__auto__) {
  return cljs.core._write.call(null, writer__3971__auto__, "cljs.core/PersistentArrayMap");
};
cljs.core.PersistentArrayMap.prototype.cljs$core$IEditableCollection$_as_transient$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.TransientArrayMap(function() {
    var obj11223 = {};
    return obj11223;
  }(), self__.arr.length, cljs.core.aclone.call(null, self__.arr));
};
cljs.core.PersistentArrayMap.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var h__3814__auto__ = self__.__hash;
  if (!(h__3814__auto__ == null)) {
    return h__3814__auto__;
  } else {
    var h__3814__auto____$1 = cljs.core.hash_imap.call(null, coll__$1);
    self__.__hash = h__3814__auto____$1;
    return h__3814__auto____$1;
  }
};
cljs.core.PersistentArrayMap.prototype.cljs$core$ILookup$_lookup$arity$2 = function(coll, k) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core._lookup.call(null, coll__$1, k, null);
};
cljs.core.PersistentArrayMap.prototype.cljs$core$ILookup$_lookup$arity$3 = function(coll, k, not_found) {
  var self__ = this;
  var coll__$1 = this;
  var idx = cljs.core.array_map_index_of.call(null, coll__$1, k);
  if (idx === -1) {
    return not_found;
  } else {
    return self__.arr[idx + 1];
  }
};
cljs.core.PersistentArrayMap.prototype.cljs$core$IAssociative$_assoc$arity$3 = function(coll, k, v) {
  var self__ = this;
  var coll__$1 = this;
  var idx = cljs.core.array_map_index_of.call(null, coll__$1, k);
  if (idx === -1) {
    if (self__.cnt < cljs.core.PersistentArrayMap.HASHMAP_THRESHOLD) {
      var arr__$1 = cljs.core.array_map_extend_kv.call(null, coll__$1, k, v);
      return new cljs.core.PersistentArrayMap(self__.meta, self__.cnt + 1, arr__$1, null);
    } else {
      return cljs.core._with_meta.call(null, cljs.core._assoc.call(null, cljs.core.into.call(null, cljs.core.PersistentHashMap.EMPTY, coll__$1), k, v), self__.meta);
    }
  } else {
    if (v === self__.arr[idx + 1]) {
      return coll__$1;
    } else {
      if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
        var arr__$1 = function() {
          var G__11224 = cljs.core.aclone.call(null, self__.arr);
          G__11224[idx + 1] = v;
          return G__11224;
        }();
        return new cljs.core.PersistentArrayMap(self__.meta, self__.cnt, arr__$1, null);
      } else {
        return null;
      }
    }
  }
};
cljs.core.PersistentArrayMap.prototype.cljs$core$IAssociative$_contains_key_QMARK_$arity$2 = function(coll, k) {
  var self__ = this;
  var coll__$1 = this;
  return!(cljs.core.array_map_index_of.call(null, coll__$1, k) === -1);
};
cljs.core.PersistentArrayMap.prototype.call = function() {
  var G__11225 = null;
  var G__11225__2 = function(self__, k) {
    var self__ = this;
    var self____$1 = this;
    var coll = self____$1;
    return coll.cljs$core$ILookup$_lookup$arity$2(null, k);
  };
  var G__11225__3 = function(self__, k, not_found) {
    var self__ = this;
    var self____$1 = this;
    var coll = self____$1;
    return coll.cljs$core$ILookup$_lookup$arity$3(null, k, not_found);
  };
  G__11225 = function(self__, k, not_found) {
    switch(arguments.length) {
      case 2:
        return G__11225__2.call(this, self__, k);
      case 3:
        return G__11225__3.call(this, self__, k, not_found);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  return G__11225;
}();
cljs.core.PersistentArrayMap.prototype.apply = function(self__, args11221) {
  var self__ = this;
  var self____$1 = this;
  return self____$1.call.apply(self____$1, [self____$1].concat(cljs.core.aclone.call(null, args11221)));
};
cljs.core.PersistentArrayMap.prototype.cljs$core$IFn$_invoke$arity$1 = function(k) {
  var self__ = this;
  var coll = this;
  return coll.cljs$core$ILookup$_lookup$arity$2(null, k);
};
cljs.core.PersistentArrayMap.prototype.cljs$core$IFn$_invoke$arity$2 = function(k, not_found) {
  var self__ = this;
  var coll = this;
  return coll.cljs$core$ILookup$_lookup$arity$3(null, k, not_found);
};
cljs.core.PersistentArrayMap.prototype.cljs$core$IKVReduce$_kv_reduce$arity$3 = function(coll, f, init) {
  var self__ = this;
  var coll__$1 = this;
  var len = self__.arr.length;
  var i = 0;
  var init__$1 = init;
  while (true) {
    if (i < len) {
      var init__$2 = f.call(null, init__$1, self__.arr[i], self__.arr[i + 1]);
      if (cljs.core.reduced_QMARK_.call(null, init__$2)) {
        return cljs.core.deref.call(null, init__$2);
      } else {
        var G__11226 = i + 2;
        var G__11227 = init__$2;
        i = G__11226;
        init__$1 = G__11227;
        continue;
      }
    } else {
      return init__$1;
    }
    break;
  }
};
cljs.core.PersistentArrayMap.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, entry) {
  var self__ = this;
  var coll__$1 = this;
  if (cljs.core.vector_QMARK_.call(null, entry)) {
    return cljs.core._assoc.call(null, coll__$1, cljs.core._nth.call(null, entry, 0), cljs.core._nth.call(null, entry, 1));
  } else {
    return cljs.core.reduce.call(null, cljs.core._conj, coll__$1, entry);
  }
};
cljs.core.PersistentArrayMap.prototype.toString = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.pr_str_STAR_.call(null, coll);
};
cljs.core.PersistentArrayMap.prototype.cljs$core$ISeqable$_seq$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.persistent_array_map_seq.call(null, self__.arr, 0, null);
};
cljs.core.PersistentArrayMap.prototype.cljs$core$ICounted$_count$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.cnt;
};
cljs.core.PersistentArrayMap.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.equiv_map.call(null, coll__$1, other);
};
cljs.core.PersistentArrayMap.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, meta__$1) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.PersistentArrayMap(meta__$1, self__.cnt, self__.arr, self__.__hash);
};
cljs.core.PersistentArrayMap.prototype.cljs$core$ICloneable$_clone$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return new cljs.core.PersistentArrayMap(self__.meta, self__.cnt, self__.arr, self__.__hash);
};
cljs.core.PersistentArrayMap.prototype.cljs$core$IMeta$_meta$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.meta;
};
cljs.core.PersistentArrayMap.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core._with_meta.call(null, cljs.core.PersistentArrayMap.EMPTY, self__.meta);
};
cljs.core.PersistentArrayMap.prototype.cljs$core$IMap$_dissoc$arity$2 = function(coll, k) {
  var self__ = this;
  var coll__$1 = this;
  var idx = cljs.core.array_map_index_of.call(null, coll__$1, k);
  if (idx >= 0) {
    var len = self__.arr.length;
    var new_len = len - 2;
    if (new_len === 0) {
      return cljs.core._empty.call(null, coll__$1);
    } else {
      var new_arr = new Array(new_len);
      var s = 0;
      var d = 0;
      while (true) {
        if (s >= len) {
          return new cljs.core.PersistentArrayMap(self__.meta, self__.cnt - 1, new_arr, null);
        } else {
          if (cljs.core._EQ_.call(null, k, self__.arr[s])) {
            var G__11228 = s + 2;
            var G__11229 = d;
            s = G__11228;
            d = G__11229;
            continue;
          } else {
            if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
              new_arr[d] = self__.arr[s];
              new_arr[d + 1] = self__.arr[s + 1];
              var G__11230 = s + 2;
              var G__11231 = d + 2;
              s = G__11230;
              d = G__11231;
              continue;
            } else {
              return null;
            }
          }
        }
        break;
      }
    }
  } else {
    return coll__$1;
  }
};
cljs.core.__GT_PersistentArrayMap = function __GT_PersistentArrayMap(meta, cnt, arr, __hash) {
  return new cljs.core.PersistentArrayMap(meta, cnt, arr, __hash);
};
cljs.core.PersistentArrayMap.EMPTY = new cljs.core.PersistentArrayMap(null, 0, [], null);
cljs.core.PersistentArrayMap.HASHMAP_THRESHOLD = 8;
cljs.core.PersistentArrayMap.fromArray = function(arr, no_clone, no_check) {
  var arr__$1 = no_clone ? arr : cljs.core.aclone.call(null, arr);
  if (no_check) {
    var cnt = arr__$1.length / 2;
    return new cljs.core.PersistentArrayMap(null, cnt, arr__$1, null);
  } else {
    var len = arr__$1.length;
    var i = 0;
    var ret = cljs.core.transient$.call(null, cljs.core.PersistentArrayMap.EMPTY);
    while (true) {
      if (i < len) {
        var G__11232 = i + 2;
        var G__11233 = cljs.core._assoc_BANG_.call(null, ret, arr__$1[i], arr__$1[i + 1]);
        i = G__11232;
        ret = G__11233;
        continue;
      } else {
        return cljs.core._persistent_BANG_.call(null, ret);
      }
      break;
    }
  }
};
cljs.core.TransientArrayMap = function(editable_QMARK_, len, arr) {
  this.editable_QMARK_ = editable_QMARK_;
  this.len = len;
  this.arr = arr;
  this.cljs$lang$protocol_mask$partition1$ = 56;
  this.cljs$lang$protocol_mask$partition0$ = 258;
};
cljs.core.TransientArrayMap.cljs$lang$type = true;
cljs.core.TransientArrayMap.cljs$lang$ctorStr = "cljs.core/TransientArrayMap";
cljs.core.TransientArrayMap.cljs$lang$ctorPrWriter = function(this__3970__auto__, writer__3971__auto__, opt__3972__auto__) {
  return cljs.core._write.call(null, writer__3971__auto__, "cljs.core/TransientArrayMap");
};
cljs.core.TransientArrayMap.prototype.cljs$core$ITransientMap$_dissoc_BANG_$arity$2 = function(tcoll, key) {
  var self__ = this;
  var tcoll__$1 = this;
  if (cljs.core.truth_(self__.editable_QMARK_)) {
    var idx = cljs.core.array_map_index_of.call(null, tcoll__$1, key);
    if (idx >= 0) {
      self__.arr[idx] = self__.arr[self__.len - 2];
      self__.arr[idx + 1] = self__.arr[self__.len - 1];
      var G__11234_11236 = self__.arr;
      G__11234_11236.pop();
      G__11234_11236.pop();
      self__.len = self__.len - 2;
    } else {
    }
    return tcoll__$1;
  } else {
    throw new Error("dissoc! after persistent!");
  }
};
cljs.core.TransientArrayMap.prototype.cljs$core$ITransientAssociative$_assoc_BANG_$arity$3 = function(tcoll, key, val) {
  var self__ = this;
  var tcoll__$1 = this;
  if (cljs.core.truth_(self__.editable_QMARK_)) {
    var idx = cljs.core.array_map_index_of.call(null, tcoll__$1, key);
    if (idx === -1) {
      if (self__.len + 2 <= 2 * cljs.core.PersistentArrayMap.HASHMAP_THRESHOLD) {
        self__.len = self__.len + 2;
        self__.arr.push(key);
        self__.arr.push(val);
        return tcoll__$1;
      } else {
        return cljs.core.assoc_BANG_.call(null, cljs.core.array__GT_transient_hash_map.call(null, self__.len, self__.arr), key, val);
      }
    } else {
      if (val === self__.arr[idx + 1]) {
        return tcoll__$1;
      } else {
        self__.arr[idx + 1] = val;
        return tcoll__$1;
      }
    }
  } else {
    throw new Error("assoc! after persistent!");
  }
};
cljs.core.TransientArrayMap.prototype.cljs$core$ITransientCollection$_conj_BANG_$arity$2 = function(tcoll, o) {
  var self__ = this;
  var tcoll__$1 = this;
  if (cljs.core.truth_(self__.editable_QMARK_)) {
    if (function() {
      var G__11235 = o;
      if (G__11235) {
        var bit__4053__auto__ = G__11235.cljs$lang$protocol_mask$partition0$ & 2048;
        if (bit__4053__auto__ || G__11235.cljs$core$IMapEntry$) {
          return true;
        } else {
          if (!G__11235.cljs$lang$protocol_mask$partition0$) {
            return cljs.core.native_satisfies_QMARK_.call(null, cljs.core.IMapEntry, G__11235);
          } else {
            return false;
          }
        }
      } else {
        return cljs.core.native_satisfies_QMARK_.call(null, cljs.core.IMapEntry, G__11235);
      }
    }()) {
      return cljs.core._assoc_BANG_.call(null, tcoll__$1, cljs.core.key.call(null, o), cljs.core.val.call(null, o));
    } else {
      var es = cljs.core.seq.call(null, o);
      var tcoll__$2 = tcoll__$1;
      while (true) {
        var temp__4090__auto__ = cljs.core.first.call(null, es);
        if (cljs.core.truth_(temp__4090__auto__)) {
          var e = temp__4090__auto__;
          var G__11237 = cljs.core.next.call(null, es);
          var G__11238 = cljs.core._assoc_BANG_.call(null, tcoll__$2, cljs.core.key.call(null, e), cljs.core.val.call(null, e));
          es = G__11237;
          tcoll__$2 = G__11238;
          continue;
        } else {
          return tcoll__$2;
        }
        break;
      }
    }
  } else {
    throw new Error("conj! after persistent!");
  }
};
cljs.core.TransientArrayMap.prototype.cljs$core$ITransientCollection$_persistent_BANG_$arity$1 = function(tcoll) {
  var self__ = this;
  var tcoll__$1 = this;
  if (cljs.core.truth_(self__.editable_QMARK_)) {
    self__.editable_QMARK_ = false;
    return new cljs.core.PersistentArrayMap(null, cljs.core.quot.call(null, self__.len, 2), self__.arr, null);
  } else {
    throw new Error("persistent! called twice");
  }
};
cljs.core.TransientArrayMap.prototype.cljs$core$ILookup$_lookup$arity$2 = function(tcoll, k) {
  var self__ = this;
  var tcoll__$1 = this;
  return cljs.core._lookup.call(null, tcoll__$1, k, null);
};
cljs.core.TransientArrayMap.prototype.cljs$core$ILookup$_lookup$arity$3 = function(tcoll, k, not_found) {
  var self__ = this;
  var tcoll__$1 = this;
  if (cljs.core.truth_(self__.editable_QMARK_)) {
    var idx = cljs.core.array_map_index_of.call(null, tcoll__$1, k);
    if (idx === -1) {
      return not_found;
    } else {
      return self__.arr[idx + 1];
    }
  } else {
    throw new Error("lookup after persistent!");
  }
};
cljs.core.TransientArrayMap.prototype.cljs$core$ICounted$_count$arity$1 = function(tcoll) {
  var self__ = this;
  var tcoll__$1 = this;
  if (cljs.core.truth_(self__.editable_QMARK_)) {
    return cljs.core.quot.call(null, self__.len, 2);
  } else {
    throw new Error("count after persistent!");
  }
};
cljs.core.__GT_TransientArrayMap = function __GT_TransientArrayMap(editable_QMARK_, len, arr) {
  return new cljs.core.TransientArrayMap(editable_QMARK_, len, arr);
};
cljs.core.array__GT_transient_hash_map = function array__GT_transient_hash_map(len, arr) {
  var out = cljs.core.transient$.call(null, cljs.core.PersistentHashMap.EMPTY);
  var i = 0;
  while (true) {
    if (i < len) {
      var G__11239 = cljs.core.assoc_BANG_.call(null, out, arr[i], arr[i + 1]);
      var G__11240 = i + 2;
      out = G__11239;
      i = G__11240;
      continue;
    } else {
      return out;
    }
    break;
  }
};
cljs.core.Box = function(val) {
  this.val = val;
};
cljs.core.Box.cljs$lang$type = true;
cljs.core.Box.cljs$lang$ctorStr = "cljs.core/Box";
cljs.core.Box.cljs$lang$ctorPrWriter = function(this__3973__auto__, writer__3974__auto__, opts__3975__auto__) {
  return cljs.core._write.call(null, writer__3974__auto__, "cljs.core/Box");
};
cljs.core.__GT_Box = function __GT_Box(val) {
  return new cljs.core.Box(val);
};
cljs.core.key_test = function key_test(key, other) {
  if (key === other) {
    return true;
  } else {
    if (cljs.core.keyword_identical_QMARK_.call(null, key, other)) {
      return true;
    } else {
      if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
        return cljs.core._EQ_.call(null, key, other);
      } else {
        return null;
      }
    }
  }
};
cljs.core.mask = function mask(hash, shift) {
  return hash >>> shift & 31;
};
cljs.core.clone_and_set = function() {
  var clone_and_set = null;
  var clone_and_set__3 = function(arr, i, a) {
    var G__11243 = cljs.core.aclone.call(null, arr);
    G__11243[i] = a;
    return G__11243;
  };
  var clone_and_set__5 = function(arr, i, a, j, b) {
    var G__11244 = cljs.core.aclone.call(null, arr);
    G__11244[i] = a;
    G__11244[j] = b;
    return G__11244;
  };
  clone_and_set = function(arr, i, a, j, b) {
    switch(arguments.length) {
      case 3:
        return clone_and_set__3.call(this, arr, i, a);
      case 5:
        return clone_and_set__5.call(this, arr, i, a, j, b);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  clone_and_set.cljs$core$IFn$_invoke$arity$3 = clone_and_set__3;
  clone_and_set.cljs$core$IFn$_invoke$arity$5 = clone_and_set__5;
  return clone_and_set;
}();
cljs.core.remove_pair = function remove_pair(arr, i) {
  var new_arr = new Array(arr.length - 2);
  cljs.core.array_copy.call(null, arr, 0, new_arr, 0, 2 * i);
  cljs.core.array_copy.call(null, arr, 2 * (i + 1), new_arr, 2 * i, new_arr.length - 2 * i);
  return new_arr;
};
cljs.core.bitmap_indexed_node_index = function bitmap_indexed_node_index(bitmap, bit) {
  return cljs.core.bit_count.call(null, bitmap & bit - 1);
};
cljs.core.bitpos = function bitpos(hash, shift) {
  return 1 << (hash >>> shift & 31);
};
cljs.core.edit_and_set = function() {
  var edit_and_set = null;
  var edit_and_set__4 = function(inode, edit, i, a) {
    var editable = inode.ensure_editable(edit);
    editable.arr[i] = a;
    return editable;
  };
  var edit_and_set__6 = function(inode, edit, i, a, j, b) {
    var editable = inode.ensure_editable(edit);
    editable.arr[i] = a;
    editable.arr[j] = b;
    return editable;
  };
  edit_and_set = function(inode, edit, i, a, j, b) {
    switch(arguments.length) {
      case 4:
        return edit_and_set__4.call(this, inode, edit, i, a);
      case 6:
        return edit_and_set__6.call(this, inode, edit, i, a, j, b);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  edit_and_set.cljs$core$IFn$_invoke$arity$4 = edit_and_set__4;
  edit_and_set.cljs$core$IFn$_invoke$arity$6 = edit_and_set__6;
  return edit_and_set;
}();
cljs.core.inode_kv_reduce = function inode_kv_reduce(arr, f, init) {
  var len = arr.length;
  var i = 0;
  var init__$1 = init;
  while (true) {
    if (i < len) {
      var init__$2 = function() {
        var k = arr[i];
        if (!(k == null)) {
          return f.call(null, init__$1, k, arr[i + 1]);
        } else {
          var node = arr[i + 1];
          if (!(node == null)) {
            return node.kv_reduce(f, init__$1);
          } else {
            return init__$1;
          }
        }
      }();
      if (cljs.core.reduced_QMARK_.call(null, init__$2)) {
        return cljs.core.deref.call(null, init__$2);
      } else {
        var G__11245 = i + 2;
        var G__11246 = init__$2;
        i = G__11245;
        init__$1 = G__11246;
        continue;
      }
    } else {
      return init__$1;
    }
    break;
  }
};
cljs.core.BitmapIndexedNode = function(edit, bitmap, arr) {
  this.edit = edit;
  this.bitmap = bitmap;
  this.arr = arr;
};
cljs.core.BitmapIndexedNode.cljs$lang$type = true;
cljs.core.BitmapIndexedNode.cljs$lang$ctorStr = "cljs.core/BitmapIndexedNode";
cljs.core.BitmapIndexedNode.cljs$lang$ctorPrWriter = function(this__3970__auto__, writer__3971__auto__, opt__3972__auto__) {
  return cljs.core._write.call(null, writer__3971__auto__, "cljs.core/BitmapIndexedNode");
};
cljs.core.BitmapIndexedNode.prototype.edit_and_remove_pair = function(e, bit, i) {
  var self__ = this;
  var inode = this;
  if (self__.bitmap === bit) {
    return null;
  } else {
    var editable = inode.ensure_editable(e);
    var earr = editable.arr;
    var len = earr.length;
    editable.bitmap = bit ^ editable.bitmap;
    cljs.core.array_copy.call(null, earr, 2 * (i + 1), earr, 2 * i, len - 2 * (i + 1));
    earr[len - 2] = null;
    earr[len - 1] = null;
    return editable;
  }
};
cljs.core.BitmapIndexedNode.prototype.inode_assoc_BANG_ = function(edit__$1, shift, hash, key, val, added_leaf_QMARK_) {
  var self__ = this;
  var inode = this;
  var bit = 1 << (hash >>> shift & 31);
  var idx = cljs.core.bitmap_indexed_node_index.call(null, self__.bitmap, bit);
  if ((self__.bitmap & bit) === 0) {
    var n = cljs.core.bit_count.call(null, self__.bitmap);
    if (2 * n < self__.arr.length) {
      var editable = inode.ensure_editable(edit__$1);
      var earr = editable.arr;
      added_leaf_QMARK_.val = true;
      cljs.core.array_copy_downward.call(null, earr, 2 * idx, earr, 2 * (idx + 1), 2 * (n - idx));
      earr[2 * idx] = key;
      earr[2 * idx + 1] = val;
      editable.bitmap = editable.bitmap | bit;
      return editable;
    } else {
      if (n >= 16) {
        var nodes = [null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null];
        var jdx = hash >>> shift & 31;
        nodes[jdx] = cljs.core.BitmapIndexedNode.EMPTY.inode_assoc_BANG_(edit__$1, shift + 5, hash, key, val, added_leaf_QMARK_);
        var i_11247 = 0;
        var j_11248 = 0;
        while (true) {
          if (i_11247 < 32) {
            if ((self__.bitmap >>> i_11247 & 1) === 0) {
              var G__11249 = i_11247 + 1;
              var G__11250 = j_11248;
              i_11247 = G__11249;
              j_11248 = G__11250;
              continue;
            } else {
              nodes[i_11247] = !(self__.arr[j_11248] == null) ? cljs.core.BitmapIndexedNode.EMPTY.inode_assoc_BANG_(edit__$1, shift + 5, cljs.core.hash.call(null, self__.arr[j_11248]), self__.arr[j_11248], self__.arr[j_11248 + 1], added_leaf_QMARK_) : self__.arr[j_11248 + 1];
              var G__11251 = i_11247 + 1;
              var G__11252 = j_11248 + 2;
              i_11247 = G__11251;
              j_11248 = G__11252;
              continue;
            }
          } else {
          }
          break;
        }
        return new cljs.core.ArrayNode(edit__$1, n + 1, nodes);
      } else {
        if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
          var new_arr = new Array(2 * (n + 4));
          cljs.core.array_copy.call(null, self__.arr, 0, new_arr, 0, 2 * idx);
          new_arr[2 * idx] = key;
          new_arr[2 * idx + 1] = val;
          cljs.core.array_copy.call(null, self__.arr, 2 * idx, new_arr, 2 * (idx + 1), 2 * (n - idx));
          added_leaf_QMARK_.val = true;
          var editable = inode.ensure_editable(edit__$1);
          editable.arr = new_arr;
          editable.bitmap = editable.bitmap | bit;
          return editable;
        } else {
          return null;
        }
      }
    }
  } else {
    var key_or_nil = self__.arr[2 * idx];
    var val_or_node = self__.arr[2 * idx + 1];
    if (key_or_nil == null) {
      var n = val_or_node.inode_assoc_BANG_(edit__$1, shift + 5, hash, key, val, added_leaf_QMARK_);
      if (n === val_or_node) {
        return inode;
      } else {
        return cljs.core.edit_and_set.call(null, inode, edit__$1, 2 * idx + 1, n);
      }
    } else {
      if (cljs.core.key_test.call(null, key, key_or_nil)) {
        if (val === val_or_node) {
          return inode;
        } else {
          return cljs.core.edit_and_set.call(null, inode, edit__$1, 2 * idx + 1, val);
        }
      } else {
        if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
          added_leaf_QMARK_.val = true;
          return cljs.core.edit_and_set.call(null, inode, edit__$1, 2 * idx, null, 2 * idx + 1, cljs.core.create_node.call(null, edit__$1, shift + 5, key_or_nil, val_or_node, hash, key, val));
        } else {
          return null;
        }
      }
    }
  }
};
cljs.core.BitmapIndexedNode.prototype.inode_seq = function() {
  var self__ = this;
  var inode = this;
  return cljs.core.create_inode_seq.call(null, self__.arr);
};
cljs.core.BitmapIndexedNode.prototype.inode_without_BANG_ = function(edit__$1, shift, hash, key, removed_leaf_QMARK_) {
  var self__ = this;
  var inode = this;
  var bit = 1 << (hash >>> shift & 31);
  if ((self__.bitmap & bit) === 0) {
    return inode;
  } else {
    var idx = cljs.core.bitmap_indexed_node_index.call(null, self__.bitmap, bit);
    var key_or_nil = self__.arr[2 * idx];
    var val_or_node = self__.arr[2 * idx + 1];
    if (key_or_nil == null) {
      var n = val_or_node.inode_without_BANG_(edit__$1, shift + 5, hash, key, removed_leaf_QMARK_);
      if (n === val_or_node) {
        return inode;
      } else {
        if (!(n == null)) {
          return cljs.core.edit_and_set.call(null, inode, edit__$1, 2 * idx + 1, n);
        } else {
          if (self__.bitmap === bit) {
            return null;
          } else {
            if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
              return inode.edit_and_remove_pair(edit__$1, bit, idx);
            } else {
              return null;
            }
          }
        }
      }
    } else {
      if (cljs.core.key_test.call(null, key, key_or_nil)) {
        removed_leaf_QMARK_[0] = true;
        return inode.edit_and_remove_pair(edit__$1, bit, idx);
      } else {
        if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
          return inode;
        } else {
          return null;
        }
      }
    }
  }
};
cljs.core.BitmapIndexedNode.prototype.ensure_editable = function(e) {
  var self__ = this;
  var inode = this;
  if (e === self__.edit) {
    return inode;
  } else {
    var n = cljs.core.bit_count.call(null, self__.bitmap);
    var new_arr = new Array(n < 0 ? 4 : 2 * (n + 1));
    cljs.core.array_copy.call(null, self__.arr, 0, new_arr, 0, 2 * n);
    return new cljs.core.BitmapIndexedNode(e, self__.bitmap, new_arr);
  }
};
cljs.core.BitmapIndexedNode.prototype.kv_reduce = function(f, init) {
  var self__ = this;
  var inode = this;
  return cljs.core.inode_kv_reduce.call(null, self__.arr, f, init);
};
cljs.core.BitmapIndexedNode.prototype.inode_find = function(shift, hash, key, not_found) {
  var self__ = this;
  var inode = this;
  var bit = 1 << (hash >>> shift & 31);
  if ((self__.bitmap & bit) === 0) {
    return not_found;
  } else {
    var idx = cljs.core.bitmap_indexed_node_index.call(null, self__.bitmap, bit);
    var key_or_nil = self__.arr[2 * idx];
    var val_or_node = self__.arr[2 * idx + 1];
    if (key_or_nil == null) {
      return val_or_node.inode_find(shift + 5, hash, key, not_found);
    } else {
      if (cljs.core.key_test.call(null, key, key_or_nil)) {
        return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [key_or_nil, val_or_node], null);
      } else {
        if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
          return not_found;
        } else {
          return null;
        }
      }
    }
  }
};
cljs.core.BitmapIndexedNode.prototype.inode_without = function(shift, hash, key) {
  var self__ = this;
  var inode = this;
  var bit = 1 << (hash >>> shift & 31);
  if ((self__.bitmap & bit) === 0) {
    return inode;
  } else {
    var idx = cljs.core.bitmap_indexed_node_index.call(null, self__.bitmap, bit);
    var key_or_nil = self__.arr[2 * idx];
    var val_or_node = self__.arr[2 * idx + 1];
    if (key_or_nil == null) {
      var n = val_or_node.inode_without(shift + 5, hash, key);
      if (n === val_or_node) {
        return inode;
      } else {
        if (!(n == null)) {
          return new cljs.core.BitmapIndexedNode(null, self__.bitmap, cljs.core.clone_and_set.call(null, self__.arr, 2 * idx + 1, n));
        } else {
          if (self__.bitmap === bit) {
            return null;
          } else {
            if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
              return new cljs.core.BitmapIndexedNode(null, self__.bitmap ^ bit, cljs.core.remove_pair.call(null, self__.arr, idx));
            } else {
              return null;
            }
          }
        }
      }
    } else {
      if (cljs.core.key_test.call(null, key, key_or_nil)) {
        return new cljs.core.BitmapIndexedNode(null, self__.bitmap ^ bit, cljs.core.remove_pair.call(null, self__.arr, idx));
      } else {
        if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
          return inode;
        } else {
          return null;
        }
      }
    }
  }
};
cljs.core.BitmapIndexedNode.prototype.inode_assoc = function(shift, hash, key, val, added_leaf_QMARK_) {
  var self__ = this;
  var inode = this;
  var bit = 1 << (hash >>> shift & 31);
  var idx = cljs.core.bitmap_indexed_node_index.call(null, self__.bitmap, bit);
  if ((self__.bitmap & bit) === 0) {
    var n = cljs.core.bit_count.call(null, self__.bitmap);
    if (n >= 16) {
      var nodes = [null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null];
      var jdx = hash >>> shift & 31;
      nodes[jdx] = cljs.core.BitmapIndexedNode.EMPTY.inode_assoc(shift + 5, hash, key, val, added_leaf_QMARK_);
      var i_11253 = 0;
      var j_11254 = 0;
      while (true) {
        if (i_11253 < 32) {
          if ((self__.bitmap >>> i_11253 & 1) === 0) {
            var G__11255 = i_11253 + 1;
            var G__11256 = j_11254;
            i_11253 = G__11255;
            j_11254 = G__11256;
            continue;
          } else {
            nodes[i_11253] = !(self__.arr[j_11254] == null) ? cljs.core.BitmapIndexedNode.EMPTY.inode_assoc(shift + 5, cljs.core.hash.call(null, self__.arr[j_11254]), self__.arr[j_11254], self__.arr[j_11254 + 1], added_leaf_QMARK_) : self__.arr[j_11254 + 1];
            var G__11257 = i_11253 + 1;
            var G__11258 = j_11254 + 2;
            i_11253 = G__11257;
            j_11254 = G__11258;
            continue;
          }
        } else {
        }
        break;
      }
      return new cljs.core.ArrayNode(null, n + 1, nodes);
    } else {
      var new_arr = new Array(2 * (n + 1));
      cljs.core.array_copy.call(null, self__.arr, 0, new_arr, 0, 2 * idx);
      new_arr[2 * idx] = key;
      new_arr[2 * idx + 1] = val;
      cljs.core.array_copy.call(null, self__.arr, 2 * idx, new_arr, 2 * (idx + 1), 2 * (n - idx));
      added_leaf_QMARK_.val = true;
      return new cljs.core.BitmapIndexedNode(null, self__.bitmap | bit, new_arr);
    }
  } else {
    var key_or_nil = self__.arr[2 * idx];
    var val_or_node = self__.arr[2 * idx + 1];
    if (key_or_nil == null) {
      var n = val_or_node.inode_assoc(shift + 5, hash, key, val, added_leaf_QMARK_);
      if (n === val_or_node) {
        return inode;
      } else {
        return new cljs.core.BitmapIndexedNode(null, self__.bitmap, cljs.core.clone_and_set.call(null, self__.arr, 2 * idx + 1, n));
      }
    } else {
      if (cljs.core.key_test.call(null, key, key_or_nil)) {
        if (val === val_or_node) {
          return inode;
        } else {
          return new cljs.core.BitmapIndexedNode(null, self__.bitmap, cljs.core.clone_and_set.call(null, self__.arr, 2 * idx + 1, val));
        }
      } else {
        if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
          added_leaf_QMARK_.val = true;
          return new cljs.core.BitmapIndexedNode(null, self__.bitmap, cljs.core.clone_and_set.call(null, self__.arr, 2 * idx, null, 2 * idx + 1, cljs.core.create_node.call(null, shift + 5, key_or_nil, val_or_node, hash, key, val)));
        } else {
          return null;
        }
      }
    }
  }
};
cljs.core.BitmapIndexedNode.prototype.inode_lookup = function(shift, hash, key, not_found) {
  var self__ = this;
  var inode = this;
  var bit = 1 << (hash >>> shift & 31);
  if ((self__.bitmap & bit) === 0) {
    return not_found;
  } else {
    var idx = cljs.core.bitmap_indexed_node_index.call(null, self__.bitmap, bit);
    var key_or_nil = self__.arr[2 * idx];
    var val_or_node = self__.arr[2 * idx + 1];
    if (key_or_nil == null) {
      return val_or_node.inode_lookup(shift + 5, hash, key, not_found);
    } else {
      if (cljs.core.key_test.call(null, key, key_or_nil)) {
        return val_or_node;
      } else {
        if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
          return not_found;
        } else {
          return null;
        }
      }
    }
  }
};
cljs.core.__GT_BitmapIndexedNode = function __GT_BitmapIndexedNode(edit, bitmap, arr) {
  return new cljs.core.BitmapIndexedNode(edit, bitmap, arr);
};
cljs.core.BitmapIndexedNode.EMPTY = new cljs.core.BitmapIndexedNode(null, 0, []);
cljs.core.pack_array_node = function pack_array_node(array_node, edit, idx) {
  var arr = array_node.arr;
  var len = 2 * (array_node.cnt - 1);
  var new_arr = new Array(len);
  var i = 0;
  var j = 1;
  var bitmap = 0;
  while (true) {
    if (i < len) {
      if (!(i === idx) && !(arr[i] == null)) {
        new_arr[j] = arr[i];
        var G__11259 = i + 1;
        var G__11260 = j + 2;
        var G__11261 = bitmap | 1 << i;
        i = G__11259;
        j = G__11260;
        bitmap = G__11261;
        continue;
      } else {
        var G__11262 = i + 1;
        var G__11263 = j;
        var G__11264 = bitmap;
        i = G__11262;
        j = G__11263;
        bitmap = G__11264;
        continue;
      }
    } else {
      return new cljs.core.BitmapIndexedNode(edit, bitmap, new_arr);
    }
    break;
  }
};
cljs.core.ArrayNode = function(edit, cnt, arr) {
  this.edit = edit;
  this.cnt = cnt;
  this.arr = arr;
};
cljs.core.ArrayNode.cljs$lang$type = true;
cljs.core.ArrayNode.cljs$lang$ctorStr = "cljs.core/ArrayNode";
cljs.core.ArrayNode.cljs$lang$ctorPrWriter = function(this__3970__auto__, writer__3971__auto__, opt__3972__auto__) {
  return cljs.core._write.call(null, writer__3971__auto__, "cljs.core/ArrayNode");
};
cljs.core.ArrayNode.prototype.inode_assoc_BANG_ = function(edit__$1, shift, hash, key, val, added_leaf_QMARK_) {
  var self__ = this;
  var inode = this;
  var idx = hash >>> shift & 31;
  var node = self__.arr[idx];
  if (node == null) {
    var editable = cljs.core.edit_and_set.call(null, inode, edit__$1, idx, cljs.core.BitmapIndexedNode.EMPTY.inode_assoc_BANG_(edit__$1, shift + 5, hash, key, val, added_leaf_QMARK_));
    editable.cnt = editable.cnt + 1;
    return editable;
  } else {
    var n = node.inode_assoc_BANG_(edit__$1, shift + 5, hash, key, val, added_leaf_QMARK_);
    if (n === node) {
      return inode;
    } else {
      return cljs.core.edit_and_set.call(null, inode, edit__$1, idx, n);
    }
  }
};
cljs.core.ArrayNode.prototype.inode_seq = function() {
  var self__ = this;
  var inode = this;
  return cljs.core.create_array_node_seq.call(null, self__.arr);
};
cljs.core.ArrayNode.prototype.inode_without_BANG_ = function(edit__$1, shift, hash, key, removed_leaf_QMARK_) {
  var self__ = this;
  var inode = this;
  var idx = hash >>> shift & 31;
  var node = self__.arr[idx];
  if (node == null) {
    return inode;
  } else {
    var n = node.inode_without_BANG_(edit__$1, shift + 5, hash, key, removed_leaf_QMARK_);
    if (n === node) {
      return inode;
    } else {
      if (n == null) {
        if (self__.cnt <= 8) {
          return cljs.core.pack_array_node.call(null, inode, edit__$1, idx);
        } else {
          var editable = cljs.core.edit_and_set.call(null, inode, edit__$1, idx, n);
          editable.cnt = editable.cnt - 1;
          return editable;
        }
      } else {
        if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
          return cljs.core.edit_and_set.call(null, inode, edit__$1, idx, n);
        } else {
          return null;
        }
      }
    }
  }
};
cljs.core.ArrayNode.prototype.ensure_editable = function(e) {
  var self__ = this;
  var inode = this;
  if (e === self__.edit) {
    return inode;
  } else {
    return new cljs.core.ArrayNode(e, self__.cnt, cljs.core.aclone.call(null, self__.arr));
  }
};
cljs.core.ArrayNode.prototype.kv_reduce = function(f, init) {
  var self__ = this;
  var inode = this;
  var len = self__.arr.length;
  var i = 0;
  var init__$1 = init;
  while (true) {
    if (i < len) {
      var node = self__.arr[i];
      if (!(node == null)) {
        var init__$2 = node.kv_reduce(f, init__$1);
        if (cljs.core.reduced_QMARK_.call(null, init__$2)) {
          return cljs.core.deref.call(null, init__$2);
        } else {
          var G__11265 = i + 1;
          var G__11266 = init__$2;
          i = G__11265;
          init__$1 = G__11266;
          continue;
        }
      } else {
        var G__11267 = i + 1;
        var G__11268 = init__$1;
        i = G__11267;
        init__$1 = G__11268;
        continue;
      }
    } else {
      return init__$1;
    }
    break;
  }
};
cljs.core.ArrayNode.prototype.inode_find = function(shift, hash, key, not_found) {
  var self__ = this;
  var inode = this;
  var idx = hash >>> shift & 31;
  var node = self__.arr[idx];
  if (!(node == null)) {
    return node.inode_find(shift + 5, hash, key, not_found);
  } else {
    return not_found;
  }
};
cljs.core.ArrayNode.prototype.inode_without = function(shift, hash, key) {
  var self__ = this;
  var inode = this;
  var idx = hash >>> shift & 31;
  var node = self__.arr[idx];
  if (!(node == null)) {
    var n = node.inode_without(shift + 5, hash, key);
    if (n === node) {
      return inode;
    } else {
      if (n == null) {
        if (self__.cnt <= 8) {
          return cljs.core.pack_array_node.call(null, inode, null, idx);
        } else {
          return new cljs.core.ArrayNode(null, self__.cnt - 1, cljs.core.clone_and_set.call(null, self__.arr, idx, n));
        }
      } else {
        if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
          return new cljs.core.ArrayNode(null, self__.cnt, cljs.core.clone_and_set.call(null, self__.arr, idx, n));
        } else {
          return null;
        }
      }
    }
  } else {
    return inode;
  }
};
cljs.core.ArrayNode.prototype.inode_assoc = function(shift, hash, key, val, added_leaf_QMARK_) {
  var self__ = this;
  var inode = this;
  var idx = hash >>> shift & 31;
  var node = self__.arr[idx];
  if (node == null) {
    return new cljs.core.ArrayNode(null, self__.cnt + 1, cljs.core.clone_and_set.call(null, self__.arr, idx, cljs.core.BitmapIndexedNode.EMPTY.inode_assoc(shift + 5, hash, key, val, added_leaf_QMARK_)));
  } else {
    var n = node.inode_assoc(shift + 5, hash, key, val, added_leaf_QMARK_);
    if (n === node) {
      return inode;
    } else {
      return new cljs.core.ArrayNode(null, self__.cnt, cljs.core.clone_and_set.call(null, self__.arr, idx, n));
    }
  }
};
cljs.core.ArrayNode.prototype.inode_lookup = function(shift, hash, key, not_found) {
  var self__ = this;
  var inode = this;
  var idx = hash >>> shift & 31;
  var node = self__.arr[idx];
  if (!(node == null)) {
    return node.inode_lookup(shift + 5, hash, key, not_found);
  } else {
    return not_found;
  }
};
cljs.core.__GT_ArrayNode = function __GT_ArrayNode(edit, cnt, arr) {
  return new cljs.core.ArrayNode(edit, cnt, arr);
};
cljs.core.hash_collision_node_find_index = function hash_collision_node_find_index(arr, cnt, key) {
  var lim = 2 * cnt;
  var i = 0;
  while (true) {
    if (i < lim) {
      if (cljs.core.key_test.call(null, key, arr[i])) {
        return i;
      } else {
        var G__11269 = i + 2;
        i = G__11269;
        continue;
      }
    } else {
      return-1;
    }
    break;
  }
};
cljs.core.HashCollisionNode = function(edit, collision_hash, cnt, arr) {
  this.edit = edit;
  this.collision_hash = collision_hash;
  this.cnt = cnt;
  this.arr = arr;
};
cljs.core.HashCollisionNode.cljs$lang$type = true;
cljs.core.HashCollisionNode.cljs$lang$ctorStr = "cljs.core/HashCollisionNode";
cljs.core.HashCollisionNode.cljs$lang$ctorPrWriter = function(this__3970__auto__, writer__3971__auto__, opt__3972__auto__) {
  return cljs.core._write.call(null, writer__3971__auto__, "cljs.core/HashCollisionNode");
};
cljs.core.HashCollisionNode.prototype.inode_assoc_BANG_ = function(edit__$1, shift, hash, key, val, added_leaf_QMARK_) {
  var self__ = this;
  var inode = this;
  if (hash === self__.collision_hash) {
    var idx = cljs.core.hash_collision_node_find_index.call(null, self__.arr, self__.cnt, key);
    if (idx === -1) {
      if (self__.arr.length > 2 * self__.cnt) {
        var editable = cljs.core.edit_and_set.call(null, inode, edit__$1, 2 * self__.cnt, key, 2 * self__.cnt + 1, val);
        added_leaf_QMARK_.val = true;
        editable.cnt = editable.cnt + 1;
        return editable;
      } else {
        var len = self__.arr.length;
        var new_arr = new Array(len + 2);
        cljs.core.array_copy.call(null, self__.arr, 0, new_arr, 0, len);
        new_arr[len] = key;
        new_arr[len + 1] = val;
        added_leaf_QMARK_.val = true;
        return inode.ensure_editable_array(edit__$1, self__.cnt + 1, new_arr);
      }
    } else {
      if (self__.arr[idx + 1] === val) {
        return inode;
      } else {
        return cljs.core.edit_and_set.call(null, inode, edit__$1, idx + 1, val);
      }
    }
  } else {
    return(new cljs.core.BitmapIndexedNode(edit__$1, 1 << (self__.collision_hash >>> shift & 31), [null, inode, null, null])).inode_assoc_BANG_(edit__$1, shift, hash, key, val, added_leaf_QMARK_);
  }
};
cljs.core.HashCollisionNode.prototype.inode_seq = function() {
  var self__ = this;
  var inode = this;
  return cljs.core.create_inode_seq.call(null, self__.arr);
};
cljs.core.HashCollisionNode.prototype.inode_without_BANG_ = function(edit__$1, shift, hash, key, removed_leaf_QMARK_) {
  var self__ = this;
  var inode = this;
  var idx = cljs.core.hash_collision_node_find_index.call(null, self__.arr, self__.cnt, key);
  if (idx === -1) {
    return inode;
  } else {
    removed_leaf_QMARK_[0] = true;
    if (self__.cnt === 1) {
      return null;
    } else {
      var editable = inode.ensure_editable(edit__$1);
      var earr = editable.arr;
      earr[idx] = earr[2 * self__.cnt - 2];
      earr[idx + 1] = earr[2 * self__.cnt - 1];
      earr[2 * self__.cnt - 1] = null;
      earr[2 * self__.cnt - 2] = null;
      editable.cnt = editable.cnt - 1;
      return editable;
    }
  }
};
cljs.core.HashCollisionNode.prototype.ensure_editable = function(e) {
  var self__ = this;
  var inode = this;
  if (e === self__.edit) {
    return inode;
  } else {
    var new_arr = new Array(2 * (self__.cnt + 1));
    cljs.core.array_copy.call(null, self__.arr, 0, new_arr, 0, 2 * self__.cnt);
    return new cljs.core.HashCollisionNode(e, self__.collision_hash, self__.cnt, new_arr);
  }
};
cljs.core.HashCollisionNode.prototype.kv_reduce = function(f, init) {
  var self__ = this;
  var inode = this;
  return cljs.core.inode_kv_reduce.call(null, self__.arr, f, init);
};
cljs.core.HashCollisionNode.prototype.inode_find = function(shift, hash, key, not_found) {
  var self__ = this;
  var inode = this;
  var idx = cljs.core.hash_collision_node_find_index.call(null, self__.arr, self__.cnt, key);
  if (idx < 0) {
    return not_found;
  } else {
    if (cljs.core.key_test.call(null, key, self__.arr[idx])) {
      return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [self__.arr[idx], self__.arr[idx + 1]], null);
    } else {
      if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
        return not_found;
      } else {
        return null;
      }
    }
  }
};
cljs.core.HashCollisionNode.prototype.inode_without = function(shift, hash, key) {
  var self__ = this;
  var inode = this;
  var idx = cljs.core.hash_collision_node_find_index.call(null, self__.arr, self__.cnt, key);
  if (idx === -1) {
    return inode;
  } else {
    if (self__.cnt === 1) {
      return null;
    } else {
      if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
        return new cljs.core.HashCollisionNode(null, self__.collision_hash, self__.cnt - 1, cljs.core.remove_pair.call(null, self__.arr, cljs.core.quot.call(null, idx, 2)));
      } else {
        return null;
      }
    }
  }
};
cljs.core.HashCollisionNode.prototype.inode_assoc = function(shift, hash, key, val, added_leaf_QMARK_) {
  var self__ = this;
  var inode = this;
  if (hash === self__.collision_hash) {
    var idx = cljs.core.hash_collision_node_find_index.call(null, self__.arr, self__.cnt, key);
    if (idx === -1) {
      var len = 2 * self__.cnt;
      var new_arr = new Array(len + 2);
      cljs.core.array_copy.call(null, self__.arr, 0, new_arr, 0, len);
      new_arr[len] = key;
      new_arr[len + 1] = val;
      added_leaf_QMARK_.val = true;
      return new cljs.core.HashCollisionNode(null, self__.collision_hash, self__.cnt + 1, new_arr);
    } else {
      if (cljs.core._EQ_.call(null, self__.arr[idx], val)) {
        return inode;
      } else {
        return new cljs.core.HashCollisionNode(null, self__.collision_hash, self__.cnt, cljs.core.clone_and_set.call(null, self__.arr, idx + 1, val));
      }
    }
  } else {
    return(new cljs.core.BitmapIndexedNode(null, 1 << (self__.collision_hash >>> shift & 31), [null, inode])).inode_assoc(shift, hash, key, val, added_leaf_QMARK_);
  }
};
cljs.core.HashCollisionNode.prototype.inode_lookup = function(shift, hash, key, not_found) {
  var self__ = this;
  var inode = this;
  var idx = cljs.core.hash_collision_node_find_index.call(null, self__.arr, self__.cnt, key);
  if (idx < 0) {
    return not_found;
  } else {
    if (cljs.core.key_test.call(null, key, self__.arr[idx])) {
      return self__.arr[idx + 1];
    } else {
      if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
        return not_found;
      } else {
        return null;
      }
    }
  }
};
cljs.core.HashCollisionNode.prototype.ensure_editable_array = function(e, count, array) {
  var self__ = this;
  var inode = this;
  if (e === self__.edit) {
    self__.arr = array;
    self__.cnt = count;
    return inode;
  } else {
    return new cljs.core.HashCollisionNode(self__.edit, self__.collision_hash, count, array);
  }
};
cljs.core.__GT_HashCollisionNode = function __GT_HashCollisionNode(edit, collision_hash, cnt, arr) {
  return new cljs.core.HashCollisionNode(edit, collision_hash, cnt, arr);
};
cljs.core.create_node = function() {
  var create_node = null;
  var create_node__6 = function(shift, key1, val1, key2hash, key2, val2) {
    var key1hash = cljs.core.hash.call(null, key1);
    if (key1hash === key2hash) {
      return new cljs.core.HashCollisionNode(null, key1hash, 2, [key1, val1, key2, val2]);
    } else {
      var added_leaf_QMARK_ = new cljs.core.Box(false);
      return cljs.core.BitmapIndexedNode.EMPTY.inode_assoc(shift, key1hash, key1, val1, added_leaf_QMARK_).inode_assoc(shift, key2hash, key2, val2, added_leaf_QMARK_);
    }
  };
  var create_node__7 = function(edit, shift, key1, val1, key2hash, key2, val2) {
    var key1hash = cljs.core.hash.call(null, key1);
    if (key1hash === key2hash) {
      return new cljs.core.HashCollisionNode(null, key1hash, 2, [key1, val1, key2, val2]);
    } else {
      var added_leaf_QMARK_ = new cljs.core.Box(false);
      return cljs.core.BitmapIndexedNode.EMPTY.inode_assoc_BANG_(edit, shift, key1hash, key1, val1, added_leaf_QMARK_).inode_assoc_BANG_(edit, shift, key2hash, key2, val2, added_leaf_QMARK_);
    }
  };
  create_node = function(edit, shift, key1, val1, key2hash, key2, val2) {
    switch(arguments.length) {
      case 6:
        return create_node__6.call(this, edit, shift, key1, val1, key2hash, key2);
      case 7:
        return create_node__7.call(this, edit, shift, key1, val1, key2hash, key2, val2);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  create_node.cljs$core$IFn$_invoke$arity$6 = create_node__6;
  create_node.cljs$core$IFn$_invoke$arity$7 = create_node__7;
  return create_node;
}();
cljs.core.NodeSeq = function(meta, nodes, i, s, __hash) {
  this.meta = meta;
  this.nodes = nodes;
  this.i = i;
  this.s = s;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition1$ = 0;
  this.cljs$lang$protocol_mask$partition0$ = 32374860;
};
cljs.core.NodeSeq.cljs$lang$type = true;
cljs.core.NodeSeq.cljs$lang$ctorStr = "cljs.core/NodeSeq";
cljs.core.NodeSeq.cljs$lang$ctorPrWriter = function(this__3970__auto__, writer__3971__auto__, opt__3972__auto__) {
  return cljs.core._write.call(null, writer__3971__auto__, "cljs.core/NodeSeq");
};
cljs.core.NodeSeq.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var h__3814__auto__ = self__.__hash;
  if (!(h__3814__auto__ == null)) {
    return h__3814__auto__;
  } else {
    var h__3814__auto____$1 = cljs.core.hash_coll.call(null, coll__$1);
    self__.__hash = h__3814__auto____$1;
    return h__3814__auto____$1;
  }
};
cljs.core.NodeSeq.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, o) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.cons.call(null, o, coll__$1);
};
cljs.core.NodeSeq.prototype.toString = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.pr_str_STAR_.call(null, coll);
};
cljs.core.NodeSeq.prototype.cljs$core$IReduce$_reduce$arity$2 = function(coll, f) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.seq_reduce.call(null, f, coll__$1);
};
cljs.core.NodeSeq.prototype.cljs$core$IReduce$_reduce$arity$3 = function(coll, f, start) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.seq_reduce.call(null, f, start, coll__$1);
};
cljs.core.NodeSeq.prototype.cljs$core$ISeqable$_seq$arity$1 = function(this$) {
  var self__ = this;
  var this$__$1 = this;
  return this$__$1;
};
cljs.core.NodeSeq.prototype.cljs$core$ISeq$_first$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  if (self__.s == null) {
    return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [self__.nodes[self__.i], self__.nodes[self__.i + 1]], null);
  } else {
    return cljs.core.first.call(null, self__.s);
  }
};
cljs.core.NodeSeq.prototype.cljs$core$ISeq$_rest$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  if (self__.s == null) {
    return cljs.core.create_inode_seq.call(null, self__.nodes, self__.i + 2, null);
  } else {
    return cljs.core.create_inode_seq.call(null, self__.nodes, self__.i, cljs.core.next.call(null, self__.s));
  }
};
cljs.core.NodeSeq.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.equiv_sequential.call(null, coll__$1, other);
};
cljs.core.NodeSeq.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, meta__$1) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.NodeSeq(meta__$1, self__.nodes, self__.i, self__.s, self__.__hash);
};
cljs.core.NodeSeq.prototype.cljs$core$IMeta$_meta$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.meta;
};
cljs.core.NodeSeq.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.with_meta.call(null, cljs.core.List.EMPTY, self__.meta);
};
cljs.core.__GT_NodeSeq = function __GT_NodeSeq(meta, nodes, i, s, __hash) {
  return new cljs.core.NodeSeq(meta, nodes, i, s, __hash);
};
cljs.core.create_inode_seq = function() {
  var create_inode_seq = null;
  var create_inode_seq__1 = function(nodes) {
    return create_inode_seq.call(null, nodes, 0, null);
  };
  var create_inode_seq__3 = function(nodes, i, s) {
    if (s == null) {
      var len = nodes.length;
      var j = i;
      while (true) {
        if (j < len) {
          if (!(nodes[j] == null)) {
            return new cljs.core.NodeSeq(null, nodes, j, null, null);
          } else {
            var temp__4090__auto__ = nodes[j + 1];
            if (cljs.core.truth_(temp__4090__auto__)) {
              var node = temp__4090__auto__;
              var temp__4090__auto____$1 = node.inode_seq();
              if (cljs.core.truth_(temp__4090__auto____$1)) {
                var node_seq = temp__4090__auto____$1;
                return new cljs.core.NodeSeq(null, nodes, j + 2, node_seq, null);
              } else {
                var G__11270 = j + 2;
                j = G__11270;
                continue;
              }
            } else {
              var G__11271 = j + 2;
              j = G__11271;
              continue;
            }
          }
        } else {
          return null;
        }
        break;
      }
    } else {
      return new cljs.core.NodeSeq(null, nodes, i, s, null);
    }
  };
  create_inode_seq = function(nodes, i, s) {
    switch(arguments.length) {
      case 1:
        return create_inode_seq__1.call(this, nodes);
      case 3:
        return create_inode_seq__3.call(this, nodes, i, s);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  create_inode_seq.cljs$core$IFn$_invoke$arity$1 = create_inode_seq__1;
  create_inode_seq.cljs$core$IFn$_invoke$arity$3 = create_inode_seq__3;
  return create_inode_seq;
}();
cljs.core.ArrayNodeSeq = function(meta, nodes, i, s, __hash) {
  this.meta = meta;
  this.nodes = nodes;
  this.i = i;
  this.s = s;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition1$ = 0;
  this.cljs$lang$protocol_mask$partition0$ = 32374860;
};
cljs.core.ArrayNodeSeq.cljs$lang$type = true;
cljs.core.ArrayNodeSeq.cljs$lang$ctorStr = "cljs.core/ArrayNodeSeq";
cljs.core.ArrayNodeSeq.cljs$lang$ctorPrWriter = function(this__3970__auto__, writer__3971__auto__, opt__3972__auto__) {
  return cljs.core._write.call(null, writer__3971__auto__, "cljs.core/ArrayNodeSeq");
};
cljs.core.ArrayNodeSeq.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var h__3814__auto__ = self__.__hash;
  if (!(h__3814__auto__ == null)) {
    return h__3814__auto__;
  } else {
    var h__3814__auto____$1 = cljs.core.hash_coll.call(null, coll__$1);
    self__.__hash = h__3814__auto____$1;
    return h__3814__auto____$1;
  }
};
cljs.core.ArrayNodeSeq.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, o) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.cons.call(null, o, coll__$1);
};
cljs.core.ArrayNodeSeq.prototype.toString = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.pr_str_STAR_.call(null, coll);
};
cljs.core.ArrayNodeSeq.prototype.cljs$core$IReduce$_reduce$arity$2 = function(coll, f) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.seq_reduce.call(null, f, coll__$1);
};
cljs.core.ArrayNodeSeq.prototype.cljs$core$IReduce$_reduce$arity$3 = function(coll, f, start) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.seq_reduce.call(null, f, start, coll__$1);
};
cljs.core.ArrayNodeSeq.prototype.cljs$core$ISeqable$_seq$arity$1 = function(this$) {
  var self__ = this;
  var this$__$1 = this;
  return this$__$1;
};
cljs.core.ArrayNodeSeq.prototype.cljs$core$ISeq$_first$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.first.call(null, self__.s);
};
cljs.core.ArrayNodeSeq.prototype.cljs$core$ISeq$_rest$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.create_array_node_seq.call(null, null, self__.nodes, self__.i, cljs.core.next.call(null, self__.s));
};
cljs.core.ArrayNodeSeq.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.equiv_sequential.call(null, coll__$1, other);
};
cljs.core.ArrayNodeSeq.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, meta__$1) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.ArrayNodeSeq(meta__$1, self__.nodes, self__.i, self__.s, self__.__hash);
};
cljs.core.ArrayNodeSeq.prototype.cljs$core$IMeta$_meta$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.meta;
};
cljs.core.ArrayNodeSeq.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.with_meta.call(null, cljs.core.List.EMPTY, self__.meta);
};
cljs.core.__GT_ArrayNodeSeq = function __GT_ArrayNodeSeq(meta, nodes, i, s, __hash) {
  return new cljs.core.ArrayNodeSeq(meta, nodes, i, s, __hash);
};
cljs.core.create_array_node_seq = function() {
  var create_array_node_seq = null;
  var create_array_node_seq__1 = function(nodes) {
    return create_array_node_seq.call(null, null, nodes, 0, null);
  };
  var create_array_node_seq__4 = function(meta, nodes, i, s) {
    if (s == null) {
      var len = nodes.length;
      var j = i;
      while (true) {
        if (j < len) {
          var temp__4090__auto__ = nodes[j];
          if (cljs.core.truth_(temp__4090__auto__)) {
            var nj = temp__4090__auto__;
            var temp__4090__auto____$1 = nj.inode_seq();
            if (cljs.core.truth_(temp__4090__auto____$1)) {
              var ns = temp__4090__auto____$1;
              return new cljs.core.ArrayNodeSeq(meta, nodes, j + 1, ns, null);
            } else {
              var G__11272 = j + 1;
              j = G__11272;
              continue;
            }
          } else {
            var G__11273 = j + 1;
            j = G__11273;
            continue;
          }
        } else {
          return null;
        }
        break;
      }
    } else {
      return new cljs.core.ArrayNodeSeq(meta, nodes, i, s, null);
    }
  };
  create_array_node_seq = function(meta, nodes, i, s) {
    switch(arguments.length) {
      case 1:
        return create_array_node_seq__1.call(this, meta);
      case 4:
        return create_array_node_seq__4.call(this, meta, nodes, i, s);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  create_array_node_seq.cljs$core$IFn$_invoke$arity$1 = create_array_node_seq__1;
  create_array_node_seq.cljs$core$IFn$_invoke$arity$4 = create_array_node_seq__4;
  return create_array_node_seq;
}();
cljs.core.PersistentHashMap = function(meta, cnt, root, has_nil_QMARK_, nil_val, __hash) {
  this.meta = meta;
  this.cnt = cnt;
  this.root = root;
  this.has_nil_QMARK_ = has_nil_QMARK_;
  this.nil_val = nil_val;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition1$ = 8196;
  this.cljs$lang$protocol_mask$partition0$ = 16123663;
};
cljs.core.PersistentHashMap.cljs$lang$type = true;
cljs.core.PersistentHashMap.cljs$lang$ctorStr = "cljs.core/PersistentHashMap";
cljs.core.PersistentHashMap.cljs$lang$ctorPrWriter = function(this__3970__auto__, writer__3971__auto__, opt__3972__auto__) {
  return cljs.core._write.call(null, writer__3971__auto__, "cljs.core/PersistentHashMap");
};
cljs.core.PersistentHashMap.prototype.cljs$core$IEditableCollection$_as_transient$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.TransientHashMap(function() {
    var obj11276 = {};
    return obj11276;
  }(), self__.root, self__.cnt, self__.has_nil_QMARK_, self__.nil_val);
};
cljs.core.PersistentHashMap.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var h__3814__auto__ = self__.__hash;
  if (!(h__3814__auto__ == null)) {
    return h__3814__auto__;
  } else {
    var h__3814__auto____$1 = cljs.core.hash_imap.call(null, coll__$1);
    self__.__hash = h__3814__auto____$1;
    return h__3814__auto____$1;
  }
};
cljs.core.PersistentHashMap.prototype.cljs$core$ILookup$_lookup$arity$2 = function(coll, k) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core._lookup.call(null, coll__$1, k, null);
};
cljs.core.PersistentHashMap.prototype.cljs$core$ILookup$_lookup$arity$3 = function(coll, k, not_found) {
  var self__ = this;
  var coll__$1 = this;
  if (k == null) {
    if (self__.has_nil_QMARK_) {
      return self__.nil_val;
    } else {
      return not_found;
    }
  } else {
    if (self__.root == null) {
      return not_found;
    } else {
      if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
        return self__.root.inode_lookup(0, cljs.core.hash.call(null, k), k, not_found);
      } else {
        return null;
      }
    }
  }
};
cljs.core.PersistentHashMap.prototype.cljs$core$IAssociative$_assoc$arity$3 = function(coll, k, v) {
  var self__ = this;
  var coll__$1 = this;
  if (k == null) {
    if (self__.has_nil_QMARK_ && v === self__.nil_val) {
      return coll__$1;
    } else {
      return new cljs.core.PersistentHashMap(self__.meta, self__.has_nil_QMARK_ ? self__.cnt : self__.cnt + 1, self__.root, true, v, null);
    }
  } else {
    var added_leaf_QMARK_ = new cljs.core.Box(false);
    var new_root = (self__.root == null ? cljs.core.BitmapIndexedNode.EMPTY : self__.root).inode_assoc(0, cljs.core.hash.call(null, k), k, v, added_leaf_QMARK_);
    if (new_root === self__.root) {
      return coll__$1;
    } else {
      return new cljs.core.PersistentHashMap(self__.meta, added_leaf_QMARK_.val ? self__.cnt + 1 : self__.cnt, new_root, self__.has_nil_QMARK_, self__.nil_val, null);
    }
  }
};
cljs.core.PersistentHashMap.prototype.cljs$core$IAssociative$_contains_key_QMARK_$arity$2 = function(coll, k) {
  var self__ = this;
  var coll__$1 = this;
  if (k == null) {
    return self__.has_nil_QMARK_;
  } else {
    if (self__.root == null) {
      return false;
    } else {
      if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
        return!(self__.root.inode_lookup(0, cljs.core.hash.call(null, k), k, cljs.core.lookup_sentinel) === cljs.core.lookup_sentinel);
      } else {
        return null;
      }
    }
  }
};
cljs.core.PersistentHashMap.prototype.call = function() {
  var G__11277 = null;
  var G__11277__2 = function(self__, k) {
    var self__ = this;
    var self____$1 = this;
    var coll = self____$1;
    return coll.cljs$core$ILookup$_lookup$arity$2(null, k);
  };
  var G__11277__3 = function(self__, k, not_found) {
    var self__ = this;
    var self____$1 = this;
    var coll = self____$1;
    return coll.cljs$core$ILookup$_lookup$arity$3(null, k, not_found);
  };
  G__11277 = function(self__, k, not_found) {
    switch(arguments.length) {
      case 2:
        return G__11277__2.call(this, self__, k);
      case 3:
        return G__11277__3.call(this, self__, k, not_found);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  return G__11277;
}();
cljs.core.PersistentHashMap.prototype.apply = function(self__, args11274) {
  var self__ = this;
  var self____$1 = this;
  return self____$1.call.apply(self____$1, [self____$1].concat(cljs.core.aclone.call(null, args11274)));
};
cljs.core.PersistentHashMap.prototype.cljs$core$IFn$_invoke$arity$1 = function(k) {
  var self__ = this;
  var coll = this;
  return coll.cljs$core$ILookup$_lookup$arity$2(null, k);
};
cljs.core.PersistentHashMap.prototype.cljs$core$IFn$_invoke$arity$2 = function(k, not_found) {
  var self__ = this;
  var coll = this;
  return coll.cljs$core$ILookup$_lookup$arity$3(null, k, not_found);
};
cljs.core.PersistentHashMap.prototype.cljs$core$IKVReduce$_kv_reduce$arity$3 = function(coll, f, init) {
  var self__ = this;
  var coll__$1 = this;
  var init__$1 = self__.has_nil_QMARK_ ? f.call(null, init, null, self__.nil_val) : init;
  if (cljs.core.reduced_QMARK_.call(null, init__$1)) {
    return cljs.core.deref.call(null, init__$1);
  } else {
    if (!(self__.root == null)) {
      return self__.root.kv_reduce(f, init__$1);
    } else {
      if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
        return init__$1;
      } else {
        return null;
      }
    }
  }
};
cljs.core.PersistentHashMap.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, entry) {
  var self__ = this;
  var coll__$1 = this;
  if (cljs.core.vector_QMARK_.call(null, entry)) {
    return cljs.core._assoc.call(null, coll__$1, cljs.core._nth.call(null, entry, 0), cljs.core._nth.call(null, entry, 1));
  } else {
    return cljs.core.reduce.call(null, cljs.core._conj, coll__$1, entry);
  }
};
cljs.core.PersistentHashMap.prototype.toString = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.pr_str_STAR_.call(null, coll);
};
cljs.core.PersistentHashMap.prototype.cljs$core$ISeqable$_seq$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  if (self__.cnt > 0) {
    var s = !(self__.root == null) ? self__.root.inode_seq() : null;
    if (self__.has_nil_QMARK_) {
      return cljs.core.cons.call(null, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [null, self__.nil_val], null), s);
    } else {
      return s;
    }
  } else {
    return null;
  }
};
cljs.core.PersistentHashMap.prototype.cljs$core$ICounted$_count$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.cnt;
};
cljs.core.PersistentHashMap.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.equiv_map.call(null, coll__$1, other);
};
cljs.core.PersistentHashMap.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, meta__$1) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.PersistentHashMap(meta__$1, self__.cnt, self__.root, self__.has_nil_QMARK_, self__.nil_val, self__.__hash);
};
cljs.core.PersistentHashMap.prototype.cljs$core$ICloneable$_clone$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return new cljs.core.PersistentHashMap(self__.meta, self__.cnt, self__.root, self__.has_nil_QMARK_, self__.nil_val, self__.__hash);
};
cljs.core.PersistentHashMap.prototype.cljs$core$IMeta$_meta$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.meta;
};
cljs.core.PersistentHashMap.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core._with_meta.call(null, cljs.core.PersistentHashMap.EMPTY, self__.meta);
};
cljs.core.PersistentHashMap.prototype.cljs$core$IMap$_dissoc$arity$2 = function(coll, k) {
  var self__ = this;
  var coll__$1 = this;
  if (k == null) {
    if (self__.has_nil_QMARK_) {
      return new cljs.core.PersistentHashMap(self__.meta, self__.cnt - 1, self__.root, false, null, null);
    } else {
      return coll__$1;
    }
  } else {
    if (self__.root == null) {
      return coll__$1;
    } else {
      if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
        var new_root = self__.root.inode_without(0, cljs.core.hash.call(null, k), k);
        if (new_root === self__.root) {
          return coll__$1;
        } else {
          return new cljs.core.PersistentHashMap(self__.meta, self__.cnt - 1, new_root, self__.has_nil_QMARK_, self__.nil_val, null);
        }
      } else {
        return null;
      }
    }
  }
};
cljs.core.__GT_PersistentHashMap = function __GT_PersistentHashMap(meta, cnt, root, has_nil_QMARK_, nil_val, __hash) {
  return new cljs.core.PersistentHashMap(meta, cnt, root, has_nil_QMARK_, nil_val, __hash);
};
cljs.core.PersistentHashMap.EMPTY = new cljs.core.PersistentHashMap(null, 0, null, false, null, 0);
cljs.core.PersistentHashMap.fromArrays = function(ks, vs) {
  var len = ks.length;
  var i = 0;
  var out = cljs.core.transient$.call(null, cljs.core.PersistentHashMap.EMPTY);
  while (true) {
    if (i < len) {
      var G__11278 = i + 1;
      var G__11279 = cljs.core._assoc_BANG_.call(null, out, ks[i], vs[i]);
      i = G__11278;
      out = G__11279;
      continue;
    } else {
      return cljs.core.persistent_BANG_.call(null, out);
    }
    break;
  }
};
cljs.core.TransientHashMap = function(edit, root, count, has_nil_QMARK_, nil_val) {
  this.edit = edit;
  this.root = root;
  this.count = count;
  this.has_nil_QMARK_ = has_nil_QMARK_;
  this.nil_val = nil_val;
  this.cljs$lang$protocol_mask$partition1$ = 56;
  this.cljs$lang$protocol_mask$partition0$ = 258;
};
cljs.core.TransientHashMap.cljs$lang$type = true;
cljs.core.TransientHashMap.cljs$lang$ctorStr = "cljs.core/TransientHashMap";
cljs.core.TransientHashMap.cljs$lang$ctorPrWriter = function(this__3970__auto__, writer__3971__auto__, opt__3972__auto__) {
  return cljs.core._write.call(null, writer__3971__auto__, "cljs.core/TransientHashMap");
};
cljs.core.TransientHashMap.prototype.cljs$core$ITransientMap$_dissoc_BANG_$arity$2 = function(tcoll, key) {
  var self__ = this;
  var tcoll__$1 = this;
  return tcoll__$1.without_BANG_(key);
};
cljs.core.TransientHashMap.prototype.cljs$core$ITransientAssociative$_assoc_BANG_$arity$3 = function(tcoll, key, val) {
  var self__ = this;
  var tcoll__$1 = this;
  return tcoll__$1.assoc_BANG_(key, val);
};
cljs.core.TransientHashMap.prototype.cljs$core$ITransientCollection$_conj_BANG_$arity$2 = function(tcoll, val) {
  var self__ = this;
  var tcoll__$1 = this;
  return tcoll__$1.conj_BANG_(val);
};
cljs.core.TransientHashMap.prototype.cljs$core$ITransientCollection$_persistent_BANG_$arity$1 = function(tcoll) {
  var self__ = this;
  var tcoll__$1 = this;
  return tcoll__$1.persistent_BANG_();
};
cljs.core.TransientHashMap.prototype.cljs$core$ILookup$_lookup$arity$2 = function(tcoll, k) {
  var self__ = this;
  var tcoll__$1 = this;
  if (k == null) {
    if (self__.has_nil_QMARK_) {
      return self__.nil_val;
    } else {
      return null;
    }
  } else {
    if (self__.root == null) {
      return null;
    } else {
      return self__.root.inode_lookup(0, cljs.core.hash.call(null, k), k);
    }
  }
};
cljs.core.TransientHashMap.prototype.cljs$core$ILookup$_lookup$arity$3 = function(tcoll, k, not_found) {
  var self__ = this;
  var tcoll__$1 = this;
  if (k == null) {
    if (self__.has_nil_QMARK_) {
      return self__.nil_val;
    } else {
      return not_found;
    }
  } else {
    if (self__.root == null) {
      return not_found;
    } else {
      return self__.root.inode_lookup(0, cljs.core.hash.call(null, k), k, not_found);
    }
  }
};
cljs.core.TransientHashMap.prototype.cljs$core$ICounted$_count$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  if (self__.edit) {
    return self__.count;
  } else {
    throw new Error("count after persistent!");
  }
};
cljs.core.TransientHashMap.prototype.conj_BANG_ = function(o) {
  var self__ = this;
  var tcoll = this;
  if (self__.edit) {
    if (function() {
      var G__11280 = o;
      if (G__11280) {
        var bit__4053__auto__ = G__11280.cljs$lang$protocol_mask$partition0$ & 2048;
        if (bit__4053__auto__ || G__11280.cljs$core$IMapEntry$) {
          return true;
        } else {
          if (!G__11280.cljs$lang$protocol_mask$partition0$) {
            return cljs.core.native_satisfies_QMARK_.call(null, cljs.core.IMapEntry, G__11280);
          } else {
            return false;
          }
        }
      } else {
        return cljs.core.native_satisfies_QMARK_.call(null, cljs.core.IMapEntry, G__11280);
      }
    }()) {
      return tcoll.assoc_BANG_(cljs.core.key.call(null, o), cljs.core.val.call(null, o));
    } else {
      var es = cljs.core.seq.call(null, o);
      var tcoll__$1 = tcoll;
      while (true) {
        var temp__4090__auto__ = cljs.core.first.call(null, es);
        if (cljs.core.truth_(temp__4090__auto__)) {
          var e = temp__4090__auto__;
          var G__11281 = cljs.core.next.call(null, es);
          var G__11282 = tcoll__$1.assoc_BANG_(cljs.core.key.call(null, e), cljs.core.val.call(null, e));
          es = G__11281;
          tcoll__$1 = G__11282;
          continue;
        } else {
          return tcoll__$1;
        }
        break;
      }
    }
  } else {
    throw new Error("conj! after persistent");
  }
};
cljs.core.TransientHashMap.prototype.assoc_BANG_ = function(k, v) {
  var self__ = this;
  var tcoll = this;
  if (self__.edit) {
    if (k == null) {
      if (self__.nil_val === v) {
      } else {
        self__.nil_val = v;
      }
      if (self__.has_nil_QMARK_) {
      } else {
        self__.count = self__.count + 1;
        self__.has_nil_QMARK_ = true;
      }
      return tcoll;
    } else {
      var added_leaf_QMARK_ = new cljs.core.Box(false);
      var node = (self__.root == null ? cljs.core.BitmapIndexedNode.EMPTY : self__.root).inode_assoc_BANG_(self__.edit, 0, cljs.core.hash.call(null, k), k, v, added_leaf_QMARK_);
      if (node === self__.root) {
      } else {
        self__.root = node;
      }
      if (added_leaf_QMARK_.val) {
        self__.count = self__.count + 1;
      } else {
      }
      return tcoll;
    }
  } else {
    throw new Error("assoc! after persistent!");
  }
};
cljs.core.TransientHashMap.prototype.without_BANG_ = function(k) {
  var self__ = this;
  var tcoll = this;
  if (self__.edit) {
    if (k == null) {
      if (self__.has_nil_QMARK_) {
        self__.has_nil_QMARK_ = false;
        self__.nil_val = null;
        self__.count = self__.count - 1;
        return tcoll;
      } else {
        return tcoll;
      }
    } else {
      if (self__.root == null) {
        return tcoll;
      } else {
        var removed_leaf_QMARK_ = new cljs.core.Box(false);
        var node = self__.root.inode_without_BANG_(self__.edit, 0, cljs.core.hash.call(null, k), k, removed_leaf_QMARK_);
        if (node === self__.root) {
        } else {
          self__.root = node;
        }
        if (cljs.core.truth_(removed_leaf_QMARK_[0])) {
          self__.count = self__.count - 1;
        } else {
        }
        return tcoll;
      }
    }
  } else {
    throw new Error("dissoc! after persistent!");
  }
};
cljs.core.TransientHashMap.prototype.persistent_BANG_ = function() {
  var self__ = this;
  var tcoll = this;
  if (self__.edit) {
    self__.edit = null;
    return new cljs.core.PersistentHashMap(null, self__.count, self__.root, self__.has_nil_QMARK_, self__.nil_val, null);
  } else {
    throw new Error("persistent! called twice");
  }
};
cljs.core.__GT_TransientHashMap = function __GT_TransientHashMap(edit, root, count, has_nil_QMARK_, nil_val) {
  return new cljs.core.TransientHashMap(edit, root, count, has_nil_QMARK_, nil_val);
};
cljs.core.tree_map_seq_push = function tree_map_seq_push(node, stack, ascending_QMARK_) {
  var t = node;
  var stack__$1 = stack;
  while (true) {
    if (!(t == null)) {
      var G__11283 = ascending_QMARK_ ? t.left : t.right;
      var G__11284 = cljs.core.conj.call(null, stack__$1, t);
      t = G__11283;
      stack__$1 = G__11284;
      continue;
    } else {
      return stack__$1;
    }
    break;
  }
};
cljs.core.PersistentTreeMapSeq = function(meta, stack, ascending_QMARK_, cnt, __hash) {
  this.meta = meta;
  this.stack = stack;
  this.ascending_QMARK_ = ascending_QMARK_;
  this.cnt = cnt;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition1$ = 0;
  this.cljs$lang$protocol_mask$partition0$ = 32374862;
};
cljs.core.PersistentTreeMapSeq.cljs$lang$type = true;
cljs.core.PersistentTreeMapSeq.cljs$lang$ctorStr = "cljs.core/PersistentTreeMapSeq";
cljs.core.PersistentTreeMapSeq.cljs$lang$ctorPrWriter = function(this__3970__auto__, writer__3971__auto__, opt__3972__auto__) {
  return cljs.core._write.call(null, writer__3971__auto__, "cljs.core/PersistentTreeMapSeq");
};
cljs.core.PersistentTreeMapSeq.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var h__3814__auto__ = self__.__hash;
  if (!(h__3814__auto__ == null)) {
    return h__3814__auto__;
  } else {
    var h__3814__auto____$1 = cljs.core.hash_coll.call(null, coll__$1);
    self__.__hash = h__3814__auto____$1;
    return h__3814__auto____$1;
  }
};
cljs.core.PersistentTreeMapSeq.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, o) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.cons.call(null, o, coll__$1);
};
cljs.core.PersistentTreeMapSeq.prototype.toString = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.pr_str_STAR_.call(null, coll);
};
cljs.core.PersistentTreeMapSeq.prototype.cljs$core$IReduce$_reduce$arity$2 = function(coll, f) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.seq_reduce.call(null, f, coll__$1);
};
cljs.core.PersistentTreeMapSeq.prototype.cljs$core$IReduce$_reduce$arity$3 = function(coll, f, start) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.seq_reduce.call(null, f, start, coll__$1);
};
cljs.core.PersistentTreeMapSeq.prototype.cljs$core$ISeqable$_seq$arity$1 = function(this$) {
  var self__ = this;
  var this$__$1 = this;
  return this$__$1;
};
cljs.core.PersistentTreeMapSeq.prototype.cljs$core$ICounted$_count$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  if (self__.cnt < 0) {
    return cljs.core.count.call(null, cljs.core.next.call(null, coll__$1)) + 1;
  } else {
    return self__.cnt;
  }
};
cljs.core.PersistentTreeMapSeq.prototype.cljs$core$ISeq$_first$arity$1 = function(this$) {
  var self__ = this;
  var this$__$1 = this;
  return cljs.core.peek.call(null, self__.stack);
};
cljs.core.PersistentTreeMapSeq.prototype.cljs$core$ISeq$_rest$arity$1 = function(this$) {
  var self__ = this;
  var this$__$1 = this;
  var t = cljs.core.first.call(null, self__.stack);
  var next_stack = cljs.core.tree_map_seq_push.call(null, self__.ascending_QMARK_ ? t.right : t.left, cljs.core.next.call(null, self__.stack), self__.ascending_QMARK_);
  if (!(next_stack == null)) {
    return new cljs.core.PersistentTreeMapSeq(null, next_stack, self__.ascending_QMARK_, self__.cnt - 1, null);
  } else {
    return cljs.core.List.EMPTY;
  }
};
cljs.core.PersistentTreeMapSeq.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.equiv_sequential.call(null, coll__$1, other);
};
cljs.core.PersistentTreeMapSeq.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, meta__$1) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.PersistentTreeMapSeq(meta__$1, self__.stack, self__.ascending_QMARK_, self__.cnt, self__.__hash);
};
cljs.core.PersistentTreeMapSeq.prototype.cljs$core$IMeta$_meta$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.meta;
};
cljs.core.PersistentTreeMapSeq.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.with_meta.call(null, cljs.core.List.EMPTY, self__.meta);
};
cljs.core.__GT_PersistentTreeMapSeq = function __GT_PersistentTreeMapSeq(meta, stack, ascending_QMARK_, cnt, __hash) {
  return new cljs.core.PersistentTreeMapSeq(meta, stack, ascending_QMARK_, cnt, __hash);
};
cljs.core.create_tree_map_seq = function create_tree_map_seq(tree, ascending_QMARK_, cnt) {
  return new cljs.core.PersistentTreeMapSeq(null, cljs.core.tree_map_seq_push.call(null, tree, null, ascending_QMARK_), ascending_QMARK_, cnt, null);
};
cljs.core.balance_left = function balance_left(key, val, ins, right) {
  if (ins instanceof cljs.core.RedNode) {
    if (ins.left instanceof cljs.core.RedNode) {
      return new cljs.core.RedNode(ins.key, ins.val, ins.left.blacken(), new cljs.core.BlackNode(key, val, ins.right, right, null), null);
    } else {
      if (ins.right instanceof cljs.core.RedNode) {
        return new cljs.core.RedNode(ins.right.key, ins.right.val, new cljs.core.BlackNode(ins.key, ins.val, ins.left, ins.right.left, null), new cljs.core.BlackNode(key, val, ins.right.right, right, null), null);
      } else {
        if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
          return new cljs.core.BlackNode(key, val, ins, right, null);
        } else {
          return null;
        }
      }
    }
  } else {
    return new cljs.core.BlackNode(key, val, ins, right, null);
  }
};
cljs.core.balance_right = function balance_right(key, val, left, ins) {
  if (ins instanceof cljs.core.RedNode) {
    if (ins.right instanceof cljs.core.RedNode) {
      return new cljs.core.RedNode(ins.key, ins.val, new cljs.core.BlackNode(key, val, left, ins.left, null), ins.right.blacken(), null);
    } else {
      if (ins.left instanceof cljs.core.RedNode) {
        return new cljs.core.RedNode(ins.left.key, ins.left.val, new cljs.core.BlackNode(key, val, left, ins.left.left, null), new cljs.core.BlackNode(ins.key, ins.val, ins.left.right, ins.right, null), null);
      } else {
        if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
          return new cljs.core.BlackNode(key, val, left, ins, null);
        } else {
          return null;
        }
      }
    }
  } else {
    return new cljs.core.BlackNode(key, val, left, ins, null);
  }
};
cljs.core.balance_left_del = function balance_left_del(key, val, del, right) {
  if (del instanceof cljs.core.RedNode) {
    return new cljs.core.RedNode(key, val, del.blacken(), right, null);
  } else {
    if (right instanceof cljs.core.BlackNode) {
      return cljs.core.balance_right.call(null, key, val, del, right.redden());
    } else {
      if (right instanceof cljs.core.RedNode && right.left instanceof cljs.core.BlackNode) {
        return new cljs.core.RedNode(right.left.key, right.left.val, new cljs.core.BlackNode(key, val, del, right.left.left, null), cljs.core.balance_right.call(null, right.key, right.val, right.left.right, right.right.redden()), null);
      } else {
        if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
          throw new Error("red-black tree invariant violation");
        } else {
          return null;
        }
      }
    }
  }
};
cljs.core.balance_right_del = function balance_right_del(key, val, left, del) {
  if (del instanceof cljs.core.RedNode) {
    return new cljs.core.RedNode(key, val, left, del.blacken(), null);
  } else {
    if (left instanceof cljs.core.BlackNode) {
      return cljs.core.balance_left.call(null, key, val, left.redden(), del);
    } else {
      if (left instanceof cljs.core.RedNode && left.right instanceof cljs.core.BlackNode) {
        return new cljs.core.RedNode(left.right.key, left.right.val, cljs.core.balance_left.call(null, left.key, left.val, left.left.redden(), left.right.left), new cljs.core.BlackNode(key, val, left.right.right, del, null), null);
      } else {
        if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
          throw new Error("red-black tree invariant violation");
        } else {
          return null;
        }
      }
    }
  }
};
cljs.core.tree_map_kv_reduce = function tree_map_kv_reduce(node, f, init) {
  var init__$1 = !(node.left == null) ? tree_map_kv_reduce.call(null, node.left, f, init) : init;
  if (cljs.core.reduced_QMARK_.call(null, init__$1)) {
    return cljs.core.deref.call(null, init__$1);
  } else {
    var init__$2 = f.call(null, init__$1, node.key, node.val);
    if (cljs.core.reduced_QMARK_.call(null, init__$2)) {
      return cljs.core.deref.call(null, init__$2);
    } else {
      var init__$3 = !(node.right == null) ? tree_map_kv_reduce.call(null, node.right, f, init__$2) : init__$2;
      if (cljs.core.reduced_QMARK_.call(null, init__$3)) {
        return cljs.core.deref.call(null, init__$3);
      } else {
        return init__$3;
      }
    }
  }
};
cljs.core.BlackNode = function(key, val, left, right, __hash) {
  this.key = key;
  this.val = val;
  this.left = left;
  this.right = right;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition1$ = 0;
  this.cljs$lang$protocol_mask$partition0$ = 32402207;
};
cljs.core.BlackNode.cljs$lang$type = true;
cljs.core.BlackNode.cljs$lang$ctorStr = "cljs.core/BlackNode";
cljs.core.BlackNode.cljs$lang$ctorPrWriter = function(this__3970__auto__, writer__3971__auto__, opt__3972__auto__) {
  return cljs.core._write.call(null, writer__3971__auto__, "cljs.core/BlackNode");
};
cljs.core.BlackNode.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var h__3814__auto__ = self__.__hash;
  if (!(h__3814__auto__ == null)) {
    return h__3814__auto__;
  } else {
    var h__3814__auto____$1 = cljs.core.hash_coll.call(null, coll__$1);
    self__.__hash = h__3814__auto____$1;
    return h__3814__auto____$1;
  }
};
cljs.core.BlackNode.prototype.cljs$core$ILookup$_lookup$arity$2 = function(node, k) {
  var self__ = this;
  var node__$1 = this;
  return cljs.core._nth.call(null, node__$1, k, null);
};
cljs.core.BlackNode.prototype.cljs$core$ILookup$_lookup$arity$3 = function(node, k, not_found) {
  var self__ = this;
  var node__$1 = this;
  return cljs.core._nth.call(null, node__$1, k, not_found);
};
cljs.core.BlackNode.prototype.cljs$core$IAssociative$_assoc$arity$3 = function(node, k, v) {
  var self__ = this;
  var node__$1 = this;
  return cljs.core.assoc.call(null, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [self__.key, self__.val], null), k, v);
};
cljs.core.BlackNode.prototype.call = function() {
  var G__11286 = null;
  var G__11286__2 = function(self__, k) {
    var self__ = this;
    var self____$1 = this;
    var node = self____$1;
    return node.cljs$core$ILookup$_lookup$arity$2(null, k);
  };
  var G__11286__3 = function(self__, k, not_found) {
    var self__ = this;
    var self____$1 = this;
    var node = self____$1;
    return node.cljs$core$ILookup$_lookup$arity$3(null, k, not_found);
  };
  G__11286 = function(self__, k, not_found) {
    switch(arguments.length) {
      case 2:
        return G__11286__2.call(this, self__, k);
      case 3:
        return G__11286__3.call(this, self__, k, not_found);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  return G__11286;
}();
cljs.core.BlackNode.prototype.apply = function(self__, args11285) {
  var self__ = this;
  var self____$1 = this;
  return self____$1.call.apply(self____$1, [self____$1].concat(cljs.core.aclone.call(null, args11285)));
};
cljs.core.BlackNode.prototype.cljs$core$IFn$_invoke$arity$1 = function(k) {
  var self__ = this;
  var node = this;
  return node.cljs$core$ILookup$_lookup$arity$2(null, k);
};
cljs.core.BlackNode.prototype.cljs$core$IFn$_invoke$arity$2 = function(k, not_found) {
  var self__ = this;
  var node = this;
  return node.cljs$core$ILookup$_lookup$arity$3(null, k, not_found);
};
cljs.core.BlackNode.prototype.cljs$core$ICollection$_conj$arity$2 = function(node, o) {
  var self__ = this;
  var node__$1 = this;
  return new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [self__.key, self__.val, o], null);
};
cljs.core.BlackNode.prototype.cljs$core$IMapEntry$_key$arity$1 = function(node) {
  var self__ = this;
  var node__$1 = this;
  return self__.key;
};
cljs.core.BlackNode.prototype.cljs$core$IMapEntry$_val$arity$1 = function(node) {
  var self__ = this;
  var node__$1 = this;
  return self__.val;
};
cljs.core.BlackNode.prototype.add_right = function(ins) {
  var self__ = this;
  var node = this;
  return ins.balance_right(node);
};
cljs.core.BlackNode.prototype.redden = function() {
  var self__ = this;
  var node = this;
  return new cljs.core.RedNode(self__.key, self__.val, self__.left, self__.right, null);
};
cljs.core.BlackNode.prototype.remove_right = function(del) {
  var self__ = this;
  var node = this;
  return cljs.core.balance_right_del.call(null, self__.key, self__.val, self__.left, del);
};
cljs.core.BlackNode.prototype.replace = function(key__$1, val__$1, left__$1, right__$1) {
  var self__ = this;
  var node = this;
  return new cljs.core.BlackNode(key__$1, val__$1, left__$1, right__$1, null);
};
cljs.core.BlackNode.prototype.kv_reduce = function(f, init) {
  var self__ = this;
  var node = this;
  return cljs.core.tree_map_kv_reduce.call(null, node, f, init);
};
cljs.core.BlackNode.prototype.remove_left = function(del) {
  var self__ = this;
  var node = this;
  return cljs.core.balance_left_del.call(null, self__.key, self__.val, del, self__.right);
};
cljs.core.BlackNode.prototype.add_left = function(ins) {
  var self__ = this;
  var node = this;
  return ins.balance_left(node);
};
cljs.core.BlackNode.prototype.balance_left = function(parent) {
  var self__ = this;
  var node = this;
  return new cljs.core.BlackNode(parent.key, parent.val, node, parent.right, null);
};
cljs.core.BlackNode.prototype.balance_right = function(parent) {
  var self__ = this;
  var node = this;
  return new cljs.core.BlackNode(parent.key, parent.val, parent.left, node, null);
};
cljs.core.BlackNode.prototype.blacken = function() {
  var self__ = this;
  var node = this;
  return node;
};
cljs.core.BlackNode.prototype.cljs$core$IReduce$_reduce$arity$2 = function(node, f) {
  var self__ = this;
  var node__$1 = this;
  return cljs.core.ci_reduce.call(null, node__$1, f);
};
cljs.core.BlackNode.prototype.cljs$core$IReduce$_reduce$arity$3 = function(node, f, start) {
  var self__ = this;
  var node__$1 = this;
  return cljs.core.ci_reduce.call(null, node__$1, f, start);
};
cljs.core.BlackNode.prototype.cljs$core$ISeqable$_seq$arity$1 = function(node) {
  var self__ = this;
  var node__$1 = this;
  return cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, self__.val), self__.key);
};
cljs.core.BlackNode.prototype.cljs$core$ICounted$_count$arity$1 = function(node) {
  var self__ = this;
  var node__$1 = this;
  return 2;
};
cljs.core.BlackNode.prototype.cljs$core$IStack$_peek$arity$1 = function(node) {
  var self__ = this;
  var node__$1 = this;
  return self__.val;
};
cljs.core.BlackNode.prototype.cljs$core$IStack$_pop$arity$1 = function(node) {
  var self__ = this;
  var node__$1 = this;
  return new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [self__.key], null);
};
cljs.core.BlackNode.prototype.cljs$core$IVector$_assoc_n$arity$3 = function(node, n, v) {
  var self__ = this;
  var node__$1 = this;
  return(new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [self__.key, self__.val], null)).cljs$core$IVector$_assoc_n$arity$3(null, n, v);
};
cljs.core.BlackNode.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.equiv_sequential.call(null, coll__$1, other);
};
cljs.core.BlackNode.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(node, meta) {
  var self__ = this;
  var node__$1 = this;
  return cljs.core.with_meta.call(null, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [self__.key, self__.val], null), meta);
};
cljs.core.BlackNode.prototype.cljs$core$IMeta$_meta$arity$1 = function(node) {
  var self__ = this;
  var node__$1 = this;
  return null;
};
cljs.core.BlackNode.prototype.cljs$core$IIndexed$_nth$arity$2 = function(node, n) {
  var self__ = this;
  var node__$1 = this;
  if (n === 0) {
    return self__.key;
  } else {
    if (n === 1) {
      return self__.val;
    } else {
      if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
        return null;
      } else {
        return null;
      }
    }
  }
};
cljs.core.BlackNode.prototype.cljs$core$IIndexed$_nth$arity$3 = function(node, n, not_found) {
  var self__ = this;
  var node__$1 = this;
  if (n === 0) {
    return self__.key;
  } else {
    if (n === 1) {
      return self__.val;
    } else {
      if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
        return not_found;
      } else {
        return null;
      }
    }
  }
};
cljs.core.BlackNode.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(node) {
  var self__ = this;
  var node__$1 = this;
  return cljs.core.PersistentVector.EMPTY;
};
cljs.core.__GT_BlackNode = function __GT_BlackNode(key, val, left, right, __hash) {
  return new cljs.core.BlackNode(key, val, left, right, __hash);
};
cljs.core.RedNode = function(key, val, left, right, __hash) {
  this.key = key;
  this.val = val;
  this.left = left;
  this.right = right;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition1$ = 0;
  this.cljs$lang$protocol_mask$partition0$ = 32402207;
};
cljs.core.RedNode.cljs$lang$type = true;
cljs.core.RedNode.cljs$lang$ctorStr = "cljs.core/RedNode";
cljs.core.RedNode.cljs$lang$ctorPrWriter = function(this__3970__auto__, writer__3971__auto__, opt__3972__auto__) {
  return cljs.core._write.call(null, writer__3971__auto__, "cljs.core/RedNode");
};
cljs.core.RedNode.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var h__3814__auto__ = self__.__hash;
  if (!(h__3814__auto__ == null)) {
    return h__3814__auto__;
  } else {
    var h__3814__auto____$1 = cljs.core.hash_coll.call(null, coll__$1);
    self__.__hash = h__3814__auto____$1;
    return h__3814__auto____$1;
  }
};
cljs.core.RedNode.prototype.cljs$core$ILookup$_lookup$arity$2 = function(node, k) {
  var self__ = this;
  var node__$1 = this;
  return cljs.core._nth.call(null, node__$1, k, null);
};
cljs.core.RedNode.prototype.cljs$core$ILookup$_lookup$arity$3 = function(node, k, not_found) {
  var self__ = this;
  var node__$1 = this;
  return cljs.core._nth.call(null, node__$1, k, not_found);
};
cljs.core.RedNode.prototype.cljs$core$IAssociative$_assoc$arity$3 = function(node, k, v) {
  var self__ = this;
  var node__$1 = this;
  return cljs.core.assoc.call(null, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [self__.key, self__.val], null), k, v);
};
cljs.core.RedNode.prototype.call = function() {
  var G__11288 = null;
  var G__11288__2 = function(self__, k) {
    var self__ = this;
    var self____$1 = this;
    var node = self____$1;
    return node.cljs$core$ILookup$_lookup$arity$2(null, k);
  };
  var G__11288__3 = function(self__, k, not_found) {
    var self__ = this;
    var self____$1 = this;
    var node = self____$1;
    return node.cljs$core$ILookup$_lookup$arity$3(null, k, not_found);
  };
  G__11288 = function(self__, k, not_found) {
    switch(arguments.length) {
      case 2:
        return G__11288__2.call(this, self__, k);
      case 3:
        return G__11288__3.call(this, self__, k, not_found);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  return G__11288;
}();
cljs.core.RedNode.prototype.apply = function(self__, args11287) {
  var self__ = this;
  var self____$1 = this;
  return self____$1.call.apply(self____$1, [self____$1].concat(cljs.core.aclone.call(null, args11287)));
};
cljs.core.RedNode.prototype.cljs$core$IFn$_invoke$arity$1 = function(k) {
  var self__ = this;
  var node = this;
  return node.cljs$core$ILookup$_lookup$arity$2(null, k);
};
cljs.core.RedNode.prototype.cljs$core$IFn$_invoke$arity$2 = function(k, not_found) {
  var self__ = this;
  var node = this;
  return node.cljs$core$ILookup$_lookup$arity$3(null, k, not_found);
};
cljs.core.RedNode.prototype.cljs$core$ICollection$_conj$arity$2 = function(node, o) {
  var self__ = this;
  var node__$1 = this;
  return new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [self__.key, self__.val, o], null);
};
cljs.core.RedNode.prototype.cljs$core$IMapEntry$_key$arity$1 = function(node) {
  var self__ = this;
  var node__$1 = this;
  return self__.key;
};
cljs.core.RedNode.prototype.cljs$core$IMapEntry$_val$arity$1 = function(node) {
  var self__ = this;
  var node__$1 = this;
  return self__.val;
};
cljs.core.RedNode.prototype.add_right = function(ins) {
  var self__ = this;
  var node = this;
  return new cljs.core.RedNode(self__.key, self__.val, self__.left, ins, null);
};
cljs.core.RedNode.prototype.redden = function() {
  var self__ = this;
  var node = this;
  throw new Error("red-black tree invariant violation");
};
cljs.core.RedNode.prototype.remove_right = function(del) {
  var self__ = this;
  var node = this;
  return new cljs.core.RedNode(self__.key, self__.val, self__.left, del, null);
};
cljs.core.RedNode.prototype.replace = function(key__$1, val__$1, left__$1, right__$1) {
  var self__ = this;
  var node = this;
  return new cljs.core.RedNode(key__$1, val__$1, left__$1, right__$1, null);
};
cljs.core.RedNode.prototype.kv_reduce = function(f, init) {
  var self__ = this;
  var node = this;
  return cljs.core.tree_map_kv_reduce.call(null, node, f, init);
};
cljs.core.RedNode.prototype.remove_left = function(del) {
  var self__ = this;
  var node = this;
  return new cljs.core.RedNode(self__.key, self__.val, del, self__.right, null);
};
cljs.core.RedNode.prototype.add_left = function(ins) {
  var self__ = this;
  var node = this;
  return new cljs.core.RedNode(self__.key, self__.val, ins, self__.right, null);
};
cljs.core.RedNode.prototype.balance_left = function(parent) {
  var self__ = this;
  var node = this;
  if (self__.left instanceof cljs.core.RedNode) {
    return new cljs.core.RedNode(self__.key, self__.val, self__.left.blacken(), new cljs.core.BlackNode(parent.key, parent.val, self__.right, parent.right, null), null);
  } else {
    if (self__.right instanceof cljs.core.RedNode) {
      return new cljs.core.RedNode(self__.right.key, self__.right.val, new cljs.core.BlackNode(self__.key, self__.val, self__.left, self__.right.left, null), new cljs.core.BlackNode(parent.key, parent.val, self__.right.right, parent.right, null), null);
    } else {
      if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
        return new cljs.core.BlackNode(parent.key, parent.val, node, parent.right, null);
      } else {
        return null;
      }
    }
  }
};
cljs.core.RedNode.prototype.balance_right = function(parent) {
  var self__ = this;
  var node = this;
  if (self__.right instanceof cljs.core.RedNode) {
    return new cljs.core.RedNode(self__.key, self__.val, new cljs.core.BlackNode(parent.key, parent.val, parent.left, self__.left, null), self__.right.blacken(), null);
  } else {
    if (self__.left instanceof cljs.core.RedNode) {
      return new cljs.core.RedNode(self__.left.key, self__.left.val, new cljs.core.BlackNode(parent.key, parent.val, parent.left, self__.left.left, null), new cljs.core.BlackNode(self__.key, self__.val, self__.left.right, self__.right, null), null);
    } else {
      if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
        return new cljs.core.BlackNode(parent.key, parent.val, parent.left, node, null);
      } else {
        return null;
      }
    }
  }
};
cljs.core.RedNode.prototype.blacken = function() {
  var self__ = this;
  var node = this;
  return new cljs.core.BlackNode(self__.key, self__.val, self__.left, self__.right, null);
};
cljs.core.RedNode.prototype.cljs$core$IReduce$_reduce$arity$2 = function(node, f) {
  var self__ = this;
  var node__$1 = this;
  return cljs.core.ci_reduce.call(null, node__$1, f);
};
cljs.core.RedNode.prototype.cljs$core$IReduce$_reduce$arity$3 = function(node, f, start) {
  var self__ = this;
  var node__$1 = this;
  return cljs.core.ci_reduce.call(null, node__$1, f, start);
};
cljs.core.RedNode.prototype.cljs$core$ISeqable$_seq$arity$1 = function(node) {
  var self__ = this;
  var node__$1 = this;
  return cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, self__.val), self__.key);
};
cljs.core.RedNode.prototype.cljs$core$ICounted$_count$arity$1 = function(node) {
  var self__ = this;
  var node__$1 = this;
  return 2;
};
cljs.core.RedNode.prototype.cljs$core$IStack$_peek$arity$1 = function(node) {
  var self__ = this;
  var node__$1 = this;
  return self__.val;
};
cljs.core.RedNode.prototype.cljs$core$IStack$_pop$arity$1 = function(node) {
  var self__ = this;
  var node__$1 = this;
  return new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [self__.key], null);
};
cljs.core.RedNode.prototype.cljs$core$IVector$_assoc_n$arity$3 = function(node, n, v) {
  var self__ = this;
  var node__$1 = this;
  return(new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [self__.key, self__.val], null)).cljs$core$IVector$_assoc_n$arity$3(null, n, v);
};
cljs.core.RedNode.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.equiv_sequential.call(null, coll__$1, other);
};
cljs.core.RedNode.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(node, meta) {
  var self__ = this;
  var node__$1 = this;
  return cljs.core.with_meta.call(null, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [self__.key, self__.val], null), meta);
};
cljs.core.RedNode.prototype.cljs$core$IMeta$_meta$arity$1 = function(node) {
  var self__ = this;
  var node__$1 = this;
  return null;
};
cljs.core.RedNode.prototype.cljs$core$IIndexed$_nth$arity$2 = function(node, n) {
  var self__ = this;
  var node__$1 = this;
  if (n === 0) {
    return self__.key;
  } else {
    if (n === 1) {
      return self__.val;
    } else {
      if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
        return null;
      } else {
        return null;
      }
    }
  }
};
cljs.core.RedNode.prototype.cljs$core$IIndexed$_nth$arity$3 = function(node, n, not_found) {
  var self__ = this;
  var node__$1 = this;
  if (n === 0) {
    return self__.key;
  } else {
    if (n === 1) {
      return self__.val;
    } else {
      if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
        return not_found;
      } else {
        return null;
      }
    }
  }
};
cljs.core.RedNode.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(node) {
  var self__ = this;
  var node__$1 = this;
  return cljs.core.PersistentVector.EMPTY;
};
cljs.core.__GT_RedNode = function __GT_RedNode(key, val, left, right, __hash) {
  return new cljs.core.RedNode(key, val, left, right, __hash);
};
cljs.core.tree_map_add = function tree_map_add(comp, tree, k, v, found) {
  if (tree == null) {
    return new cljs.core.RedNode(k, v, null, null, null);
  } else {
    var c = comp.call(null, k, tree.key);
    if (c === 0) {
      found[0] = tree;
      return null;
    } else {
      if (c < 0) {
        var ins = tree_map_add.call(null, comp, tree.left, k, v, found);
        if (!(ins == null)) {
          return tree.add_left(ins);
        } else {
          return null;
        }
      } else {
        if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
          var ins = tree_map_add.call(null, comp, tree.right, k, v, found);
          if (!(ins == null)) {
            return tree.add_right(ins);
          } else {
            return null;
          }
        } else {
          return null;
        }
      }
    }
  }
};
cljs.core.tree_map_append = function tree_map_append(left, right) {
  if (left == null) {
    return right;
  } else {
    if (right == null) {
      return left;
    } else {
      if (left instanceof cljs.core.RedNode) {
        if (right instanceof cljs.core.RedNode) {
          var app = tree_map_append.call(null, left.right, right.left);
          if (app instanceof cljs.core.RedNode) {
            return new cljs.core.RedNode(app.key, app.val, new cljs.core.RedNode(left.key, left.val, left.left, app.left, null), new cljs.core.RedNode(right.key, right.val, app.right, right.right, null), null);
          } else {
            return new cljs.core.RedNode(left.key, left.val, left.left, new cljs.core.RedNode(right.key, right.val, app, right.right, null), null);
          }
        } else {
          return new cljs.core.RedNode(left.key, left.val, left.left, tree_map_append.call(null, left.right, right), null);
        }
      } else {
        if (right instanceof cljs.core.RedNode) {
          return new cljs.core.RedNode(right.key, right.val, tree_map_append.call(null, left, right.left), right.right, null);
        } else {
          if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
            var app = tree_map_append.call(null, left.right, right.left);
            if (app instanceof cljs.core.RedNode) {
              return new cljs.core.RedNode(app.key, app.val, new cljs.core.BlackNode(left.key, left.val, left.left, app.left, null), new cljs.core.BlackNode(right.key, right.val, app.right, right.right, null), null);
            } else {
              return cljs.core.balance_left_del.call(null, left.key, left.val, left.left, new cljs.core.BlackNode(right.key, right.val, app, right.right, null));
            }
          } else {
            return null;
          }
        }
      }
    }
  }
};
cljs.core.tree_map_remove = function tree_map_remove(comp, tree, k, found) {
  if (!(tree == null)) {
    var c = comp.call(null, k, tree.key);
    if (c === 0) {
      found[0] = tree;
      return cljs.core.tree_map_append.call(null, tree.left, tree.right);
    } else {
      if (c < 0) {
        var del = tree_map_remove.call(null, comp, tree.left, k, found);
        if (!(del == null) || !(found[0] == null)) {
          if (tree.left instanceof cljs.core.BlackNode) {
            return cljs.core.balance_left_del.call(null, tree.key, tree.val, del, tree.right);
          } else {
            return new cljs.core.RedNode(tree.key, tree.val, del, tree.right, null);
          }
        } else {
          return null;
        }
      } else {
        if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
          var del = tree_map_remove.call(null, comp, tree.right, k, found);
          if (!(del == null) || !(found[0] == null)) {
            if (tree.right instanceof cljs.core.BlackNode) {
              return cljs.core.balance_right_del.call(null, tree.key, tree.val, tree.left, del);
            } else {
              return new cljs.core.RedNode(tree.key, tree.val, tree.left, del, null);
            }
          } else {
            return null;
          }
        } else {
          return null;
        }
      }
    }
  } else {
    return null;
  }
};
cljs.core.tree_map_replace = function tree_map_replace(comp, tree, k, v) {
  var tk = tree.key;
  var c = comp.call(null, k, tk);
  if (c === 0) {
    return tree.replace(tk, v, tree.left, tree.right);
  } else {
    if (c < 0) {
      return tree.replace(tk, tree.val, tree_map_replace.call(null, comp, tree.left, k, v), tree.right);
    } else {
      if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
        return tree.replace(tk, tree.val, tree.left, tree_map_replace.call(null, comp, tree.right, k, v));
      } else {
        return null;
      }
    }
  }
};
cljs.core.PersistentTreeMap = function(comp, tree, cnt, meta, __hash) {
  this.comp = comp;
  this.tree = tree;
  this.cnt = cnt;
  this.meta = meta;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition0$ = 418776847;
  this.cljs$lang$protocol_mask$partition1$ = 8192;
};
cljs.core.PersistentTreeMap.cljs$lang$type = true;
cljs.core.PersistentTreeMap.cljs$lang$ctorStr = "cljs.core/PersistentTreeMap";
cljs.core.PersistentTreeMap.cljs$lang$ctorPrWriter = function(this__3970__auto__, writer__3971__auto__, opt__3972__auto__) {
  return cljs.core._write.call(null, writer__3971__auto__, "cljs.core/PersistentTreeMap");
};
cljs.core.PersistentTreeMap.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var h__3814__auto__ = self__.__hash;
  if (!(h__3814__auto__ == null)) {
    return h__3814__auto__;
  } else {
    var h__3814__auto____$1 = cljs.core.hash_imap.call(null, coll__$1);
    self__.__hash = h__3814__auto____$1;
    return h__3814__auto____$1;
  }
};
cljs.core.PersistentTreeMap.prototype.cljs$core$ILookup$_lookup$arity$2 = function(coll, k) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core._lookup.call(null, coll__$1, k, null);
};
cljs.core.PersistentTreeMap.prototype.cljs$core$ILookup$_lookup$arity$3 = function(coll, k, not_found) {
  var self__ = this;
  var coll__$1 = this;
  var n = coll__$1.entry_at(k);
  if (!(n == null)) {
    return n.val;
  } else {
    return not_found;
  }
};
cljs.core.PersistentTreeMap.prototype.cljs$core$IAssociative$_assoc$arity$3 = function(coll, k, v) {
  var self__ = this;
  var coll__$1 = this;
  var found = [null];
  var t = cljs.core.tree_map_add.call(null, self__.comp, self__.tree, k, v, found);
  if (t == null) {
    var found_node = cljs.core.nth.call(null, found, 0);
    if (cljs.core._EQ_.call(null, v, found_node.val)) {
      return coll__$1;
    } else {
      return new cljs.core.PersistentTreeMap(self__.comp, cljs.core.tree_map_replace.call(null, self__.comp, self__.tree, k, v), self__.cnt, self__.meta, null);
    }
  } else {
    return new cljs.core.PersistentTreeMap(self__.comp, t.blacken(), self__.cnt + 1, self__.meta, null);
  }
};
cljs.core.PersistentTreeMap.prototype.cljs$core$IAssociative$_contains_key_QMARK_$arity$2 = function(coll, k) {
  var self__ = this;
  var coll__$1 = this;
  return!(coll__$1.entry_at(k) == null);
};
cljs.core.PersistentTreeMap.prototype.call = function() {
  var G__11290 = null;
  var G__11290__2 = function(self__, k) {
    var self__ = this;
    var self____$1 = this;
    var coll = self____$1;
    return coll.cljs$core$ILookup$_lookup$arity$2(null, k);
  };
  var G__11290__3 = function(self__, k, not_found) {
    var self__ = this;
    var self____$1 = this;
    var coll = self____$1;
    return coll.cljs$core$ILookup$_lookup$arity$3(null, k, not_found);
  };
  G__11290 = function(self__, k, not_found) {
    switch(arguments.length) {
      case 2:
        return G__11290__2.call(this, self__, k);
      case 3:
        return G__11290__3.call(this, self__, k, not_found);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  return G__11290;
}();
cljs.core.PersistentTreeMap.prototype.apply = function(self__, args11289) {
  var self__ = this;
  var self____$1 = this;
  return self____$1.call.apply(self____$1, [self____$1].concat(cljs.core.aclone.call(null, args11289)));
};
cljs.core.PersistentTreeMap.prototype.cljs$core$IFn$_invoke$arity$1 = function(k) {
  var self__ = this;
  var coll = this;
  return coll.cljs$core$ILookup$_lookup$arity$2(null, k);
};
cljs.core.PersistentTreeMap.prototype.cljs$core$IFn$_invoke$arity$2 = function(k, not_found) {
  var self__ = this;
  var coll = this;
  return coll.cljs$core$ILookup$_lookup$arity$3(null, k, not_found);
};
cljs.core.PersistentTreeMap.prototype.cljs$core$IKVReduce$_kv_reduce$arity$3 = function(coll, f, init) {
  var self__ = this;
  var coll__$1 = this;
  if (!(self__.tree == null)) {
    return cljs.core.tree_map_kv_reduce.call(null, self__.tree, f, init);
  } else {
    return init;
  }
};
cljs.core.PersistentTreeMap.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, entry) {
  var self__ = this;
  var coll__$1 = this;
  if (cljs.core.vector_QMARK_.call(null, entry)) {
    return cljs.core._assoc.call(null, coll__$1, cljs.core._nth.call(null, entry, 0), cljs.core._nth.call(null, entry, 1));
  } else {
    return cljs.core.reduce.call(null, cljs.core._conj, coll__$1, entry);
  }
};
cljs.core.PersistentTreeMap.prototype.cljs$core$IReversible$_rseq$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  if (self__.cnt > 0) {
    return cljs.core.create_tree_map_seq.call(null, self__.tree, false, self__.cnt);
  } else {
    return null;
  }
};
cljs.core.PersistentTreeMap.prototype.toString = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.pr_str_STAR_.call(null, coll);
};
cljs.core.PersistentTreeMap.prototype.entry_at = function(k) {
  var self__ = this;
  var coll = this;
  var t = self__.tree;
  while (true) {
    if (!(t == null)) {
      var c = self__.comp.call(null, k, t.key);
      if (c === 0) {
        return t;
      } else {
        if (c < 0) {
          var G__11291 = t.left;
          t = G__11291;
          continue;
        } else {
          if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
            var G__11292 = t.right;
            t = G__11292;
            continue;
          } else {
            return null;
          }
        }
      }
    } else {
      return null;
    }
    break;
  }
};
cljs.core.PersistentTreeMap.prototype.cljs$core$ISorted$_sorted_seq$arity$2 = function(coll, ascending_QMARK_) {
  var self__ = this;
  var coll__$1 = this;
  if (self__.cnt > 0) {
    return cljs.core.create_tree_map_seq.call(null, self__.tree, ascending_QMARK_, self__.cnt);
  } else {
    return null;
  }
};
cljs.core.PersistentTreeMap.prototype.cljs$core$ISorted$_sorted_seq_from$arity$3 = function(coll, k, ascending_QMARK_) {
  var self__ = this;
  var coll__$1 = this;
  if (self__.cnt > 0) {
    var stack = null;
    var t = self__.tree;
    while (true) {
      if (!(t == null)) {
        var c = self__.comp.call(null, k, t.key);
        if (c === 0) {
          return new cljs.core.PersistentTreeMapSeq(null, cljs.core.conj.call(null, stack, t), ascending_QMARK_, -1, null);
        } else {
          if (cljs.core.truth_(ascending_QMARK_)) {
            if (c < 0) {
              var G__11293 = cljs.core.conj.call(null, stack, t);
              var G__11294 = t.left;
              stack = G__11293;
              t = G__11294;
              continue;
            } else {
              var G__11295 = stack;
              var G__11296 = t.right;
              stack = G__11295;
              t = G__11296;
              continue;
            }
          } else {
            if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
              if (c > 0) {
                var G__11297 = cljs.core.conj.call(null, stack, t);
                var G__11298 = t.right;
                stack = G__11297;
                t = G__11298;
                continue;
              } else {
                var G__11299 = stack;
                var G__11300 = t.left;
                stack = G__11299;
                t = G__11300;
                continue;
              }
            } else {
              return null;
            }
          }
        }
      } else {
        if (stack == null) {
          return null;
        } else {
          return new cljs.core.PersistentTreeMapSeq(null, stack, ascending_QMARK_, -1, null);
        }
      }
      break;
    }
  } else {
    return null;
  }
};
cljs.core.PersistentTreeMap.prototype.cljs$core$ISorted$_entry_key$arity$2 = function(coll, entry) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.key.call(null, entry);
};
cljs.core.PersistentTreeMap.prototype.cljs$core$ISorted$_comparator$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.comp;
};
cljs.core.PersistentTreeMap.prototype.cljs$core$ISeqable$_seq$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  if (self__.cnt > 0) {
    return cljs.core.create_tree_map_seq.call(null, self__.tree, true, self__.cnt);
  } else {
    return null;
  }
};
cljs.core.PersistentTreeMap.prototype.cljs$core$ICounted$_count$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.cnt;
};
cljs.core.PersistentTreeMap.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.equiv_map.call(null, coll__$1, other);
};
cljs.core.PersistentTreeMap.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, meta__$1) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.PersistentTreeMap(self__.comp, self__.tree, self__.cnt, meta__$1, self__.__hash);
};
cljs.core.PersistentTreeMap.prototype.cljs$core$ICloneable$_clone$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return new cljs.core.PersistentTreeMap(self__.comp, self__.tree, self__.cnt, self__.meta, self__.__hash);
};
cljs.core.PersistentTreeMap.prototype.cljs$core$IMeta$_meta$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.meta;
};
cljs.core.PersistentTreeMap.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.with_meta.call(null, cljs.core.PersistentTreeMap.EMPTY, self__.meta);
};
cljs.core.PersistentTreeMap.prototype.cljs$core$IMap$_dissoc$arity$2 = function(coll, k) {
  var self__ = this;
  var coll__$1 = this;
  var found = [null];
  var t = cljs.core.tree_map_remove.call(null, self__.comp, self__.tree, k, found);
  if (t == null) {
    if (cljs.core.nth.call(null, found, 0) == null) {
      return coll__$1;
    } else {
      return new cljs.core.PersistentTreeMap(self__.comp, null, 0, self__.meta, null);
    }
  } else {
    return new cljs.core.PersistentTreeMap(self__.comp, t.blacken(), self__.cnt - 1, self__.meta, null);
  }
};
cljs.core.__GT_PersistentTreeMap = function __GT_PersistentTreeMap(comp, tree, cnt, meta, __hash) {
  return new cljs.core.PersistentTreeMap(comp, tree, cnt, meta, __hash);
};
cljs.core.PersistentTreeMap.EMPTY = new cljs.core.PersistentTreeMap(cljs.core.compare, null, 0, null, 0);
cljs.core.hash_map = function() {
  var hash_map__delegate = function(keyvals) {
    var in$ = cljs.core.seq.call(null, keyvals);
    var out = cljs.core.transient$.call(null, cljs.core.PersistentHashMap.EMPTY);
    while (true) {
      if (in$) {
        var G__11301 = cljs.core.nnext.call(null, in$);
        var G__11302 = cljs.core.assoc_BANG_.call(null, out, cljs.core.first.call(null, in$), cljs.core.second.call(null, in$));
        in$ = G__11301;
        out = G__11302;
        continue;
      } else {
        return cljs.core.persistent_BANG_.call(null, out);
      }
      break;
    }
  };
  var hash_map = function(var_args) {
    var keyvals = null;
    if (arguments.length > 0) {
      keyvals = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0), 0);
    }
    return hash_map__delegate.call(this, keyvals);
  };
  hash_map.cljs$lang$maxFixedArity = 0;
  hash_map.cljs$lang$applyTo = function(arglist__11303) {
    var keyvals = cljs.core.seq(arglist__11303);
    return hash_map__delegate(keyvals);
  };
  hash_map.cljs$core$IFn$_invoke$arity$variadic = hash_map__delegate;
  return hash_map;
}();
cljs.core.array_map = function() {
  var array_map__delegate = function(keyvals) {
    return new cljs.core.PersistentArrayMap(null, cljs.core.quot.call(null, cljs.core.count.call(null, keyvals), 2), cljs.core.apply.call(null, cljs.core.array, keyvals), null);
  };
  var array_map = function(var_args) {
    var keyvals = null;
    if (arguments.length > 0) {
      keyvals = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0), 0);
    }
    return array_map__delegate.call(this, keyvals);
  };
  array_map.cljs$lang$maxFixedArity = 0;
  array_map.cljs$lang$applyTo = function(arglist__11304) {
    var keyvals = cljs.core.seq(arglist__11304);
    return array_map__delegate(keyvals);
  };
  array_map.cljs$core$IFn$_invoke$arity$variadic = array_map__delegate;
  return array_map;
}();
cljs.core.obj_map = function() {
  var obj_map__delegate = function(keyvals) {
    var ks = [];
    var obj = function() {
      var obj11308 = {};
      return obj11308;
    }();
    var kvs = cljs.core.seq.call(null, keyvals);
    while (true) {
      if (kvs) {
        ks.push(cljs.core.first.call(null, kvs));
        obj[cljs.core.first.call(null, kvs)] = cljs.core.second.call(null, kvs);
        var G__11309 = cljs.core.nnext.call(null, kvs);
        kvs = G__11309;
        continue;
      } else {
        return cljs.core.ObjMap.fromObject.call(null, ks, obj);
      }
      break;
    }
  };
  var obj_map = function(var_args) {
    var keyvals = null;
    if (arguments.length > 0) {
      keyvals = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0), 0);
    }
    return obj_map__delegate.call(this, keyvals);
  };
  obj_map.cljs$lang$maxFixedArity = 0;
  obj_map.cljs$lang$applyTo = function(arglist__11310) {
    var keyvals = cljs.core.seq(arglist__11310);
    return obj_map__delegate(keyvals);
  };
  obj_map.cljs$core$IFn$_invoke$arity$variadic = obj_map__delegate;
  return obj_map;
}();
cljs.core.sorted_map = function() {
  var sorted_map__delegate = function(keyvals) {
    var in$ = cljs.core.seq.call(null, keyvals);
    var out = cljs.core.PersistentTreeMap.EMPTY;
    while (true) {
      if (in$) {
        var G__11311 = cljs.core.nnext.call(null, in$);
        var G__11312 = cljs.core.assoc.call(null, out, cljs.core.first.call(null, in$), cljs.core.second.call(null, in$));
        in$ = G__11311;
        out = G__11312;
        continue;
      } else {
        return out;
      }
      break;
    }
  };
  var sorted_map = function(var_args) {
    var keyvals = null;
    if (arguments.length > 0) {
      keyvals = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0), 0);
    }
    return sorted_map__delegate.call(this, keyvals);
  };
  sorted_map.cljs$lang$maxFixedArity = 0;
  sorted_map.cljs$lang$applyTo = function(arglist__11313) {
    var keyvals = cljs.core.seq(arglist__11313);
    return sorted_map__delegate(keyvals);
  };
  sorted_map.cljs$core$IFn$_invoke$arity$variadic = sorted_map__delegate;
  return sorted_map;
}();
cljs.core.sorted_map_by = function() {
  var sorted_map_by__delegate = function(comparator, keyvals) {
    var in$ = cljs.core.seq.call(null, keyvals);
    var out = new cljs.core.PersistentTreeMap(cljs.core.fn__GT_comparator.call(null, comparator), null, 0, null, 0);
    while (true) {
      if (in$) {
        var G__11314 = cljs.core.nnext.call(null, in$);
        var G__11315 = cljs.core.assoc.call(null, out, cljs.core.first.call(null, in$), cljs.core.second.call(null, in$));
        in$ = G__11314;
        out = G__11315;
        continue;
      } else {
        return out;
      }
      break;
    }
  };
  var sorted_map_by = function(comparator, var_args) {
    var keyvals = null;
    if (arguments.length > 1) {
      keyvals = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return sorted_map_by__delegate.call(this, comparator, keyvals);
  };
  sorted_map_by.cljs$lang$maxFixedArity = 1;
  sorted_map_by.cljs$lang$applyTo = function(arglist__11316) {
    var comparator = cljs.core.first(arglist__11316);
    var keyvals = cljs.core.rest(arglist__11316);
    return sorted_map_by__delegate(comparator, keyvals);
  };
  sorted_map_by.cljs$core$IFn$_invoke$arity$variadic = sorted_map_by__delegate;
  return sorted_map_by;
}();
cljs.core.KeySeq = function(mseq, _meta) {
  this.mseq = mseq;
  this._meta = _meta;
  this.cljs$lang$protocol_mask$partition1$ = 0;
  this.cljs$lang$protocol_mask$partition0$ = 32374988;
};
cljs.core.KeySeq.cljs$lang$type = true;
cljs.core.KeySeq.cljs$lang$ctorStr = "cljs.core/KeySeq";
cljs.core.KeySeq.cljs$lang$ctorPrWriter = function(this__3970__auto__, writer__3971__auto__, opt__3972__auto__) {
  return cljs.core._write.call(null, writer__3971__auto__, "cljs.core/KeySeq");
};
cljs.core.KeySeq.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.hash_coll.call(null, coll__$1);
};
cljs.core.KeySeq.prototype.cljs$core$INext$_next$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var nseq = function() {
    var G__11317 = self__.mseq;
    if (G__11317) {
      var bit__4053__auto__ = G__11317.cljs$lang$protocol_mask$partition0$ & 128;
      if (bit__4053__auto__ || G__11317.cljs$core$INext$) {
        return true;
      } else {
        if (!G__11317.cljs$lang$protocol_mask$partition0$) {
          return cljs.core.native_satisfies_QMARK_.call(null, cljs.core.INext, G__11317);
        } else {
          return false;
        }
      }
    } else {
      return cljs.core.native_satisfies_QMARK_.call(null, cljs.core.INext, G__11317);
    }
  }() ? cljs.core._next.call(null, self__.mseq) : cljs.core.next.call(null, self__.mseq);
  if (nseq == null) {
    return null;
  } else {
    return new cljs.core.KeySeq(nseq, self__._meta);
  }
};
cljs.core.KeySeq.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, o) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.cons.call(null, o, coll__$1);
};
cljs.core.KeySeq.prototype.toString = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.pr_str_STAR_.call(null, coll);
};
cljs.core.KeySeq.prototype.cljs$core$IReduce$_reduce$arity$2 = function(coll, f) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.seq_reduce.call(null, f, coll__$1);
};
cljs.core.KeySeq.prototype.cljs$core$IReduce$_reduce$arity$3 = function(coll, f, start) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.seq_reduce.call(null, f, start, coll__$1);
};
cljs.core.KeySeq.prototype.cljs$core$ISeqable$_seq$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return coll__$1;
};
cljs.core.KeySeq.prototype.cljs$core$ISeq$_first$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var me = cljs.core._first.call(null, self__.mseq);
  return cljs.core._key.call(null, me);
};
cljs.core.KeySeq.prototype.cljs$core$ISeq$_rest$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var nseq = function() {
    var G__11318 = self__.mseq;
    if (G__11318) {
      var bit__4053__auto__ = G__11318.cljs$lang$protocol_mask$partition0$ & 128;
      if (bit__4053__auto__ || G__11318.cljs$core$INext$) {
        return true;
      } else {
        if (!G__11318.cljs$lang$protocol_mask$partition0$) {
          return cljs.core.native_satisfies_QMARK_.call(null, cljs.core.INext, G__11318);
        } else {
          return false;
        }
      }
    } else {
      return cljs.core.native_satisfies_QMARK_.call(null, cljs.core.INext, G__11318);
    }
  }() ? cljs.core._next.call(null, self__.mseq) : cljs.core.next.call(null, self__.mseq);
  if (!(nseq == null)) {
    return new cljs.core.KeySeq(nseq, self__._meta);
  } else {
    return cljs.core.List.EMPTY;
  }
};
cljs.core.KeySeq.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.equiv_sequential.call(null, coll__$1, other);
};
cljs.core.KeySeq.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, new_meta) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.KeySeq(self__.mseq, new_meta);
};
cljs.core.KeySeq.prototype.cljs$core$IMeta$_meta$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__._meta;
};
cljs.core.KeySeq.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.with_meta.call(null, cljs.core.List.EMPTY, self__._meta);
};
cljs.core.__GT_KeySeq = function __GT_KeySeq(mseq, _meta) {
  return new cljs.core.KeySeq(mseq, _meta);
};
cljs.core.keys = function keys(hash_map) {
  var temp__4092__auto__ = cljs.core.seq.call(null, hash_map);
  if (temp__4092__auto__) {
    var mseq = temp__4092__auto__;
    return new cljs.core.KeySeq(mseq, null);
  } else {
    return null;
  }
};
cljs.core.key = function key(map_entry) {
  return cljs.core._key.call(null, map_entry);
};
cljs.core.ValSeq = function(mseq, _meta) {
  this.mseq = mseq;
  this._meta = _meta;
  this.cljs$lang$protocol_mask$partition1$ = 0;
  this.cljs$lang$protocol_mask$partition0$ = 32374988;
};
cljs.core.ValSeq.cljs$lang$type = true;
cljs.core.ValSeq.cljs$lang$ctorStr = "cljs.core/ValSeq";
cljs.core.ValSeq.cljs$lang$ctorPrWriter = function(this__3970__auto__, writer__3971__auto__, opt__3972__auto__) {
  return cljs.core._write.call(null, writer__3971__auto__, "cljs.core/ValSeq");
};
cljs.core.ValSeq.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.hash_coll.call(null, coll__$1);
};
cljs.core.ValSeq.prototype.cljs$core$INext$_next$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var nseq = function() {
    var G__11319 = self__.mseq;
    if (G__11319) {
      var bit__4053__auto__ = G__11319.cljs$lang$protocol_mask$partition0$ & 128;
      if (bit__4053__auto__ || G__11319.cljs$core$INext$) {
        return true;
      } else {
        if (!G__11319.cljs$lang$protocol_mask$partition0$) {
          return cljs.core.native_satisfies_QMARK_.call(null, cljs.core.INext, G__11319);
        } else {
          return false;
        }
      }
    } else {
      return cljs.core.native_satisfies_QMARK_.call(null, cljs.core.INext, G__11319);
    }
  }() ? cljs.core._next.call(null, self__.mseq) : cljs.core.next.call(null, self__.mseq);
  if (nseq == null) {
    return null;
  } else {
    return new cljs.core.ValSeq(nseq, self__._meta);
  }
};
cljs.core.ValSeq.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, o) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.cons.call(null, o, coll__$1);
};
cljs.core.ValSeq.prototype.toString = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.pr_str_STAR_.call(null, coll);
};
cljs.core.ValSeq.prototype.cljs$core$IReduce$_reduce$arity$2 = function(coll, f) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.seq_reduce.call(null, f, coll__$1);
};
cljs.core.ValSeq.prototype.cljs$core$IReduce$_reduce$arity$3 = function(coll, f, start) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.seq_reduce.call(null, f, start, coll__$1);
};
cljs.core.ValSeq.prototype.cljs$core$ISeqable$_seq$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return coll__$1;
};
cljs.core.ValSeq.prototype.cljs$core$ISeq$_first$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var me = cljs.core._first.call(null, self__.mseq);
  return cljs.core._val.call(null, me);
};
cljs.core.ValSeq.prototype.cljs$core$ISeq$_rest$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var nseq = function() {
    var G__11320 = self__.mseq;
    if (G__11320) {
      var bit__4053__auto__ = G__11320.cljs$lang$protocol_mask$partition0$ & 128;
      if (bit__4053__auto__ || G__11320.cljs$core$INext$) {
        return true;
      } else {
        if (!G__11320.cljs$lang$protocol_mask$partition0$) {
          return cljs.core.native_satisfies_QMARK_.call(null, cljs.core.INext, G__11320);
        } else {
          return false;
        }
      }
    } else {
      return cljs.core.native_satisfies_QMARK_.call(null, cljs.core.INext, G__11320);
    }
  }() ? cljs.core._next.call(null, self__.mseq) : cljs.core.next.call(null, self__.mseq);
  if (!(nseq == null)) {
    return new cljs.core.ValSeq(nseq, self__._meta);
  } else {
    return cljs.core.List.EMPTY;
  }
};
cljs.core.ValSeq.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.equiv_sequential.call(null, coll__$1, other);
};
cljs.core.ValSeq.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, new_meta) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.ValSeq(self__.mseq, new_meta);
};
cljs.core.ValSeq.prototype.cljs$core$IMeta$_meta$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__._meta;
};
cljs.core.ValSeq.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.with_meta.call(null, cljs.core.List.EMPTY, self__._meta);
};
cljs.core.__GT_ValSeq = function __GT_ValSeq(mseq, _meta) {
  return new cljs.core.ValSeq(mseq, _meta);
};
cljs.core.vals = function vals(hash_map) {
  var temp__4092__auto__ = cljs.core.seq.call(null, hash_map);
  if (temp__4092__auto__) {
    var mseq = temp__4092__auto__;
    return new cljs.core.ValSeq(mseq, null);
  } else {
    return null;
  }
};
cljs.core.val = function val(map_entry) {
  return cljs.core._val.call(null, map_entry);
};
cljs.core.merge = function() {
  var merge__delegate = function(maps) {
    if (cljs.core.truth_(cljs.core.some.call(null, cljs.core.identity, maps))) {
      return cljs.core.reduce.call(null, function(p1__11321_SHARP_, p2__11322_SHARP_) {
        return cljs.core.conj.call(null, function() {
          var or__3403__auto__ = p1__11321_SHARP_;
          if (cljs.core.truth_(or__3403__auto__)) {
            return or__3403__auto__;
          } else {
            return cljs.core.PersistentArrayMap.EMPTY;
          }
        }(), p2__11322_SHARP_);
      }, maps);
    } else {
      return null;
    }
  };
  var merge = function(var_args) {
    var maps = null;
    if (arguments.length > 0) {
      maps = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0), 0);
    }
    return merge__delegate.call(this, maps);
  };
  merge.cljs$lang$maxFixedArity = 0;
  merge.cljs$lang$applyTo = function(arglist__11323) {
    var maps = cljs.core.seq(arglist__11323);
    return merge__delegate(maps);
  };
  merge.cljs$core$IFn$_invoke$arity$variadic = merge__delegate;
  return merge;
}();
cljs.core.merge_with = function() {
  var merge_with__delegate = function(f, maps) {
    if (cljs.core.truth_(cljs.core.some.call(null, cljs.core.identity, maps))) {
      var merge_entry = function(m, e) {
        var k = cljs.core.first.call(null, e);
        var v = cljs.core.second.call(null, e);
        if (cljs.core.contains_QMARK_.call(null, m, k)) {
          return cljs.core.assoc.call(null, m, k, f.call(null, cljs.core.get.call(null, m, k), v));
        } else {
          return cljs.core.assoc.call(null, m, k, v);
        }
      };
      var merge2 = function(merge_entry) {
        return function(m1, m2) {
          return cljs.core.reduce.call(null, merge_entry, function() {
            var or__3403__auto__ = m1;
            if (cljs.core.truth_(or__3403__auto__)) {
              return or__3403__auto__;
            } else {
              return cljs.core.PersistentArrayMap.EMPTY;
            }
          }(), cljs.core.seq.call(null, m2));
        };
      }(merge_entry);
      return cljs.core.reduce.call(null, merge2, maps);
    } else {
      return null;
    }
  };
  var merge_with = function(f, var_args) {
    var maps = null;
    if (arguments.length > 1) {
      maps = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return merge_with__delegate.call(this, f, maps);
  };
  merge_with.cljs$lang$maxFixedArity = 1;
  merge_with.cljs$lang$applyTo = function(arglist__11324) {
    var f = cljs.core.first(arglist__11324);
    var maps = cljs.core.rest(arglist__11324);
    return merge_with__delegate(f, maps);
  };
  merge_with.cljs$core$IFn$_invoke$arity$variadic = merge_with__delegate;
  return merge_with;
}();
cljs.core.select_keys = function select_keys(map, keyseq) {
  var ret = cljs.core.PersistentArrayMap.EMPTY;
  var keys = cljs.core.seq.call(null, keyseq);
  while (true) {
    if (keys) {
      var key = cljs.core.first.call(null, keys);
      var entry = cljs.core.get.call(null, map, key, new cljs.core.Keyword("cljs.core", "not-found", "cljs.core/not-found", 4155500789));
      var G__11325 = cljs.core.not_EQ_.call(null, entry, new cljs.core.Keyword("cljs.core", "not-found", "cljs.core/not-found", 4155500789)) ? cljs.core.assoc.call(null, ret, key, entry) : ret;
      var G__11326 = cljs.core.next.call(null, keys);
      ret = G__11325;
      keys = G__11326;
      continue;
    } else {
      return ret;
    }
    break;
  }
};
cljs.core.PersistentHashSet = function(meta, hash_map, __hash) {
  this.meta = meta;
  this.hash_map = hash_map;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition1$ = 8196;
  this.cljs$lang$protocol_mask$partition0$ = 15077647;
};
cljs.core.PersistentHashSet.cljs$lang$type = true;
cljs.core.PersistentHashSet.cljs$lang$ctorStr = "cljs.core/PersistentHashSet";
cljs.core.PersistentHashSet.cljs$lang$ctorPrWriter = function(this__3970__auto__, writer__3971__auto__, opt__3972__auto__) {
  return cljs.core._write.call(null, writer__3971__auto__, "cljs.core/PersistentHashSet");
};
cljs.core.PersistentHashSet.prototype.cljs$core$IEditableCollection$_as_transient$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.TransientHashSet(cljs.core._as_transient.call(null, self__.hash_map));
};
cljs.core.PersistentHashSet.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var h__3814__auto__ = self__.__hash;
  if (!(h__3814__auto__ == null)) {
    return h__3814__auto__;
  } else {
    var h__3814__auto____$1 = cljs.core.hash_iset.call(null, coll__$1);
    self__.__hash = h__3814__auto____$1;
    return h__3814__auto____$1;
  }
};
cljs.core.PersistentHashSet.prototype.cljs$core$ILookup$_lookup$arity$2 = function(coll, v) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core._lookup.call(null, coll__$1, v, null);
};
cljs.core.PersistentHashSet.prototype.cljs$core$ILookup$_lookup$arity$3 = function(coll, v, not_found) {
  var self__ = this;
  var coll__$1 = this;
  if (cljs.core._contains_key_QMARK_.call(null, self__.hash_map, v)) {
    return v;
  } else {
    return not_found;
  }
};
cljs.core.PersistentHashSet.prototype.call = function() {
  var G__11329 = null;
  var G__11329__2 = function(self__, k) {
    var self__ = this;
    var self____$1 = this;
    var coll = self____$1;
    return coll.cljs$core$ILookup$_lookup$arity$2(null, k);
  };
  var G__11329__3 = function(self__, k, not_found) {
    var self__ = this;
    var self____$1 = this;
    var coll = self____$1;
    return coll.cljs$core$ILookup$_lookup$arity$3(null, k, not_found);
  };
  G__11329 = function(self__, k, not_found) {
    switch(arguments.length) {
      case 2:
        return G__11329__2.call(this, self__, k);
      case 3:
        return G__11329__3.call(this, self__, k, not_found);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  return G__11329;
}();
cljs.core.PersistentHashSet.prototype.apply = function(self__, args11328) {
  var self__ = this;
  var self____$1 = this;
  return self____$1.call.apply(self____$1, [self____$1].concat(cljs.core.aclone.call(null, args11328)));
};
cljs.core.PersistentHashSet.prototype.cljs$core$IFn$_invoke$arity$1 = function(k) {
  var self__ = this;
  var coll = this;
  return coll.cljs$core$ILookup$_lookup$arity$2(null, k);
};
cljs.core.PersistentHashSet.prototype.cljs$core$IFn$_invoke$arity$2 = function(k, not_found) {
  var self__ = this;
  var coll = this;
  return coll.cljs$core$ILookup$_lookup$arity$3(null, k, not_found);
};
cljs.core.PersistentHashSet.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, o) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.PersistentHashSet(self__.meta, cljs.core.assoc.call(null, self__.hash_map, o, null), null);
};
cljs.core.PersistentHashSet.prototype.toString = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.pr_str_STAR_.call(null, coll);
};
cljs.core.PersistentHashSet.prototype.cljs$core$ISeqable$_seq$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.keys.call(null, self__.hash_map);
};
cljs.core.PersistentHashSet.prototype.cljs$core$ISet$_disjoin$arity$2 = function(coll, v) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.PersistentHashSet(self__.meta, cljs.core._dissoc.call(null, self__.hash_map, v), null);
};
cljs.core.PersistentHashSet.prototype.cljs$core$ICounted$_count$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core._count.call(null, self__.hash_map);
};
cljs.core.PersistentHashSet.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.set_QMARK_.call(null, other) && (cljs.core.count.call(null, coll__$1) === cljs.core.count.call(null, other) && cljs.core.every_QMARK_.call(null, function(p1__11327_SHARP_) {
    return cljs.core.contains_QMARK_.call(null, coll__$1, p1__11327_SHARP_);
  }, other));
};
cljs.core.PersistentHashSet.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, meta__$1) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.PersistentHashSet(meta__$1, self__.hash_map, self__.__hash);
};
cljs.core.PersistentHashSet.prototype.cljs$core$ICloneable$_clone$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return new cljs.core.PersistentHashSet(self__.meta, self__.hash_map, self__.__hash);
};
cljs.core.PersistentHashSet.prototype.cljs$core$IMeta$_meta$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.meta;
};
cljs.core.PersistentHashSet.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.with_meta.call(null, cljs.core.PersistentHashSet.EMPTY, self__.meta);
};
cljs.core.__GT_PersistentHashSet = function __GT_PersistentHashSet(meta, hash_map, __hash) {
  return new cljs.core.PersistentHashSet(meta, hash_map, __hash);
};
cljs.core.PersistentHashSet.EMPTY = new cljs.core.PersistentHashSet(null, cljs.core.PersistentArrayMap.EMPTY, 0);
cljs.core.PersistentHashSet.fromArray = function(items, no_clone) {
  var len = items.length;
  if (len <= cljs.core.PersistentArrayMap.HASHMAP_THRESHOLD) {
    var arr = no_clone ? items : cljs.core.aclone.call(null, items);
    var i = 0;
    var out = cljs.core.transient$.call(null, cljs.core.PersistentArrayMap.EMPTY);
    while (true) {
      if (i < len) {
        var G__11330 = i + 1;
        var G__11331 = cljs.core._assoc_BANG_.call(null, out, items[i], null);
        i = G__11330;
        out = G__11331;
        continue;
      } else {
        return new cljs.core.PersistentHashSet(null, cljs.core._persistent_BANG_.call(null, out), null);
      }
      break;
    }
  } else {
    var i = 0;
    var out = cljs.core.transient$.call(null, cljs.core.PersistentHashSet.EMPTY);
    while (true) {
      if (i < len) {
        var G__11332 = i + 1;
        var G__11333 = cljs.core._conj_BANG_.call(null, out, items[i]);
        i = G__11332;
        out = G__11333;
        continue;
      } else {
        return cljs.core._persistent_BANG_.call(null, out);
      }
      break;
    }
  }
};
cljs.core.TransientHashSet = function(transient_map) {
  this.transient_map = transient_map;
  this.cljs$lang$protocol_mask$partition0$ = 259;
  this.cljs$lang$protocol_mask$partition1$ = 136;
};
cljs.core.TransientHashSet.cljs$lang$type = true;
cljs.core.TransientHashSet.cljs$lang$ctorStr = "cljs.core/TransientHashSet";
cljs.core.TransientHashSet.cljs$lang$ctorPrWriter = function(this__3970__auto__, writer__3971__auto__, opt__3972__auto__) {
  return cljs.core._write.call(null, writer__3971__auto__, "cljs.core/TransientHashSet");
};
cljs.core.TransientHashSet.prototype.call = function() {
  var G__11335 = null;
  var G__11335__2 = function(self__, k) {
    var self__ = this;
    var self____$1 = this;
    var tcoll = self____$1;
    if (cljs.core._lookup.call(null, self__.transient_map, k, cljs.core.lookup_sentinel) === cljs.core.lookup_sentinel) {
      return null;
    } else {
      return k;
    }
  };
  var G__11335__3 = function(self__, k, not_found) {
    var self__ = this;
    var self____$1 = this;
    var tcoll = self____$1;
    if (cljs.core._lookup.call(null, self__.transient_map, k, cljs.core.lookup_sentinel) === cljs.core.lookup_sentinel) {
      return not_found;
    } else {
      return k;
    }
  };
  G__11335 = function(self__, k, not_found) {
    switch(arguments.length) {
      case 2:
        return G__11335__2.call(this, self__, k);
      case 3:
        return G__11335__3.call(this, self__, k, not_found);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  return G__11335;
}();
cljs.core.TransientHashSet.prototype.apply = function(self__, args11334) {
  var self__ = this;
  var self____$1 = this;
  return self____$1.call.apply(self____$1, [self____$1].concat(cljs.core.aclone.call(null, args11334)));
};
cljs.core.TransientHashSet.prototype.cljs$core$IFn$_invoke$arity$1 = function(k) {
  var self__ = this;
  var tcoll = this;
  if (cljs.core._lookup.call(null, self__.transient_map, k, cljs.core.lookup_sentinel) === cljs.core.lookup_sentinel) {
    return null;
  } else {
    return k;
  }
};
cljs.core.TransientHashSet.prototype.cljs$core$IFn$_invoke$arity$2 = function(k, not_found) {
  var self__ = this;
  var tcoll = this;
  if (cljs.core._lookup.call(null, self__.transient_map, k, cljs.core.lookup_sentinel) === cljs.core.lookup_sentinel) {
    return not_found;
  } else {
    return k;
  }
};
cljs.core.TransientHashSet.prototype.cljs$core$ILookup$_lookup$arity$2 = function(tcoll, v) {
  var self__ = this;
  var tcoll__$1 = this;
  return cljs.core._lookup.call(null, tcoll__$1, v, null);
};
cljs.core.TransientHashSet.prototype.cljs$core$ILookup$_lookup$arity$3 = function(tcoll, v, not_found) {
  var self__ = this;
  var tcoll__$1 = this;
  if (cljs.core._lookup.call(null, self__.transient_map, v, cljs.core.lookup_sentinel) === cljs.core.lookup_sentinel) {
    return not_found;
  } else {
    return v;
  }
};
cljs.core.TransientHashSet.prototype.cljs$core$ICounted$_count$arity$1 = function(tcoll) {
  var self__ = this;
  var tcoll__$1 = this;
  return cljs.core.count.call(null, self__.transient_map);
};
cljs.core.TransientHashSet.prototype.cljs$core$ITransientSet$_disjoin_BANG_$arity$2 = function(tcoll, v) {
  var self__ = this;
  var tcoll__$1 = this;
  self__.transient_map = cljs.core.dissoc_BANG_.call(null, self__.transient_map, v);
  return tcoll__$1;
};
cljs.core.TransientHashSet.prototype.cljs$core$ITransientCollection$_conj_BANG_$arity$2 = function(tcoll, o) {
  var self__ = this;
  var tcoll__$1 = this;
  self__.transient_map = cljs.core.assoc_BANG_.call(null, self__.transient_map, o, null);
  return tcoll__$1;
};
cljs.core.TransientHashSet.prototype.cljs$core$ITransientCollection$_persistent_BANG_$arity$1 = function(tcoll) {
  var self__ = this;
  var tcoll__$1 = this;
  return new cljs.core.PersistentHashSet(null, cljs.core.persistent_BANG_.call(null, self__.transient_map), null);
};
cljs.core.__GT_TransientHashSet = function __GT_TransientHashSet(transient_map) {
  return new cljs.core.TransientHashSet(transient_map);
};
cljs.core.PersistentTreeSet = function(meta, tree_map, __hash) {
  this.meta = meta;
  this.tree_map = tree_map;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition0$ = 417730831;
  this.cljs$lang$protocol_mask$partition1$ = 8192;
};
cljs.core.PersistentTreeSet.cljs$lang$type = true;
cljs.core.PersistentTreeSet.cljs$lang$ctorStr = "cljs.core/PersistentTreeSet";
cljs.core.PersistentTreeSet.cljs$lang$ctorPrWriter = function(this__3970__auto__, writer__3971__auto__, opt__3972__auto__) {
  return cljs.core._write.call(null, writer__3971__auto__, "cljs.core/PersistentTreeSet");
};
cljs.core.PersistentTreeSet.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var h__3814__auto__ = self__.__hash;
  if (!(h__3814__auto__ == null)) {
    return h__3814__auto__;
  } else {
    var h__3814__auto____$1 = cljs.core.hash_iset.call(null, coll__$1);
    self__.__hash = h__3814__auto____$1;
    return h__3814__auto____$1;
  }
};
cljs.core.PersistentTreeSet.prototype.cljs$core$ILookup$_lookup$arity$2 = function(coll, v) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core._lookup.call(null, coll__$1, v, null);
};
cljs.core.PersistentTreeSet.prototype.cljs$core$ILookup$_lookup$arity$3 = function(coll, v, not_found) {
  var self__ = this;
  var coll__$1 = this;
  var n = self__.tree_map.entry_at(v);
  if (!(n == null)) {
    return n.key;
  } else {
    return not_found;
  }
};
cljs.core.PersistentTreeSet.prototype.call = function() {
  var G__11338 = null;
  var G__11338__2 = function(self__, k) {
    var self__ = this;
    var self____$1 = this;
    var coll = self____$1;
    return coll.cljs$core$ILookup$_lookup$arity$2(null, k);
  };
  var G__11338__3 = function(self__, k, not_found) {
    var self__ = this;
    var self____$1 = this;
    var coll = self____$1;
    return coll.cljs$core$ILookup$_lookup$arity$3(null, k, not_found);
  };
  G__11338 = function(self__, k, not_found) {
    switch(arguments.length) {
      case 2:
        return G__11338__2.call(this, self__, k);
      case 3:
        return G__11338__3.call(this, self__, k, not_found);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  return G__11338;
}();
cljs.core.PersistentTreeSet.prototype.apply = function(self__, args11337) {
  var self__ = this;
  var self____$1 = this;
  return self____$1.call.apply(self____$1, [self____$1].concat(cljs.core.aclone.call(null, args11337)));
};
cljs.core.PersistentTreeSet.prototype.cljs$core$IFn$_invoke$arity$1 = function(k) {
  var self__ = this;
  var coll = this;
  return coll.cljs$core$ILookup$_lookup$arity$2(null, k);
};
cljs.core.PersistentTreeSet.prototype.cljs$core$IFn$_invoke$arity$2 = function(k, not_found) {
  var self__ = this;
  var coll = this;
  return coll.cljs$core$ILookup$_lookup$arity$3(null, k, not_found);
};
cljs.core.PersistentTreeSet.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, o) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.PersistentTreeSet(self__.meta, cljs.core.assoc.call(null, self__.tree_map, o, null), null);
};
cljs.core.PersistentTreeSet.prototype.cljs$core$IReversible$_rseq$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  if (cljs.core.count.call(null, self__.tree_map) > 0) {
    return cljs.core.map.call(null, cljs.core.key, cljs.core.rseq.call(null, self__.tree_map));
  } else {
    return null;
  }
};
cljs.core.PersistentTreeSet.prototype.toString = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.pr_str_STAR_.call(null, coll);
};
cljs.core.PersistentTreeSet.prototype.cljs$core$ISorted$_sorted_seq$arity$2 = function(coll, ascending_QMARK_) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.map.call(null, cljs.core.key, cljs.core._sorted_seq.call(null, self__.tree_map, ascending_QMARK_));
};
cljs.core.PersistentTreeSet.prototype.cljs$core$ISorted$_sorted_seq_from$arity$3 = function(coll, k, ascending_QMARK_) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.map.call(null, cljs.core.key, cljs.core._sorted_seq_from.call(null, self__.tree_map, k, ascending_QMARK_));
};
cljs.core.PersistentTreeSet.prototype.cljs$core$ISorted$_entry_key$arity$2 = function(coll, entry) {
  var self__ = this;
  var coll__$1 = this;
  return entry;
};
cljs.core.PersistentTreeSet.prototype.cljs$core$ISorted$_comparator$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core._comparator.call(null, self__.tree_map);
};
cljs.core.PersistentTreeSet.prototype.cljs$core$ISeqable$_seq$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.keys.call(null, self__.tree_map);
};
cljs.core.PersistentTreeSet.prototype.cljs$core$ISet$_disjoin$arity$2 = function(coll, v) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.PersistentTreeSet(self__.meta, cljs.core.dissoc.call(null, self__.tree_map, v), null);
};
cljs.core.PersistentTreeSet.prototype.cljs$core$ICounted$_count$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.count.call(null, self__.tree_map);
};
cljs.core.PersistentTreeSet.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.set_QMARK_.call(null, other) && (cljs.core.count.call(null, coll__$1) === cljs.core.count.call(null, other) && cljs.core.every_QMARK_.call(null, function(p1__11336_SHARP_) {
    return cljs.core.contains_QMARK_.call(null, coll__$1, p1__11336_SHARP_);
  }, other));
};
cljs.core.PersistentTreeSet.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, meta__$1) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.PersistentTreeSet(meta__$1, self__.tree_map, self__.__hash);
};
cljs.core.PersistentTreeSet.prototype.cljs$core$ICloneable$_clone$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return new cljs.core.PersistentTreeSet(self__.meta, self__.tree_map, self__.__hash);
};
cljs.core.PersistentTreeSet.prototype.cljs$core$IMeta$_meta$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.meta;
};
cljs.core.PersistentTreeSet.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.with_meta.call(null, cljs.core.PersistentTreeSet.EMPTY, self__.meta);
};
cljs.core.__GT_PersistentTreeSet = function __GT_PersistentTreeSet(meta, tree_map, __hash) {
  return new cljs.core.PersistentTreeSet(meta, tree_map, __hash);
};
cljs.core.PersistentTreeSet.EMPTY = new cljs.core.PersistentTreeSet(null, cljs.core.PersistentTreeMap.EMPTY, 0);
cljs.core.set_from_indexed_seq = function set_from_indexed_seq(iseq) {
  var arr = iseq.arr;
  var ret = function() {
    var a__4245__auto__ = arr;
    var i = 0;
    var res = cljs.core._as_transient.call(null, cljs.core.PersistentHashSet.EMPTY);
    while (true) {
      if (i < a__4245__auto__.length) {
        var G__11339 = i + 1;
        var G__11340 = cljs.core._conj_BANG_.call(null, res, arr[i]);
        i = G__11339;
        res = G__11340;
        continue;
      } else {
        return res;
      }
      break;
    }
  }();
  return cljs.core._persistent_BANG_.call(null, ret);
};
cljs.core.set = function set(coll) {
  var in$ = cljs.core.seq.call(null, coll);
  if (in$ == null) {
    return cljs.core.PersistentHashSet.EMPTY;
  } else {
    if (in$ instanceof cljs.core.IndexedSeq && in$.i === 0) {
      return cljs.core.set_from_indexed_seq.call(null, in$);
    } else {
      if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
        var in$__$1 = in$;
        var out = cljs.core._as_transient.call(null, cljs.core.PersistentHashSet.EMPTY);
        while (true) {
          if (!(in$__$1 == null)) {
            var G__11341 = cljs.core._next.call(null, in$__$1);
            var G__11342 = cljs.core._conj_BANG_.call(null, out, cljs.core._first.call(null, in$__$1));
            in$__$1 = G__11341;
            out = G__11342;
            continue;
          } else {
            return cljs.core._persistent_BANG_.call(null, out);
          }
          break;
        }
      } else {
        return null;
      }
    }
  }
};
cljs.core.hash_set = function() {
  var hash_set = null;
  var hash_set__0 = function() {
    return cljs.core.PersistentHashSet.EMPTY;
  };
  var hash_set__1 = function() {
    var G__11343__delegate = function(keys) {
      return cljs.core.set.call(null, keys);
    };
    var G__11343 = function(var_args) {
      var keys = null;
      if (arguments.length > 0) {
        keys = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0), 0);
      }
      return G__11343__delegate.call(this, keys);
    };
    G__11343.cljs$lang$maxFixedArity = 0;
    G__11343.cljs$lang$applyTo = function(arglist__11344) {
      var keys = cljs.core.seq(arglist__11344);
      return G__11343__delegate(keys);
    };
    G__11343.cljs$core$IFn$_invoke$arity$variadic = G__11343__delegate;
    return G__11343;
  }();
  hash_set = function(var_args) {
    var keys = var_args;
    switch(arguments.length) {
      case 0:
        return hash_set__0.call(this);
      default:
        return hash_set__1.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq(arguments, 0));
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  hash_set.cljs$lang$maxFixedArity = 0;
  hash_set.cljs$lang$applyTo = hash_set__1.cljs$lang$applyTo;
  hash_set.cljs$core$IFn$_invoke$arity$0 = hash_set__0;
  hash_set.cljs$core$IFn$_invoke$arity$variadic = hash_set__1.cljs$core$IFn$_invoke$arity$variadic;
  return hash_set;
}();
cljs.core.sorted_set = function() {
  var sorted_set__delegate = function(keys) {
    return cljs.core.reduce.call(null, cljs.core._conj, cljs.core.PersistentTreeSet.EMPTY, keys);
  };
  var sorted_set = function(var_args) {
    var keys = null;
    if (arguments.length > 0) {
      keys = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0), 0);
    }
    return sorted_set__delegate.call(this, keys);
  };
  sorted_set.cljs$lang$maxFixedArity = 0;
  sorted_set.cljs$lang$applyTo = function(arglist__11345) {
    var keys = cljs.core.seq(arglist__11345);
    return sorted_set__delegate(keys);
  };
  sorted_set.cljs$core$IFn$_invoke$arity$variadic = sorted_set__delegate;
  return sorted_set;
}();
cljs.core.sorted_set_by = function() {
  var sorted_set_by__delegate = function(comparator, keys) {
    return cljs.core.reduce.call(null, cljs.core._conj, new cljs.core.PersistentTreeSet(null, cljs.core.sorted_map_by.call(null, comparator), 0), keys);
  };
  var sorted_set_by = function(comparator, var_args) {
    var keys = null;
    if (arguments.length > 1) {
      keys = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return sorted_set_by__delegate.call(this, comparator, keys);
  };
  sorted_set_by.cljs$lang$maxFixedArity = 1;
  sorted_set_by.cljs$lang$applyTo = function(arglist__11346) {
    var comparator = cljs.core.first(arglist__11346);
    var keys = cljs.core.rest(arglist__11346);
    return sorted_set_by__delegate(comparator, keys);
  };
  sorted_set_by.cljs$core$IFn$_invoke$arity$variadic = sorted_set_by__delegate;
  return sorted_set_by;
}();
cljs.core.replace = function replace(smap, coll) {
  if (cljs.core.vector_QMARK_.call(null, coll)) {
    var n = cljs.core.count.call(null, coll);
    return cljs.core.reduce.call(null, function(v, i) {
      var temp__4090__auto__ = cljs.core.find.call(null, smap, cljs.core.nth.call(null, v, i));
      if (cljs.core.truth_(temp__4090__auto__)) {
        var e = temp__4090__auto__;
        return cljs.core.assoc.call(null, v, i, cljs.core.second.call(null, e));
      } else {
        return v;
      }
    }, coll, cljs.core.take.call(null, n, cljs.core.iterate.call(null, cljs.core.inc, 0)));
  } else {
    return cljs.core.map.call(null, function(p1__11347_SHARP_) {
      var temp__4090__auto__ = cljs.core.find.call(null, smap, p1__11347_SHARP_);
      if (cljs.core.truth_(temp__4090__auto__)) {
        var e = temp__4090__auto__;
        return cljs.core.second.call(null, e);
      } else {
        return p1__11347_SHARP_;
      }
    }, coll);
  }
};
cljs.core.distinct = function distinct(coll) {
  var step = function step(xs, seen) {
    return new cljs.core.LazySeq(null, function() {
      return function(p__11354, seen__$1) {
        while (true) {
          var vec__11355 = p__11354;
          var f = cljs.core.nth.call(null, vec__11355, 0, null);
          var xs__$1 = vec__11355;
          var temp__4092__auto__ = cljs.core.seq.call(null, xs__$1);
          if (temp__4092__auto__) {
            var s = temp__4092__auto__;
            if (cljs.core.contains_QMARK_.call(null, seen__$1, f)) {
              var G__11356 = cljs.core.rest.call(null, s);
              var G__11357 = seen__$1;
              p__11354 = G__11356;
              seen__$1 = G__11357;
              continue;
            } else {
              return cljs.core.cons.call(null, f, step.call(null, cljs.core.rest.call(null, s), cljs.core.conj.call(null, seen__$1, f)));
            }
          } else {
            return null;
          }
          break;
        }
      }.call(null, xs, seen);
    }, null, null);
  };
  return step.call(null, coll, cljs.core.PersistentHashSet.EMPTY);
};
cljs.core.butlast = function butlast(s) {
  var ret = cljs.core.PersistentVector.EMPTY;
  var s__$1 = s;
  while (true) {
    if (cljs.core.next.call(null, s__$1)) {
      var G__11358 = cljs.core.conj.call(null, ret, cljs.core.first.call(null, s__$1));
      var G__11359 = cljs.core.next.call(null, s__$1);
      ret = G__11358;
      s__$1 = G__11359;
      continue;
    } else {
      return cljs.core.seq.call(null, ret);
    }
    break;
  }
};
cljs.core.name = function name(x) {
  if (function() {
    var G__11361 = x;
    if (G__11361) {
      var bit__4046__auto__ = G__11361.cljs$lang$protocol_mask$partition1$ & 4096;
      if (bit__4046__auto__ || G__11361.cljs$core$INamed$) {
        return true;
      } else {
        return false;
      }
    } else {
      return false;
    }
  }()) {
    return cljs.core._name.call(null, x);
  } else {
    if (typeof x === "string") {
      return x;
    } else {
      throw new Error([cljs.core.str("Doesn't support name: "), cljs.core.str(x)].join(""));
    }
  }
};
cljs.core.zipmap = function zipmap(keys, vals) {
  var map = cljs.core.transient$.call(null, cljs.core.PersistentArrayMap.EMPTY);
  var ks = cljs.core.seq.call(null, keys);
  var vs = cljs.core.seq.call(null, vals);
  while (true) {
    if (ks && vs) {
      var G__11362 = cljs.core.assoc_BANG_.call(null, map, cljs.core.first.call(null, ks), cljs.core.first.call(null, vs));
      var G__11363 = cljs.core.next.call(null, ks);
      var G__11364 = cljs.core.next.call(null, vs);
      map = G__11362;
      ks = G__11363;
      vs = G__11364;
      continue;
    } else {
      return cljs.core.persistent_BANG_.call(null, map);
    }
    break;
  }
};
cljs.core.max_key = function() {
  var max_key = null;
  var max_key__2 = function(k, x) {
    return x;
  };
  var max_key__3 = function(k, x, y) {
    if (k.call(null, x) > k.call(null, y)) {
      return x;
    } else {
      return y;
    }
  };
  var max_key__4 = function() {
    var G__11367__delegate = function(k, x, y, more) {
      return cljs.core.reduce.call(null, function(p1__11365_SHARP_, p2__11366_SHARP_) {
        return max_key.call(null, k, p1__11365_SHARP_, p2__11366_SHARP_);
      }, max_key.call(null, k, x, y), more);
    };
    var G__11367 = function(k, x, y, var_args) {
      var more = null;
      if (arguments.length > 3) {
        more = cljs.core.array_seq(Array.prototype.slice.call(arguments, 3), 0);
      }
      return G__11367__delegate.call(this, k, x, y, more);
    };
    G__11367.cljs$lang$maxFixedArity = 3;
    G__11367.cljs$lang$applyTo = function(arglist__11368) {
      var k = cljs.core.first(arglist__11368);
      arglist__11368 = cljs.core.next(arglist__11368);
      var x = cljs.core.first(arglist__11368);
      arglist__11368 = cljs.core.next(arglist__11368);
      var y = cljs.core.first(arglist__11368);
      var more = cljs.core.rest(arglist__11368);
      return G__11367__delegate(k, x, y, more);
    };
    G__11367.cljs$core$IFn$_invoke$arity$variadic = G__11367__delegate;
    return G__11367;
  }();
  max_key = function(k, x, y, var_args) {
    var more = var_args;
    switch(arguments.length) {
      case 2:
        return max_key__2.call(this, k, x);
      case 3:
        return max_key__3.call(this, k, x, y);
      default:
        return max_key__4.cljs$core$IFn$_invoke$arity$variadic(k, x, y, cljs.core.array_seq(arguments, 3));
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  max_key.cljs$lang$maxFixedArity = 3;
  max_key.cljs$lang$applyTo = max_key__4.cljs$lang$applyTo;
  max_key.cljs$core$IFn$_invoke$arity$2 = max_key__2;
  max_key.cljs$core$IFn$_invoke$arity$3 = max_key__3;
  max_key.cljs$core$IFn$_invoke$arity$variadic = max_key__4.cljs$core$IFn$_invoke$arity$variadic;
  return max_key;
}();
cljs.core.min_key = function() {
  var min_key = null;
  var min_key__2 = function(k, x) {
    return x;
  };
  var min_key__3 = function(k, x, y) {
    if (k.call(null, x) < k.call(null, y)) {
      return x;
    } else {
      return y;
    }
  };
  var min_key__4 = function() {
    var G__11371__delegate = function(k, x, y, more) {
      return cljs.core.reduce.call(null, function(p1__11369_SHARP_, p2__11370_SHARP_) {
        return min_key.call(null, k, p1__11369_SHARP_, p2__11370_SHARP_);
      }, min_key.call(null, k, x, y), more);
    };
    var G__11371 = function(k, x, y, var_args) {
      var more = null;
      if (arguments.length > 3) {
        more = cljs.core.array_seq(Array.prototype.slice.call(arguments, 3), 0);
      }
      return G__11371__delegate.call(this, k, x, y, more);
    };
    G__11371.cljs$lang$maxFixedArity = 3;
    G__11371.cljs$lang$applyTo = function(arglist__11372) {
      var k = cljs.core.first(arglist__11372);
      arglist__11372 = cljs.core.next(arglist__11372);
      var x = cljs.core.first(arglist__11372);
      arglist__11372 = cljs.core.next(arglist__11372);
      var y = cljs.core.first(arglist__11372);
      var more = cljs.core.rest(arglist__11372);
      return G__11371__delegate(k, x, y, more);
    };
    G__11371.cljs$core$IFn$_invoke$arity$variadic = G__11371__delegate;
    return G__11371;
  }();
  min_key = function(k, x, y, var_args) {
    var more = var_args;
    switch(arguments.length) {
      case 2:
        return min_key__2.call(this, k, x);
      case 3:
        return min_key__3.call(this, k, x, y);
      default:
        return min_key__4.cljs$core$IFn$_invoke$arity$variadic(k, x, y, cljs.core.array_seq(arguments, 3));
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  min_key.cljs$lang$maxFixedArity = 3;
  min_key.cljs$lang$applyTo = min_key__4.cljs$lang$applyTo;
  min_key.cljs$core$IFn$_invoke$arity$2 = min_key__2;
  min_key.cljs$core$IFn$_invoke$arity$3 = min_key__3;
  min_key.cljs$core$IFn$_invoke$arity$variadic = min_key__4.cljs$core$IFn$_invoke$arity$variadic;
  return min_key;
}();
cljs.core.partition_all = function() {
  var partition_all = null;
  var partition_all__2 = function(n, coll) {
    return partition_all.call(null, n, n, coll);
  };
  var partition_all__3 = function(n, step, coll) {
    return new cljs.core.LazySeq(null, function() {
      var temp__4092__auto__ = cljs.core.seq.call(null, coll);
      if (temp__4092__auto__) {
        var s = temp__4092__auto__;
        return cljs.core.cons.call(null, cljs.core.take.call(null, n, s), partition_all.call(null, n, step, cljs.core.drop.call(null, step, s)));
      } else {
        return null;
      }
    }, null, null);
  };
  partition_all = function(n, step, coll) {
    switch(arguments.length) {
      case 2:
        return partition_all__2.call(this, n, step);
      case 3:
        return partition_all__3.call(this, n, step, coll);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  partition_all.cljs$core$IFn$_invoke$arity$2 = partition_all__2;
  partition_all.cljs$core$IFn$_invoke$arity$3 = partition_all__3;
  return partition_all;
}();
cljs.core.take_while = function take_while(pred, coll) {
  return new cljs.core.LazySeq(null, function() {
    var temp__4092__auto__ = cljs.core.seq.call(null, coll);
    if (temp__4092__auto__) {
      var s = temp__4092__auto__;
      if (cljs.core.truth_(pred.call(null, cljs.core.first.call(null, s)))) {
        return cljs.core.cons.call(null, cljs.core.first.call(null, s), take_while.call(null, pred, cljs.core.rest.call(null, s)));
      } else {
        return null;
      }
    } else {
      return null;
    }
  }, null, null);
};
cljs.core.mk_bound_fn = function mk_bound_fn(sc, test, key) {
  return function(e) {
    var comp = cljs.core._comparator.call(null, sc);
    return test.call(null, comp.call(null, cljs.core._entry_key.call(null, sc, e), key), 0);
  };
};
cljs.core.subseq = function() {
  var subseq = null;
  var subseq__3 = function(sc, test, key) {
    var include = cljs.core.mk_bound_fn.call(null, sc, test, key);
    if (cljs.core.truth_(cljs.core.PersistentHashSet.fromArray([cljs.core._GT_, cljs.core._GT__EQ_], true).call(null, test))) {
      var temp__4092__auto__ = cljs.core._sorted_seq_from.call(null, sc, key, true);
      if (cljs.core.truth_(temp__4092__auto__)) {
        var vec__11375 = temp__4092__auto__;
        var e = cljs.core.nth.call(null, vec__11375, 0, null);
        var s = vec__11375;
        if (cljs.core.truth_(include.call(null, e))) {
          return s;
        } else {
          return cljs.core.next.call(null, s);
        }
      } else {
        return null;
      }
    } else {
      return cljs.core.take_while.call(null, include, cljs.core._sorted_seq.call(null, sc, true));
    }
  };
  var subseq__5 = function(sc, start_test, start_key, end_test, end_key) {
    var temp__4092__auto__ = cljs.core._sorted_seq_from.call(null, sc, start_key, true);
    if (cljs.core.truth_(temp__4092__auto__)) {
      var vec__11376 = temp__4092__auto__;
      var e = cljs.core.nth.call(null, vec__11376, 0, null);
      var s = vec__11376;
      return cljs.core.take_while.call(null, cljs.core.mk_bound_fn.call(null, sc, end_test, end_key), cljs.core.truth_(cljs.core.mk_bound_fn.call(null, sc, start_test, start_key).call(null, e)) ? s : cljs.core.next.call(null, s));
    } else {
      return null;
    }
  };
  subseq = function(sc, start_test, start_key, end_test, end_key) {
    switch(arguments.length) {
      case 3:
        return subseq__3.call(this, sc, start_test, start_key);
      case 5:
        return subseq__5.call(this, sc, start_test, start_key, end_test, end_key);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  subseq.cljs$core$IFn$_invoke$arity$3 = subseq__3;
  subseq.cljs$core$IFn$_invoke$arity$5 = subseq__5;
  return subseq;
}();
cljs.core.rsubseq = function() {
  var rsubseq = null;
  var rsubseq__3 = function(sc, test, key) {
    var include = cljs.core.mk_bound_fn.call(null, sc, test, key);
    if (cljs.core.truth_(cljs.core.PersistentHashSet.fromArray([cljs.core._LT_, cljs.core._LT__EQ_], true).call(null, test))) {
      var temp__4092__auto__ = cljs.core._sorted_seq_from.call(null, sc, key, false);
      if (cljs.core.truth_(temp__4092__auto__)) {
        var vec__11379 = temp__4092__auto__;
        var e = cljs.core.nth.call(null, vec__11379, 0, null);
        var s = vec__11379;
        if (cljs.core.truth_(include.call(null, e))) {
          return s;
        } else {
          return cljs.core.next.call(null, s);
        }
      } else {
        return null;
      }
    } else {
      return cljs.core.take_while.call(null, include, cljs.core._sorted_seq.call(null, sc, false));
    }
  };
  var rsubseq__5 = function(sc, start_test, start_key, end_test, end_key) {
    var temp__4092__auto__ = cljs.core._sorted_seq_from.call(null, sc, end_key, false);
    if (cljs.core.truth_(temp__4092__auto__)) {
      var vec__11380 = temp__4092__auto__;
      var e = cljs.core.nth.call(null, vec__11380, 0, null);
      var s = vec__11380;
      return cljs.core.take_while.call(null, cljs.core.mk_bound_fn.call(null, sc, start_test, start_key), cljs.core.truth_(cljs.core.mk_bound_fn.call(null, sc, end_test, end_key).call(null, e)) ? s : cljs.core.next.call(null, s));
    } else {
      return null;
    }
  };
  rsubseq = function(sc, start_test, start_key, end_test, end_key) {
    switch(arguments.length) {
      case 3:
        return rsubseq__3.call(this, sc, start_test, start_key);
      case 5:
        return rsubseq__5.call(this, sc, start_test, start_key, end_test, end_key);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  rsubseq.cljs$core$IFn$_invoke$arity$3 = rsubseq__3;
  rsubseq.cljs$core$IFn$_invoke$arity$5 = rsubseq__5;
  return rsubseq;
}();
cljs.core.Range = function(meta, start, end, step, __hash) {
  this.meta = meta;
  this.start = start;
  this.end = end;
  this.step = step;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition0$ = 32375006;
  this.cljs$lang$protocol_mask$partition1$ = 8192;
};
cljs.core.Range.cljs$lang$type = true;
cljs.core.Range.cljs$lang$ctorStr = "cljs.core/Range";
cljs.core.Range.cljs$lang$ctorPrWriter = function(this__3970__auto__, writer__3971__auto__, opt__3972__auto__) {
  return cljs.core._write.call(null, writer__3971__auto__, "cljs.core/Range");
};
cljs.core.Range.prototype.cljs$core$IHash$_hash$arity$1 = function(rng) {
  var self__ = this;
  var rng__$1 = this;
  var h__3814__auto__ = self__.__hash;
  if (!(h__3814__auto__ == null)) {
    return h__3814__auto__;
  } else {
    var h__3814__auto____$1 = cljs.core.hash_coll.call(null, rng__$1);
    self__.__hash = h__3814__auto____$1;
    return h__3814__auto____$1;
  }
};
cljs.core.Range.prototype.cljs$core$INext$_next$arity$1 = function(rng) {
  var self__ = this;
  var rng__$1 = this;
  if (self__.step > 0) {
    if (self__.start + self__.step < self__.end) {
      return new cljs.core.Range(self__.meta, self__.start + self__.step, self__.end, self__.step, null);
    } else {
      return null;
    }
  } else {
    if (self__.start + self__.step > self__.end) {
      return new cljs.core.Range(self__.meta, self__.start + self__.step, self__.end, self__.step, null);
    } else {
      return null;
    }
  }
};
cljs.core.Range.prototype.cljs$core$ICollection$_conj$arity$2 = function(rng, o) {
  var self__ = this;
  var rng__$1 = this;
  return cljs.core.cons.call(null, o, rng__$1);
};
cljs.core.Range.prototype.toString = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.pr_str_STAR_.call(null, coll);
};
cljs.core.Range.prototype.cljs$core$IReduce$_reduce$arity$2 = function(rng, f) {
  var self__ = this;
  var rng__$1 = this;
  return cljs.core.ci_reduce.call(null, rng__$1, f);
};
cljs.core.Range.prototype.cljs$core$IReduce$_reduce$arity$3 = function(rng, f, s) {
  var self__ = this;
  var rng__$1 = this;
  return cljs.core.ci_reduce.call(null, rng__$1, f, s);
};
cljs.core.Range.prototype.cljs$core$ISeqable$_seq$arity$1 = function(rng) {
  var self__ = this;
  var rng__$1 = this;
  if (self__.step > 0) {
    if (self__.start < self__.end) {
      return rng__$1;
    } else {
      return null;
    }
  } else {
    if (self__.start > self__.end) {
      return rng__$1;
    } else {
      return null;
    }
  }
};
cljs.core.Range.prototype.cljs$core$ICounted$_count$arity$1 = function(rng) {
  var self__ = this;
  var rng__$1 = this;
  if (cljs.core.not.call(null, cljs.core._seq.call(null, rng__$1))) {
    return 0;
  } else {
    return Math.ceil((self__.end - self__.start) / self__.step);
  }
};
cljs.core.Range.prototype.cljs$core$ISeq$_first$arity$1 = function(rng) {
  var self__ = this;
  var rng__$1 = this;
  if (cljs.core._seq.call(null, rng__$1) == null) {
    return null;
  } else {
    return self__.start;
  }
};
cljs.core.Range.prototype.cljs$core$ISeq$_rest$arity$1 = function(rng) {
  var self__ = this;
  var rng__$1 = this;
  if (!(cljs.core._seq.call(null, rng__$1) == null)) {
    return new cljs.core.Range(self__.meta, self__.start + self__.step, self__.end, self__.step, null);
  } else {
    return cljs.core.List.EMPTY;
  }
};
cljs.core.Range.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(rng, other) {
  var self__ = this;
  var rng__$1 = this;
  return cljs.core.equiv_sequential.call(null, rng__$1, other);
};
cljs.core.Range.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(rng, meta__$1) {
  var self__ = this;
  var rng__$1 = this;
  return new cljs.core.Range(meta__$1, self__.start, self__.end, self__.step, self__.__hash);
};
cljs.core.Range.prototype.cljs$core$ICloneable$_clone$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return new cljs.core.Range(self__.meta, self__.start, self__.end, self__.step, self__.__hash);
};
cljs.core.Range.prototype.cljs$core$IMeta$_meta$arity$1 = function(rng) {
  var self__ = this;
  var rng__$1 = this;
  return self__.meta;
};
cljs.core.Range.prototype.cljs$core$IIndexed$_nth$arity$2 = function(rng, n) {
  var self__ = this;
  var rng__$1 = this;
  if (n < cljs.core._count.call(null, rng__$1)) {
    return self__.start + n * self__.step;
  } else {
    if (self__.start > self__.end && self__.step === 0) {
      return self__.start;
    } else {
      throw new Error("Index out of bounds");
    }
  }
};
cljs.core.Range.prototype.cljs$core$IIndexed$_nth$arity$3 = function(rng, n, not_found) {
  var self__ = this;
  var rng__$1 = this;
  if (n < cljs.core._count.call(null, rng__$1)) {
    return self__.start + n * self__.step;
  } else {
    if (self__.start > self__.end && self__.step === 0) {
      return self__.start;
    } else {
      return not_found;
    }
  }
};
cljs.core.Range.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(rng) {
  var self__ = this;
  var rng__$1 = this;
  return cljs.core.with_meta.call(null, cljs.core.List.EMPTY, self__.meta);
};
cljs.core.__GT_Range = function __GT_Range(meta, start, end, step, __hash) {
  return new cljs.core.Range(meta, start, end, step, __hash);
};
cljs.core.range = function() {
  var range = null;
  var range__0 = function() {
    return range.call(null, 0, Number.MAX_VALUE, 1);
  };
  var range__1 = function(end) {
    return range.call(null, 0, end, 1);
  };
  var range__2 = function(start, end) {
    return range.call(null, start, end, 1);
  };
  var range__3 = function(start, end, step) {
    return new cljs.core.Range(null, start, end, step, null);
  };
  range = function(start, end, step) {
    switch(arguments.length) {
      case 0:
        return range__0.call(this);
      case 1:
        return range__1.call(this, start);
      case 2:
        return range__2.call(this, start, end);
      case 3:
        return range__3.call(this, start, end, step);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  range.cljs$core$IFn$_invoke$arity$0 = range__0;
  range.cljs$core$IFn$_invoke$arity$1 = range__1;
  range.cljs$core$IFn$_invoke$arity$2 = range__2;
  range.cljs$core$IFn$_invoke$arity$3 = range__3;
  return range;
}();
cljs.core.take_nth = function take_nth(n, coll) {
  return new cljs.core.LazySeq(null, function() {
    var temp__4092__auto__ = cljs.core.seq.call(null, coll);
    if (temp__4092__auto__) {
      var s = temp__4092__auto__;
      return cljs.core.cons.call(null, cljs.core.first.call(null, s), take_nth.call(null, n, cljs.core.drop.call(null, n, s)));
    } else {
      return null;
    }
  }, null, null);
};
cljs.core.split_with = function split_with(pred, coll) {
  return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.take_while.call(null, pred, coll), cljs.core.drop_while.call(null, pred, coll)], null);
};
cljs.core.partition_by = function partition_by(f, coll) {
  return new cljs.core.LazySeq(null, function() {
    var temp__4092__auto__ = cljs.core.seq.call(null, coll);
    if (temp__4092__auto__) {
      var s = temp__4092__auto__;
      var fst = cljs.core.first.call(null, s);
      var fv = f.call(null, fst);
      var run = cljs.core.cons.call(null, fst, cljs.core.take_while.call(null, function(fst, fv) {
        return function(p1__11381_SHARP_) {
          return cljs.core._EQ_.call(null, fv, f.call(null, p1__11381_SHARP_));
        };
      }(fst, fv), cljs.core.next.call(null, s)));
      return cljs.core.cons.call(null, run, partition_by.call(null, f, cljs.core.seq.call(null, cljs.core.drop.call(null, cljs.core.count.call(null, run), s))));
    } else {
      return null;
    }
  }, null, null);
};
cljs.core.frequencies = function frequencies(coll) {
  return cljs.core.persistent_BANG_.call(null, cljs.core.reduce.call(null, function(counts, x) {
    return cljs.core.assoc_BANG_.call(null, counts, x, cljs.core.get.call(null, counts, x, 0) + 1);
  }, cljs.core.transient$.call(null, cljs.core.PersistentArrayMap.EMPTY), coll));
};
cljs.core.reductions = function() {
  var reductions = null;
  var reductions__2 = function(f, coll) {
    return new cljs.core.LazySeq(null, function() {
      var temp__4090__auto__ = cljs.core.seq.call(null, coll);
      if (temp__4090__auto__) {
        var s = temp__4090__auto__;
        return reductions.call(null, f, cljs.core.first.call(null, s), cljs.core.rest.call(null, s));
      } else {
        return cljs.core._conj.call(null, cljs.core.List.EMPTY, f.call(null));
      }
    }, null, null);
  };
  var reductions__3 = function(f, init, coll) {
    return cljs.core.cons.call(null, init, new cljs.core.LazySeq(null, function() {
      var temp__4092__auto__ = cljs.core.seq.call(null, coll);
      if (temp__4092__auto__) {
        var s = temp__4092__auto__;
        return reductions.call(null, f, f.call(null, init, cljs.core.first.call(null, s)), cljs.core.rest.call(null, s));
      } else {
        return null;
      }
    }, null, null));
  };
  reductions = function(f, init, coll) {
    switch(arguments.length) {
      case 2:
        return reductions__2.call(this, f, init);
      case 3:
        return reductions__3.call(this, f, init, coll);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  reductions.cljs$core$IFn$_invoke$arity$2 = reductions__2;
  reductions.cljs$core$IFn$_invoke$arity$3 = reductions__3;
  return reductions;
}();
cljs.core.juxt = function() {
  var juxt = null;
  var juxt__1 = function(f) {
    return function() {
      var G__11392 = null;
      var G__11392__0 = function() {
        return new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [f.call(null)], null);
      };
      var G__11392__1 = function(x) {
        return new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [f.call(null, x)], null);
      };
      var G__11392__2 = function(x, y) {
        return new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [f.call(null, x, y)], null);
      };
      var G__11392__3 = function(x, y, z) {
        return new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [f.call(null, x, y, z)], null);
      };
      var G__11392__4 = function() {
        var G__11393__delegate = function(x, y, z, args) {
          return new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.apply.call(null, f, x, y, z, args)], null);
        };
        var G__11393 = function(x, y, z, var_args) {
          var args = null;
          if (arguments.length > 3) {
            args = cljs.core.array_seq(Array.prototype.slice.call(arguments, 3), 0);
          }
          return G__11393__delegate.call(this, x, y, z, args);
        };
        G__11393.cljs$lang$maxFixedArity = 3;
        G__11393.cljs$lang$applyTo = function(arglist__11394) {
          var x = cljs.core.first(arglist__11394);
          arglist__11394 = cljs.core.next(arglist__11394);
          var y = cljs.core.first(arglist__11394);
          arglist__11394 = cljs.core.next(arglist__11394);
          var z = cljs.core.first(arglist__11394);
          var args = cljs.core.rest(arglist__11394);
          return G__11393__delegate(x, y, z, args);
        };
        G__11393.cljs$core$IFn$_invoke$arity$variadic = G__11393__delegate;
        return G__11393;
      }();
      G__11392 = function(x, y, z, var_args) {
        var args = var_args;
        switch(arguments.length) {
          case 0:
            return G__11392__0.call(this);
          case 1:
            return G__11392__1.call(this, x);
          case 2:
            return G__11392__2.call(this, x, y);
          case 3:
            return G__11392__3.call(this, x, y, z);
          default:
            return G__11392__4.cljs$core$IFn$_invoke$arity$variadic(x, y, z, cljs.core.array_seq(arguments, 3));
        }
        throw new Error("Invalid arity: " + arguments.length);
      };
      G__11392.cljs$lang$maxFixedArity = 3;
      G__11392.cljs$lang$applyTo = G__11392__4.cljs$lang$applyTo;
      return G__11392;
    }();
  };
  var juxt__2 = function(f, g) {
    return function() {
      var G__11395 = null;
      var G__11395__0 = function() {
        return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [f.call(null), g.call(null)], null);
      };
      var G__11395__1 = function(x) {
        return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [f.call(null, x), g.call(null, x)], null);
      };
      var G__11395__2 = function(x, y) {
        return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [f.call(null, x, y), g.call(null, x, y)], null);
      };
      var G__11395__3 = function(x, y, z) {
        return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [f.call(null, x, y, z), g.call(null, x, y, z)], null);
      };
      var G__11395__4 = function() {
        var G__11396__delegate = function(x, y, z, args) {
          return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.apply.call(null, f, x, y, z, args), cljs.core.apply.call(null, g, x, y, z, args)], null);
        };
        var G__11396 = function(x, y, z, var_args) {
          var args = null;
          if (arguments.length > 3) {
            args = cljs.core.array_seq(Array.prototype.slice.call(arguments, 3), 0);
          }
          return G__11396__delegate.call(this, x, y, z, args);
        };
        G__11396.cljs$lang$maxFixedArity = 3;
        G__11396.cljs$lang$applyTo = function(arglist__11397) {
          var x = cljs.core.first(arglist__11397);
          arglist__11397 = cljs.core.next(arglist__11397);
          var y = cljs.core.first(arglist__11397);
          arglist__11397 = cljs.core.next(arglist__11397);
          var z = cljs.core.first(arglist__11397);
          var args = cljs.core.rest(arglist__11397);
          return G__11396__delegate(x, y, z, args);
        };
        G__11396.cljs$core$IFn$_invoke$arity$variadic = G__11396__delegate;
        return G__11396;
      }();
      G__11395 = function(x, y, z, var_args) {
        var args = var_args;
        switch(arguments.length) {
          case 0:
            return G__11395__0.call(this);
          case 1:
            return G__11395__1.call(this, x);
          case 2:
            return G__11395__2.call(this, x, y);
          case 3:
            return G__11395__3.call(this, x, y, z);
          default:
            return G__11395__4.cljs$core$IFn$_invoke$arity$variadic(x, y, z, cljs.core.array_seq(arguments, 3));
        }
        throw new Error("Invalid arity: " + arguments.length);
      };
      G__11395.cljs$lang$maxFixedArity = 3;
      G__11395.cljs$lang$applyTo = G__11395__4.cljs$lang$applyTo;
      return G__11395;
    }();
  };
  var juxt__3 = function(f, g, h) {
    return function() {
      var G__11398 = null;
      var G__11398__0 = function() {
        return new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [f.call(null), g.call(null), h.call(null)], null);
      };
      var G__11398__1 = function(x) {
        return new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [f.call(null, x), g.call(null, x), h.call(null, x)], null);
      };
      var G__11398__2 = function(x, y) {
        return new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [f.call(null, x, y), g.call(null, x, y), h.call(null, x, y)], null);
      };
      var G__11398__3 = function(x, y, z) {
        return new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [f.call(null, x, y, z), g.call(null, x, y, z), h.call(null, x, y, z)], null);
      };
      var G__11398__4 = function() {
        var G__11399__delegate = function(x, y, z, args) {
          return new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.apply.call(null, f, x, y, z, args), cljs.core.apply.call(null, g, x, y, z, args), cljs.core.apply.call(null, h, x, y, z, args)], null);
        };
        var G__11399 = function(x, y, z, var_args) {
          var args = null;
          if (arguments.length > 3) {
            args = cljs.core.array_seq(Array.prototype.slice.call(arguments, 3), 0);
          }
          return G__11399__delegate.call(this, x, y, z, args);
        };
        G__11399.cljs$lang$maxFixedArity = 3;
        G__11399.cljs$lang$applyTo = function(arglist__11400) {
          var x = cljs.core.first(arglist__11400);
          arglist__11400 = cljs.core.next(arglist__11400);
          var y = cljs.core.first(arglist__11400);
          arglist__11400 = cljs.core.next(arglist__11400);
          var z = cljs.core.first(arglist__11400);
          var args = cljs.core.rest(arglist__11400);
          return G__11399__delegate(x, y, z, args);
        };
        G__11399.cljs$core$IFn$_invoke$arity$variadic = G__11399__delegate;
        return G__11399;
      }();
      G__11398 = function(x, y, z, var_args) {
        var args = var_args;
        switch(arguments.length) {
          case 0:
            return G__11398__0.call(this);
          case 1:
            return G__11398__1.call(this, x);
          case 2:
            return G__11398__2.call(this, x, y);
          case 3:
            return G__11398__3.call(this, x, y, z);
          default:
            return G__11398__4.cljs$core$IFn$_invoke$arity$variadic(x, y, z, cljs.core.array_seq(arguments, 3));
        }
        throw new Error("Invalid arity: " + arguments.length);
      };
      G__11398.cljs$lang$maxFixedArity = 3;
      G__11398.cljs$lang$applyTo = G__11398__4.cljs$lang$applyTo;
      return G__11398;
    }();
  };
  var juxt__4 = function() {
    var G__11401__delegate = function(f, g, h, fs) {
      var fs__$1 = cljs.core.list_STAR_.call(null, f, g, h, fs);
      return function() {
        var G__11402 = null;
        var G__11402__0 = function() {
          return cljs.core.reduce.call(null, function(p1__11382_SHARP_, p2__11383_SHARP_) {
            return cljs.core.conj.call(null, p1__11382_SHARP_, p2__11383_SHARP_.call(null));
          }, cljs.core.PersistentVector.EMPTY, fs__$1);
        };
        var G__11402__1 = function(x) {
          return cljs.core.reduce.call(null, function(p1__11384_SHARP_, p2__11385_SHARP_) {
            return cljs.core.conj.call(null, p1__11384_SHARP_, p2__11385_SHARP_.call(null, x));
          }, cljs.core.PersistentVector.EMPTY, fs__$1);
        };
        var G__11402__2 = function(x, y) {
          return cljs.core.reduce.call(null, function(p1__11386_SHARP_, p2__11387_SHARP_) {
            return cljs.core.conj.call(null, p1__11386_SHARP_, p2__11387_SHARP_.call(null, x, y));
          }, cljs.core.PersistentVector.EMPTY, fs__$1);
        };
        var G__11402__3 = function(x, y, z) {
          return cljs.core.reduce.call(null, function(p1__11388_SHARP_, p2__11389_SHARP_) {
            return cljs.core.conj.call(null, p1__11388_SHARP_, p2__11389_SHARP_.call(null, x, y, z));
          }, cljs.core.PersistentVector.EMPTY, fs__$1);
        };
        var G__11402__4 = function() {
          var G__11403__delegate = function(x, y, z, args) {
            return cljs.core.reduce.call(null, function(p1__11390_SHARP_, p2__11391_SHARP_) {
              return cljs.core.conj.call(null, p1__11390_SHARP_, cljs.core.apply.call(null, p2__11391_SHARP_, x, y, z, args));
            }, cljs.core.PersistentVector.EMPTY, fs__$1);
          };
          var G__11403 = function(x, y, z, var_args) {
            var args = null;
            if (arguments.length > 3) {
              args = cljs.core.array_seq(Array.prototype.slice.call(arguments, 3), 0);
            }
            return G__11403__delegate.call(this, x, y, z, args);
          };
          G__11403.cljs$lang$maxFixedArity = 3;
          G__11403.cljs$lang$applyTo = function(arglist__11404) {
            var x = cljs.core.first(arglist__11404);
            arglist__11404 = cljs.core.next(arglist__11404);
            var y = cljs.core.first(arglist__11404);
            arglist__11404 = cljs.core.next(arglist__11404);
            var z = cljs.core.first(arglist__11404);
            var args = cljs.core.rest(arglist__11404);
            return G__11403__delegate(x, y, z, args);
          };
          G__11403.cljs$core$IFn$_invoke$arity$variadic = G__11403__delegate;
          return G__11403;
        }();
        G__11402 = function(x, y, z, var_args) {
          var args = var_args;
          switch(arguments.length) {
            case 0:
              return G__11402__0.call(this);
            case 1:
              return G__11402__1.call(this, x);
            case 2:
              return G__11402__2.call(this, x, y);
            case 3:
              return G__11402__3.call(this, x, y, z);
            default:
              return G__11402__4.cljs$core$IFn$_invoke$arity$variadic(x, y, z, cljs.core.array_seq(arguments, 3));
          }
          throw new Error("Invalid arity: " + arguments.length);
        };
        G__11402.cljs$lang$maxFixedArity = 3;
        G__11402.cljs$lang$applyTo = G__11402__4.cljs$lang$applyTo;
        return G__11402;
      }();
    };
    var G__11401 = function(f, g, h, var_args) {
      var fs = null;
      if (arguments.length > 3) {
        fs = cljs.core.array_seq(Array.prototype.slice.call(arguments, 3), 0);
      }
      return G__11401__delegate.call(this, f, g, h, fs);
    };
    G__11401.cljs$lang$maxFixedArity = 3;
    G__11401.cljs$lang$applyTo = function(arglist__11405) {
      var f = cljs.core.first(arglist__11405);
      arglist__11405 = cljs.core.next(arglist__11405);
      var g = cljs.core.first(arglist__11405);
      arglist__11405 = cljs.core.next(arglist__11405);
      var h = cljs.core.first(arglist__11405);
      var fs = cljs.core.rest(arglist__11405);
      return G__11401__delegate(f, g, h, fs);
    };
    G__11401.cljs$core$IFn$_invoke$arity$variadic = G__11401__delegate;
    return G__11401;
  }();
  juxt = function(f, g, h, var_args) {
    var fs = var_args;
    switch(arguments.length) {
      case 1:
        return juxt__1.call(this, f);
      case 2:
        return juxt__2.call(this, f, g);
      case 3:
        return juxt__3.call(this, f, g, h);
      default:
        return juxt__4.cljs$core$IFn$_invoke$arity$variadic(f, g, h, cljs.core.array_seq(arguments, 3));
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  juxt.cljs$lang$maxFixedArity = 3;
  juxt.cljs$lang$applyTo = juxt__4.cljs$lang$applyTo;
  juxt.cljs$core$IFn$_invoke$arity$1 = juxt__1;
  juxt.cljs$core$IFn$_invoke$arity$2 = juxt__2;
  juxt.cljs$core$IFn$_invoke$arity$3 = juxt__3;
  juxt.cljs$core$IFn$_invoke$arity$variadic = juxt__4.cljs$core$IFn$_invoke$arity$variadic;
  return juxt;
}();
cljs.core.dorun = function() {
  var dorun = null;
  var dorun__1 = function(coll) {
    while (true) {
      if (cljs.core.seq.call(null, coll)) {
        var G__11406 = cljs.core.next.call(null, coll);
        coll = G__11406;
        continue;
      } else {
        return null;
      }
      break;
    }
  };
  var dorun__2 = function(n, coll) {
    while (true) {
      if (cljs.core.seq.call(null, coll) && n > 0) {
        var G__11407 = n - 1;
        var G__11408 = cljs.core.next.call(null, coll);
        n = G__11407;
        coll = G__11408;
        continue;
      } else {
        return null;
      }
      break;
    }
  };
  dorun = function(n, coll) {
    switch(arguments.length) {
      case 1:
        return dorun__1.call(this, n);
      case 2:
        return dorun__2.call(this, n, coll);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  dorun.cljs$core$IFn$_invoke$arity$1 = dorun__1;
  dorun.cljs$core$IFn$_invoke$arity$2 = dorun__2;
  return dorun;
}();
cljs.core.doall = function() {
  var doall = null;
  var doall__1 = function(coll) {
    cljs.core.dorun.call(null, coll);
    return coll;
  };
  var doall__2 = function(n, coll) {
    cljs.core.dorun.call(null, n, coll);
    return coll;
  };
  doall = function(n, coll) {
    switch(arguments.length) {
      case 1:
        return doall__1.call(this, n);
      case 2:
        return doall__2.call(this, n, coll);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  doall.cljs$core$IFn$_invoke$arity$1 = doall__1;
  doall.cljs$core$IFn$_invoke$arity$2 = doall__2;
  return doall;
}();
cljs.core.regexp_QMARK_ = function regexp_QMARK_(o) {
  return o instanceof RegExp;
};
cljs.core.re_matches = function re_matches(re, s) {
  var matches = re.exec(s);
  if (cljs.core._EQ_.call(null, cljs.core.first.call(null, matches), s)) {
    if (cljs.core.count.call(null, matches) === 1) {
      return cljs.core.first.call(null, matches);
    } else {
      return cljs.core.vec.call(null, matches);
    }
  } else {
    return null;
  }
};
cljs.core.re_find = function re_find(re, s) {
  var matches = re.exec(s);
  if (matches == null) {
    return null;
  } else {
    if (cljs.core.count.call(null, matches) === 1) {
      return cljs.core.first.call(null, matches);
    } else {
      return cljs.core.vec.call(null, matches);
    }
  }
};
cljs.core.re_seq = function re_seq(re, s) {
  var match_data = cljs.core.re_find.call(null, re, s);
  var match_idx = s.search(re);
  var match_str = cljs.core.coll_QMARK_.call(null, match_data) ? cljs.core.first.call(null, match_data) : match_data;
  var post_match = cljs.core.subs.call(null, s, match_idx + cljs.core.count.call(null, match_str));
  if (cljs.core.truth_(match_data)) {
    return new cljs.core.LazySeq(null, function() {
      return cljs.core.cons.call(null, match_data, cljs.core.seq.call(null, post_match) ? re_seq.call(null, re, post_match) : null);
    }, null, null);
  } else {
    return null;
  }
};
cljs.core.re_pattern = function re_pattern(s) {
  var vec__11410 = cljs.core.re_find.call(null, /^(?:\(\?([idmsux]*)\))?(.*)/, s);
  var _ = cljs.core.nth.call(null, vec__11410, 0, null);
  var flags = cljs.core.nth.call(null, vec__11410, 1, null);
  var pattern = cljs.core.nth.call(null, vec__11410, 2, null);
  return new RegExp(pattern, flags);
};
cljs.core.pr_sequential_writer = function pr_sequential_writer(writer, print_one, begin, sep, end, opts, coll) {
  var _STAR_print_level_STAR_11412 = cljs.core._STAR_print_level_STAR_;
  try {
    cljs.core._STAR_print_level_STAR_ = cljs.core._STAR_print_level_STAR_ == null ? null : cljs.core._STAR_print_level_STAR_ - 1;
    if (!(cljs.core._STAR_print_level_STAR_ == null) && cljs.core._STAR_print_level_STAR_ < 0) {
      return cljs.core._write.call(null, writer, "#");
    } else {
      cljs.core._write.call(null, writer, begin);
      if (cljs.core.seq.call(null, coll)) {
        print_one.call(null, cljs.core.first.call(null, coll), writer, opts);
      } else {
      }
      var coll_11413__$1 = cljs.core.next.call(null, coll);
      var n_11414 = (new cljs.core.Keyword(null, "print-length", "print-length", 3960797560)).cljs$core$IFn$_invoke$arity$1(opts);
      while (true) {
        if (coll_11413__$1 && (n_11414 == null || !(n_11414 === 0))) {
          cljs.core._write.call(null, writer, sep);
          print_one.call(null, cljs.core.first.call(null, coll_11413__$1), writer, opts);
          var G__11415 = cljs.core.next.call(null, coll_11413__$1);
          var G__11416 = n_11414 - 1;
          coll_11413__$1 = G__11415;
          n_11414 = G__11416;
          continue;
        } else {
        }
        break;
      }
      if (cljs.core.truth_((new cljs.core.Keyword(null, "print-length", "print-length", 3960797560)).cljs$core$IFn$_invoke$arity$1(opts))) {
        cljs.core._write.call(null, writer, sep);
        print_one.call(null, "...", writer, opts);
      } else {
      }
      return cljs.core._write.call(null, writer, end);
    }
  } finally {
    cljs.core._STAR_print_level_STAR_ = _STAR_print_level_STAR_11412;
  }
};
cljs.core.write_all = function() {
  var write_all__delegate = function(writer, ss) {
    var seq__11421 = cljs.core.seq.call(null, ss);
    var chunk__11422 = null;
    var count__11423 = 0;
    var i__11424 = 0;
    while (true) {
      if (i__11424 < count__11423) {
        var s = cljs.core._nth.call(null, chunk__11422, i__11424);
        cljs.core._write.call(null, writer, s);
        var G__11425 = seq__11421;
        var G__11426 = chunk__11422;
        var G__11427 = count__11423;
        var G__11428 = i__11424 + 1;
        seq__11421 = G__11425;
        chunk__11422 = G__11426;
        count__11423 = G__11427;
        i__11424 = G__11428;
        continue;
      } else {
        var temp__4092__auto__ = cljs.core.seq.call(null, seq__11421);
        if (temp__4092__auto__) {
          var seq__11421__$1 = temp__4092__auto__;
          if (cljs.core.chunked_seq_QMARK_.call(null, seq__11421__$1)) {
            var c__4151__auto__ = cljs.core.chunk_first.call(null, seq__11421__$1);
            var G__11429 = cljs.core.chunk_rest.call(null, seq__11421__$1);
            var G__11430 = c__4151__auto__;
            var G__11431 = cljs.core.count.call(null, c__4151__auto__);
            var G__11432 = 0;
            seq__11421 = G__11429;
            chunk__11422 = G__11430;
            count__11423 = G__11431;
            i__11424 = G__11432;
            continue;
          } else {
            var s = cljs.core.first.call(null, seq__11421__$1);
            cljs.core._write.call(null, writer, s);
            var G__11433 = cljs.core.next.call(null, seq__11421__$1);
            var G__11434 = null;
            var G__11435 = 0;
            var G__11436 = 0;
            seq__11421 = G__11433;
            chunk__11422 = G__11434;
            count__11423 = G__11435;
            i__11424 = G__11436;
            continue;
          }
        } else {
          return null;
        }
      }
      break;
    }
  };
  var write_all = function(writer, var_args) {
    var ss = null;
    if (arguments.length > 1) {
      ss = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return write_all__delegate.call(this, writer, ss);
  };
  write_all.cljs$lang$maxFixedArity = 1;
  write_all.cljs$lang$applyTo = function(arglist__11437) {
    var writer = cljs.core.first(arglist__11437);
    var ss = cljs.core.rest(arglist__11437);
    return write_all__delegate(writer, ss);
  };
  write_all.cljs$core$IFn$_invoke$arity$variadic = write_all__delegate;
  return write_all;
}();
cljs.core.string_print = function string_print(x) {
  cljs.core._STAR_print_fn_STAR_.call(null, x);
  return null;
};
cljs.core.flush = function flush() {
  return null;
};
cljs.core.char_escapes = function() {
  var obj11439 = {'"':'\\"', "\\":"\\\\", "\b":"\\b", "\f":"\\f", "\n":"\\n", "\r":"\\r", "\t":"\\t"};
  return obj11439;
}();
cljs.core.quote_string = function quote_string(s) {
  return[cljs.core.str('"'), cljs.core.str(s.replace(RegExp('[\\\\"\b\f\n\r\t]', "g"), function(match) {
    return cljs.core.char_escapes[match];
  })), cljs.core.str('"')].join("");
};
cljs.core.pr_writer = function pr_writer(obj, writer, opts) {
  if (obj == null) {
    return cljs.core._write.call(null, writer, "nil");
  } else {
    if (void 0 === obj) {
      return cljs.core._write.call(null, writer, "#\x3cundefined\x3e");
    } else {
      if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
        if (cljs.core.truth_(function() {
          var and__3391__auto__ = cljs.core.get.call(null, opts, new cljs.core.Keyword(null, "meta", "meta", 1017252215));
          if (cljs.core.truth_(and__3391__auto__)) {
            var and__3391__auto____$1 = function() {
              var G__11445 = obj;
              if (G__11445) {
                var bit__4053__auto__ = G__11445.cljs$lang$protocol_mask$partition0$ & 131072;
                if (bit__4053__auto__ || G__11445.cljs$core$IMeta$) {
                  return true;
                } else {
                  if (!G__11445.cljs$lang$protocol_mask$partition0$) {
                    return cljs.core.native_satisfies_QMARK_.call(null, cljs.core.IMeta, G__11445);
                  } else {
                    return false;
                  }
                }
              } else {
                return cljs.core.native_satisfies_QMARK_.call(null, cljs.core.IMeta, G__11445);
              }
            }();
            if (and__3391__auto____$1) {
              return cljs.core.meta.call(null, obj);
            } else {
              return and__3391__auto____$1;
            }
          } else {
            return and__3391__auto__;
          }
        }())) {
          cljs.core._write.call(null, writer, "^");
          pr_writer.call(null, cljs.core.meta.call(null, obj), writer, opts);
          cljs.core._write.call(null, writer, " ");
        } else {
        }
        if (obj == null) {
          return cljs.core._write.call(null, writer, "nil");
        } else {
          if (obj.cljs$lang$type) {
            return obj.cljs$lang$ctorPrWriter(obj, writer, opts);
          } else {
            if (function() {
              var G__11446 = obj;
              if (G__11446) {
                var bit__4046__auto__ = G__11446.cljs$lang$protocol_mask$partition0$ & 2147483648;
                if (bit__4046__auto__ || G__11446.cljs$core$IPrintWithWriter$) {
                  return true;
                } else {
                  return false;
                }
              } else {
                return false;
              }
            }()) {
              return cljs.core._pr_writer.call(null, obj, writer, opts);
            } else {
              if (cljs.core.type.call(null, obj) === Boolean || typeof obj === "number") {
                return cljs.core._write.call(null, writer, [cljs.core.str(obj)].join(""));
              } else {
                if (cljs.core.object_QMARK_.call(null, obj)) {
                  cljs.core._write.call(null, writer, "#js ");
                  return cljs.core.print_map.call(null, cljs.core.map.call(null, function(k) {
                    return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.keyword.call(null, k), obj[k]], null);
                  }, cljs.core.js_keys.call(null, obj)), pr_writer, writer, opts);
                } else {
                  if (obj instanceof Array) {
                    return cljs.core.pr_sequential_writer.call(null, writer, pr_writer, "#js [", " ", "]", opts, obj);
                  } else {
                    if (goog.isString(obj)) {
                      if (cljs.core.truth_((new cljs.core.Keyword(null, "readably", "readably", 4441712502)).cljs$core$IFn$_invoke$arity$1(opts))) {
                        return cljs.core._write.call(null, writer, cljs.core.quote_string.call(null, obj));
                      } else {
                        return cljs.core._write.call(null, writer, obj);
                      }
                    } else {
                      if (cljs.core.fn_QMARK_.call(null, obj)) {
                        return cljs.core.write_all.call(null, writer, "#\x3c", [cljs.core.str(obj)].join(""), "\x3e");
                      } else {
                        if (obj instanceof Date) {
                          var normalize = function(n, len) {
                            var ns = [cljs.core.str(n)].join("");
                            while (true) {
                              if (cljs.core.count.call(null, ns) < len) {
                                var G__11448 = [cljs.core.str("0"), cljs.core.str(ns)].join("");
                                ns = G__11448;
                                continue;
                              } else {
                                return ns;
                              }
                              break;
                            }
                          };
                          return cljs.core.write_all.call(null, writer, '#inst "', [cljs.core.str(obj.getUTCFullYear())].join(""), "-", normalize.call(null, obj.getUTCMonth() + 1, 2), "-", normalize.call(null, obj.getUTCDate(), 2), "T", normalize.call(null, obj.getUTCHours(), 2), ":", normalize.call(null, obj.getUTCMinutes(), 2), ":", normalize.call(null, obj.getUTCSeconds(), 2), ".", normalize.call(null, obj.getUTCMilliseconds(), 3), "-", '00:00"');
                        } else {
                          if (cljs.core.regexp_QMARK_.call(null, obj)) {
                            return cljs.core.write_all.call(null, writer, '#"', obj.source, '"');
                          } else {
                            if (function() {
                              var G__11447 = obj;
                              if (G__11447) {
                                var bit__4053__auto__ = G__11447.cljs$lang$protocol_mask$partition0$ & 2147483648;
                                if (bit__4053__auto__ || G__11447.cljs$core$IPrintWithWriter$) {
                                  return true;
                                } else {
                                  if (!G__11447.cljs$lang$protocol_mask$partition0$) {
                                    return cljs.core.native_satisfies_QMARK_.call(null, cljs.core.IPrintWithWriter, G__11447);
                                  } else {
                                    return false;
                                  }
                                }
                              } else {
                                return cljs.core.native_satisfies_QMARK_.call(null, cljs.core.IPrintWithWriter, G__11447);
                              }
                            }()) {
                              return cljs.core._pr_writer.call(null, obj, writer, opts);
                            } else {
                              if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
                                return cljs.core.write_all.call(null, writer, "#\x3c", [cljs.core.str(obj)].join(""), "\x3e");
                              } else {
                                return null;
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      } else {
        return null;
      }
    }
  }
};
cljs.core.pr_seq_writer = function pr_seq_writer(objs, writer, opts) {
  cljs.core.pr_writer.call(null, cljs.core.first.call(null, objs), writer, opts);
  var seq__11453 = cljs.core.seq.call(null, cljs.core.next.call(null, objs));
  var chunk__11454 = null;
  var count__11455 = 0;
  var i__11456 = 0;
  while (true) {
    if (i__11456 < count__11455) {
      var obj = cljs.core._nth.call(null, chunk__11454, i__11456);
      cljs.core._write.call(null, writer, " ");
      cljs.core.pr_writer.call(null, obj, writer, opts);
      var G__11457 = seq__11453;
      var G__11458 = chunk__11454;
      var G__11459 = count__11455;
      var G__11460 = i__11456 + 1;
      seq__11453 = G__11457;
      chunk__11454 = G__11458;
      count__11455 = G__11459;
      i__11456 = G__11460;
      continue;
    } else {
      var temp__4092__auto__ = cljs.core.seq.call(null, seq__11453);
      if (temp__4092__auto__) {
        var seq__11453__$1 = temp__4092__auto__;
        if (cljs.core.chunked_seq_QMARK_.call(null, seq__11453__$1)) {
          var c__4151__auto__ = cljs.core.chunk_first.call(null, seq__11453__$1);
          var G__11461 = cljs.core.chunk_rest.call(null, seq__11453__$1);
          var G__11462 = c__4151__auto__;
          var G__11463 = cljs.core.count.call(null, c__4151__auto__);
          var G__11464 = 0;
          seq__11453 = G__11461;
          chunk__11454 = G__11462;
          count__11455 = G__11463;
          i__11456 = G__11464;
          continue;
        } else {
          var obj = cljs.core.first.call(null, seq__11453__$1);
          cljs.core._write.call(null, writer, " ");
          cljs.core.pr_writer.call(null, obj, writer, opts);
          var G__11465 = cljs.core.next.call(null, seq__11453__$1);
          var G__11466 = null;
          var G__11467 = 0;
          var G__11468 = 0;
          seq__11453 = G__11465;
          chunk__11454 = G__11466;
          count__11455 = G__11467;
          i__11456 = G__11468;
          continue;
        }
      } else {
        return null;
      }
    }
    break;
  }
};
cljs.core.pr_sb_with_opts = function pr_sb_with_opts(objs, opts) {
  var sb = new goog.string.StringBuffer;
  var writer = new cljs.core.StringBufferWriter(sb);
  cljs.core.pr_seq_writer.call(null, objs, writer, opts);
  cljs.core._flush.call(null, writer);
  return sb;
};
cljs.core.pr_str_with_opts = function pr_str_with_opts(objs, opts) {
  if (cljs.core.empty_QMARK_.call(null, objs)) {
    return "";
  } else {
    return[cljs.core.str(cljs.core.pr_sb_with_opts.call(null, objs, opts))].join("");
  }
};
cljs.core.prn_str_with_opts = function prn_str_with_opts(objs, opts) {
  if (cljs.core.empty_QMARK_.call(null, objs)) {
    return "\n";
  } else {
    var sb = cljs.core.pr_sb_with_opts.call(null, objs, opts);
    sb.append("\n");
    return[cljs.core.str(sb)].join("");
  }
};
cljs.core.pr_with_opts = function pr_with_opts(objs, opts) {
  return cljs.core.string_print.call(null, cljs.core.pr_str_with_opts.call(null, objs, opts));
};
cljs.core.newline = function newline(opts) {
  cljs.core.string_print.call(null, "\n");
  if (cljs.core.truth_(cljs.core.get.call(null, opts, new cljs.core.Keyword(null, "flush-on-newline", "flush-on-newline", 4338025857)))) {
    return cljs.core.flush.call(null);
  } else {
    return null;
  }
};
cljs.core.pr_str = function() {
  var pr_str__delegate = function(objs) {
    return cljs.core.pr_str_with_opts.call(null, objs, cljs.core.pr_opts.call(null));
  };
  var pr_str = function(var_args) {
    var objs = null;
    if (arguments.length > 0) {
      objs = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0), 0);
    }
    return pr_str__delegate.call(this, objs);
  };
  pr_str.cljs$lang$maxFixedArity = 0;
  pr_str.cljs$lang$applyTo = function(arglist__11469) {
    var objs = cljs.core.seq(arglist__11469);
    return pr_str__delegate(objs);
  };
  pr_str.cljs$core$IFn$_invoke$arity$variadic = pr_str__delegate;
  return pr_str;
}();
cljs.core.prn_str = function() {
  var prn_str__delegate = function(objs) {
    return cljs.core.prn_str_with_opts.call(null, objs, cljs.core.pr_opts.call(null));
  };
  var prn_str = function(var_args) {
    var objs = null;
    if (arguments.length > 0) {
      objs = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0), 0);
    }
    return prn_str__delegate.call(this, objs);
  };
  prn_str.cljs$lang$maxFixedArity = 0;
  prn_str.cljs$lang$applyTo = function(arglist__11470) {
    var objs = cljs.core.seq(arglist__11470);
    return prn_str__delegate(objs);
  };
  prn_str.cljs$core$IFn$_invoke$arity$variadic = prn_str__delegate;
  return prn_str;
}();
cljs.core.pr = function() {
  var pr__delegate = function(objs) {
    return cljs.core.pr_with_opts.call(null, objs, cljs.core.pr_opts.call(null));
  };
  var pr = function(var_args) {
    var objs = null;
    if (arguments.length > 0) {
      objs = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0), 0);
    }
    return pr__delegate.call(this, objs);
  };
  pr.cljs$lang$maxFixedArity = 0;
  pr.cljs$lang$applyTo = function(arglist__11471) {
    var objs = cljs.core.seq(arglist__11471);
    return pr__delegate(objs);
  };
  pr.cljs$core$IFn$_invoke$arity$variadic = pr__delegate;
  return pr;
}();
cljs.core.print = function() {
  var cljs_core_print__delegate = function(objs) {
    return cljs.core.pr_with_opts.call(null, objs, cljs.core.assoc.call(null, cljs.core.pr_opts.call(null), new cljs.core.Keyword(null, "readably", "readably", 4441712502), false));
  };
  var cljs_core_print = function(var_args) {
    var objs = null;
    if (arguments.length > 0) {
      objs = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0), 0);
    }
    return cljs_core_print__delegate.call(this, objs);
  };
  cljs_core_print.cljs$lang$maxFixedArity = 0;
  cljs_core_print.cljs$lang$applyTo = function(arglist__11472) {
    var objs = cljs.core.seq(arglist__11472);
    return cljs_core_print__delegate(objs);
  };
  cljs_core_print.cljs$core$IFn$_invoke$arity$variadic = cljs_core_print__delegate;
  return cljs_core_print;
}();
cljs.core.print_str = function() {
  var print_str__delegate = function(objs) {
    return cljs.core.pr_str_with_opts.call(null, objs, cljs.core.assoc.call(null, cljs.core.pr_opts.call(null), new cljs.core.Keyword(null, "readably", "readably", 4441712502), false));
  };
  var print_str = function(var_args) {
    var objs = null;
    if (arguments.length > 0) {
      objs = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0), 0);
    }
    return print_str__delegate.call(this, objs);
  };
  print_str.cljs$lang$maxFixedArity = 0;
  print_str.cljs$lang$applyTo = function(arglist__11473) {
    var objs = cljs.core.seq(arglist__11473);
    return print_str__delegate(objs);
  };
  print_str.cljs$core$IFn$_invoke$arity$variadic = print_str__delegate;
  return print_str;
}();
cljs.core.println = function() {
  var println__delegate = function(objs) {
    cljs.core.pr_with_opts.call(null, objs, cljs.core.assoc.call(null, cljs.core.pr_opts.call(null), new cljs.core.Keyword(null, "readably", "readably", 4441712502), false));
    if (cljs.core.truth_(cljs.core._STAR_print_newline_STAR_)) {
      return cljs.core.newline.call(null, cljs.core.pr_opts.call(null));
    } else {
      return null;
    }
  };
  var println = function(var_args) {
    var objs = null;
    if (arguments.length > 0) {
      objs = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0), 0);
    }
    return println__delegate.call(this, objs);
  };
  println.cljs$lang$maxFixedArity = 0;
  println.cljs$lang$applyTo = function(arglist__11474) {
    var objs = cljs.core.seq(arglist__11474);
    return println__delegate(objs);
  };
  println.cljs$core$IFn$_invoke$arity$variadic = println__delegate;
  return println;
}();
cljs.core.println_str = function() {
  var println_str__delegate = function(objs) {
    return cljs.core.prn_str_with_opts.call(null, objs, cljs.core.assoc.call(null, cljs.core.pr_opts.call(null), new cljs.core.Keyword(null, "readably", "readably", 4441712502), false));
  };
  var println_str = function(var_args) {
    var objs = null;
    if (arguments.length > 0) {
      objs = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0), 0);
    }
    return println_str__delegate.call(this, objs);
  };
  println_str.cljs$lang$maxFixedArity = 0;
  println_str.cljs$lang$applyTo = function(arglist__11475) {
    var objs = cljs.core.seq(arglist__11475);
    return println_str__delegate(objs);
  };
  println_str.cljs$core$IFn$_invoke$arity$variadic = println_str__delegate;
  return println_str;
}();
cljs.core.prn = function() {
  var prn__delegate = function(objs) {
    cljs.core.pr_with_opts.call(null, objs, cljs.core.pr_opts.call(null));
    if (cljs.core.truth_(cljs.core._STAR_print_newline_STAR_)) {
      return cljs.core.newline.call(null, cljs.core.pr_opts.call(null));
    } else {
      return null;
    }
  };
  var prn = function(var_args) {
    var objs = null;
    if (arguments.length > 0) {
      objs = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0), 0);
    }
    return prn__delegate.call(this, objs);
  };
  prn.cljs$lang$maxFixedArity = 0;
  prn.cljs$lang$applyTo = function(arglist__11476) {
    var objs = cljs.core.seq(arglist__11476);
    return prn__delegate(objs);
  };
  prn.cljs$core$IFn$_invoke$arity$variadic = prn__delegate;
  return prn;
}();
cljs.core.print_map = function print_map(m, print_one, writer, opts) {
  return cljs.core.pr_sequential_writer.call(null, writer, function(e, w, opts__$1) {
    print_one.call(null, cljs.core.key.call(null, e), w, opts__$1);
    cljs.core._write.call(null, w, " ");
    return print_one.call(null, cljs.core.val.call(null, e), w, opts__$1);
  }, "{", ", ", "}", opts, cljs.core.seq.call(null, m));
};
cljs.core.KeySeq.prototype.cljs$core$IPrintWithWriter$ = true;
cljs.core.KeySeq.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  var coll__$1 = this;
  return cljs.core.pr_sequential_writer.call(null, writer, cljs.core.pr_writer, "(", " ", ")", opts, coll__$1);
};
cljs.core.IndexedSeq.prototype.cljs$core$IPrintWithWriter$ = true;
cljs.core.IndexedSeq.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  var coll__$1 = this;
  return cljs.core.pr_sequential_writer.call(null, writer, cljs.core.pr_writer, "(", " ", ")", opts, coll__$1);
};
cljs.core.Subvec.prototype.cljs$core$IPrintWithWriter$ = true;
cljs.core.Subvec.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  var coll__$1 = this;
  return cljs.core.pr_sequential_writer.call(null, writer, cljs.core.pr_writer, "[", " ", "]", opts, coll__$1);
};
cljs.core.ChunkedCons.prototype.cljs$core$IPrintWithWriter$ = true;
cljs.core.ChunkedCons.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  var coll__$1 = this;
  return cljs.core.pr_sequential_writer.call(null, writer, cljs.core.pr_writer, "(", " ", ")", opts, coll__$1);
};
cljs.core.PersistentTreeMap.prototype.cljs$core$IPrintWithWriter$ = true;
cljs.core.PersistentTreeMap.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  var coll__$1 = this;
  return cljs.core.print_map.call(null, coll__$1, cljs.core.pr_writer, writer, opts);
};
cljs.core.PersistentArrayMap.prototype.cljs$core$IPrintWithWriter$ = true;
cljs.core.PersistentArrayMap.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  var coll__$1 = this;
  return cljs.core.print_map.call(null, coll__$1, cljs.core.pr_writer, writer, opts);
};
cljs.core.PersistentQueue.prototype.cljs$core$IPrintWithWriter$ = true;
cljs.core.PersistentQueue.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  var coll__$1 = this;
  return cljs.core.pr_sequential_writer.call(null, writer, cljs.core.pr_writer, "#queue [", " ", "]", opts, cljs.core.seq.call(null, coll__$1));
};
cljs.core.LazySeq.prototype.cljs$core$IPrintWithWriter$ = true;
cljs.core.LazySeq.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  var coll__$1 = this;
  return cljs.core.pr_sequential_writer.call(null, writer, cljs.core.pr_writer, "(", " ", ")", opts, coll__$1);
};
cljs.core.RSeq.prototype.cljs$core$IPrintWithWriter$ = true;
cljs.core.RSeq.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  var coll__$1 = this;
  return cljs.core.pr_sequential_writer.call(null, writer, cljs.core.pr_writer, "(", " ", ")", opts, coll__$1);
};
cljs.core.PersistentTreeSet.prototype.cljs$core$IPrintWithWriter$ = true;
cljs.core.PersistentTreeSet.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  var coll__$1 = this;
  return cljs.core.pr_sequential_writer.call(null, writer, cljs.core.pr_writer, "#{", " ", "}", opts, coll__$1);
};
cljs.core.NodeSeq.prototype.cljs$core$IPrintWithWriter$ = true;
cljs.core.NodeSeq.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  var coll__$1 = this;
  return cljs.core.pr_sequential_writer.call(null, writer, cljs.core.pr_writer, "(", " ", ")", opts, coll__$1);
};
cljs.core.RedNode.prototype.cljs$core$IPrintWithWriter$ = true;
cljs.core.RedNode.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  var coll__$1 = this;
  return cljs.core.pr_sequential_writer.call(null, writer, cljs.core.pr_writer, "[", " ", "]", opts, coll__$1);
};
cljs.core.ChunkedSeq.prototype.cljs$core$IPrintWithWriter$ = true;
cljs.core.ChunkedSeq.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  var coll__$1 = this;
  return cljs.core.pr_sequential_writer.call(null, writer, cljs.core.pr_writer, "(", " ", ")", opts, coll__$1);
};
cljs.core.PersistentHashMap.prototype.cljs$core$IPrintWithWriter$ = true;
cljs.core.PersistentHashMap.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  var coll__$1 = this;
  return cljs.core.print_map.call(null, coll__$1, cljs.core.pr_writer, writer, opts);
};
cljs.core.PersistentHashSet.prototype.cljs$core$IPrintWithWriter$ = true;
cljs.core.PersistentHashSet.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  var coll__$1 = this;
  return cljs.core.pr_sequential_writer.call(null, writer, cljs.core.pr_writer, "#{", " ", "}", opts, coll__$1);
};
cljs.core.PersistentVector.prototype.cljs$core$IPrintWithWriter$ = true;
cljs.core.PersistentVector.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  var coll__$1 = this;
  return cljs.core.pr_sequential_writer.call(null, writer, cljs.core.pr_writer, "[", " ", "]", opts, coll__$1);
};
cljs.core.List.prototype.cljs$core$IPrintWithWriter$ = true;
cljs.core.List.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  var coll__$1 = this;
  return cljs.core.pr_sequential_writer.call(null, writer, cljs.core.pr_writer, "(", " ", ")", opts, coll__$1);
};
cljs.core.PersistentArrayMapSeq.prototype.cljs$core$IPrintWithWriter$ = true;
cljs.core.PersistentArrayMapSeq.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  var coll__$1 = this;
  return cljs.core.pr_sequential_writer.call(null, writer, cljs.core.pr_writer, "(", " ", ")", opts, coll__$1);
};
cljs.core.EmptyList.prototype.cljs$core$IPrintWithWriter$ = true;
cljs.core.EmptyList.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  var coll__$1 = this;
  return cljs.core._write.call(null, writer, "()");
};
cljs.core.BlackNode.prototype.cljs$core$IPrintWithWriter$ = true;
cljs.core.BlackNode.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  var coll__$1 = this;
  return cljs.core.pr_sequential_writer.call(null, writer, cljs.core.pr_writer, "[", " ", "]", opts, coll__$1);
};
cljs.core.Cons.prototype.cljs$core$IPrintWithWriter$ = true;
cljs.core.Cons.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  var coll__$1 = this;
  return cljs.core.pr_sequential_writer.call(null, writer, cljs.core.pr_writer, "(", " ", ")", opts, coll__$1);
};
cljs.core.Range.prototype.cljs$core$IPrintWithWriter$ = true;
cljs.core.Range.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  var coll__$1 = this;
  return cljs.core.pr_sequential_writer.call(null, writer, cljs.core.pr_writer, "(", " ", ")", opts, coll__$1);
};
cljs.core.ArrayNodeSeq.prototype.cljs$core$IPrintWithWriter$ = true;
cljs.core.ArrayNodeSeq.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  var coll__$1 = this;
  return cljs.core.pr_sequential_writer.call(null, writer, cljs.core.pr_writer, "(", " ", ")", opts, coll__$1);
};
cljs.core.ValSeq.prototype.cljs$core$IPrintWithWriter$ = true;
cljs.core.ValSeq.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  var coll__$1 = this;
  return cljs.core.pr_sequential_writer.call(null, writer, cljs.core.pr_writer, "(", " ", ")", opts, coll__$1);
};
cljs.core.ObjMap.prototype.cljs$core$IPrintWithWriter$ = true;
cljs.core.ObjMap.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  var coll__$1 = this;
  return cljs.core.print_map.call(null, coll__$1, cljs.core.pr_writer, writer, opts);
};
cljs.core.PersistentTreeMapSeq.prototype.cljs$core$IPrintWithWriter$ = true;
cljs.core.PersistentTreeMapSeq.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  var coll__$1 = this;
  return cljs.core.pr_sequential_writer.call(null, writer, cljs.core.pr_writer, "(", " ", ")", opts, coll__$1);
};
cljs.core.PersistentVector.prototype.cljs$core$IComparable$ = true;
cljs.core.PersistentVector.prototype.cljs$core$IComparable$_compare$arity$2 = function(x, y) {
  var x__$1 = this;
  return cljs.core.compare_indexed.call(null, x__$1, y);
};
cljs.core.Subvec.prototype.cljs$core$IComparable$ = true;
cljs.core.Subvec.prototype.cljs$core$IComparable$_compare$arity$2 = function(x, y) {
  var x__$1 = this;
  return cljs.core.compare_indexed.call(null, x__$1, y);
};
cljs.core.Keyword.prototype.cljs$core$IComparable$ = true;
cljs.core.Keyword.prototype.cljs$core$IComparable$_compare$arity$2 = function(x, y) {
  var x__$1 = this;
  return cljs.core.compare_symbols.call(null, x__$1, y);
};
cljs.core.Symbol.prototype.cljs$core$IComparable$ = true;
cljs.core.Symbol.prototype.cljs$core$IComparable$_compare$arity$2 = function(x, y) {
  var x__$1 = this;
  return cljs.core.compare_symbols.call(null, x__$1, y);
};
cljs.core.Atom = function(state, meta, validator, watches) {
  this.state = state;
  this.meta = meta;
  this.validator = validator;
  this.watches = watches;
  this.cljs$lang$protocol_mask$partition0$ = 2153938944;
  this.cljs$lang$protocol_mask$partition1$ = 2;
};
cljs.core.Atom.cljs$lang$type = true;
cljs.core.Atom.cljs$lang$ctorStr = "cljs.core/Atom";
cljs.core.Atom.cljs$lang$ctorPrWriter = function(this__3970__auto__, writer__3971__auto__, opt__3972__auto__) {
  return cljs.core._write.call(null, writer__3971__auto__, "cljs.core/Atom");
};
cljs.core.Atom.prototype.cljs$core$IHash$_hash$arity$1 = function(this$) {
  var self__ = this;
  var this$__$1 = this;
  return goog.getUid(this$__$1);
};
cljs.core.Atom.prototype.cljs$core$IWatchable$_notify_watches$arity$3 = function(this$, oldval, newval) {
  var self__ = this;
  var this$__$1 = this;
  var seq__11477 = cljs.core.seq.call(null, self__.watches);
  var chunk__11478 = null;
  var count__11479 = 0;
  var i__11480 = 0;
  while (true) {
    if (i__11480 < count__11479) {
      var vec__11481 = cljs.core._nth.call(null, chunk__11478, i__11480);
      var key = cljs.core.nth.call(null, vec__11481, 0, null);
      var f = cljs.core.nth.call(null, vec__11481, 1, null);
      f.call(null, key, this$__$1, oldval, newval);
      var G__11483 = seq__11477;
      var G__11484 = chunk__11478;
      var G__11485 = count__11479;
      var G__11486 = i__11480 + 1;
      seq__11477 = G__11483;
      chunk__11478 = G__11484;
      count__11479 = G__11485;
      i__11480 = G__11486;
      continue;
    } else {
      var temp__4092__auto__ = cljs.core.seq.call(null, seq__11477);
      if (temp__4092__auto__) {
        var seq__11477__$1 = temp__4092__auto__;
        if (cljs.core.chunked_seq_QMARK_.call(null, seq__11477__$1)) {
          var c__4151__auto__ = cljs.core.chunk_first.call(null, seq__11477__$1);
          var G__11487 = cljs.core.chunk_rest.call(null, seq__11477__$1);
          var G__11488 = c__4151__auto__;
          var G__11489 = cljs.core.count.call(null, c__4151__auto__);
          var G__11490 = 0;
          seq__11477 = G__11487;
          chunk__11478 = G__11488;
          count__11479 = G__11489;
          i__11480 = G__11490;
          continue;
        } else {
          var vec__11482 = cljs.core.first.call(null, seq__11477__$1);
          var key = cljs.core.nth.call(null, vec__11482, 0, null);
          var f = cljs.core.nth.call(null, vec__11482, 1, null);
          f.call(null, key, this$__$1, oldval, newval);
          var G__11491 = cljs.core.next.call(null, seq__11477__$1);
          var G__11492 = null;
          var G__11493 = 0;
          var G__11494 = 0;
          seq__11477 = G__11491;
          chunk__11478 = G__11492;
          count__11479 = G__11493;
          i__11480 = G__11494;
          continue;
        }
      } else {
        return null;
      }
    }
    break;
  }
};
cljs.core.Atom.prototype.cljs$core$IWatchable$_add_watch$arity$3 = function(this$, key, f) {
  var self__ = this;
  var this$__$1 = this;
  return this$__$1.watches = cljs.core.assoc.call(null, self__.watches, key, f);
};
cljs.core.Atom.prototype.cljs$core$IWatchable$_remove_watch$arity$2 = function(this$, key) {
  var self__ = this;
  var this$__$1 = this;
  return this$__$1.watches = cljs.core.dissoc.call(null, self__.watches, key);
};
cljs.core.Atom.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(a, writer, opts) {
  var self__ = this;
  var a__$1 = this;
  cljs.core._write.call(null, writer, "#\x3cAtom: ");
  cljs.core.pr_writer.call(null, self__.state, writer, opts);
  return cljs.core._write.call(null, writer, "\x3e");
};
cljs.core.Atom.prototype.cljs$core$IMeta$_meta$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return self__.meta;
};
cljs.core.Atom.prototype.cljs$core$IDeref$_deref$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return self__.state;
};
cljs.core.Atom.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(o, other) {
  var self__ = this;
  var o__$1 = this;
  return o__$1 === other;
};
cljs.core.__GT_Atom = function __GT_Atom(state, meta, validator, watches) {
  return new cljs.core.Atom(state, meta, validator, watches);
};
cljs.core.atom = function() {
  var atom = null;
  var atom__1 = function(x) {
    return new cljs.core.Atom(x, null, null, null);
  };
  var atom__2 = function() {
    var G__11498__delegate = function(x, p__11495) {
      var map__11497 = p__11495;
      var map__11497__$1 = cljs.core.seq_QMARK_.call(null, map__11497) ? cljs.core.apply.call(null, cljs.core.hash_map, map__11497) : map__11497;
      var validator = cljs.core.get.call(null, map__11497__$1, new cljs.core.Keyword(null, "validator", "validator", 4199087812));
      var meta = cljs.core.get.call(null, map__11497__$1, new cljs.core.Keyword(null, "meta", "meta", 1017252215));
      return new cljs.core.Atom(x, meta, validator, null);
    };
    var G__11498 = function(x, var_args) {
      var p__11495 = null;
      if (arguments.length > 1) {
        p__11495 = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
      }
      return G__11498__delegate.call(this, x, p__11495);
    };
    G__11498.cljs$lang$maxFixedArity = 1;
    G__11498.cljs$lang$applyTo = function(arglist__11499) {
      var x = cljs.core.first(arglist__11499);
      var p__11495 = cljs.core.rest(arglist__11499);
      return G__11498__delegate(x, p__11495);
    };
    G__11498.cljs$core$IFn$_invoke$arity$variadic = G__11498__delegate;
    return G__11498;
  }();
  atom = function(x, var_args) {
    var p__11495 = var_args;
    switch(arguments.length) {
      case 1:
        return atom__1.call(this, x);
      default:
        return atom__2.cljs$core$IFn$_invoke$arity$variadic(x, cljs.core.array_seq(arguments, 1));
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  atom.cljs$lang$maxFixedArity = 1;
  atom.cljs$lang$applyTo = atom__2.cljs$lang$applyTo;
  atom.cljs$core$IFn$_invoke$arity$1 = atom__1;
  atom.cljs$core$IFn$_invoke$arity$variadic = atom__2.cljs$core$IFn$_invoke$arity$variadic;
  return atom;
}();
cljs.core.reset_BANG_ = function reset_BANG_(a, new_value) {
  var validate_11500 = a.validator;
  if (validate_11500 == null) {
  } else {
  }
  var old_value_11501 = a.state;
  a.state = new_value;
  if (a.watches == null) {
  } else {
    cljs.core._notify_watches.call(null, a, old_value_11501, new_value);
  }
  return new_value;
};
cljs.core.swap_BANG_ = function() {
  var swap_BANG_ = null;
  var swap_BANG___2 = function(a, f) {
    return cljs.core.reset_BANG_.call(null, a, f.call(null, a.state));
  };
  var swap_BANG___3 = function(a, f, x) {
    return cljs.core.reset_BANG_.call(null, a, f.call(null, a.state, x));
  };
  var swap_BANG___4 = function(a, f, x, y) {
    return cljs.core.reset_BANG_.call(null, a, f.call(null, a.state, x, y));
  };
  var swap_BANG___5 = function(a, f, x, y, z) {
    return cljs.core.reset_BANG_.call(null, a, f.call(null, a.state, x, y, z));
  };
  var swap_BANG___6 = function() {
    var G__11502__delegate = function(a, f, x, y, z, more) {
      return cljs.core.reset_BANG_.call(null, a, cljs.core.apply.call(null, f, a.state, x, y, z, more));
    };
    var G__11502 = function(a, f, x, y, z, var_args) {
      var more = null;
      if (arguments.length > 5) {
        more = cljs.core.array_seq(Array.prototype.slice.call(arguments, 5), 0);
      }
      return G__11502__delegate.call(this, a, f, x, y, z, more);
    };
    G__11502.cljs$lang$maxFixedArity = 5;
    G__11502.cljs$lang$applyTo = function(arglist__11503) {
      var a = cljs.core.first(arglist__11503);
      arglist__11503 = cljs.core.next(arglist__11503);
      var f = cljs.core.first(arglist__11503);
      arglist__11503 = cljs.core.next(arglist__11503);
      var x = cljs.core.first(arglist__11503);
      arglist__11503 = cljs.core.next(arglist__11503);
      var y = cljs.core.first(arglist__11503);
      arglist__11503 = cljs.core.next(arglist__11503);
      var z = cljs.core.first(arglist__11503);
      var more = cljs.core.rest(arglist__11503);
      return G__11502__delegate(a, f, x, y, z, more);
    };
    G__11502.cljs$core$IFn$_invoke$arity$variadic = G__11502__delegate;
    return G__11502;
  }();
  swap_BANG_ = function(a, f, x, y, z, var_args) {
    var more = var_args;
    switch(arguments.length) {
      case 2:
        return swap_BANG___2.call(this, a, f);
      case 3:
        return swap_BANG___3.call(this, a, f, x);
      case 4:
        return swap_BANG___4.call(this, a, f, x, y);
      case 5:
        return swap_BANG___5.call(this, a, f, x, y, z);
      default:
        return swap_BANG___6.cljs$core$IFn$_invoke$arity$variadic(a, f, x, y, z, cljs.core.array_seq(arguments, 5));
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  swap_BANG_.cljs$lang$maxFixedArity = 5;
  swap_BANG_.cljs$lang$applyTo = swap_BANG___6.cljs$lang$applyTo;
  swap_BANG_.cljs$core$IFn$_invoke$arity$2 = swap_BANG___2;
  swap_BANG_.cljs$core$IFn$_invoke$arity$3 = swap_BANG___3;
  swap_BANG_.cljs$core$IFn$_invoke$arity$4 = swap_BANG___4;
  swap_BANG_.cljs$core$IFn$_invoke$arity$5 = swap_BANG___5;
  swap_BANG_.cljs$core$IFn$_invoke$arity$variadic = swap_BANG___6.cljs$core$IFn$_invoke$arity$variadic;
  return swap_BANG_;
}();
cljs.core.compare_and_set_BANG_ = function compare_and_set_BANG_(a, oldval, newval) {
  if (cljs.core._EQ_.call(null, a.state, oldval)) {
    cljs.core.reset_BANG_.call(null, a, newval);
    return true;
  } else {
    return false;
  }
};
cljs.core.deref = function deref(o) {
  return cljs.core._deref.call(null, o);
};
cljs.core.set_validator_BANG_ = function set_validator_BANG_(iref, val) {
  return iref.validator = val;
};
cljs.core.get_validator = function get_validator(iref) {
  return iref.validator;
};
cljs.core.alter_meta_BANG_ = function() {
  var alter_meta_BANG___delegate = function(iref, f, args) {
    return iref.meta = cljs.core.apply.call(null, f, iref.meta, args);
  };
  var alter_meta_BANG_ = function(iref, f, var_args) {
    var args = null;
    if (arguments.length > 2) {
      args = cljs.core.array_seq(Array.prototype.slice.call(arguments, 2), 0);
    }
    return alter_meta_BANG___delegate.call(this, iref, f, args);
  };
  alter_meta_BANG_.cljs$lang$maxFixedArity = 2;
  alter_meta_BANG_.cljs$lang$applyTo = function(arglist__11504) {
    var iref = cljs.core.first(arglist__11504);
    arglist__11504 = cljs.core.next(arglist__11504);
    var f = cljs.core.first(arglist__11504);
    var args = cljs.core.rest(arglist__11504);
    return alter_meta_BANG___delegate(iref, f, args);
  };
  alter_meta_BANG_.cljs$core$IFn$_invoke$arity$variadic = alter_meta_BANG___delegate;
  return alter_meta_BANG_;
}();
cljs.core.reset_meta_BANG_ = function reset_meta_BANG_(iref, m) {
  return iref.meta = m;
};
cljs.core.add_watch = function add_watch(iref, key, f) {
  return cljs.core._add_watch.call(null, iref, key, f);
};
cljs.core.remove_watch = function remove_watch(iref, key) {
  return cljs.core._remove_watch.call(null, iref, key);
};
cljs.core.gensym_counter = null;
cljs.core.gensym = function() {
  var gensym = null;
  var gensym__0 = function() {
    return gensym.call(null, "G__");
  };
  var gensym__1 = function(prefix_string) {
    if (cljs.core.gensym_counter == null) {
      cljs.core.gensym_counter = cljs.core.atom.call(null, 0);
    } else {
    }
    return cljs.core.symbol.call(null, [cljs.core.str(prefix_string), cljs.core.str(cljs.core.swap_BANG_.call(null, cljs.core.gensym_counter, cljs.core.inc))].join(""));
  };
  gensym = function(prefix_string) {
    switch(arguments.length) {
      case 0:
        return gensym__0.call(this);
      case 1:
        return gensym__1.call(this, prefix_string);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  gensym.cljs$core$IFn$_invoke$arity$0 = gensym__0;
  gensym.cljs$core$IFn$_invoke$arity$1 = gensym__1;
  return gensym;
}();
cljs.core.fixture1 = 1;
cljs.core.fixture2 = 2;
cljs.core.Delay = function(state, f) {
  this.state = state;
  this.f = f;
  this.cljs$lang$protocol_mask$partition1$ = 1;
  this.cljs$lang$protocol_mask$partition0$ = 32768;
};
cljs.core.Delay.cljs$lang$type = true;
cljs.core.Delay.cljs$lang$ctorStr = "cljs.core/Delay";
cljs.core.Delay.cljs$lang$ctorPrWriter = function(this__3970__auto__, writer__3971__auto__, opt__3972__auto__) {
  return cljs.core._write.call(null, writer__3971__auto__, "cljs.core/Delay");
};
cljs.core.Delay.prototype.cljs$core$IPending$_realized_QMARK_$arity$1 = function(d) {
  var self__ = this;
  var d__$1 = this;
  return(new cljs.core.Keyword(null, "done", "done", 1016993524)).cljs$core$IFn$_invoke$arity$1(cljs.core.deref.call(null, self__.state));
};
cljs.core.Delay.prototype.cljs$core$IDeref$_deref$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return(new cljs.core.Keyword(null, "value", "value", 1125876963)).cljs$core$IFn$_invoke$arity$1(cljs.core.swap_BANG_.call(null, self__.state, function(p__11505) {
    var map__11506 = p__11505;
    var map__11506__$1 = cljs.core.seq_QMARK_.call(null, map__11506) ? cljs.core.apply.call(null, cljs.core.hash_map, map__11506) : map__11506;
    var curr_state = map__11506__$1;
    var done = cljs.core.get.call(null, map__11506__$1, new cljs.core.Keyword(null, "done", "done", 1016993524));
    if (cljs.core.truth_(done)) {
      return curr_state;
    } else {
      return new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "done", "done", 1016993524), true, new cljs.core.Keyword(null, "value", "value", 1125876963), self__.f.call(null)], null);
    }
  }));
};
cljs.core.__GT_Delay = function __GT_Delay(state, f) {
  return new cljs.core.Delay(state, f);
};
cljs.core.delay_QMARK_ = function delay_QMARK_(x) {
  return x instanceof cljs.core.Delay;
};
cljs.core.force = function force(x) {
  if (cljs.core.delay_QMARK_.call(null, x)) {
    return cljs.core.deref.call(null, x);
  } else {
    return x;
  }
};
cljs.core.realized_QMARK_ = function realized_QMARK_(d) {
  return cljs.core._realized_QMARK_.call(null, d);
};
cljs.core.IEncodeJS = function() {
  var obj11508 = {};
  return obj11508;
}();
cljs.core._clj__GT_js = function _clj__GT_js(x) {
  if (function() {
    var and__3391__auto__ = x;
    if (and__3391__auto__) {
      return x.cljs$core$IEncodeJS$_clj__GT_js$arity$1;
    } else {
      return and__3391__auto__;
    }
  }()) {
    return x.cljs$core$IEncodeJS$_clj__GT_js$arity$1(x);
  } else {
    var x__4030__auto__ = x == null ? null : x;
    return function() {
      var or__3403__auto__ = cljs.core._clj__GT_js[goog.typeOf(x__4030__auto__)];
      if (or__3403__auto__) {
        return or__3403__auto__;
      } else {
        var or__3403__auto____$1 = cljs.core._clj__GT_js["_"];
        if (or__3403__auto____$1) {
          return or__3403__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "IEncodeJS.-clj-\x3ejs", x);
        }
      }
    }().call(null, x);
  }
};
cljs.core._key__GT_js = function _key__GT_js(x) {
  if (function() {
    var and__3391__auto__ = x;
    if (and__3391__auto__) {
      return x.cljs$core$IEncodeJS$_key__GT_js$arity$1;
    } else {
      return and__3391__auto__;
    }
  }()) {
    return x.cljs$core$IEncodeJS$_key__GT_js$arity$1(x);
  } else {
    var x__4030__auto__ = x == null ? null : x;
    return function() {
      var or__3403__auto__ = cljs.core._key__GT_js[goog.typeOf(x__4030__auto__)];
      if (or__3403__auto__) {
        return or__3403__auto__;
      } else {
        var or__3403__auto____$1 = cljs.core._key__GT_js["_"];
        if (or__3403__auto____$1) {
          return or__3403__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "IEncodeJS.-key-\x3ejs", x);
        }
      }
    }().call(null, x);
  }
};
cljs.core.key__GT_js = function key__GT_js(k) {
  if (function() {
    var G__11510 = k;
    if (G__11510) {
      var bit__4053__auto__ = null;
      if (cljs.core.truth_(function() {
        var or__3403__auto__ = bit__4053__auto__;
        if (cljs.core.truth_(or__3403__auto__)) {
          return or__3403__auto__;
        } else {
          return G__11510.cljs$core$IEncodeJS$;
        }
      }())) {
        return true;
      } else {
        if (!G__11510.cljs$lang$protocol_mask$partition$) {
          return cljs.core.native_satisfies_QMARK_.call(null, cljs.core.IEncodeJS, G__11510);
        } else {
          return false;
        }
      }
    } else {
      return cljs.core.native_satisfies_QMARK_.call(null, cljs.core.IEncodeJS, G__11510);
    }
  }()) {
    return cljs.core._clj__GT_js.call(null, k);
  } else {
    if (typeof k === "string" || (typeof k === "number" || (k instanceof cljs.core.Keyword || k instanceof cljs.core.Symbol))) {
      return cljs.core.clj__GT_js.call(null, k);
    } else {
      return cljs.core.pr_str.call(null, k);
    }
  }
};
cljs.core.clj__GT_js = function clj__GT_js(x) {
  if (x == null) {
    return null;
  } else {
    if (function() {
      var G__11524 = x;
      if (G__11524) {
        var bit__4053__auto__ = null;
        if (cljs.core.truth_(function() {
          var or__3403__auto__ = bit__4053__auto__;
          if (cljs.core.truth_(or__3403__auto__)) {
            return or__3403__auto__;
          } else {
            return G__11524.cljs$core$IEncodeJS$;
          }
        }())) {
          return true;
        } else {
          if (!G__11524.cljs$lang$protocol_mask$partition$) {
            return cljs.core.native_satisfies_QMARK_.call(null, cljs.core.IEncodeJS, G__11524);
          } else {
            return false;
          }
        }
      } else {
        return cljs.core.native_satisfies_QMARK_.call(null, cljs.core.IEncodeJS, G__11524);
      }
    }()) {
      return cljs.core._clj__GT_js.call(null, x);
    } else {
      if (x instanceof cljs.core.Keyword) {
        return cljs.core.name.call(null, x);
      } else {
        if (x instanceof cljs.core.Symbol) {
          return[cljs.core.str(x)].join("");
        } else {
          if (cljs.core.map_QMARK_.call(null, x)) {
            var m = function() {
              var obj11526 = {};
              return obj11526;
            }();
            var seq__11527_11537 = cljs.core.seq.call(null, x);
            var chunk__11528_11538 = null;
            var count__11529_11539 = 0;
            var i__11530_11540 = 0;
            while (true) {
              if (i__11530_11540 < count__11529_11539) {
                var vec__11531_11541 = cljs.core._nth.call(null, chunk__11528_11538, i__11530_11540);
                var k_11542 = cljs.core.nth.call(null, vec__11531_11541, 0, null);
                var v_11543 = cljs.core.nth.call(null, vec__11531_11541, 1, null);
                m[cljs.core.key__GT_js.call(null, k_11542)] = clj__GT_js.call(null, v_11543);
                var G__11544 = seq__11527_11537;
                var G__11545 = chunk__11528_11538;
                var G__11546 = count__11529_11539;
                var G__11547 = i__11530_11540 + 1;
                seq__11527_11537 = G__11544;
                chunk__11528_11538 = G__11545;
                count__11529_11539 = G__11546;
                i__11530_11540 = G__11547;
                continue;
              } else {
                var temp__4092__auto___11548 = cljs.core.seq.call(null, seq__11527_11537);
                if (temp__4092__auto___11548) {
                  var seq__11527_11549__$1 = temp__4092__auto___11548;
                  if (cljs.core.chunked_seq_QMARK_.call(null, seq__11527_11549__$1)) {
                    var c__4151__auto___11550 = cljs.core.chunk_first.call(null, seq__11527_11549__$1);
                    var G__11551 = cljs.core.chunk_rest.call(null, seq__11527_11549__$1);
                    var G__11552 = c__4151__auto___11550;
                    var G__11553 = cljs.core.count.call(null, c__4151__auto___11550);
                    var G__11554 = 0;
                    seq__11527_11537 = G__11551;
                    chunk__11528_11538 = G__11552;
                    count__11529_11539 = G__11553;
                    i__11530_11540 = G__11554;
                    continue;
                  } else {
                    var vec__11532_11555 = cljs.core.first.call(null, seq__11527_11549__$1);
                    var k_11556 = cljs.core.nth.call(null, vec__11532_11555, 0, null);
                    var v_11557 = cljs.core.nth.call(null, vec__11532_11555, 1, null);
                    m[cljs.core.key__GT_js.call(null, k_11556)] = clj__GT_js.call(null, v_11557);
                    var G__11558 = cljs.core.next.call(null, seq__11527_11549__$1);
                    var G__11559 = null;
                    var G__11560 = 0;
                    var G__11561 = 0;
                    seq__11527_11537 = G__11558;
                    chunk__11528_11538 = G__11559;
                    count__11529_11539 = G__11560;
                    i__11530_11540 = G__11561;
                    continue;
                  }
                } else {
                }
              }
              break;
            }
            return m;
          } else {
            if (cljs.core.coll_QMARK_.call(null, x)) {
              var arr = [];
              var seq__11533_11562 = cljs.core.seq.call(null, cljs.core.map.call(null, clj__GT_js, x));
              var chunk__11534_11563 = null;
              var count__11535_11564 = 0;
              var i__11536_11565 = 0;
              while (true) {
                if (i__11536_11565 < count__11535_11564) {
                  var x_11566__$1 = cljs.core._nth.call(null, chunk__11534_11563, i__11536_11565);
                  arr.push(x_11566__$1);
                  var G__11567 = seq__11533_11562;
                  var G__11568 = chunk__11534_11563;
                  var G__11569 = count__11535_11564;
                  var G__11570 = i__11536_11565 + 1;
                  seq__11533_11562 = G__11567;
                  chunk__11534_11563 = G__11568;
                  count__11535_11564 = G__11569;
                  i__11536_11565 = G__11570;
                  continue;
                } else {
                  var temp__4092__auto___11571 = cljs.core.seq.call(null, seq__11533_11562);
                  if (temp__4092__auto___11571) {
                    var seq__11533_11572__$1 = temp__4092__auto___11571;
                    if (cljs.core.chunked_seq_QMARK_.call(null, seq__11533_11572__$1)) {
                      var c__4151__auto___11573 = cljs.core.chunk_first.call(null, seq__11533_11572__$1);
                      var G__11574 = cljs.core.chunk_rest.call(null, seq__11533_11572__$1);
                      var G__11575 = c__4151__auto___11573;
                      var G__11576 = cljs.core.count.call(null, c__4151__auto___11573);
                      var G__11577 = 0;
                      seq__11533_11562 = G__11574;
                      chunk__11534_11563 = G__11575;
                      count__11535_11564 = G__11576;
                      i__11536_11565 = G__11577;
                      continue;
                    } else {
                      var x_11578__$1 = cljs.core.first.call(null, seq__11533_11572__$1);
                      arr.push(x_11578__$1);
                      var G__11579 = cljs.core.next.call(null, seq__11533_11572__$1);
                      var G__11580 = null;
                      var G__11581 = 0;
                      var G__11582 = 0;
                      seq__11533_11562 = G__11579;
                      chunk__11534_11563 = G__11580;
                      count__11535_11564 = G__11581;
                      i__11536_11565 = G__11582;
                      continue;
                    }
                  } else {
                  }
                }
                break;
              }
              return arr;
            } else {
              if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
                return x;
              } else {
                return null;
              }
            }
          }
        }
      }
    }
  }
};
cljs.core.IEncodeClojure = function() {
  var obj11584 = {};
  return obj11584;
}();
cljs.core._js__GT_clj = function _js__GT_clj(x, options) {
  if (function() {
    var and__3391__auto__ = x;
    if (and__3391__auto__) {
      return x.cljs$core$IEncodeClojure$_js__GT_clj$arity$2;
    } else {
      return and__3391__auto__;
    }
  }()) {
    return x.cljs$core$IEncodeClojure$_js__GT_clj$arity$2(x, options);
  } else {
    var x__4030__auto__ = x == null ? null : x;
    return function() {
      var or__3403__auto__ = cljs.core._js__GT_clj[goog.typeOf(x__4030__auto__)];
      if (or__3403__auto__) {
        return or__3403__auto__;
      } else {
        var or__3403__auto____$1 = cljs.core._js__GT_clj["_"];
        if (or__3403__auto____$1) {
          return or__3403__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "IEncodeClojure.-js-\x3eclj", x);
        }
      }
    }().call(null, x, options);
  }
};
cljs.core.js__GT_clj = function() {
  var js__GT_clj = null;
  var js__GT_clj__1 = function(x) {
    return js__GT_clj.call(null, x, new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "keywordize-keys", "keywordize-keys", 4191781672), false], null));
  };
  var js__GT_clj__2 = function() {
    var G__11605__delegate = function(x, opts) {
      if (function() {
        var G__11595 = x;
        if (G__11595) {
          var bit__4053__auto__ = null;
          if (cljs.core.truth_(function() {
            var or__3403__auto__ = bit__4053__auto__;
            if (cljs.core.truth_(or__3403__auto__)) {
              return or__3403__auto__;
            } else {
              return G__11595.cljs$core$IEncodeClojure$;
            }
          }())) {
            return true;
          } else {
            if (!G__11595.cljs$lang$protocol_mask$partition$) {
              return cljs.core.native_satisfies_QMARK_.call(null, cljs.core.IEncodeClojure, G__11595);
            } else {
              return false;
            }
          }
        } else {
          return cljs.core.native_satisfies_QMARK_.call(null, cljs.core.IEncodeClojure, G__11595);
        }
      }()) {
        return cljs.core._js__GT_clj.call(null, x, cljs.core.apply.call(null, cljs.core.array_map, opts));
      } else {
        if (cljs.core.seq.call(null, opts)) {
          var map__11596 = opts;
          var map__11596__$1 = cljs.core.seq_QMARK_.call(null, map__11596) ? cljs.core.apply.call(null, cljs.core.hash_map, map__11596) : map__11596;
          var keywordize_keys = cljs.core.get.call(null, map__11596__$1, new cljs.core.Keyword(null, "keywordize-keys", "keywordize-keys", 4191781672));
          var keyfn = cljs.core.truth_(keywordize_keys) ? cljs.core.keyword : cljs.core.str;
          var f = function(map__11596, map__11596__$1, keywordize_keys, keyfn) {
            return function thisfn(x__$1) {
              if (cljs.core.seq_QMARK_.call(null, x__$1)) {
                return cljs.core.doall.call(null, cljs.core.map.call(null, thisfn, x__$1));
              } else {
                if (cljs.core.coll_QMARK_.call(null, x__$1)) {
                  return cljs.core.into.call(null, cljs.core.empty.call(null, x__$1), cljs.core.map.call(null, thisfn, x__$1));
                } else {
                  if (x__$1 instanceof Array) {
                    return cljs.core.vec.call(null, cljs.core.map.call(null, thisfn, x__$1));
                  } else {
                    if (cljs.core.type.call(null, x__$1) === Object) {
                      return cljs.core.into.call(null, cljs.core.PersistentArrayMap.EMPTY, function() {
                        var iter__4120__auto__ = function(map__11596, map__11596__$1, keywordize_keys, keyfn) {
                          return function iter__11601(s__11602) {
                            return new cljs.core.LazySeq(null, function(map__11596, map__11596__$1, keywordize_keys, keyfn) {
                              return function() {
                                var s__11602__$1 = s__11602;
                                while (true) {
                                  var temp__4092__auto__ = cljs.core.seq.call(null, s__11602__$1);
                                  if (temp__4092__auto__) {
                                    var s__11602__$2 = temp__4092__auto__;
                                    if (cljs.core.chunked_seq_QMARK_.call(null, s__11602__$2)) {
                                      var c__4118__auto__ = cljs.core.chunk_first.call(null, s__11602__$2);
                                      var size__4119__auto__ = cljs.core.count.call(null, c__4118__auto__);
                                      var b__11604 = cljs.core.chunk_buffer.call(null, size__4119__auto__);
                                      if (function() {
                                        var i__11603 = 0;
                                        while (true) {
                                          if (i__11603 < size__4119__auto__) {
                                            var k = cljs.core._nth.call(null, c__4118__auto__, i__11603);
                                            cljs.core.chunk_append.call(null, b__11604, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [keyfn.call(null, k), thisfn.call(null, x__$1[k])], null));
                                            var G__11606 = i__11603 + 1;
                                            i__11603 = G__11606;
                                            continue;
                                          } else {
                                            return true;
                                          }
                                          break;
                                        }
                                      }()) {
                                        return cljs.core.chunk_cons.call(null, cljs.core.chunk.call(null, b__11604), iter__11601.call(null, cljs.core.chunk_rest.call(null, s__11602__$2)));
                                      } else {
                                        return cljs.core.chunk_cons.call(null, cljs.core.chunk.call(null, b__11604), null);
                                      }
                                    } else {
                                      var k = cljs.core.first.call(null, s__11602__$2);
                                      return cljs.core.cons.call(null, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [keyfn.call(null, k), thisfn.call(null, x__$1[k])], null), iter__11601.call(null, cljs.core.rest.call(null, s__11602__$2)));
                                    }
                                  } else {
                                    return null;
                                  }
                                  break;
                                }
                              };
                            }(map__11596, map__11596__$1, keywordize_keys, keyfn), null, null);
                          };
                        }(map__11596, map__11596__$1, keywordize_keys, keyfn);
                        return iter__4120__auto__.call(null, cljs.core.js_keys.call(null, x__$1));
                      }());
                    } else {
                      if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
                        return x__$1;
                      } else {
                        return null;
                      }
                    }
                  }
                }
              }
            };
          }(map__11596, map__11596__$1, keywordize_keys, keyfn);
          return f.call(null, x);
        } else {
          return null;
        }
      }
    };
    var G__11605 = function(x, var_args) {
      var opts = null;
      if (arguments.length > 1) {
        opts = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
      }
      return G__11605__delegate.call(this, x, opts);
    };
    G__11605.cljs$lang$maxFixedArity = 1;
    G__11605.cljs$lang$applyTo = function(arglist__11607) {
      var x = cljs.core.first(arglist__11607);
      var opts = cljs.core.rest(arglist__11607);
      return G__11605__delegate(x, opts);
    };
    G__11605.cljs$core$IFn$_invoke$arity$variadic = G__11605__delegate;
    return G__11605;
  }();
  js__GT_clj = function(x, var_args) {
    var opts = var_args;
    switch(arguments.length) {
      case 1:
        return js__GT_clj__1.call(this, x);
      default:
        return js__GT_clj__2.cljs$core$IFn$_invoke$arity$variadic(x, cljs.core.array_seq(arguments, 1));
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  js__GT_clj.cljs$lang$maxFixedArity = 1;
  js__GT_clj.cljs$lang$applyTo = js__GT_clj__2.cljs$lang$applyTo;
  js__GT_clj.cljs$core$IFn$_invoke$arity$1 = js__GT_clj__1;
  js__GT_clj.cljs$core$IFn$_invoke$arity$variadic = js__GT_clj__2.cljs$core$IFn$_invoke$arity$variadic;
  return js__GT_clj;
}();
cljs.core.memoize = function memoize(f) {
  var mem = cljs.core.atom.call(null, cljs.core.PersistentArrayMap.EMPTY);
  return function() {
    var G__11608__delegate = function(args) {
      var temp__4090__auto__ = cljs.core.get.call(null, cljs.core.deref.call(null, mem), args);
      if (cljs.core.truth_(temp__4090__auto__)) {
        var v = temp__4090__auto__;
        return v;
      } else {
        var ret = cljs.core.apply.call(null, f, args);
        cljs.core.swap_BANG_.call(null, mem, cljs.core.assoc, args, ret);
        return ret;
      }
    };
    var G__11608 = function(var_args) {
      var args = null;
      if (arguments.length > 0) {
        args = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0), 0);
      }
      return G__11608__delegate.call(this, args);
    };
    G__11608.cljs$lang$maxFixedArity = 0;
    G__11608.cljs$lang$applyTo = function(arglist__11609) {
      var args = cljs.core.seq(arglist__11609);
      return G__11608__delegate(args);
    };
    G__11608.cljs$core$IFn$_invoke$arity$variadic = G__11608__delegate;
    return G__11608;
  }();
};
cljs.core.trampoline = function() {
  var trampoline = null;
  var trampoline__1 = function(f) {
    while (true) {
      var ret = f.call(null);
      if (cljs.core.fn_QMARK_.call(null, ret)) {
        var G__11610 = ret;
        f = G__11610;
        continue;
      } else {
        return ret;
      }
      break;
    }
  };
  var trampoline__2 = function() {
    var G__11611__delegate = function(f, args) {
      return trampoline.call(null, function() {
        return cljs.core.apply.call(null, f, args);
      });
    };
    var G__11611 = function(f, var_args) {
      var args = null;
      if (arguments.length > 1) {
        args = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
      }
      return G__11611__delegate.call(this, f, args);
    };
    G__11611.cljs$lang$maxFixedArity = 1;
    G__11611.cljs$lang$applyTo = function(arglist__11612) {
      var f = cljs.core.first(arglist__11612);
      var args = cljs.core.rest(arglist__11612);
      return G__11611__delegate(f, args);
    };
    G__11611.cljs$core$IFn$_invoke$arity$variadic = G__11611__delegate;
    return G__11611;
  }();
  trampoline = function(f, var_args) {
    var args = var_args;
    switch(arguments.length) {
      case 1:
        return trampoline__1.call(this, f);
      default:
        return trampoline__2.cljs$core$IFn$_invoke$arity$variadic(f, cljs.core.array_seq(arguments, 1));
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  trampoline.cljs$lang$maxFixedArity = 1;
  trampoline.cljs$lang$applyTo = trampoline__2.cljs$lang$applyTo;
  trampoline.cljs$core$IFn$_invoke$arity$1 = trampoline__1;
  trampoline.cljs$core$IFn$_invoke$arity$variadic = trampoline__2.cljs$core$IFn$_invoke$arity$variadic;
  return trampoline;
}();
cljs.core.rand = function() {
  var rand = null;
  var rand__0 = function() {
    return rand.call(null, 1);
  };
  var rand__1 = function(n) {
    return Math.random.call(null) * n;
  };
  rand = function(n) {
    switch(arguments.length) {
      case 0:
        return rand__0.call(this);
      case 1:
        return rand__1.call(this, n);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  rand.cljs$core$IFn$_invoke$arity$0 = rand__0;
  rand.cljs$core$IFn$_invoke$arity$1 = rand__1;
  return rand;
}();
cljs.core.rand_int = function rand_int(n) {
  return Math.floor.call(null, Math.random.call(null) * n);
};
cljs.core.rand_nth = function rand_nth(coll) {
  return cljs.core.nth.call(null, coll, cljs.core.rand_int.call(null, cljs.core.count.call(null, coll)));
};
cljs.core.group_by = function group_by(f, coll) {
  return cljs.core.reduce.call(null, function(ret, x) {
    var k = f.call(null, x);
    return cljs.core.assoc.call(null, ret, k, cljs.core.conj.call(null, cljs.core.get.call(null, ret, k, cljs.core.PersistentVector.EMPTY), x));
  }, cljs.core.PersistentArrayMap.EMPTY, coll);
};
cljs.core.make_hierarchy = function make_hierarchy() {
  return new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null, "parents", "parents", 4515496059), cljs.core.PersistentArrayMap.EMPTY, new cljs.core.Keyword(null, "descendants", "descendants", 768214664), cljs.core.PersistentArrayMap.EMPTY, new cljs.core.Keyword(null, "ancestors", "ancestors", 889955442), cljs.core.PersistentArrayMap.EMPTY], null);
};
cljs.core._global_hierarchy = null;
cljs.core.get_global_hierarchy = function get_global_hierarchy() {
  if (cljs.core._global_hierarchy == null) {
    cljs.core._global_hierarchy = cljs.core.atom.call(null, cljs.core.make_hierarchy.call(null));
  } else {
  }
  return cljs.core._global_hierarchy;
};
cljs.core.swap_global_hierarchy_BANG_ = function() {
  var swap_global_hierarchy_BANG___delegate = function(f, args) {
    return cljs.core.apply.call(null, cljs.core.swap_BANG_, cljs.core.get_global_hierarchy.call(null), f, args);
  };
  var swap_global_hierarchy_BANG_ = function(f, var_args) {
    var args = null;
    if (arguments.length > 1) {
      args = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return swap_global_hierarchy_BANG___delegate.call(this, f, args);
  };
  swap_global_hierarchy_BANG_.cljs$lang$maxFixedArity = 1;
  swap_global_hierarchy_BANG_.cljs$lang$applyTo = function(arglist__11613) {
    var f = cljs.core.first(arglist__11613);
    var args = cljs.core.rest(arglist__11613);
    return swap_global_hierarchy_BANG___delegate(f, args);
  };
  swap_global_hierarchy_BANG_.cljs$core$IFn$_invoke$arity$variadic = swap_global_hierarchy_BANG___delegate;
  return swap_global_hierarchy_BANG_;
}();
cljs.core.isa_QMARK_ = function() {
  var isa_QMARK_ = null;
  var isa_QMARK___2 = function(child, parent) {
    return isa_QMARK_.call(null, cljs.core.deref.call(null, cljs.core.get_global_hierarchy.call(null)), child, parent);
  };
  var isa_QMARK___3 = function(h, child, parent) {
    var or__3403__auto__ = cljs.core._EQ_.call(null, child, parent);
    if (or__3403__auto__) {
      return or__3403__auto__;
    } else {
      var or__3403__auto____$1 = cljs.core.contains_QMARK_.call(null, (new cljs.core.Keyword(null, "ancestors", "ancestors", 889955442)).cljs$core$IFn$_invoke$arity$1(h).call(null, child), parent);
      if (or__3403__auto____$1) {
        return or__3403__auto____$1;
      } else {
        var and__3391__auto__ = cljs.core.vector_QMARK_.call(null, parent);
        if (and__3391__auto__) {
          var and__3391__auto____$1 = cljs.core.vector_QMARK_.call(null, child);
          if (and__3391__auto____$1) {
            var and__3391__auto____$2 = cljs.core.count.call(null, parent) === cljs.core.count.call(null, child);
            if (and__3391__auto____$2) {
              var ret = true;
              var i = 0;
              while (true) {
                if (!ret || i === cljs.core.count.call(null, parent)) {
                  return ret;
                } else {
                  var G__11614 = isa_QMARK_.call(null, h, child.call(null, i), parent.call(null, i));
                  var G__11615 = i + 1;
                  ret = G__11614;
                  i = G__11615;
                  continue;
                }
                break;
              }
            } else {
              return and__3391__auto____$2;
            }
          } else {
            return and__3391__auto____$1;
          }
        } else {
          return and__3391__auto__;
        }
      }
    }
  };
  isa_QMARK_ = function(h, child, parent) {
    switch(arguments.length) {
      case 2:
        return isa_QMARK___2.call(this, h, child);
      case 3:
        return isa_QMARK___3.call(this, h, child, parent);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  isa_QMARK_.cljs$core$IFn$_invoke$arity$2 = isa_QMARK___2;
  isa_QMARK_.cljs$core$IFn$_invoke$arity$3 = isa_QMARK___3;
  return isa_QMARK_;
}();
cljs.core.parents = function() {
  var parents = null;
  var parents__1 = function(tag) {
    return parents.call(null, cljs.core.deref.call(null, cljs.core.get_global_hierarchy.call(null)), tag);
  };
  var parents__2 = function(h, tag) {
    return cljs.core.not_empty.call(null, cljs.core.get.call(null, (new cljs.core.Keyword(null, "parents", "parents", 4515496059)).cljs$core$IFn$_invoke$arity$1(h), tag));
  };
  parents = function(h, tag) {
    switch(arguments.length) {
      case 1:
        return parents__1.call(this, h);
      case 2:
        return parents__2.call(this, h, tag);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  parents.cljs$core$IFn$_invoke$arity$1 = parents__1;
  parents.cljs$core$IFn$_invoke$arity$2 = parents__2;
  return parents;
}();
cljs.core.ancestors = function() {
  var ancestors = null;
  var ancestors__1 = function(tag) {
    return ancestors.call(null, cljs.core.deref.call(null, cljs.core.get_global_hierarchy.call(null)), tag);
  };
  var ancestors__2 = function(h, tag) {
    return cljs.core.not_empty.call(null, cljs.core.get.call(null, (new cljs.core.Keyword(null, "ancestors", "ancestors", 889955442)).cljs$core$IFn$_invoke$arity$1(h), tag));
  };
  ancestors = function(h, tag) {
    switch(arguments.length) {
      case 1:
        return ancestors__1.call(this, h);
      case 2:
        return ancestors__2.call(this, h, tag);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  ancestors.cljs$core$IFn$_invoke$arity$1 = ancestors__1;
  ancestors.cljs$core$IFn$_invoke$arity$2 = ancestors__2;
  return ancestors;
}();
cljs.core.descendants = function() {
  var descendants = null;
  var descendants__1 = function(tag) {
    return descendants.call(null, cljs.core.deref.call(null, cljs.core.get_global_hierarchy.call(null)), tag);
  };
  var descendants__2 = function(h, tag) {
    return cljs.core.not_empty.call(null, cljs.core.get.call(null, (new cljs.core.Keyword(null, "descendants", "descendants", 768214664)).cljs$core$IFn$_invoke$arity$1(h), tag));
  };
  descendants = function(h, tag) {
    switch(arguments.length) {
      case 1:
        return descendants__1.call(this, h);
      case 2:
        return descendants__2.call(this, h, tag);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  descendants.cljs$core$IFn$_invoke$arity$1 = descendants__1;
  descendants.cljs$core$IFn$_invoke$arity$2 = descendants__2;
  return descendants;
}();
cljs.core.derive = function() {
  var derive = null;
  var derive__2 = function(tag, parent) {
    cljs.core.swap_global_hierarchy_BANG_.call(null, derive, tag, parent);
    return null;
  };
  var derive__3 = function(h, tag, parent) {
    var tp = (new cljs.core.Keyword(null, "parents", "parents", 4515496059)).cljs$core$IFn$_invoke$arity$1(h);
    var td = (new cljs.core.Keyword(null, "descendants", "descendants", 768214664)).cljs$core$IFn$_invoke$arity$1(h);
    var ta = (new cljs.core.Keyword(null, "ancestors", "ancestors", 889955442)).cljs$core$IFn$_invoke$arity$1(h);
    var tf = function(tp, td, ta) {
      return function(m, source, sources, target, targets) {
        return cljs.core.reduce.call(null, function(tp, td, ta) {
          return function(ret, k) {
            return cljs.core.assoc.call(null, ret, k, cljs.core.reduce.call(null, cljs.core.conj, cljs.core.get.call(null, targets, k, cljs.core.PersistentHashSet.EMPTY), cljs.core.cons.call(null, target, targets.call(null, target))));
          };
        }(tp, td, ta), m, cljs.core.cons.call(null, source, sources.call(null, source)));
      };
    }(tp, td, ta);
    var or__3403__auto__ = cljs.core.contains_QMARK_.call(null, tp.call(null, tag), parent) ? null : function() {
      if (cljs.core.contains_QMARK_.call(null, ta.call(null, tag), parent)) {
        throw new Error([cljs.core.str(tag), cljs.core.str("already has"), cljs.core.str(parent), cljs.core.str("as ancestor")].join(""));
      } else {
      }
      if (cljs.core.contains_QMARK_.call(null, ta.call(null, parent), tag)) {
        throw new Error([cljs.core.str("Cyclic derivation:"), cljs.core.str(parent), cljs.core.str("has"), cljs.core.str(tag), cljs.core.str("as ancestor")].join(""));
      } else {
      }
      return new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null, "parents", "parents", 4515496059), cljs.core.assoc.call(null, (new cljs.core.Keyword(null, "parents", "parents", 4515496059)).cljs$core$IFn$_invoke$arity$1(h), tag, cljs.core.conj.call(null, cljs.core.get.call(null, tp, tag, cljs.core.PersistentHashSet.EMPTY), parent)), new cljs.core.Keyword(null, "ancestors", "ancestors", 889955442), tf.call(null, (new cljs.core.Keyword(null, "ancestors", "ancestors", 889955442)).cljs$core$IFn$_invoke$arity$1(h), 
      tag, td, parent, ta), new cljs.core.Keyword(null, "descendants", "descendants", 768214664), tf.call(null, (new cljs.core.Keyword(null, "descendants", "descendants", 768214664)).cljs$core$IFn$_invoke$arity$1(h), parent, ta, tag, td)], null);
    }();
    if (cljs.core.truth_(or__3403__auto__)) {
      return or__3403__auto__;
    } else {
      return h;
    }
  };
  derive = function(h, tag, parent) {
    switch(arguments.length) {
      case 2:
        return derive__2.call(this, h, tag);
      case 3:
        return derive__3.call(this, h, tag, parent);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  derive.cljs$core$IFn$_invoke$arity$2 = derive__2;
  derive.cljs$core$IFn$_invoke$arity$3 = derive__3;
  return derive;
}();
cljs.core.underive = function() {
  var underive = null;
  var underive__2 = function(tag, parent) {
    cljs.core.swap_global_hierarchy_BANG_.call(null, underive, tag, parent);
    return null;
  };
  var underive__3 = function(h, tag, parent) {
    var parentMap = (new cljs.core.Keyword(null, "parents", "parents", 4515496059)).cljs$core$IFn$_invoke$arity$1(h);
    var childsParents = cljs.core.truth_(parentMap.call(null, tag)) ? cljs.core.disj.call(null, parentMap.call(null, tag), parent) : cljs.core.PersistentHashSet.EMPTY;
    var newParents = cljs.core.truth_(cljs.core.not_empty.call(null, childsParents)) ? cljs.core.assoc.call(null, parentMap, tag, childsParents) : cljs.core.dissoc.call(null, parentMap, tag);
    var deriv_seq = cljs.core.flatten.call(null, cljs.core.map.call(null, function(parentMap, childsParents, newParents) {
      return function(p1__11616_SHARP_) {
        return cljs.core.cons.call(null, cljs.core.first.call(null, p1__11616_SHARP_), cljs.core.interpose.call(null, cljs.core.first.call(null, p1__11616_SHARP_), cljs.core.second.call(null, p1__11616_SHARP_)));
      };
    }(parentMap, childsParents, newParents), cljs.core.seq.call(null, newParents)));
    if (cljs.core.contains_QMARK_.call(null, parentMap.call(null, tag), parent)) {
      return cljs.core.reduce.call(null, function(p1__11617_SHARP_, p2__11618_SHARP_) {
        return cljs.core.apply.call(null, cljs.core.derive, p1__11617_SHARP_, p2__11618_SHARP_);
      }, cljs.core.make_hierarchy.call(null), cljs.core.partition.call(null, 2, deriv_seq));
    } else {
      return h;
    }
  };
  underive = function(h, tag, parent) {
    switch(arguments.length) {
      case 2:
        return underive__2.call(this, h, tag);
      case 3:
        return underive__3.call(this, h, tag, parent);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  underive.cljs$core$IFn$_invoke$arity$2 = underive__2;
  underive.cljs$core$IFn$_invoke$arity$3 = underive__3;
  return underive;
}();
cljs.core.reset_cache = function reset_cache(method_cache, method_table, cached_hierarchy, hierarchy) {
  cljs.core.swap_BANG_.call(null, method_cache, function(_) {
    return cljs.core.deref.call(null, method_table);
  });
  return cljs.core.swap_BANG_.call(null, cached_hierarchy, function(_) {
    return cljs.core.deref.call(null, hierarchy);
  });
};
cljs.core.prefers_STAR_ = function prefers_STAR_(x, y, prefer_table) {
  var xprefs = cljs.core.deref.call(null, prefer_table).call(null, x);
  var or__3403__auto__ = cljs.core.truth_(function() {
    var and__3391__auto__ = xprefs;
    if (cljs.core.truth_(and__3391__auto__)) {
      return xprefs.call(null, y);
    } else {
      return and__3391__auto__;
    }
  }()) ? true : null;
  if (cljs.core.truth_(or__3403__auto__)) {
    return or__3403__auto__;
  } else {
    var or__3403__auto____$1 = function() {
      var ps = cljs.core.parents.call(null, y);
      while (true) {
        if (cljs.core.count.call(null, ps) > 0) {
          if (cljs.core.truth_(prefers_STAR_.call(null, x, cljs.core.first.call(null, ps), prefer_table))) {
          } else {
          }
          var G__11619 = cljs.core.rest.call(null, ps);
          ps = G__11619;
          continue;
        } else {
          return null;
        }
        break;
      }
    }();
    if (cljs.core.truth_(or__3403__auto____$1)) {
      return or__3403__auto____$1;
    } else {
      var or__3403__auto____$2 = function() {
        var ps = cljs.core.parents.call(null, x);
        while (true) {
          if (cljs.core.count.call(null, ps) > 0) {
            if (cljs.core.truth_(prefers_STAR_.call(null, cljs.core.first.call(null, ps), y, prefer_table))) {
            } else {
            }
            var G__11620 = cljs.core.rest.call(null, ps);
            ps = G__11620;
            continue;
          } else {
            return null;
          }
          break;
        }
      }();
      if (cljs.core.truth_(or__3403__auto____$2)) {
        return or__3403__auto____$2;
      } else {
        return false;
      }
    }
  }
};
cljs.core.dominates = function dominates(x, y, prefer_table) {
  var or__3403__auto__ = cljs.core.prefers_STAR_.call(null, x, y, prefer_table);
  if (cljs.core.truth_(or__3403__auto__)) {
    return or__3403__auto__;
  } else {
    return cljs.core.isa_QMARK_.call(null, x, y);
  }
};
cljs.core.find_and_cache_best_method = function find_and_cache_best_method(name, dispatch_val, hierarchy, method_table, prefer_table, method_cache, cached_hierarchy) {
  var best_entry = cljs.core.reduce.call(null, function(be, p__11623) {
    var vec__11624 = p__11623;
    var k = cljs.core.nth.call(null, vec__11624, 0, null);
    var _ = cljs.core.nth.call(null, vec__11624, 1, null);
    var e = vec__11624;
    if (cljs.core.isa_QMARK_.call(null, cljs.core.deref.call(null, hierarchy), dispatch_val, k)) {
      var be2 = cljs.core.truth_(function() {
        var or__3403__auto__ = be == null;
        if (or__3403__auto__) {
          return or__3403__auto__;
        } else {
          return cljs.core.dominates.call(null, k, cljs.core.first.call(null, be), prefer_table);
        }
      }()) ? e : be;
      if (cljs.core.truth_(cljs.core.dominates.call(null, cljs.core.first.call(null, be2), k, prefer_table))) {
      } else {
        throw new Error([cljs.core.str("Multiple methods in multimethod '"), cljs.core.str(name), cljs.core.str("' match dispatch value: "), cljs.core.str(dispatch_val), cljs.core.str(" -\x3e "), cljs.core.str(k), cljs.core.str(" and "), cljs.core.str(cljs.core.first.call(null, be2)), cljs.core.str(", and neither is preferred")].join(""));
      }
      return be2;
    } else {
      return be;
    }
  }, null, cljs.core.deref.call(null, method_table));
  if (cljs.core.truth_(best_entry)) {
    if (cljs.core._EQ_.call(null, cljs.core.deref.call(null, cached_hierarchy), cljs.core.deref.call(null, hierarchy))) {
      cljs.core.swap_BANG_.call(null, method_cache, cljs.core.assoc, dispatch_val, cljs.core.second.call(null, best_entry));
      return cljs.core.second.call(null, best_entry);
    } else {
      cljs.core.reset_cache.call(null, method_cache, method_table, cached_hierarchy, hierarchy);
      return find_and_cache_best_method.call(null, name, dispatch_val, hierarchy, method_table, prefer_table, method_cache, cached_hierarchy);
    }
  } else {
    return null;
  }
};
cljs.core.IMultiFn = function() {
  var obj11626 = {};
  return obj11626;
}();
cljs.core._reset = function _reset(mf) {
  if (function() {
    var and__3391__auto__ = mf;
    if (and__3391__auto__) {
      return mf.cljs$core$IMultiFn$_reset$arity$1;
    } else {
      return and__3391__auto__;
    }
  }()) {
    return mf.cljs$core$IMultiFn$_reset$arity$1(mf);
  } else {
    var x__4030__auto__ = mf == null ? null : mf;
    return function() {
      var or__3403__auto__ = cljs.core._reset[goog.typeOf(x__4030__auto__)];
      if (or__3403__auto__) {
        return or__3403__auto__;
      } else {
        var or__3403__auto____$1 = cljs.core._reset["_"];
        if (or__3403__auto____$1) {
          return or__3403__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "IMultiFn.-reset", mf);
        }
      }
    }().call(null, mf);
  }
};
cljs.core._add_method = function _add_method(mf, dispatch_val, method) {
  if (function() {
    var and__3391__auto__ = mf;
    if (and__3391__auto__) {
      return mf.cljs$core$IMultiFn$_add_method$arity$3;
    } else {
      return and__3391__auto__;
    }
  }()) {
    return mf.cljs$core$IMultiFn$_add_method$arity$3(mf, dispatch_val, method);
  } else {
    var x__4030__auto__ = mf == null ? null : mf;
    return function() {
      var or__3403__auto__ = cljs.core._add_method[goog.typeOf(x__4030__auto__)];
      if (or__3403__auto__) {
        return or__3403__auto__;
      } else {
        var or__3403__auto____$1 = cljs.core._add_method["_"];
        if (or__3403__auto____$1) {
          return or__3403__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "IMultiFn.-add-method", mf);
        }
      }
    }().call(null, mf, dispatch_val, method);
  }
};
cljs.core._remove_method = function _remove_method(mf, dispatch_val) {
  if (function() {
    var and__3391__auto__ = mf;
    if (and__3391__auto__) {
      return mf.cljs$core$IMultiFn$_remove_method$arity$2;
    } else {
      return and__3391__auto__;
    }
  }()) {
    return mf.cljs$core$IMultiFn$_remove_method$arity$2(mf, dispatch_val);
  } else {
    var x__4030__auto__ = mf == null ? null : mf;
    return function() {
      var or__3403__auto__ = cljs.core._remove_method[goog.typeOf(x__4030__auto__)];
      if (or__3403__auto__) {
        return or__3403__auto__;
      } else {
        var or__3403__auto____$1 = cljs.core._remove_method["_"];
        if (or__3403__auto____$1) {
          return or__3403__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "IMultiFn.-remove-method", mf);
        }
      }
    }().call(null, mf, dispatch_val);
  }
};
cljs.core._prefer_method = function _prefer_method(mf, dispatch_val, dispatch_val_y) {
  if (function() {
    var and__3391__auto__ = mf;
    if (and__3391__auto__) {
      return mf.cljs$core$IMultiFn$_prefer_method$arity$3;
    } else {
      return and__3391__auto__;
    }
  }()) {
    return mf.cljs$core$IMultiFn$_prefer_method$arity$3(mf, dispatch_val, dispatch_val_y);
  } else {
    var x__4030__auto__ = mf == null ? null : mf;
    return function() {
      var or__3403__auto__ = cljs.core._prefer_method[goog.typeOf(x__4030__auto__)];
      if (or__3403__auto__) {
        return or__3403__auto__;
      } else {
        var or__3403__auto____$1 = cljs.core._prefer_method["_"];
        if (or__3403__auto____$1) {
          return or__3403__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "IMultiFn.-prefer-method", mf);
        }
      }
    }().call(null, mf, dispatch_val, dispatch_val_y);
  }
};
cljs.core._get_method = function _get_method(mf, dispatch_val) {
  if (function() {
    var and__3391__auto__ = mf;
    if (and__3391__auto__) {
      return mf.cljs$core$IMultiFn$_get_method$arity$2;
    } else {
      return and__3391__auto__;
    }
  }()) {
    return mf.cljs$core$IMultiFn$_get_method$arity$2(mf, dispatch_val);
  } else {
    var x__4030__auto__ = mf == null ? null : mf;
    return function() {
      var or__3403__auto__ = cljs.core._get_method[goog.typeOf(x__4030__auto__)];
      if (or__3403__auto__) {
        return or__3403__auto__;
      } else {
        var or__3403__auto____$1 = cljs.core._get_method["_"];
        if (or__3403__auto____$1) {
          return or__3403__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "IMultiFn.-get-method", mf);
        }
      }
    }().call(null, mf, dispatch_val);
  }
};
cljs.core._methods = function _methods(mf) {
  if (function() {
    var and__3391__auto__ = mf;
    if (and__3391__auto__) {
      return mf.cljs$core$IMultiFn$_methods$arity$1;
    } else {
      return and__3391__auto__;
    }
  }()) {
    return mf.cljs$core$IMultiFn$_methods$arity$1(mf);
  } else {
    var x__4030__auto__ = mf == null ? null : mf;
    return function() {
      var or__3403__auto__ = cljs.core._methods[goog.typeOf(x__4030__auto__)];
      if (or__3403__auto__) {
        return or__3403__auto__;
      } else {
        var or__3403__auto____$1 = cljs.core._methods["_"];
        if (or__3403__auto____$1) {
          return or__3403__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "IMultiFn.-methods", mf);
        }
      }
    }().call(null, mf);
  }
};
cljs.core._prefers = function _prefers(mf) {
  if (function() {
    var and__3391__auto__ = mf;
    if (and__3391__auto__) {
      return mf.cljs$core$IMultiFn$_prefers$arity$1;
    } else {
      return and__3391__auto__;
    }
  }()) {
    return mf.cljs$core$IMultiFn$_prefers$arity$1(mf);
  } else {
    var x__4030__auto__ = mf == null ? null : mf;
    return function() {
      var or__3403__auto__ = cljs.core._prefers[goog.typeOf(x__4030__auto__)];
      if (or__3403__auto__) {
        return or__3403__auto__;
      } else {
        var or__3403__auto____$1 = cljs.core._prefers["_"];
        if (or__3403__auto____$1) {
          return or__3403__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "IMultiFn.-prefers", mf);
        }
      }
    }().call(null, mf);
  }
};
cljs.core._dispatch = function _dispatch(mf, args) {
  if (function() {
    var and__3391__auto__ = mf;
    if (and__3391__auto__) {
      return mf.cljs$core$IMultiFn$_dispatch$arity$2;
    } else {
      return and__3391__auto__;
    }
  }()) {
    return mf.cljs$core$IMultiFn$_dispatch$arity$2(mf, args);
  } else {
    var x__4030__auto__ = mf == null ? null : mf;
    return function() {
      var or__3403__auto__ = cljs.core._dispatch[goog.typeOf(x__4030__auto__)];
      if (or__3403__auto__) {
        return or__3403__auto__;
      } else {
        var or__3403__auto____$1 = cljs.core._dispatch["_"];
        if (or__3403__auto____$1) {
          return or__3403__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "IMultiFn.-dispatch", mf);
        }
      }
    }().call(null, mf, args);
  }
};
cljs.core.do_dispatch = function do_dispatch(mf, name, dispatch_fn, args) {
  var dispatch_val = cljs.core.apply.call(null, dispatch_fn, args);
  var target_fn = cljs.core._get_method.call(null, mf, dispatch_val);
  if (cljs.core.truth_(target_fn)) {
  } else {
    throw new Error([cljs.core.str("No method in multimethod '"), cljs.core.str(name), cljs.core.str("' for dispatch value: "), cljs.core.str(dispatch_val)].join(""));
  }
  return cljs.core.apply.call(null, target_fn, args);
};
cljs.core.MultiFn = function(name, dispatch_fn, default_dispatch_val, hierarchy, method_table, prefer_table, method_cache, cached_hierarchy) {
  this.name = name;
  this.dispatch_fn = dispatch_fn;
  this.default_dispatch_val = default_dispatch_val;
  this.hierarchy = hierarchy;
  this.method_table = method_table;
  this.prefer_table = prefer_table;
  this.method_cache = method_cache;
  this.cached_hierarchy = cached_hierarchy;
  this.cljs$lang$protocol_mask$partition0$ = 4194304;
  this.cljs$lang$protocol_mask$partition1$ = 256;
};
cljs.core.MultiFn.cljs$lang$type = true;
cljs.core.MultiFn.cljs$lang$ctorStr = "cljs.core/MultiFn";
cljs.core.MultiFn.cljs$lang$ctorPrWriter = function(this__3970__auto__, writer__3971__auto__, opt__3972__auto__) {
  return cljs.core._write.call(null, writer__3971__auto__, "cljs.core/MultiFn");
};
cljs.core.MultiFn.prototype.cljs$core$IHash$_hash$arity$1 = function(this$) {
  var self__ = this;
  var this$__$1 = this;
  return goog.getUid(this$__$1);
};
cljs.core.MultiFn.prototype.cljs$core$IMultiFn$_reset$arity$1 = function(mf) {
  var self__ = this;
  var mf__$1 = this;
  cljs.core.swap_BANG_.call(null, self__.method_table, function(mf__$2) {
    return cljs.core.PersistentArrayMap.EMPTY;
  });
  cljs.core.swap_BANG_.call(null, self__.method_cache, function(mf__$2) {
    return cljs.core.PersistentArrayMap.EMPTY;
  });
  cljs.core.swap_BANG_.call(null, self__.prefer_table, function(mf__$2) {
    return cljs.core.PersistentArrayMap.EMPTY;
  });
  cljs.core.swap_BANG_.call(null, self__.cached_hierarchy, function(mf__$2) {
    return null;
  });
  return mf__$1;
};
cljs.core.MultiFn.prototype.cljs$core$IMultiFn$_add_method$arity$3 = function(mf, dispatch_val, method) {
  var self__ = this;
  var mf__$1 = this;
  cljs.core.swap_BANG_.call(null, self__.method_table, cljs.core.assoc, dispatch_val, method);
  cljs.core.reset_cache.call(null, self__.method_cache, self__.method_table, self__.cached_hierarchy, self__.hierarchy);
  return mf__$1;
};
cljs.core.MultiFn.prototype.cljs$core$IMultiFn$_remove_method$arity$2 = function(mf, dispatch_val) {
  var self__ = this;
  var mf__$1 = this;
  cljs.core.swap_BANG_.call(null, self__.method_table, cljs.core.dissoc, dispatch_val);
  cljs.core.reset_cache.call(null, self__.method_cache, self__.method_table, self__.cached_hierarchy, self__.hierarchy);
  return mf__$1;
};
cljs.core.MultiFn.prototype.cljs$core$IMultiFn$_get_method$arity$2 = function(mf, dispatch_val) {
  var self__ = this;
  var mf__$1 = this;
  if (cljs.core._EQ_.call(null, cljs.core.deref.call(null, self__.cached_hierarchy), cljs.core.deref.call(null, self__.hierarchy))) {
  } else {
    cljs.core.reset_cache.call(null, self__.method_cache, self__.method_table, self__.cached_hierarchy, self__.hierarchy);
  }
  var temp__4090__auto__ = cljs.core.deref.call(null, self__.method_cache).call(null, dispatch_val);
  if (cljs.core.truth_(temp__4090__auto__)) {
    var target_fn = temp__4090__auto__;
    return target_fn;
  } else {
    var temp__4090__auto____$1 = cljs.core.find_and_cache_best_method.call(null, self__.name, dispatch_val, self__.hierarchy, self__.method_table, self__.prefer_table, self__.method_cache, self__.cached_hierarchy);
    if (cljs.core.truth_(temp__4090__auto____$1)) {
      var target_fn = temp__4090__auto____$1;
      return target_fn;
    } else {
      return cljs.core.deref.call(null, self__.method_table).call(null, self__.default_dispatch_val);
    }
  }
};
cljs.core.MultiFn.prototype.cljs$core$IMultiFn$_prefer_method$arity$3 = function(mf, dispatch_val_x, dispatch_val_y) {
  var self__ = this;
  var mf__$1 = this;
  if (cljs.core.truth_(cljs.core.prefers_STAR_.call(null, dispatch_val_x, dispatch_val_y, self__.prefer_table))) {
    throw new Error([cljs.core.str("Preference conflict in multimethod '"), cljs.core.str(self__.name), cljs.core.str("': "), cljs.core.str(dispatch_val_y), cljs.core.str(" is already preferred to "), cljs.core.str(dispatch_val_x)].join(""));
  } else {
  }
  cljs.core.swap_BANG_.call(null, self__.prefer_table, function(old) {
    return cljs.core.assoc.call(null, old, dispatch_val_x, cljs.core.conj.call(null, cljs.core.get.call(null, old, dispatch_val_x, cljs.core.PersistentHashSet.EMPTY), dispatch_val_y));
  });
  return cljs.core.reset_cache.call(null, self__.method_cache, self__.method_table, self__.cached_hierarchy, self__.hierarchy);
};
cljs.core.MultiFn.prototype.cljs$core$IMultiFn$_methods$arity$1 = function(mf) {
  var self__ = this;
  var mf__$1 = this;
  return cljs.core.deref.call(null, self__.method_table);
};
cljs.core.MultiFn.prototype.cljs$core$IMultiFn$_prefers$arity$1 = function(mf) {
  var self__ = this;
  var mf__$1 = this;
  return cljs.core.deref.call(null, self__.prefer_table);
};
cljs.core.MultiFn.prototype.cljs$core$IMultiFn$_dispatch$arity$2 = function(mf, args) {
  var self__ = this;
  var mf__$1 = this;
  return cljs.core.do_dispatch.call(null, mf__$1, self__.name, self__.dispatch_fn, args);
};
cljs.core.__GT_MultiFn = function __GT_MultiFn(name, dispatch_fn, default_dispatch_val, hierarchy, method_table, prefer_table, method_cache, cached_hierarchy) {
  return new cljs.core.MultiFn(name, dispatch_fn, default_dispatch_val, hierarchy, method_table, prefer_table, method_cache, cached_hierarchy);
};
cljs.core.MultiFn.prototype.call = function() {
  var G__11627__delegate = function(_, args) {
    var self = this;
    return cljs.core._dispatch.call(null, self, args);
  };
  var G__11627 = function(_, var_args) {
    var args = null;
    if (arguments.length > 1) {
      args = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return G__11627__delegate.call(this, _, args);
  };
  G__11627.cljs$lang$maxFixedArity = 1;
  G__11627.cljs$lang$applyTo = function(arglist__11628) {
    var _ = cljs.core.first(arglist__11628);
    var args = cljs.core.rest(arglist__11628);
    return G__11627__delegate(_, args);
  };
  G__11627.cljs$core$IFn$_invoke$arity$variadic = G__11627__delegate;
  return G__11627;
}();
cljs.core.MultiFn.prototype.apply = function(_, args) {
  var self = this;
  return cljs.core._dispatch.call(null, self, args);
};
cljs.core.remove_all_methods = function remove_all_methods(multifn) {
  return cljs.core._reset.call(null, multifn);
};
cljs.core.remove_method = function remove_method(multifn, dispatch_val) {
  return cljs.core._remove_method.call(null, multifn, dispatch_val);
};
cljs.core.prefer_method = function prefer_method(multifn, dispatch_val_x, dispatch_val_y) {
  return cljs.core._prefer_method.call(null, multifn, dispatch_val_x, dispatch_val_y);
};
cljs.core.methods$ = function methods$(multifn) {
  return cljs.core._methods.call(null, multifn);
};
cljs.core.get_method = function get_method(multifn, dispatch_val) {
  return cljs.core._get_method.call(null, multifn, dispatch_val);
};
cljs.core.prefers = function prefers(multifn) {
  return cljs.core._prefers.call(null, multifn);
};
cljs.core.UUID = function(uuid) {
  this.uuid = uuid;
  this.cljs$lang$protocol_mask$partition1$ = 0;
  this.cljs$lang$protocol_mask$partition0$ = 2153775104;
};
cljs.core.UUID.cljs$lang$type = true;
cljs.core.UUID.cljs$lang$ctorStr = "cljs.core/UUID";
cljs.core.UUID.cljs$lang$ctorPrWriter = function(this__3970__auto__, writer__3971__auto__, opt__3972__auto__) {
  return cljs.core._write.call(null, writer__3971__auto__, "cljs.core/UUID");
};
cljs.core.UUID.prototype.cljs$core$IHash$_hash$arity$1 = function(this$) {
  var self__ = this;
  var this$__$1 = this;
  return goog.string.hashCode(cljs.core.pr_str.call(null, this$__$1));
};
cljs.core.UUID.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(_, writer, ___$1) {
  var self__ = this;
  var ___$2 = this;
  return cljs.core._write.call(null, writer, [cljs.core.str('#uuid "'), cljs.core.str(self__.uuid), cljs.core.str('"')].join(""));
};
cljs.core.UUID.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(_, other) {
  var self__ = this;
  var ___$1 = this;
  return other instanceof cljs.core.UUID && self__.uuid === other.uuid;
};
cljs.core.__GT_UUID = function __GT_UUID(uuid) {
  return new cljs.core.UUID(uuid);
};
cljs.core.ExceptionInfo = function(message, data, cause) {
  this.message = message;
  this.data = data;
  this.cause = cause;
};
cljs.core.ExceptionInfo.cljs$lang$type = true;
cljs.core.ExceptionInfo.cljs$lang$ctorStr = "cljs.core/ExceptionInfo";
cljs.core.ExceptionInfo.cljs$lang$ctorPrWriter = function(this__3973__auto__, writer__3974__auto__, opts__3975__auto__) {
  return cljs.core._write.call(null, writer__3974__auto__, "cljs.core/ExceptionInfo");
};
cljs.core.__GT_ExceptionInfo = function __GT_ExceptionInfo(message, data, cause) {
  return new cljs.core.ExceptionInfo(message, data, cause);
};
cljs.core.ExceptionInfo.prototype = new Error;
cljs.core.ExceptionInfo.prototype.constructor = cljs.core.ExceptionInfo;
cljs.core.ex_info = function() {
  var ex_info = null;
  var ex_info__2 = function(msg, map) {
    return new cljs.core.ExceptionInfo(msg, map, null);
  };
  var ex_info__3 = function(msg, map, cause) {
    return new cljs.core.ExceptionInfo(msg, map, cause);
  };
  ex_info = function(msg, map, cause) {
    switch(arguments.length) {
      case 2:
        return ex_info__2.call(this, msg, map);
      case 3:
        return ex_info__3.call(this, msg, map, cause);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  ex_info.cljs$core$IFn$_invoke$arity$2 = ex_info__2;
  ex_info.cljs$core$IFn$_invoke$arity$3 = ex_info__3;
  return ex_info;
}();
cljs.core.ex_data = function ex_data(ex) {
  if (ex instanceof cljs.core.ExceptionInfo) {
    return ex.data;
  } else {
    return null;
  }
};
cljs.core.ex_message = function ex_message(ex) {
  if (ex instanceof Error) {
    return ex.message;
  } else {
    return null;
  }
};
cljs.core.ex_cause = function ex_cause(ex) {
  if (ex instanceof cljs.core.ExceptionInfo) {
    return ex.cause;
  } else {
    return null;
  }
};
cljs.core.comparator = function comparator(pred) {
  return function(x, y) {
    if (cljs.core.truth_(pred.call(null, x, y))) {
      return-1;
    } else {
      if (cljs.core.truth_(pred.call(null, y, x))) {
        return 1;
      } else {
        if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
          return 0;
        } else {
          return null;
        }
      }
    }
  };
};
cljs.core.special_symbol_QMARK_ = function special_symbol_QMARK_(x) {
  return cljs.core.contains_QMARK_.call(null, new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 19, [new cljs.core.Symbol(null, "deftype*", "deftype*", -978581244, null), null, new cljs.core.Symbol(null, "new", "new", -1640422567, null), null, new cljs.core.Symbol(null, "quote", "quote", -1532577739, null), null, new cljs.core.Symbol(null, "\x26", "\x26", -1640531489, null), null, new cljs.core.Symbol(null, "set!", "set!", -1637004872, null), null, new cljs.core.Symbol(null, 
  "recur", "recur", -1532142362, null), null, new cljs.core.Symbol(null, ".", ".", -1640531481, null), null, new cljs.core.Symbol(null, "ns", "ns", -1640528002, null), null, new cljs.core.Symbol(null, "do", "do", -1640528316, null), null, new cljs.core.Symbol(null, "fn*", "fn*", -1640430053, null), null, new cljs.core.Symbol(null, "throw", "throw", -1530191713, null), null, new cljs.core.Symbol(null, "letfn*", "letfn*", 1548249632, null), null, new cljs.core.Symbol(null, "js*", "js*", -1640426054, 
  null), null, new cljs.core.Symbol(null, "defrecord*", "defrecord*", 774272013, null), null, new cljs.core.Symbol(null, "let*", "let*", -1637213400, null), null, new cljs.core.Symbol(null, "loop*", "loop*", -1537374273, null), null, new cljs.core.Symbol(null, "try", "try", -1640416396, null), null, new cljs.core.Symbol(null, "if", "if", -1640528170, null), null, new cljs.core.Symbol(null, "def", "def", -1640432194, null), null], null), null), x);
};
goog.provide("clojure.core.reducers");
goog.require("cljs.core");
goog.require("cljs.core");
goog.require("cljs.core");
clojure.core.reducers.fjtask = function fjtask(f) {
  return f;
};
clojure.core.reducers.fjinvoke = function fjinvoke(f) {
  return f.call(null);
};
clojure.core.reducers.fjfork = function fjfork(task) {
  return task;
};
clojure.core.reducers.fjjoin = function fjjoin(task) {
  return task.call(null);
};
clojure.core.reducers.reduce = function() {
  var reduce = null;
  var reduce__2 = function(f, coll) {
    return reduce.call(null, f, f.call(null), coll);
  };
  var reduce__3 = function(f, init, coll) {
    if (cljs.core.map_QMARK_.call(null, coll)) {
      return cljs.core._kv_reduce.call(null, coll, f, init);
    } else {
      if (coll == null) {
        return init;
      } else {
        if (coll instanceof Array) {
          return cljs.core.array_reduce.call(null, coll, f, init);
        } else {
          if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
            return cljs.core._reduce.call(null, coll, f, init);
          } else {
            return null;
          }
        }
      }
    }
  };
  reduce = function(f, init, coll) {
    switch(arguments.length) {
      case 2:
        return reduce__2.call(this, f, init);
      case 3:
        return reduce__3.call(this, f, init, coll);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  reduce.cljs$core$IFn$_invoke$arity$2 = reduce__2;
  reduce.cljs$core$IFn$_invoke$arity$3 = reduce__3;
  return reduce;
}();
clojure.core.reducers.CollFold = function() {
  var obj11630 = {};
  return obj11630;
}();
clojure.core.reducers.coll_fold = function coll_fold(coll, n, combinef, reducef) {
  if (function() {
    var and__3391__auto__ = coll;
    if (and__3391__auto__) {
      return coll.clojure$core$reducers$CollFold$coll_fold$arity$4;
    } else {
      return and__3391__auto__;
    }
  }()) {
    return coll.clojure$core$reducers$CollFold$coll_fold$arity$4(coll, n, combinef, reducef);
  } else {
    var x__4030__auto__ = coll == null ? null : coll;
    return function() {
      var or__3403__auto__ = clojure.core.reducers.coll_fold[goog.typeOf(x__4030__auto__)];
      if (or__3403__auto__) {
        return or__3403__auto__;
      } else {
        var or__3403__auto____$1 = clojure.core.reducers.coll_fold["_"];
        if (or__3403__auto____$1) {
          return or__3403__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "CollFold.coll-fold", coll);
        }
      }
    }().call(null, coll, n, combinef, reducef);
  }
};
clojure.core.reducers.fold = function() {
  var fold = null;
  var fold__2 = function(reducef, coll) {
    return fold.call(null, reducef, reducef, coll);
  };
  var fold__3 = function(combinef, reducef, coll) {
    return fold.call(null, 512, combinef, reducef, coll);
  };
  var fold__4 = function(n, combinef, reducef, coll) {
    return clojure.core.reducers.coll_fold.call(null, coll, n, combinef, reducef);
  };
  fold = function(n, combinef, reducef, coll) {
    switch(arguments.length) {
      case 2:
        return fold__2.call(this, n, combinef);
      case 3:
        return fold__3.call(this, n, combinef, reducef);
      case 4:
        return fold__4.call(this, n, combinef, reducef, coll);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  fold.cljs$core$IFn$_invoke$arity$2 = fold__2;
  fold.cljs$core$IFn$_invoke$arity$3 = fold__3;
  fold.cljs$core$IFn$_invoke$arity$4 = fold__4;
  return fold;
}();
clojure.core.reducers.reducer = function reducer(coll, xf) {
  if (typeof clojure.core.reducers.t11634 !== "undefined") {
  } else {
    clojure.core.reducers.t11634 = function(xf, coll, reducer, meta11635) {
      this.xf = xf;
      this.coll = coll;
      this.reducer = reducer;
      this.meta11635 = meta11635;
      this.cljs$lang$protocol_mask$partition1$ = 0;
      this.cljs$lang$protocol_mask$partition0$ = 917504;
    };
    clojure.core.reducers.t11634.cljs$lang$type = true;
    clojure.core.reducers.t11634.cljs$lang$ctorStr = "clojure.core.reducers/t11634";
    clojure.core.reducers.t11634.cljs$lang$ctorPrWriter = function(this__3970__auto__, writer__3971__auto__, opt__3972__auto__) {
      return cljs.core._write.call(null, writer__3971__auto__, "clojure.core.reducers/t11634");
    };
    clojure.core.reducers.t11634.prototype.cljs$core$IReduce$_reduce$arity$2 = function(this$, f1) {
      var self__ = this;
      var this$__$1 = this;
      return cljs.core._reduce.call(null, this$__$1, f1, f1.call(null));
    };
    clojure.core.reducers.t11634.prototype.cljs$core$IReduce$_reduce$arity$3 = function(_, f1, init) {
      var self__ = this;
      var ___$1 = this;
      return cljs.core._reduce.call(null, self__.coll, self__.xf.call(null, f1), init);
    };
    clojure.core.reducers.t11634.prototype.cljs$core$IMeta$_meta$arity$1 = function(_11636) {
      var self__ = this;
      var _11636__$1 = this;
      return self__.meta11635;
    };
    clojure.core.reducers.t11634.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(_11636, meta11635__$1) {
      var self__ = this;
      var _11636__$1 = this;
      return new clojure.core.reducers.t11634(self__.xf, self__.coll, self__.reducer, meta11635__$1);
    };
    clojure.core.reducers.__GT_t11634 = function __GT_t11634(xf__$1, coll__$1, reducer__$1, meta11635) {
      return new clojure.core.reducers.t11634(xf__$1, coll__$1, reducer__$1, meta11635);
    };
  }
  return new clojure.core.reducers.t11634(xf, coll, reducer, null);
};
clojure.core.reducers.folder = function folder(coll, xf) {
  if (typeof clojure.core.reducers.t11640 !== "undefined") {
  } else {
    clojure.core.reducers.t11640 = function(xf, coll, folder, meta11641) {
      this.xf = xf;
      this.coll = coll;
      this.folder = folder;
      this.meta11641 = meta11641;
      this.cljs$lang$protocol_mask$partition1$ = 0;
      this.cljs$lang$protocol_mask$partition0$ = 917504;
    };
    clojure.core.reducers.t11640.cljs$lang$type = true;
    clojure.core.reducers.t11640.cljs$lang$ctorStr = "clojure.core.reducers/t11640";
    clojure.core.reducers.t11640.cljs$lang$ctorPrWriter = function(this__3970__auto__, writer__3971__auto__, opt__3972__auto__) {
      return cljs.core._write.call(null, writer__3971__auto__, "clojure.core.reducers/t11640");
    };
    clojure.core.reducers.t11640.prototype.clojure$core$reducers$CollFold$ = true;
    clojure.core.reducers.t11640.prototype.clojure$core$reducers$CollFold$coll_fold$arity$4 = function(_, n, combinef, reducef) {
      var self__ = this;
      var ___$1 = this;
      return clojure.core.reducers.coll_fold.call(null, self__.coll, n, combinef, self__.xf.call(null, reducef));
    };
    clojure.core.reducers.t11640.prototype.cljs$core$IReduce$_reduce$arity$2 = function(_, f1) {
      var self__ = this;
      var ___$1 = this;
      return cljs.core._reduce.call(null, self__.coll, self__.xf.call(null, f1), f1.call(null));
    };
    clojure.core.reducers.t11640.prototype.cljs$core$IReduce$_reduce$arity$3 = function(_, f1, init) {
      var self__ = this;
      var ___$1 = this;
      return cljs.core._reduce.call(null, self__.coll, self__.xf.call(null, f1), init);
    };
    clojure.core.reducers.t11640.prototype.cljs$core$IMeta$_meta$arity$1 = function(_11642) {
      var self__ = this;
      var _11642__$1 = this;
      return self__.meta11641;
    };
    clojure.core.reducers.t11640.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(_11642, meta11641__$1) {
      var self__ = this;
      var _11642__$1 = this;
      return new clojure.core.reducers.t11640(self__.xf, self__.coll, self__.folder, meta11641__$1);
    };
    clojure.core.reducers.__GT_t11640 = function __GT_t11640(xf__$1, coll__$1, folder__$1, meta11641) {
      return new clojure.core.reducers.t11640(xf__$1, coll__$1, folder__$1, meta11641);
    };
  }
  return new clojure.core.reducers.t11640(xf, coll, folder, null);
};
clojure.core.reducers.map = function() {
  var map = null;
  var map__1 = function(f) {
    return function(x__3820__auto__) {
      return map.call(null, f, x__3820__auto__);
    };
  };
  var map__2 = function(f, coll) {
    return clojure.core.reducers.folder.call(null, coll, function(f1) {
      return function() {
        var G__11643 = null;
        var G__11643__0 = function() {
          return f1.call(null);
        };
        var G__11643__2 = function(ret, v) {
          return f1.call(null, ret, f.call(null, v));
        };
        var G__11643__3 = function(ret, k, v) {
          return f1.call(null, ret, f.call(null, k, v));
        };
        G__11643 = function(ret, k, v) {
          switch(arguments.length) {
            case 0:
              return G__11643__0.call(this);
            case 2:
              return G__11643__2.call(this, ret, k);
            case 3:
              return G__11643__3.call(this, ret, k, v);
          }
          throw new Error("Invalid arity: " + arguments.length);
        };
        return G__11643;
      }();
    });
  };
  map = function(f, coll) {
    switch(arguments.length) {
      case 1:
        return map__1.call(this, f);
      case 2:
        return map__2.call(this, f, coll);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  map.cljs$core$IFn$_invoke$arity$1 = map__1;
  map.cljs$core$IFn$_invoke$arity$2 = map__2;
  return map;
}();
clojure.core.reducers.mapcat = function() {
  var mapcat = null;
  var mapcat__1 = function(f) {
    return function(x__3820__auto__) {
      return mapcat.call(null, f, x__3820__auto__);
    };
  };
  var mapcat__2 = function(f, coll) {
    return clojure.core.reducers.folder.call(null, coll, function(f1) {
      return function() {
        var G__11644 = null;
        var G__11644__0 = function() {
          return f1.call(null);
        };
        var G__11644__2 = function(ret, v) {
          return clojure.core.reducers.reduce.call(null, f1, ret, f.call(null, v));
        };
        var G__11644__3 = function(ret, k, v) {
          return clojure.core.reducers.reduce.call(null, f1, ret, f.call(null, k, v));
        };
        G__11644 = function(ret, k, v) {
          switch(arguments.length) {
            case 0:
              return G__11644__0.call(this);
            case 2:
              return G__11644__2.call(this, ret, k);
            case 3:
              return G__11644__3.call(this, ret, k, v);
          }
          throw new Error("Invalid arity: " + arguments.length);
        };
        return G__11644;
      }();
    });
  };
  mapcat = function(f, coll) {
    switch(arguments.length) {
      case 1:
        return mapcat__1.call(this, f);
      case 2:
        return mapcat__2.call(this, f, coll);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  mapcat.cljs$core$IFn$_invoke$arity$1 = mapcat__1;
  mapcat.cljs$core$IFn$_invoke$arity$2 = mapcat__2;
  return mapcat;
}();
clojure.core.reducers.filter = function() {
  var filter = null;
  var filter__1 = function(pred) {
    return function(x__3820__auto__) {
      return filter.call(null, pred, x__3820__auto__);
    };
  };
  var filter__2 = function(pred, coll) {
    return clojure.core.reducers.folder.call(null, coll, function(f1) {
      return function() {
        var G__11645 = null;
        var G__11645__0 = function() {
          return f1.call(null);
        };
        var G__11645__2 = function(ret, v) {
          if (cljs.core.truth_(pred.call(null, v))) {
            return f1.call(null, ret, v);
          } else {
            return ret;
          }
        };
        var G__11645__3 = function(ret, k, v) {
          if (cljs.core.truth_(pred.call(null, k, v))) {
            return f1.call(null, ret, k, v);
          } else {
            return ret;
          }
        };
        G__11645 = function(ret, k, v) {
          switch(arguments.length) {
            case 0:
              return G__11645__0.call(this);
            case 2:
              return G__11645__2.call(this, ret, k);
            case 3:
              return G__11645__3.call(this, ret, k, v);
          }
          throw new Error("Invalid arity: " + arguments.length);
        };
        return G__11645;
      }();
    });
  };
  filter = function(pred, coll) {
    switch(arguments.length) {
      case 1:
        return filter__1.call(this, pred);
      case 2:
        return filter__2.call(this, pred, coll);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  filter.cljs$core$IFn$_invoke$arity$1 = filter__1;
  filter.cljs$core$IFn$_invoke$arity$2 = filter__2;
  return filter;
}();
clojure.core.reducers.flatten = function() {
  var flatten = null;
  var flatten__0 = function() {
    return function(x__3820__auto__) {
      return flatten.call(null, x__3820__auto__);
    };
  };
  var flatten__1 = function(coll) {
    return clojure.core.reducers.folder.call(null, coll, function(f1) {
      return function() {
        var G__11646 = null;
        var G__11646__0 = function() {
          return f1.call(null);
        };
        var G__11646__2 = function(ret, v) {
          if (cljs.core.sequential_QMARK_.call(null, v)) {
            return cljs.core._reduce.call(null, flatten.call(null, v), f1, ret);
          } else {
            return f1.call(null, ret, v);
          }
        };
        G__11646 = function(ret, v) {
          switch(arguments.length) {
            case 0:
              return G__11646__0.call(this);
            case 2:
              return G__11646__2.call(this, ret, v);
          }
          throw new Error("Invalid arity: " + arguments.length);
        };
        return G__11646;
      }();
    });
  };
  flatten = function(coll) {
    switch(arguments.length) {
      case 0:
        return flatten__0.call(this);
      case 1:
        return flatten__1.call(this, coll);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  flatten.cljs$core$IFn$_invoke$arity$0 = flatten__0;
  flatten.cljs$core$IFn$_invoke$arity$1 = flatten__1;
  return flatten;
}();
clojure.core.reducers.remove = function() {
  var remove = null;
  var remove__1 = function(pred) {
    return function(x__3820__auto__) {
      return remove.call(null, pred, x__3820__auto__);
    };
  };
  var remove__2 = function(pred, coll) {
    return clojure.core.reducers.filter.call(null, cljs.core.complement.call(null, pred), coll);
  };
  remove = function(pred, coll) {
    switch(arguments.length) {
      case 1:
        return remove__1.call(this, pred);
      case 2:
        return remove__2.call(this, pred, coll);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  remove.cljs$core$IFn$_invoke$arity$1 = remove__1;
  remove.cljs$core$IFn$_invoke$arity$2 = remove__2;
  return remove;
}();
clojure.core.reducers.take_while = function() {
  var take_while = null;
  var take_while__1 = function(pred) {
    return function(x__3820__auto__) {
      return take_while.call(null, pred, x__3820__auto__);
    };
  };
  var take_while__2 = function(pred, coll) {
    return clojure.core.reducers.reducer.call(null, coll, function(f1) {
      return function() {
        var G__11647 = null;
        var G__11647__0 = function() {
          return f1.call(null);
        };
        var G__11647__2 = function(ret, v) {
          if (cljs.core.truth_(pred.call(null, v))) {
            return f1.call(null, ret, v);
          } else {
            return cljs.core.reduced.call(null, ret);
          }
        };
        var G__11647__3 = function(ret, k, v) {
          if (cljs.core.truth_(pred.call(null, k, v))) {
            return f1.call(null, ret, k, v);
          } else {
            return cljs.core.reduced.call(null, ret);
          }
        };
        G__11647 = function(ret, k, v) {
          switch(arguments.length) {
            case 0:
              return G__11647__0.call(this);
            case 2:
              return G__11647__2.call(this, ret, k);
            case 3:
              return G__11647__3.call(this, ret, k, v);
          }
          throw new Error("Invalid arity: " + arguments.length);
        };
        return G__11647;
      }();
    });
  };
  take_while = function(pred, coll) {
    switch(arguments.length) {
      case 1:
        return take_while__1.call(this, pred);
      case 2:
        return take_while__2.call(this, pred, coll);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  take_while.cljs$core$IFn$_invoke$arity$1 = take_while__1;
  take_while.cljs$core$IFn$_invoke$arity$2 = take_while__2;
  return take_while;
}();
clojure.core.reducers.take = function() {
  var take = null;
  var take__1 = function(n) {
    return function(x__3820__auto__) {
      return take.call(null, n, x__3820__auto__);
    };
  };
  var take__2 = function(n, coll) {
    return clojure.core.reducers.reducer.call(null, coll, function(f1) {
      var cnt = cljs.core.atom.call(null, n);
      return function() {
        var G__11648 = null;
        var G__11648__0 = function() {
          return f1.call(null);
        };
        var G__11648__2 = function(ret, v) {
          cljs.core.swap_BANG_.call(null, cnt, cljs.core.dec);
          if (cljs.core.deref.call(null, cnt) < 0) {
            return cljs.core.reduced.call(null, ret);
          } else {
            return f1.call(null, ret, v);
          }
        };
        var G__11648__3 = function(ret, k, v) {
          cljs.core.swap_BANG_.call(null, cnt, cljs.core.dec);
          if (cljs.core.deref.call(null, cnt) < 0) {
            return cljs.core.reduced.call(null, ret);
          } else {
            return f1.call(null, ret, k, v);
          }
        };
        G__11648 = function(ret, k, v) {
          switch(arguments.length) {
            case 0:
              return G__11648__0.call(this);
            case 2:
              return G__11648__2.call(this, ret, k);
            case 3:
              return G__11648__3.call(this, ret, k, v);
          }
          throw new Error("Invalid arity: " + arguments.length);
        };
        return G__11648;
      }();
    });
  };
  take = function(n, coll) {
    switch(arguments.length) {
      case 1:
        return take__1.call(this, n);
      case 2:
        return take__2.call(this, n, coll);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  take.cljs$core$IFn$_invoke$arity$1 = take__1;
  take.cljs$core$IFn$_invoke$arity$2 = take__2;
  return take;
}();
clojure.core.reducers.drop = function() {
  var drop = null;
  var drop__1 = function(n) {
    return function(x__3820__auto__) {
      return drop.call(null, n, x__3820__auto__);
    };
  };
  var drop__2 = function(n, coll) {
    return clojure.core.reducers.reducer.call(null, coll, function(f1) {
      var cnt = cljs.core.atom.call(null, n);
      return function() {
        var G__11649 = null;
        var G__11649__0 = function() {
          return f1.call(null);
        };
        var G__11649__2 = function(ret, v) {
          cljs.core.swap_BANG_.call(null, cnt, cljs.core.dec);
          if (cljs.core.deref.call(null, cnt) < 0) {
            return f1.call(null, ret, v);
          } else {
            return ret;
          }
        };
        var G__11649__3 = function(ret, k, v) {
          cljs.core.swap_BANG_.call(null, cnt, cljs.core.dec);
          if (cljs.core.deref.call(null, cnt) < 0) {
            return f1.call(null, ret, k, v);
          } else {
            return ret;
          }
        };
        G__11649 = function(ret, k, v) {
          switch(arguments.length) {
            case 0:
              return G__11649__0.call(this);
            case 2:
              return G__11649__2.call(this, ret, k);
            case 3:
              return G__11649__3.call(this, ret, k, v);
          }
          throw new Error("Invalid arity: " + arguments.length);
        };
        return G__11649;
      }();
    });
  };
  drop = function(n, coll) {
    switch(arguments.length) {
      case 1:
        return drop__1.call(this, n);
      case 2:
        return drop__2.call(this, n, coll);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  drop.cljs$core$IFn$_invoke$arity$1 = drop__1;
  drop.cljs$core$IFn$_invoke$arity$2 = drop__2;
  return drop;
}();
clojure.core.reducers.Cat = function(cnt, left, right) {
  this.cnt = cnt;
  this.left = left;
  this.right = right;
  this.cljs$lang$protocol_mask$partition1$ = 0;
  this.cljs$lang$protocol_mask$partition0$ = 8912898;
};
clojure.core.reducers.Cat.cljs$lang$type = true;
clojure.core.reducers.Cat.cljs$lang$ctorStr = "clojure.core.reducers/Cat";
clojure.core.reducers.Cat.cljs$lang$ctorPrWriter = function(this__3970__auto__, writer__3971__auto__, opt__3972__auto__) {
  return cljs.core._write.call(null, writer__3971__auto__, "clojure.core.reducers/Cat");
};
clojure.core.reducers.Cat.prototype.clojure$core$reducers$CollFold$ = true;
clojure.core.reducers.Cat.prototype.clojure$core$reducers$CollFold$coll_fold$arity$4 = function(this$, n, combinef, reducef) {
  var self__ = this;
  var this$__$1 = this;
  return cljs.core._reduce.call(null, this$__$1, reducef);
};
clojure.core.reducers.Cat.prototype.cljs$core$IReduce$_reduce$arity$2 = function(this$, f1) {
  var self__ = this;
  var this$__$1 = this;
  return cljs.core._reduce.call(null, this$__$1, f1, f1.call(null));
};
clojure.core.reducers.Cat.prototype.cljs$core$IReduce$_reduce$arity$3 = function(_, f1, init) {
  var self__ = this;
  var ___$1 = this;
  return cljs.core._reduce.call(null, self__.right, f1, cljs.core._reduce.call(null, self__.left, f1, init));
};
clojure.core.reducers.Cat.prototype.cljs$core$ISeqable$_seq$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return cljs.core.concat.call(null, cljs.core.seq.call(null, self__.left), cljs.core.seq.call(null, self__.right));
};
clojure.core.reducers.Cat.prototype.cljs$core$ICounted$_count$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return self__.cnt;
};
clojure.core.reducers.__GT_Cat = function __GT_Cat(cnt, left, right) {
  return new clojure.core.reducers.Cat(cnt, left, right);
};
clojure.core.reducers.cat = function() {
  var cat = null;
  var cat__0 = function() {
    return[];
  };
  var cat__1 = function(ctor) {
    return function() {
      var G__11650 = null;
      var G__11650__0 = function() {
        return ctor.call(null);
      };
      var G__11650__2 = function(left, right) {
        return cat.call(null, left, right);
      };
      G__11650 = function(left, right) {
        switch(arguments.length) {
          case 0:
            return G__11650__0.call(this);
          case 2:
            return G__11650__2.call(this, left, right);
        }
        throw new Error("Invalid arity: " + arguments.length);
      };
      return G__11650;
    }();
  };
  var cat__2 = function(left, right) {
    if (cljs.core.count.call(null, left) === 0) {
      return right;
    } else {
      if (cljs.core.count.call(null, right) === 0) {
        return left;
      } else {
        if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
          return new clojure.core.reducers.Cat(cljs.core.count.call(null, left) + cljs.core.count.call(null, right), left, right);
        } else {
          return null;
        }
      }
    }
  };
  cat = function(left, right) {
    switch(arguments.length) {
      case 0:
        return cat__0.call(this);
      case 1:
        return cat__1.call(this, left);
      case 2:
        return cat__2.call(this, left, right);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  cat.cljs$core$IFn$_invoke$arity$0 = cat__0;
  cat.cljs$core$IFn$_invoke$arity$1 = cat__1;
  cat.cljs$core$IFn$_invoke$arity$2 = cat__2;
  return cat;
}();
clojure.core.reducers.append_BANG_ = function append_BANG_(acc, x) {
  var G__11652 = acc;
  G__11652.push(x);
  return G__11652;
};
clojure.core.reducers.foldcat = function foldcat(coll) {
  return clojure.core.reducers.fold.call(null, clojure.core.reducers.cat, clojure.core.reducers.append_BANG_, coll);
};
clojure.core.reducers.monoid = function monoid(op, ctor) {
  return function() {
    var m = null;
    var m__0 = function() {
      return ctor.call(null);
    };
    var m__2 = function(a, b) {
      return op.call(null, a, b);
    };
    m = function(a, b) {
      switch(arguments.length) {
        case 0:
          return m__0.call(this);
        case 2:
          return m__2.call(this, a, b);
      }
      throw new Error("Invalid arity: " + arguments.length);
    };
    m.cljs$core$IFn$_invoke$arity$0 = m__0;
    m.cljs$core$IFn$_invoke$arity$2 = m__2;
    return m;
  }();
};
clojure.core.reducers.foldvec = function foldvec(v, n, combinef, reducef) {
  if (cljs.core.empty_QMARK_.call(null, v)) {
    return combinef.call(null);
  } else {
    if (cljs.core.count.call(null, v) <= n) {
      return clojure.core.reducers.reduce.call(null, reducef, combinef.call(null), v);
    } else {
      if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
        var split = cljs.core.quot.call(null, cljs.core.count.call(null, v), 2);
        var v1 = cljs.core.subvec.call(null, v, 0, split);
        var v2 = cljs.core.subvec.call(null, v, split, cljs.core.count.call(null, v));
        var fc = function(split, v1, v2) {
          return function(child) {
            return function(split, v1, v2) {
              return function() {
                return foldvec.call(null, child, n, combinef, reducef);
              };
            }(split, v1, v2);
          };
        }(split, v1, v2);
        return clojure.core.reducers.fjinvoke.call(null, function() {
          var f1 = fc.call(null, v1);
          var t2 = clojure.core.reducers.fjtask.call(null, fc.call(null, v2));
          clojure.core.reducers.fjfork.call(null, t2);
          return combinef.call(null, f1.call(null), clojure.core.reducers.fjjoin.call(null, t2));
        });
      } else {
        return null;
      }
    }
  }
};
cljs.core.PersistentVector.prototype.clojure$core$reducers$CollFold$ = true;
cljs.core.PersistentVector.prototype.clojure$core$reducers$CollFold$coll_fold$arity$4 = function(v, n, combinef, reducef) {
  var v__$1 = this;
  return clojure.core.reducers.foldvec.call(null, v__$1, n, combinef, reducef);
};
clojure.core.reducers.CollFold["object"] = true;
clojure.core.reducers.coll_fold["object"] = function(coll, n, combinef, reducef) {
  return clojure.core.reducers.reduce.call(null, reducef, combinef.call(null), coll);
};
clojure.core.reducers.CollFold["null"] = true;
clojure.core.reducers.coll_fold["null"] = function(coll, n, combinef, reducef) {
  return combinef.call(null);
};
goog.provide("cljs.core.match");
goog.require("cljs.core");
cljs.core.match.backtrack = new Error;
goog.provide("termcat.rewrite");
goog.require("cljs.core");
goog.require("clojure.core.reducers");
goog.require("clojure.core.reducers");
goog.require("cljs.core.match");
termcat.rewrite.IWrapped = function() {
  var obj8768 = {};
  return obj8768;
}();
termcat.rewrite.unwrap = function unwrap(orig) {
  if (function() {
    var and__3391__auto__ = orig;
    if (and__3391__auto__) {
      return orig.termcat$rewrite$IWrapped$unwrap$arity$1;
    } else {
      return and__3391__auto__;
    }
  }()) {
    return orig.termcat$rewrite$IWrapped$unwrap$arity$1(orig);
  } else {
    var x__4030__auto__ = orig == null ? null : orig;
    return function() {
      var or__3403__auto__ = termcat.rewrite.unwrap[goog.typeOf(x__4030__auto__)];
      if (or__3403__auto__) {
        return or__3403__auto__;
      } else {
        var or__3403__auto____$1 = termcat.rewrite.unwrap["_"];
        if (or__3403__auto____$1) {
          return or__3403__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "IWrapped.unwrap", orig);
        }
      }
    }().call(null, orig);
  }
};
termcat.rewrite.rewrap = function rewrap(orig, result) {
  if (function() {
    var and__3391__auto__ = orig;
    if (and__3391__auto__) {
      return orig.termcat$rewrite$IWrapped$rewrap$arity$2;
    } else {
      return and__3391__auto__;
    }
  }()) {
    return orig.termcat$rewrite$IWrapped$rewrap$arity$2(orig, result);
  } else {
    var x__4030__auto__ = orig == null ? null : orig;
    return function() {
      var or__3403__auto__ = termcat.rewrite.rewrap[goog.typeOf(x__4030__auto__)];
      if (or__3403__auto__) {
        return or__3403__auto__;
      } else {
        var or__3403__auto____$1 = termcat.rewrite.rewrap["_"];
        if (or__3403__auto____$1) {
          return or__3403__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "IWrapped.rewrap", orig);
        }
      }
    }().call(null, orig, result);
  }
};
termcat.rewrite.IWrapped["object"] = true;
termcat.rewrite.unwrap["object"] = function(orig) {
  return orig;
};
termcat.rewrite.rewrap["object"] = function(orig, result) {
  return result;
};
termcat.rewrite.cache = function cache() {
  return cljs.core.atom.call(null, cljs.core.PersistentArrayMap.EMPTY);
};
goog.exportSymbol("termcat.rewrite.cache", termcat.rewrite.cache);
termcat.rewrite.cache_update_BANG_ = function() {
  var cache_update_BANG___delegate = function(f, args) {
    return cljs.core.reset_BANG_.call(null, termcat.rewrite._BANG__STAR_cache_STAR_, cljs.core.apply.call(null, f, cljs.core.deref.call(null, termcat.rewrite._BANG__STAR_cache_STAR_), args));
  };
  var cache_update_BANG_ = function(f, var_args) {
    var args = null;
    if (arguments.length > 1) {
      args = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return cache_update_BANG___delegate.call(this, f, args);
  };
  cache_update_BANG_.cljs$lang$maxFixedArity = 1;
  cache_update_BANG_.cljs$lang$applyTo = function(arglist__8769) {
    var f = cljs.core.first(arglist__8769);
    var args = cljs.core.rest(arglist__8769);
    return cache_update_BANG___delegate(f, args);
  };
  cache_update_BANG_.cljs$core$IFn$_invoke$arity$variadic = cache_update_BANG___delegate;
  return cache_update_BANG_;
}();
termcat.rewrite.cache_get = function cache_get(k) {
  return cljs.core.deref.call(null, termcat.rewrite._BANG__STAR_cache_STAR_).call(null, k);
};
termcat.rewrite.memoize = function memoize(f) {
  return function() {
    var G__8770__delegate = function(args) {
      var temp__4090__auto__ = termcat.rewrite.cache_get.call(null, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [f, args], null));
      if (cljs.core.truth_(temp__4090__auto__)) {
        var result = temp__4090__auto__;
        return result;
      } else {
        var result = cljs.core.apply.call(null, f, args);
        termcat.rewrite.cache_update_BANG_.call(null, cljs.core.assoc, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [f, args], null), result);
        return result;
      }
    };
    var G__8770 = function(var_args) {
      var args = null;
      if (arguments.length > 0) {
        args = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0), 0);
      }
      return G__8770__delegate.call(this, args);
    };
    G__8770.cljs$lang$maxFixedArity = 0;
    G__8770.cljs$lang$applyTo = function(arglist__8771) {
      var args = cljs.core.seq(arglist__8771);
      return G__8770__delegate(args);
    };
    G__8770.cljs$core$IFn$_invoke$arity$variadic = G__8770__delegate;
    return G__8770;
  }();
};
termcat.rewrite.pad_1 = function pad_1(v) {
  return cljs.core.cons.call(null, null, cljs.core.conj.call(null, v, null));
};
termcat.rewrite.trim = function() {
  var trim = null;
  var trim__1 = function(v) {
    return trim.call(null, v, 0, cljs.core.count.call(null, v) - 1);
  };
  var trim__3 = function(v, lidx, ridx) {
    while (true) {
      var lnil_QMARK_ = cljs.core.get.call(null, v, lidx) == null;
      var rnil_QMARK_ = cljs.core.get.call(null, v, ridx) == null;
      if (lidx > ridx) {
        return cljs.core.PersistentVector.EMPTY;
      } else {
        if (lnil_QMARK_ || rnil_QMARK_) {
          var G__8772 = v;
          var G__8773 = lnil_QMARK_ ? lidx + 1 : lidx;
          var G__8774 = rnil_QMARK_ ? ridx - 1 : ridx;
          v = G__8772;
          lidx = G__8773;
          ridx = G__8774;
          continue;
        } else {
          if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
            return cljs.core.subvec.call(null, v, lidx, ridx + 1);
          } else {
            return null;
          }
        }
      }
      break;
    }
  };
  trim = function(v, lidx, ridx) {
    switch(arguments.length) {
      case 1:
        return trim__1.call(this, v);
      case 3:
        return trim__3.call(this, v, lidx, ridx);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  trim.cljs$core$IFn$_invoke$arity$1 = trim__1;
  trim.cljs$core$IFn$_invoke$arity$3 = trim__3;
  return trim;
}();
termcat.rewrite.apply_rule_STAR_ = function apply_rule_STAR_(rule, state, input) {
  var or__3403__auto__ = rule.call(null, state, input);
  if (cljs.core.truth_(or__3403__auto__)) {
    return or__3403__auto__;
  } else {
    return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [state, input], null);
  }
};
termcat.rewrite.apply_rule = termcat.rewrite.memoize.call(null, function() {
  var G__8776 = null;
  var G__8776__2 = function(rule, input) {
    return termcat.rewrite.apply_rule.call(null, rule, rule.call(null), input);
  };
  var G__8776__3 = function(rule, state, input) {
    var vec__8775 = termcat.rewrite.apply_rule_STAR_.call(null, rule, state, termcat.rewrite.unwrap.call(null, input));
    var state2 = cljs.core.nth.call(null, vec__8775, 0, null);
    var input2 = cljs.core.nth.call(null, vec__8775, 1, null);
    return cljs.core.with_meta.call(null, termcat.rewrite.rewrap.call(null, input, input2), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "state", "state", 1123661827), state2], null));
  };
  G__8776 = function(rule, state, input) {
    switch(arguments.length) {
      case 2:
        return G__8776__2.call(this, rule, state);
      case 3:
        return G__8776__3.call(this, rule, state, input);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  return G__8776;
}());
termcat.rewrite.disjunction = function() {
  var disjunction__delegate = function(orig_rules) {
    var init_state = cljs.core.persistent_BANG_.call(null, clojure.core.reducers.reduce.call(null, cljs.core.assoc_BANG_, cljs.core.transient$.call(null, cljs.core.PersistentArrayMap.EMPTY), clojure.core.reducers.mapcat.call(null, function(p1__8777_SHARP_) {
      return p1__8777_SHARP_.call(null);
    }, orig_rules)));
    return function() {
      var G__8786 = null;
      var G__8786__0 = function() {
        return init_state;
      };
      var G__8786__2 = function(orig_state, orig_input) {
        var next_rules = orig_rules;
        var G__8783 = new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [orig_state, orig_input], null);
        var vec__8784 = G__8783;
        var state = cljs.core.nth.call(null, vec__8784, 0, null);
        var input = cljs.core.nth.call(null, vec__8784, 1, null);
        var next_rules__$1 = next_rules;
        var G__8783__$1 = G__8783;
        while (true) {
          var next_rules__$2 = next_rules__$1;
          var vec__8785 = G__8783__$1;
          var state__$1 = cljs.core.nth.call(null, vec__8785, 0, null);
          var input__$1 = cljs.core.nth.call(null, vec__8785, 1, null);
          if (cljs.core.empty_QMARK_.call(null, next_rules__$2)) {
            return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [state__$1, input__$1], null);
          } else {
            var result = termcat.rewrite.apply_rule_STAR_.call(null, cljs.core.first.call(null, next_rules__$2), state__$1, input__$1);
            if (!cljs.core._EQ_.call(null, cljs.core.second.call(null, result), input__$1)) {
              return result;
            } else {
              var G__8787 = cljs.core.next.call(null, next_rules__$2);
              var G__8788 = result;
              next_rules__$1 = G__8787;
              G__8783__$1 = G__8788;
              continue;
            }
          }
          break;
        }
      };
      G__8786 = function(orig_state, orig_input) {
        switch(arguments.length) {
          case 0:
            return G__8786__0.call(this);
          case 2:
            return G__8786__2.call(this, orig_state, orig_input);
        }
        throw new Error("Invalid arity: " + arguments.length);
      };
      return G__8786;
    }();
  };
  var disjunction = function(var_args) {
    var orig_rules = null;
    if (arguments.length > 0) {
      orig_rules = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0), 0);
    }
    return disjunction__delegate.call(this, orig_rules);
  };
  disjunction.cljs$lang$maxFixedArity = 0;
  disjunction.cljs$lang$applyTo = function(arglist__8789) {
    var orig_rules = cljs.core.seq(arglist__8789);
    return disjunction__delegate(orig_rules);
  };
  disjunction.cljs$core$IFn$_invoke$arity$variadic = disjunction__delegate;
  return disjunction;
}();
termcat.rewrite.sequence = function() {
  var sequence__delegate = function(orig_rules) {
    var init_state = cljs.core.persistent_BANG_.call(null, clojure.core.reducers.reduce.call(null, cljs.core.assoc_BANG_, cljs.core.transient$.call(null, cljs.core.PersistentArrayMap.EMPTY), clojure.core.reducers.mapcat.call(null, function(p1__8790_SHARP_) {
      return p1__8790_SHARP_.call(null);
    }, orig_rules)));
    return function() {
      var G__8799 = null;
      var G__8799__0 = function() {
        return init_state;
      };
      var G__8799__2 = function(orig_state, orig_input) {
        var next_rules = orig_rules;
        var G__8796 = new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [orig_state, orig_input], null);
        var vec__8797 = G__8796;
        var state = cljs.core.nth.call(null, vec__8797, 0, null);
        var input = cljs.core.nth.call(null, vec__8797, 1, null);
        var next_rules__$1 = next_rules;
        var G__8796__$1 = G__8796;
        while (true) {
          var next_rules__$2 = next_rules__$1;
          var vec__8798 = G__8796__$1;
          var state__$1 = cljs.core.nth.call(null, vec__8798, 0, null);
          var input__$1 = cljs.core.nth.call(null, vec__8798, 1, null);
          if (cljs.core.empty_QMARK_.call(null, next_rules__$2)) {
            return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [state__$1, input__$1], null);
          } else {
            var G__8800 = cljs.core.next.call(null, next_rules__$2);
            var G__8801 = termcat.rewrite.apply_rule_STAR_.call(null, cljs.core.first.call(null, next_rules__$2), state__$1, input__$1);
            next_rules__$1 = G__8800;
            G__8796__$1 = G__8801;
            continue;
          }
          break;
        }
      };
      G__8799 = function(orig_state, orig_input) {
        switch(arguments.length) {
          case 0:
            return G__8799__0.call(this);
          case 2:
            return G__8799__2.call(this, orig_state, orig_input);
        }
        throw new Error("Invalid arity: " + arguments.length);
      };
      return G__8799;
    }();
  };
  var sequence = function(var_args) {
    var orig_rules = null;
    if (arguments.length > 0) {
      orig_rules = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0), 0);
    }
    return sequence__delegate.call(this, orig_rules);
  };
  sequence.cljs$lang$maxFixedArity = 0;
  sequence.cljs$lang$applyTo = function(arglist__8802) {
    var orig_rules = cljs.core.seq(arglist__8802);
    return sequence__delegate(orig_rules);
  };
  sequence.cljs$core$IFn$_invoke$arity$variadic = sequence__delegate;
  return sequence;
}();
termcat.rewrite.fixpoint = function fixpoint(rule) {
  return function() {
    var G__8805 = null;
    var G__8805__0 = function() {
      return rule.call(null);
    };
    var G__8805__2 = function(state, input) {
      while (true) {
        var vec__8804 = termcat.rewrite.apply_rule_STAR_.call(null, rule, state, input);
        var new_state = cljs.core.nth.call(null, vec__8804, 0, null);
        var new_input = cljs.core.nth.call(null, vec__8804, 1, null);
        if (cljs.core.empty_QMARK_.call(null, new_input) || cljs.core._EQ_.call(null, input, new_input)) {
          return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new_state, new_input], null);
        } else {
          var G__8806 = new_state;
          var G__8807 = new_input;
          state = G__8806;
          input = G__8807;
          continue;
        }
        break;
      }
    };
    G__8805 = function(state, input) {
      switch(arguments.length) {
        case 0:
          return G__8805__0.call(this);
        case 2:
          return G__8805__2.call(this, state, input);
      }
      throw new Error("Invalid arity: " + arguments.length);
    };
    return G__8805;
  }();
};
termcat.rewrite.recursion = function recursion(rule, pred) {
  var f = function() {
    var f = null;
    var f__0 = function() {
      return rule.call(null);
    };
    var f__2 = function(state, input) {
      return termcat.rewrite.apply_rule_STAR_.call(null, rule, state, cljs.core.persistent_BANG_.call(null, clojure.core.reducers.reduce.call(null, cljs.core.conj_BANG_, cljs.core.transient$.call(null, cljs.core.PersistentVector.EMPTY), clojure.core.reducers.map.call(null, function(p1__8808_SHARP_) {
        if (cljs.core.truth_(pred.call(null, p1__8808_SHARP_))) {
          return termcat.rewrite.apply_rule.call(null, f, p1__8808_SHARP_);
        } else {
          return p1__8808_SHARP_;
        }
      }, input))));
    };
    f = function(state, input) {
      switch(arguments.length) {
        case 0:
          return f__0.call(this);
        case 2:
          return f__2.call(this, state, input);
      }
      throw new Error("Invalid arity: " + arguments.length);
    };
    f.cljs$core$IFn$_invoke$arity$0 = f__0;
    f.cljs$core$IFn$_invoke$arity$2 = f__2;
    return f;
  }();
  return f;
};
termcat.rewrite.abstraction = function abstraction(rule) {
  return function() {
    var G__8809 = null;
    var G__8809__0 = function() {
      return new cljs.core.PersistentArrayMap.fromArray([rule, rule.call(null)], true, false);
    };
    var G__8809__2 = function(state, input) {
      var temp__4090__auto__ = rule.call(null, cljs.core.get.call(null, state, rule), input);
      if (cljs.core.truth_(temp__4090__auto__)) {
        var r = temp__4090__auto__;
        return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.assoc.call(null, state, rule, cljs.core.first.call(null, r)), cljs.core.second.call(null, r)], null);
      } else {
        return null;
      }
    };
    G__8809 = function(state, input) {
      switch(arguments.length) {
        case 0:
          return G__8809__0.call(this);
        case 2:
          return G__8809__2.call(this, state, input);
      }
      throw new Error("Invalid arity: " + arguments.length);
    };
    return G__8809;
  }();
};
termcat.rewrite.procedure = function procedure(rule) {
  return function() {
    var G__8812 = null;
    var G__8812__0 = function() {
      return rule.call(null);
    };
    var G__8812__2 = function(orig_state, orig_input) {
      var state = orig_state;
      var input = termcat.rewrite.pad_1.call(null, orig_input);
      var output = cljs.core.transient$.call(null, cljs.core.PersistentVector.EMPTY);
      while (true) {
        if (cljs.core.empty_QMARK_.call(null, input)) {
          return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [state, termcat.rewrite.trim.call(null, cljs.core.persistent_BANG_.call(null, output))], null);
        } else {
          var vec__8811 = termcat.rewrite.apply_rule_STAR_.call(null, rule, state, input);
          var new_state = cljs.core.nth.call(null, vec__8811, 0, null);
          var new_input = cljs.core.nth.call(null, vec__8811, 1, null);
          var G__8813 = new_state;
          var G__8814 = cljs.core.next.call(null, new_input);
          var G__8815 = cljs.core.conj_BANG_.call(null, output, cljs.core.first.call(null, new_input));
          state = G__8813;
          input = G__8814;
          output = G__8815;
          continue;
        }
        break;
      }
    };
    G__8812 = function(orig_state, orig_input) {
      switch(arguments.length) {
        case 0:
          return G__8812__0.call(this);
        case 2:
          return G__8812__2.call(this, orig_state, orig_input);
      }
      throw new Error("Invalid arity: " + arguments.length);
    };
    return G__8812;
  }();
};
termcat.rewrite.lexical_scope = function() {
  var lexical_scope = null;
  var lexical_scope__1 = function(prev_level_state) {
    return prev_level_state;
  };
  var lexical_scope__2 = function(left_state, returned_state) {
    return left_state;
  };
  lexical_scope = function(left_state, returned_state) {
    switch(arguments.length) {
      case 1:
        return lexical_scope__1.call(this, left_state);
      case 2:
        return lexical_scope__2.call(this, left_state, returned_state);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  lexical_scope.cljs$core$IFn$_invoke$arity$1 = lexical_scope__1;
  lexical_scope.cljs$core$IFn$_invoke$arity$2 = lexical_scope__2;
  return lexical_scope;
}();
termcat.rewrite.flat_scope = function() {
  var flat_scope = null;
  var flat_scope__1 = function(prev_level_state) {
    return prev_level_state;
  };
  var flat_scope__2 = function(left_state, returned_state) {
    return returned_state;
  };
  flat_scope = function(left_state, returned_state) {
    switch(arguments.length) {
      case 1:
        return flat_scope__1.call(this, left_state);
      case 2:
        return flat_scope__2.call(this, left_state, returned_state);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  flat_scope.cljs$core$IFn$_invoke$arity$1 = flat_scope__1;
  flat_scope.cljs$core$IFn$_invoke$arity$2 = flat_scope__2;
  return flat_scope;
}();
termcat.rewrite.recursive_procedure = function recursive_procedure(rule, pred, scope) {
  var f = function() {
    var f = null;
    var f__0 = function() {
      return rule.call(null);
    };
    var f__2 = function(orig_state, orig_input) {
      var state = orig_state;
      var input = termcat.rewrite.pad_1.call(null, orig_input);
      var output = cljs.core.transient$.call(null, cljs.core.PersistentVector.EMPTY);
      while (true) {
        if (cljs.core.empty_QMARK_.call(null, input)) {
          return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [state, termcat.rewrite.trim.call(null, cljs.core.persistent_BANG_.call(null, output))], null);
        } else {
          var el1 = cljs.core.first.call(null, input);
          var input__$1 = cljs.core.truth_(pred.call(null, el1)) ? cljs.core.cons.call(null, termcat.rewrite.apply_rule.call(null, f, scope.call(null, state), el1), cljs.core.next.call(null, input)) : input;
          var vec__8823 = termcat.rewrite.apply_rule_STAR_.call(null, rule, state, input__$1);
          var new_state = cljs.core.nth.call(null, vec__8823, 0, null);
          var new_input = cljs.core.nth.call(null, vec__8823, 1, null);
          var G__8824 = new_state;
          var G__8825 = cljs.core.next.call(null, new_input);
          var G__8826 = cljs.core.conj_BANG_.call(null, output, cljs.core.first.call(null, new_input));
          state = G__8824;
          input = G__8825;
          output = G__8826;
          continue;
        }
        break;
      }
    };
    f = function(orig_state, orig_input) {
      switch(arguments.length) {
        case 0:
          return f__0.call(this);
        case 2:
          return f__2.call(this, orig_state, orig_input);
      }
      throw new Error("Invalid arity: " + arguments.length);
    };
    f.cljs$core$IFn$_invoke$arity$0 = f__0;
    f.cljs$core$IFn$_invoke$arity$2 = f__2;
    return f;
  }();
  return f;
};
termcat.rewrite.reduction = function reduction(rule) {
  return function() {
    var G__8827 = null;
    var G__8827__0 = function() {
      return rule.call(null);
    };
    var G__8827__2 = function(state, input) {
      return clojure.core.reducers.reduce.call(null, rule, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [state, cljs.core.PersistentVector.EMPTY], null), cljs.core.conj.call(null, input, null));
    };
    G__8827 = function(state, input) {
      switch(arguments.length) {
        case 0:
          return G__8827__0.call(this);
        case 2:
          return G__8827__2.call(this, state, input);
      }
      throw new Error("Invalid arity: " + arguments.length);
    };
    return G__8827;
  }();
};
goog.provide("cljs.reader");
goog.require("cljs.core");
goog.require("goog.string");
goog.require("goog.string");
cljs.reader.PushbackReader = function() {
  var obj11668 = {};
  return obj11668;
}();
cljs.reader.read_char = function read_char(reader) {
  if (function() {
    var and__3391__auto__ = reader;
    if (and__3391__auto__) {
      return reader.cljs$reader$PushbackReader$read_char$arity$1;
    } else {
      return and__3391__auto__;
    }
  }()) {
    return reader.cljs$reader$PushbackReader$read_char$arity$1(reader);
  } else {
    var x__4030__auto__ = reader == null ? null : reader;
    return function() {
      var or__3403__auto__ = cljs.reader.read_char[goog.typeOf(x__4030__auto__)];
      if (or__3403__auto__) {
        return or__3403__auto__;
      } else {
        var or__3403__auto____$1 = cljs.reader.read_char["_"];
        if (or__3403__auto____$1) {
          return or__3403__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "PushbackReader.read-char", reader);
        }
      }
    }().call(null, reader);
  }
};
cljs.reader.unread = function unread(reader, ch) {
  if (function() {
    var and__3391__auto__ = reader;
    if (and__3391__auto__) {
      return reader.cljs$reader$PushbackReader$unread$arity$2;
    } else {
      return and__3391__auto__;
    }
  }()) {
    return reader.cljs$reader$PushbackReader$unread$arity$2(reader, ch);
  } else {
    var x__4030__auto__ = reader == null ? null : reader;
    return function() {
      var or__3403__auto__ = cljs.reader.unread[goog.typeOf(x__4030__auto__)];
      if (or__3403__auto__) {
        return or__3403__auto__;
      } else {
        var or__3403__auto____$1 = cljs.reader.unread["_"];
        if (or__3403__auto____$1) {
          return or__3403__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "PushbackReader.unread", reader);
        }
      }
    }().call(null, reader, ch);
  }
};
cljs.reader.StringPushbackReader = function(s, buffer, idx) {
  this.s = s;
  this.buffer = buffer;
  this.idx = idx;
};
cljs.reader.StringPushbackReader.cljs$lang$type = true;
cljs.reader.StringPushbackReader.cljs$lang$ctorStr = "cljs.reader/StringPushbackReader";
cljs.reader.StringPushbackReader.cljs$lang$ctorPrWriter = function(this__3970__auto__, writer__3971__auto__, opt__3972__auto__) {
  return cljs.core._write.call(null, writer__3971__auto__, "cljs.reader/StringPushbackReader");
};
cljs.reader.StringPushbackReader.prototype.cljs$reader$PushbackReader$ = true;
cljs.reader.StringPushbackReader.prototype.cljs$reader$PushbackReader$read_char$arity$1 = function(reader) {
  var self__ = this;
  var reader__$1 = this;
  if (self__.buffer.length === 0) {
    self__.idx = self__.idx + 1;
    return self__.s[self__.idx];
  } else {
    return self__.buffer.pop();
  }
};
cljs.reader.StringPushbackReader.prototype.cljs$reader$PushbackReader$unread$arity$2 = function(reader, ch) {
  var self__ = this;
  var reader__$1 = this;
  return self__.buffer.push(ch);
};
cljs.reader.__GT_StringPushbackReader = function __GT_StringPushbackReader(s, buffer, idx) {
  return new cljs.reader.StringPushbackReader(s, buffer, idx);
};
cljs.reader.push_back_reader = function push_back_reader(s) {
  return new cljs.reader.StringPushbackReader(s, [], -1);
};
cljs.reader.whitespace_QMARK_ = function whitespace_QMARK_(ch) {
  var or__3403__auto__ = goog.string.isBreakingWhitespace(ch);
  if (cljs.core.truth_(or__3403__auto__)) {
    return or__3403__auto__;
  } else {
    return "," === ch;
  }
};
cljs.reader.numeric_QMARK_ = function numeric_QMARK_(ch) {
  return goog.string.isNumeric(ch);
};
cljs.reader.comment_prefix_QMARK_ = function comment_prefix_QMARK_(ch) {
  return ";" === ch;
};
cljs.reader.number_literal_QMARK_ = function number_literal_QMARK_(reader, initch) {
  return cljs.reader.numeric_QMARK_.call(null, initch) || ("+" === initch || "-" === initch) && cljs.reader.numeric_QMARK_.call(null, function() {
    var next_ch = cljs.reader.read_char.call(null, reader);
    cljs.reader.unread.call(null, reader, next_ch);
    return next_ch;
  }());
};
cljs.reader.reader_error = function() {
  var reader_error__delegate = function(rdr, msg) {
    throw new Error(cljs.core.apply.call(null, cljs.core.str, msg));
  };
  var reader_error = function(rdr, var_args) {
    var msg = null;
    if (arguments.length > 1) {
      msg = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return reader_error__delegate.call(this, rdr, msg);
  };
  reader_error.cljs$lang$maxFixedArity = 1;
  reader_error.cljs$lang$applyTo = function(arglist__11669) {
    var rdr = cljs.core.first(arglist__11669);
    var msg = cljs.core.rest(arglist__11669);
    return reader_error__delegate(rdr, msg);
  };
  reader_error.cljs$core$IFn$_invoke$arity$variadic = reader_error__delegate;
  return reader_error;
}();
cljs.reader.macro_terminating_QMARK_ = function macro_terminating_QMARK_(ch) {
  var and__3391__auto__ = !(ch === "#");
  if (and__3391__auto__) {
    var and__3391__auto____$1 = !(ch === "'");
    if (and__3391__auto____$1) {
      var and__3391__auto____$2 = !(ch === ":");
      if (and__3391__auto____$2) {
        return cljs.reader.macros.call(null, ch);
      } else {
        return and__3391__auto____$2;
      }
    } else {
      return and__3391__auto____$1;
    }
  } else {
    return and__3391__auto__;
  }
};
cljs.reader.read_token = function read_token(rdr, initch) {
  var sb = new goog.string.StringBuffer(initch);
  var ch = cljs.reader.read_char.call(null, rdr);
  while (true) {
    if (ch == null || (cljs.reader.whitespace_QMARK_.call(null, ch) || cljs.reader.macro_terminating_QMARK_.call(null, ch))) {
      cljs.reader.unread.call(null, rdr, ch);
      return sb.toString();
    } else {
      var G__11670 = function() {
        sb.append(ch);
        return sb;
      }();
      var G__11671 = cljs.reader.read_char.call(null, rdr);
      sb = G__11670;
      ch = G__11671;
      continue;
    }
    break;
  }
};
cljs.reader.skip_line = function skip_line(reader, _) {
  while (true) {
    var ch = cljs.reader.read_char.call(null, reader);
    if (ch === "\n" || (ch === "\r" || ch == null)) {
      return reader;
    } else {
      continue;
    }
    break;
  }
};
cljs.reader.int_pattern = cljs.core.re_pattern.call(null, "([-+]?)(?:(0)|([1-9][0-9]*)|0[xX]([0-9A-Fa-f]+)|0([0-7]+)|([1-9][0-9]?)[rR]([0-9A-Za-z]+)|0[0-9]+)(N)?");
cljs.reader.ratio_pattern = cljs.core.re_pattern.call(null, "([-+]?[0-9]+)/([0-9]+)");
cljs.reader.float_pattern = cljs.core.re_pattern.call(null, "([-+]?[0-9]+(\\.[0-9]*)?([eE][-+]?[0-9]+)?)(M)?");
cljs.reader.symbol_pattern = cljs.core.re_pattern.call(null, "[:]?([^0-9/].*/)?([^0-9/][^/]*)");
cljs.reader.re_find_STAR_ = function re_find_STAR_(re, s) {
  var matches = re.exec(s);
  if (matches == null) {
    return null;
  } else {
    if (matches.length === 1) {
      return matches[0];
    } else {
      return matches;
    }
  }
};
cljs.reader.match_int = function match_int(s) {
  var groups = cljs.reader.re_find_STAR_.call(null, cljs.reader.int_pattern, s);
  var group3 = groups[2];
  if (!(group3 == null || group3.length < 1)) {
    return 0;
  } else {
    var negate = "-" === groups[1] ? -1 : 1;
    var a = cljs.core.truth_(groups[3]) ? [groups[3], 10] : cljs.core.truth_(groups[4]) ? [groups[4], 16] : cljs.core.truth_(groups[5]) ? [groups[5], 8] : cljs.core.truth_(groups[7]) ? [groups[7], parseInt(groups[7])] : new cljs.core.Keyword(null, "default", "default", 2558708147) ? [null, null] : null;
    var n = a[0];
    var radix = a[1];
    if (n == null) {
      return null;
    } else {
      return negate * parseInt(n, radix);
    }
  }
};
cljs.reader.match_ratio = function match_ratio(s) {
  var groups = cljs.reader.re_find_STAR_.call(null, cljs.reader.ratio_pattern, s);
  var numinator = groups[1];
  var denominator = groups[2];
  return parseInt(numinator) / parseInt(denominator);
};
cljs.reader.match_float = function match_float(s) {
  return parseFloat(s);
};
cljs.reader.re_matches_STAR_ = function re_matches_STAR_(re, s) {
  var matches = re.exec(s);
  if (!(matches == null) && matches[0] === s) {
    if (matches.length === 1) {
      return matches[0];
    } else {
      return matches;
    }
  } else {
    return null;
  }
};
cljs.reader.match_number = function match_number(s) {
  if (cljs.core.truth_(cljs.reader.re_matches_STAR_.call(null, cljs.reader.int_pattern, s))) {
    return cljs.reader.match_int.call(null, s);
  } else {
    if (cljs.core.truth_(cljs.reader.re_matches_STAR_.call(null, cljs.reader.ratio_pattern, s))) {
      return cljs.reader.match_ratio.call(null, s);
    } else {
      if (cljs.core.truth_(cljs.reader.re_matches_STAR_.call(null, cljs.reader.float_pattern, s))) {
        return cljs.reader.match_float.call(null, s);
      } else {
        return null;
      }
    }
  }
};
cljs.reader.escape_char_map = function escape_char_map(c) {
  if (c === "t") {
    return "\t";
  } else {
    if (c === "r") {
      return "\r";
    } else {
      if (c === "n") {
        return "\n";
      } else {
        if (c === "\\") {
          return "\\";
        } else {
          if (c === '"') {
            return'"';
          } else {
            if (c === "b") {
              return "\b";
            } else {
              if (c === "f") {
                return "\f";
              } else {
                if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
                  return null;
                } else {
                  return null;
                }
              }
            }
          }
        }
      }
    }
  }
};
cljs.reader.read_2_chars = function read_2_chars(reader) {
  return(new goog.string.StringBuffer(cljs.reader.read_char.call(null, reader), cljs.reader.read_char.call(null, reader))).toString();
};
cljs.reader.read_4_chars = function read_4_chars(reader) {
  return(new goog.string.StringBuffer(cljs.reader.read_char.call(null, reader), cljs.reader.read_char.call(null, reader), cljs.reader.read_char.call(null, reader), cljs.reader.read_char.call(null, reader))).toString();
};
cljs.reader.unicode_2_pattern = cljs.core.re_pattern.call(null, "[0-9A-Fa-f]{2}");
cljs.reader.unicode_4_pattern = cljs.core.re_pattern.call(null, "[0-9A-Fa-f]{4}");
cljs.reader.validate_unicode_escape = function validate_unicode_escape(unicode_pattern, reader, escape_char, unicode_str) {
  if (cljs.core.truth_(cljs.core.re_matches.call(null, unicode_pattern, unicode_str))) {
    return unicode_str;
  } else {
    return cljs.reader.reader_error.call(null, reader, "Unexpected unicode escape \\", escape_char, unicode_str);
  }
};
cljs.reader.make_unicode_char = function make_unicode_char(code_str) {
  var code = parseInt(code_str, 16);
  return String.fromCharCode(code);
};
cljs.reader.escape_char = function escape_char(buffer, reader) {
  var ch = cljs.reader.read_char.call(null, reader);
  var mapresult = cljs.reader.escape_char_map.call(null, ch);
  if (cljs.core.truth_(mapresult)) {
    return mapresult;
  } else {
    if (ch === "x") {
      return cljs.reader.make_unicode_char.call(null, cljs.reader.validate_unicode_escape.call(null, cljs.reader.unicode_2_pattern, reader, ch, cljs.reader.read_2_chars.call(null, reader)));
    } else {
      if (ch === "u") {
        return cljs.reader.make_unicode_char.call(null, cljs.reader.validate_unicode_escape.call(null, cljs.reader.unicode_4_pattern, reader, ch, cljs.reader.read_4_chars.call(null, reader)));
      } else {
        if (cljs.reader.numeric_QMARK_.call(null, ch)) {
          return String.fromCharCode(ch);
        } else {
          if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
            return cljs.reader.reader_error.call(null, reader, "Unexpected unicode escape \\", ch);
          } else {
            return null;
          }
        }
      }
    }
  }
};
cljs.reader.read_past = function read_past(pred, rdr) {
  var ch = cljs.reader.read_char.call(null, rdr);
  while (true) {
    if (cljs.core.truth_(pred.call(null, ch))) {
      var G__11672 = cljs.reader.read_char.call(null, rdr);
      ch = G__11672;
      continue;
    } else {
      return ch;
    }
    break;
  }
};
cljs.reader.read_delimited_list = function read_delimited_list(delim, rdr, recursive_QMARK_) {
  var a = cljs.core.transient$.call(null, cljs.core.PersistentVector.EMPTY);
  while (true) {
    var ch = cljs.reader.read_past.call(null, cljs.reader.whitespace_QMARK_, rdr);
    if (cljs.core.truth_(ch)) {
    } else {
      cljs.reader.reader_error.call(null, rdr, "EOF while reading");
    }
    if (delim === ch) {
      return cljs.core.persistent_BANG_.call(null, a);
    } else {
      var temp__4090__auto__ = cljs.reader.macros.call(null, ch);
      if (cljs.core.truth_(temp__4090__auto__)) {
        var macrofn = temp__4090__auto__;
        var mret = macrofn.call(null, rdr, ch);
        var G__11673 = mret === rdr ? a : cljs.core.conj_BANG_.call(null, a, mret);
        a = G__11673;
        continue;
      } else {
        cljs.reader.unread.call(null, rdr, ch);
        var o = cljs.reader.read.call(null, rdr, true, null, recursive_QMARK_);
        var G__11674 = o === rdr ? a : cljs.core.conj_BANG_.call(null, a, o);
        a = G__11674;
        continue;
      }
    }
    break;
  }
};
cljs.reader.not_implemented = function not_implemented(rdr, ch) {
  return cljs.reader.reader_error.call(null, rdr, "Reader for ", ch, " not implemented yet");
};
cljs.reader.read_dispatch = function read_dispatch(rdr, _) {
  var ch = cljs.reader.read_char.call(null, rdr);
  var dm = cljs.reader.dispatch_macros.call(null, ch);
  if (cljs.core.truth_(dm)) {
    return dm.call(null, rdr, _);
  } else {
    var temp__4090__auto__ = cljs.reader.maybe_read_tagged_type.call(null, rdr, ch);
    if (cljs.core.truth_(temp__4090__auto__)) {
      var obj = temp__4090__auto__;
      return obj;
    } else {
      return cljs.reader.reader_error.call(null, rdr, "No dispatch macro for ", ch);
    }
  }
};
cljs.reader.read_unmatched_delimiter = function read_unmatched_delimiter(rdr, ch) {
  return cljs.reader.reader_error.call(null, rdr, "Unmached delimiter ", ch);
};
cljs.reader.read_list = function read_list(rdr, _) {
  return cljs.core.apply.call(null, cljs.core.list, cljs.reader.read_delimited_list.call(null, ")", rdr, true));
};
cljs.reader.read_comment = cljs.reader.skip_line;
cljs.reader.read_vector = function read_vector(rdr, _) {
  return cljs.reader.read_delimited_list.call(null, "]", rdr, true);
};
cljs.reader.read_map = function read_map(rdr, _) {
  var l = cljs.reader.read_delimited_list.call(null, "}", rdr, true);
  if (cljs.core.odd_QMARK_.call(null, cljs.core.count.call(null, l))) {
    cljs.reader.reader_error.call(null, rdr, "Map literal must contain an even number of forms");
  } else {
  }
  return cljs.core.apply.call(null, cljs.core.hash_map, l);
};
cljs.reader.read_number = function read_number(reader, initch) {
  var buffer = new goog.string.StringBuffer(initch);
  var ch = cljs.reader.read_char.call(null, reader);
  while (true) {
    if (cljs.core.truth_(function() {
      var or__3403__auto__ = ch == null;
      if (or__3403__auto__) {
        return or__3403__auto__;
      } else {
        var or__3403__auto____$1 = cljs.reader.whitespace_QMARK_.call(null, ch);
        if (or__3403__auto____$1) {
          return or__3403__auto____$1;
        } else {
          return cljs.reader.macros.call(null, ch);
        }
      }
    }())) {
      cljs.reader.unread.call(null, reader, ch);
      var s = buffer.toString();
      var or__3403__auto__ = cljs.reader.match_number.call(null, s);
      if (cljs.core.truth_(or__3403__auto__)) {
        return or__3403__auto__;
      } else {
        return cljs.reader.reader_error.call(null, reader, "Invalid number format [", s, "]");
      }
    } else {
      var G__11675 = function() {
        buffer.append(ch);
        return buffer;
      }();
      var G__11676 = cljs.reader.read_char.call(null, reader);
      buffer = G__11675;
      ch = G__11676;
      continue;
    }
    break;
  }
};
cljs.reader.read_string_STAR_ = function read_string_STAR_(reader, _) {
  var buffer = new goog.string.StringBuffer;
  var ch = cljs.reader.read_char.call(null, reader);
  while (true) {
    if (ch == null) {
      return cljs.reader.reader_error.call(null, reader, "EOF while reading");
    } else {
      if ("\\" === ch) {
        var G__11677 = function() {
          buffer.append(cljs.reader.escape_char.call(null, buffer, reader));
          return buffer;
        }();
        var G__11678 = cljs.reader.read_char.call(null, reader);
        buffer = G__11677;
        ch = G__11678;
        continue;
      } else {
        if ('"' === ch) {
          return buffer.toString();
        } else {
          if (new cljs.core.Keyword(null, "default", "default", 2558708147)) {
            var G__11679 = function() {
              buffer.append(ch);
              return buffer;
            }();
            var G__11680 = cljs.reader.read_char.call(null, reader);
            buffer = G__11679;
            ch = G__11680;
            continue;
          } else {
            return null;
          }
        }
      }
    }
    break;
  }
};
cljs.reader.special_symbols = function special_symbols(t, not_found) {
  if (t === "nil") {
    return null;
  } else {
    if (t === "true") {
      return true;
    } else {
      if (t === "false") {
        return false;
      } else {
        if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
          return not_found;
        } else {
          return null;
        }
      }
    }
  }
};
cljs.reader.read_symbol = function read_symbol(reader, initch) {
  var token = cljs.reader.read_token.call(null, reader, initch);
  if (cljs.core.truth_(goog.string.contains(token, "/"))) {
    return cljs.core.symbol.call(null, cljs.core.subs.call(null, token, 0, token.indexOf("/")), cljs.core.subs.call(null, token, token.indexOf("/") + 1, token.length));
  } else {
    return cljs.reader.special_symbols.call(null, token, cljs.core.symbol.call(null, token));
  }
};
cljs.reader.read_keyword = function read_keyword(reader, initch) {
  var token = cljs.reader.read_token.call(null, reader, cljs.reader.read_char.call(null, reader));
  var a = cljs.reader.re_matches_STAR_.call(null, cljs.reader.symbol_pattern, token);
  var token__$1 = a[0];
  var ns = a[1];
  var name = a[2];
  if (!(void 0 === ns) && ns.substring(ns.length - 2, ns.length) === ":/" || (name[name.length - 1] === ":" || !(token__$1.indexOf("::", 1) === -1))) {
    return cljs.reader.reader_error.call(null, reader, "Invalid token: ", token__$1);
  } else {
    if (!(ns == null) && ns.length > 0) {
      return cljs.core.keyword.call(null, ns.substring(0, ns.indexOf("/")), name);
    } else {
      return cljs.core.keyword.call(null, token__$1);
    }
  }
};
cljs.reader.desugar_meta = function desugar_meta(f) {
  if (f instanceof cljs.core.Symbol) {
    return new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "tag", "tag", 1014018828), f], null);
  } else {
    if (typeof f === "string") {
      return new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "tag", "tag", 1014018828), f], null);
    } else {
      if (f instanceof cljs.core.Keyword) {
        return new cljs.core.PersistentArrayMap.fromArray([f, true], true, false);
      } else {
        if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
          return f;
        } else {
          return null;
        }
      }
    }
  }
};
cljs.reader.wrapping_reader = function wrapping_reader(sym) {
  return function(rdr, _) {
    return cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, cljs.reader.read.call(null, rdr, true, null, true)), sym);
  };
};
cljs.reader.throwing_reader = function throwing_reader(msg) {
  return function(rdr, _) {
    return cljs.reader.reader_error.call(null, rdr, msg);
  };
};
cljs.reader.read_meta = function read_meta(rdr, _) {
  var m = cljs.reader.desugar_meta.call(null, cljs.reader.read.call(null, rdr, true, null, true));
  if (cljs.core.map_QMARK_.call(null, m)) {
  } else {
    cljs.reader.reader_error.call(null, rdr, "Metadata must be Symbol,Keyword,String or Map");
  }
  var o = cljs.reader.read.call(null, rdr, true, null, true);
  if (function() {
    var G__11682 = o;
    if (G__11682) {
      var bit__4053__auto__ = G__11682.cljs$lang$protocol_mask$partition0$ & 262144;
      if (bit__4053__auto__ || G__11682.cljs$core$IWithMeta$) {
        return true;
      } else {
        if (!G__11682.cljs$lang$protocol_mask$partition0$) {
          return cljs.core.native_satisfies_QMARK_.call(null, cljs.core.IWithMeta, G__11682);
        } else {
          return false;
        }
      }
    } else {
      return cljs.core.native_satisfies_QMARK_.call(null, cljs.core.IWithMeta, G__11682);
    }
  }()) {
    return cljs.core.with_meta.call(null, o, cljs.core.merge.call(null, cljs.core.meta.call(null, o), m));
  } else {
    return cljs.reader.reader_error.call(null, rdr, "Metadata can only be applied to IWithMetas");
  }
};
cljs.reader.read_set = function read_set(rdr, _) {
  return cljs.core.set.call(null, cljs.reader.read_delimited_list.call(null, "}", rdr, true));
};
cljs.reader.read_regex = function read_regex(rdr, ch) {
  return cljs.core.re_pattern.call(null, cljs.reader.read_string_STAR_.call(null, rdr, ch));
};
cljs.reader.read_discard = function read_discard(rdr, _) {
  cljs.reader.read.call(null, rdr, true, null, true);
  return rdr;
};
cljs.reader.macros = function macros(c) {
  if (c === '"') {
    return cljs.reader.read_string_STAR_;
  } else {
    if (c === ":") {
      return cljs.reader.read_keyword;
    } else {
      if (c === ";") {
        return cljs.reader.read_comment;
      } else {
        if (c === "'") {
          return cljs.reader.wrapping_reader.call(null, new cljs.core.Symbol(null, "quote", "quote", -1532577739, null));
        } else {
          if (c === "@") {
            return cljs.reader.wrapping_reader.call(null, new cljs.core.Symbol(null, "deref", "deref", -1545057749, null));
          } else {
            if (c === "^") {
              return cljs.reader.read_meta;
            } else {
              if (c === "`") {
                return cljs.reader.not_implemented;
              } else {
                if (c === "~") {
                  return cljs.reader.not_implemented;
                } else {
                  if (c === "(") {
                    return cljs.reader.read_list;
                  } else {
                    if (c === ")") {
                      return cljs.reader.read_unmatched_delimiter;
                    } else {
                      if (c === "[") {
                        return cljs.reader.read_vector;
                      } else {
                        if (c === "]") {
                          return cljs.reader.read_unmatched_delimiter;
                        } else {
                          if (c === "{") {
                            return cljs.reader.read_map;
                          } else {
                            if (c === "}") {
                              return cljs.reader.read_unmatched_delimiter;
                            } else {
                              if (c === "\\") {
                                return cljs.reader.read_char;
                              } else {
                                if (c === "#") {
                                  return cljs.reader.read_dispatch;
                                } else {
                                  if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
                                    return null;
                                  } else {
                                    return null;
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
  }
};
cljs.reader.dispatch_macros = function dispatch_macros(s) {
  if (s === "{") {
    return cljs.reader.read_set;
  } else {
    if (s === "\x3c") {
      return cljs.reader.throwing_reader.call(null, "Unreadable form");
    } else {
      if (s === '"') {
        return cljs.reader.read_regex;
      } else {
        if (s === "!") {
          return cljs.reader.read_comment;
        } else {
          if (s === "_") {
            return cljs.reader.read_discard;
          } else {
            if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
              return null;
            } else {
              return null;
            }
          }
        }
      }
    }
  }
};
cljs.reader.read = function read(reader, eof_is_error, sentinel, is_recursive) {
  while (true) {
    var ch = cljs.reader.read_char.call(null, reader);
    if (ch == null) {
      if (cljs.core.truth_(eof_is_error)) {
        return cljs.reader.reader_error.call(null, reader, "EOF while reading");
      } else {
        return sentinel;
      }
    } else {
      if (cljs.reader.whitespace_QMARK_.call(null, ch)) {
        var G__11683 = reader;
        var G__11684 = eof_is_error;
        var G__11685 = sentinel;
        var G__11686 = is_recursive;
        reader = G__11683;
        eof_is_error = G__11684;
        sentinel = G__11685;
        is_recursive = G__11686;
        continue;
      } else {
        if (cljs.reader.comment_prefix_QMARK_.call(null, ch)) {
          var G__11687 = cljs.reader.read_comment.call(null, reader, ch);
          var G__11688 = eof_is_error;
          var G__11689 = sentinel;
          var G__11690 = is_recursive;
          reader = G__11687;
          eof_is_error = G__11688;
          sentinel = G__11689;
          is_recursive = G__11690;
          continue;
        } else {
          if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
            var f = cljs.reader.macros.call(null, ch);
            var res = cljs.core.truth_(f) ? f.call(null, reader, ch) : cljs.reader.number_literal_QMARK_.call(null, reader, ch) ? cljs.reader.read_number.call(null, reader, ch) : new cljs.core.Keyword(null, "else", "else", 1017020587) ? cljs.reader.read_symbol.call(null, reader, ch) : null;
            if (res === reader) {
              var G__11691 = reader;
              var G__11692 = eof_is_error;
              var G__11693 = sentinel;
              var G__11694 = is_recursive;
              reader = G__11691;
              eof_is_error = G__11692;
              sentinel = G__11693;
              is_recursive = G__11694;
              continue;
            } else {
              return res;
            }
          } else {
            return null;
          }
        }
      }
    }
    break;
  }
};
cljs.reader.read_string = function read_string(s) {
  var r = cljs.reader.push_back_reader.call(null, s);
  return cljs.reader.read.call(null, r, true, null, false);
};
cljs.reader.zero_fill_right_and_truncate = function zero_fill_right_and_truncate(s, width) {
  if (cljs.core._EQ_.call(null, width, cljs.core.count.call(null, s))) {
    return s;
  } else {
    if (width < cljs.core.count.call(null, s)) {
      return cljs.core.subs.call(null, s, 0, width);
    } else {
      if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
        var b = new goog.string.StringBuffer(s);
        while (true) {
          if (b.getLength() < width) {
            var G__11695 = b.append("0");
            b = G__11695;
            continue;
          } else {
            return b.toString();
          }
          break;
        }
      } else {
        return null;
      }
    }
  }
};
cljs.reader.divisible_QMARK_ = function divisible_QMARK_(num, div) {
  return cljs.core.mod.call(null, num, div) === 0;
};
cljs.reader.indivisible_QMARK_ = function indivisible_QMARK_(num, div) {
  return!cljs.reader.divisible_QMARK_.call(null, num, div);
};
cljs.reader.leap_year_QMARK_ = function leap_year_QMARK_(year) {
  return cljs.reader.divisible_QMARK_.call(null, year, 4) && (cljs.reader.indivisible_QMARK_.call(null, year, 100) || cljs.reader.divisible_QMARK_.call(null, year, 400));
};
cljs.reader.days_in_month = function() {
  var dim_norm = new cljs.core.PersistentVector(null, 13, 5, cljs.core.PersistentVector.EMPTY_NODE, [null, 31, 28, 31, 30, 31, 30, 31, 31, 30, 31, 30, 31], null);
  var dim_leap = new cljs.core.PersistentVector(null, 13, 5, cljs.core.PersistentVector.EMPTY_NODE, [null, 31, 29, 31, 30, 31, 30, 31, 31, 30, 31, 30, 31], null);
  return function(month, leap_year_QMARK_) {
    return cljs.core.get.call(null, cljs.core.truth_(leap_year_QMARK_) ? dim_leap : dim_norm, month);
  };
}();
cljs.reader.timestamp_regex = /(\d\d\d\d)(?:-(\d\d)(?:-(\d\d)(?:[T](\d\d)(?::(\d\d)(?::(\d\d)(?:[.](\d+))?)?)?)?)?)?(?:[Z]|([-+])(\d\d):(\d\d))?/;
cljs.reader.parse_int = function parse_int(s) {
  var n = parseInt(s);
  if (cljs.core.not.call(null, isNaN(n))) {
    return n;
  } else {
    return null;
  }
};
cljs.reader.check = function check(low, n, high, msg) {
  if (low <= n && n <= high) {
  } else {
    cljs.reader.reader_error.call(null, null, [cljs.core.str(msg), cljs.core.str(" Failed:  "), cljs.core.str(low), cljs.core.str("\x3c\x3d"), cljs.core.str(n), cljs.core.str("\x3c\x3d"), cljs.core.str(high)].join(""));
  }
  return n;
};
cljs.reader.parse_and_validate_timestamp = function parse_and_validate_timestamp(s) {
  var vec__11697 = cljs.core.re_matches.call(null, cljs.reader.timestamp_regex, s);
  var _ = cljs.core.nth.call(null, vec__11697, 0, null);
  var years = cljs.core.nth.call(null, vec__11697, 1, null);
  var months = cljs.core.nth.call(null, vec__11697, 2, null);
  var days = cljs.core.nth.call(null, vec__11697, 3, null);
  var hours = cljs.core.nth.call(null, vec__11697, 4, null);
  var minutes = cljs.core.nth.call(null, vec__11697, 5, null);
  var seconds = cljs.core.nth.call(null, vec__11697, 6, null);
  var fraction = cljs.core.nth.call(null, vec__11697, 7, null);
  var offset_sign = cljs.core.nth.call(null, vec__11697, 8, null);
  var offset_hours = cljs.core.nth.call(null, vec__11697, 9, null);
  var offset_minutes = cljs.core.nth.call(null, vec__11697, 10, null);
  var v = vec__11697;
  if (cljs.core.not.call(null, v)) {
    return cljs.reader.reader_error.call(null, null, [cljs.core.str("Unrecognized date/time syntax: "), cljs.core.str(s)].join(""));
  } else {
    var years__$1 = cljs.reader.parse_int.call(null, years);
    var months__$1 = function() {
      var or__3403__auto__ = cljs.reader.parse_int.call(null, months);
      if (cljs.core.truth_(or__3403__auto__)) {
        return or__3403__auto__;
      } else {
        return 1;
      }
    }();
    var days__$1 = function() {
      var or__3403__auto__ = cljs.reader.parse_int.call(null, days);
      if (cljs.core.truth_(or__3403__auto__)) {
        return or__3403__auto__;
      } else {
        return 1;
      }
    }();
    var hours__$1 = function() {
      var or__3403__auto__ = cljs.reader.parse_int.call(null, hours);
      if (cljs.core.truth_(or__3403__auto__)) {
        return or__3403__auto__;
      } else {
        return 0;
      }
    }();
    var minutes__$1 = function() {
      var or__3403__auto__ = cljs.reader.parse_int.call(null, minutes);
      if (cljs.core.truth_(or__3403__auto__)) {
        return or__3403__auto__;
      } else {
        return 0;
      }
    }();
    var seconds__$1 = function() {
      var or__3403__auto__ = cljs.reader.parse_int.call(null, seconds);
      if (cljs.core.truth_(or__3403__auto__)) {
        return or__3403__auto__;
      } else {
        return 0;
      }
    }();
    var fraction__$1 = function() {
      var or__3403__auto__ = cljs.reader.parse_int.call(null, cljs.reader.zero_fill_right_and_truncate.call(null, fraction, 3));
      if (cljs.core.truth_(or__3403__auto__)) {
        return or__3403__auto__;
      } else {
        return 0;
      }
    }();
    var offset_sign__$1 = cljs.core._EQ_.call(null, offset_sign, "-") ? -1 : 1;
    var offset_hours__$1 = function() {
      var or__3403__auto__ = cljs.reader.parse_int.call(null, offset_hours);
      if (cljs.core.truth_(or__3403__auto__)) {
        return or__3403__auto__;
      } else {
        return 0;
      }
    }();
    var offset_minutes__$1 = function() {
      var or__3403__auto__ = cljs.reader.parse_int.call(null, offset_minutes);
      if (cljs.core.truth_(or__3403__auto__)) {
        return or__3403__auto__;
      } else {
        return 0;
      }
    }();
    var offset = offset_sign__$1 * (offset_hours__$1 * 60 + offset_minutes__$1);
    return new cljs.core.PersistentVector(null, 8, 5, cljs.core.PersistentVector.EMPTY_NODE, [years__$1, cljs.reader.check.call(null, 1, months__$1, 12, "timestamp month field must be in range 1..12"), cljs.reader.check.call(null, 1, days__$1, cljs.reader.days_in_month.call(null, months__$1, cljs.reader.leap_year_QMARK_.call(null, years__$1)), "timestamp day field must be in range 1..last day in month"), cljs.reader.check.call(null, 0, hours__$1, 23, "timestamp hour field must be in range 0..23"), 
    cljs.reader.check.call(null, 0, minutes__$1, 59, "timestamp minute field must be in range 0..59"), cljs.reader.check.call(null, 0, seconds__$1, cljs.core._EQ_.call(null, minutes__$1, 59) ? 60 : 59, "timestamp second field must be in range 0..60"), cljs.reader.check.call(null, 0, fraction__$1, 999, "timestamp millisecond field must be in range 0..999"), offset], null);
  }
};
cljs.reader.parse_timestamp = function parse_timestamp(ts) {
  var temp__4090__auto__ = cljs.reader.parse_and_validate_timestamp.call(null, ts);
  if (cljs.core.truth_(temp__4090__auto__)) {
    var vec__11699 = temp__4090__auto__;
    var years = cljs.core.nth.call(null, vec__11699, 0, null);
    var months = cljs.core.nth.call(null, vec__11699, 1, null);
    var days = cljs.core.nth.call(null, vec__11699, 2, null);
    var hours = cljs.core.nth.call(null, vec__11699, 3, null);
    var minutes = cljs.core.nth.call(null, vec__11699, 4, null);
    var seconds = cljs.core.nth.call(null, vec__11699, 5, null);
    var ms = cljs.core.nth.call(null, vec__11699, 6, null);
    var offset = cljs.core.nth.call(null, vec__11699, 7, null);
    return new Date(Date.UTC(years, months - 1, days, hours, minutes, seconds, ms) - offset * 60 * 1E3);
  } else {
    return cljs.reader.reader_error.call(null, null, [cljs.core.str("Unrecognized date/time syntax: "), cljs.core.str(ts)].join(""));
  }
};
cljs.reader.read_date = function read_date(s) {
  if (typeof s === "string") {
    return cljs.reader.parse_timestamp.call(null, s);
  } else {
    return cljs.reader.reader_error.call(null, null, "Instance literal expects a string for its timestamp.");
  }
};
cljs.reader.read_queue = function read_queue(elems) {
  if (cljs.core.vector_QMARK_.call(null, elems)) {
    return cljs.core.into.call(null, cljs.core.PersistentQueue.EMPTY, elems);
  } else {
    return cljs.reader.reader_error.call(null, null, "Queue literal expects a vector for its elements.");
  }
};
cljs.reader.read_js = function read_js(form) {
  if (cljs.core.vector_QMARK_.call(null, form)) {
    var arr = [];
    var seq__11712_11724 = cljs.core.seq.call(null, form);
    var chunk__11713_11725 = null;
    var count__11714_11726 = 0;
    var i__11715_11727 = 0;
    while (true) {
      if (i__11715_11727 < count__11714_11726) {
        var x_11728 = cljs.core._nth.call(null, chunk__11713_11725, i__11715_11727);
        arr.push(x_11728);
        var G__11729 = seq__11712_11724;
        var G__11730 = chunk__11713_11725;
        var G__11731 = count__11714_11726;
        var G__11732 = i__11715_11727 + 1;
        seq__11712_11724 = G__11729;
        chunk__11713_11725 = G__11730;
        count__11714_11726 = G__11731;
        i__11715_11727 = G__11732;
        continue;
      } else {
        var temp__4092__auto___11733 = cljs.core.seq.call(null, seq__11712_11724);
        if (temp__4092__auto___11733) {
          var seq__11712_11734__$1 = temp__4092__auto___11733;
          if (cljs.core.chunked_seq_QMARK_.call(null, seq__11712_11734__$1)) {
            var c__4151__auto___11735 = cljs.core.chunk_first.call(null, seq__11712_11734__$1);
            var G__11736 = cljs.core.chunk_rest.call(null, seq__11712_11734__$1);
            var G__11737 = c__4151__auto___11735;
            var G__11738 = cljs.core.count.call(null, c__4151__auto___11735);
            var G__11739 = 0;
            seq__11712_11724 = G__11736;
            chunk__11713_11725 = G__11737;
            count__11714_11726 = G__11738;
            i__11715_11727 = G__11739;
            continue;
          } else {
            var x_11740 = cljs.core.first.call(null, seq__11712_11734__$1);
            arr.push(x_11740);
            var G__11741 = cljs.core.next.call(null, seq__11712_11734__$1);
            var G__11742 = null;
            var G__11743 = 0;
            var G__11744 = 0;
            seq__11712_11724 = G__11741;
            chunk__11713_11725 = G__11742;
            count__11714_11726 = G__11743;
            i__11715_11727 = G__11744;
            continue;
          }
        } else {
        }
      }
      break;
    }
    return arr;
  } else {
    if (cljs.core.map_QMARK_.call(null, form)) {
      var obj = function() {
        var obj11717 = {};
        return obj11717;
      }();
      var seq__11718_11745 = cljs.core.seq.call(null, form);
      var chunk__11719_11746 = null;
      var count__11720_11747 = 0;
      var i__11721_11748 = 0;
      while (true) {
        if (i__11721_11748 < count__11720_11747) {
          var vec__11722_11749 = cljs.core._nth.call(null, chunk__11719_11746, i__11721_11748);
          var k_11750 = cljs.core.nth.call(null, vec__11722_11749, 0, null);
          var v_11751 = cljs.core.nth.call(null, vec__11722_11749, 1, null);
          obj[cljs.core.name.call(null, k_11750)] = v_11751;
          var G__11752 = seq__11718_11745;
          var G__11753 = chunk__11719_11746;
          var G__11754 = count__11720_11747;
          var G__11755 = i__11721_11748 + 1;
          seq__11718_11745 = G__11752;
          chunk__11719_11746 = G__11753;
          count__11720_11747 = G__11754;
          i__11721_11748 = G__11755;
          continue;
        } else {
          var temp__4092__auto___11756 = cljs.core.seq.call(null, seq__11718_11745);
          if (temp__4092__auto___11756) {
            var seq__11718_11757__$1 = temp__4092__auto___11756;
            if (cljs.core.chunked_seq_QMARK_.call(null, seq__11718_11757__$1)) {
              var c__4151__auto___11758 = cljs.core.chunk_first.call(null, seq__11718_11757__$1);
              var G__11759 = cljs.core.chunk_rest.call(null, seq__11718_11757__$1);
              var G__11760 = c__4151__auto___11758;
              var G__11761 = cljs.core.count.call(null, c__4151__auto___11758);
              var G__11762 = 0;
              seq__11718_11745 = G__11759;
              chunk__11719_11746 = G__11760;
              count__11720_11747 = G__11761;
              i__11721_11748 = G__11762;
              continue;
            } else {
              var vec__11723_11763 = cljs.core.first.call(null, seq__11718_11757__$1);
              var k_11764 = cljs.core.nth.call(null, vec__11723_11763, 0, null);
              var v_11765 = cljs.core.nth.call(null, vec__11723_11763, 1, null);
              obj[cljs.core.name.call(null, k_11764)] = v_11765;
              var G__11766 = cljs.core.next.call(null, seq__11718_11757__$1);
              var G__11767 = null;
              var G__11768 = 0;
              var G__11769 = 0;
              seq__11718_11745 = G__11766;
              chunk__11719_11746 = G__11767;
              count__11720_11747 = G__11768;
              i__11721_11748 = G__11769;
              continue;
            }
          } else {
          }
        }
        break;
      }
      return obj;
    } else {
      if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
        return cljs.reader.reader_error.call(null, null, [cljs.core.str("JS literal expects a vector or map containing "), cljs.core.str("only string or unqualified keyword keys")].join(""));
      } else {
        return null;
      }
    }
  }
};
cljs.reader.read_uuid = function read_uuid(uuid) {
  if (typeof uuid === "string") {
    return new cljs.core.UUID(uuid);
  } else {
    return cljs.reader.reader_error.call(null, null, "UUID literal expects a string as its representation.");
  }
};
cljs.reader._STAR_tag_table_STAR_ = cljs.core.atom.call(null, new cljs.core.PersistentArrayMap(null, 4, ["inst", cljs.reader.read_date, "uuid", cljs.reader.read_uuid, "queue", cljs.reader.read_queue, "js", cljs.reader.read_js], null));
cljs.reader._STAR_default_data_reader_fn_STAR_ = cljs.core.atom.call(null, null);
cljs.reader.maybe_read_tagged_type = function maybe_read_tagged_type(rdr, initch) {
  var tag = cljs.reader.read_symbol.call(null, rdr, initch);
  var pfn = cljs.core.get.call(null, cljs.core.deref.call(null, cljs.reader._STAR_tag_table_STAR_), [cljs.core.str(tag)].join(""));
  var dfn = cljs.core.deref.call(null, cljs.reader._STAR_default_data_reader_fn_STAR_);
  if (cljs.core.truth_(pfn)) {
    return pfn.call(null, cljs.reader.read.call(null, rdr, true, null, false));
  } else {
    if (cljs.core.truth_(dfn)) {
      return dfn.call(null, tag, cljs.reader.read.call(null, rdr, true, null, false));
    } else {
      if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
        return cljs.reader.reader_error.call(null, rdr, "Could not find tag parser for ", [cljs.core.str(tag)].join(""), " in ", cljs.core.pr_str.call(null, cljs.core.keys.call(null, cljs.core.deref.call(null, cljs.reader._STAR_tag_table_STAR_))));
      } else {
        return null;
      }
    }
  }
};
cljs.reader.register_tag_parser_BANG_ = function register_tag_parser_BANG_(tag, f) {
  var tag__$1 = [cljs.core.str(tag)].join("");
  var old_parser = cljs.core.get.call(null, cljs.core.deref.call(null, cljs.reader._STAR_tag_table_STAR_), tag__$1);
  cljs.core.swap_BANG_.call(null, cljs.reader._STAR_tag_table_STAR_, cljs.core.assoc, tag__$1, f);
  return old_parser;
};
cljs.reader.deregister_tag_parser_BANG_ = function deregister_tag_parser_BANG_(tag) {
  var tag__$1 = [cljs.core.str(tag)].join("");
  var old_parser = cljs.core.get.call(null, cljs.core.deref.call(null, cljs.reader._STAR_tag_table_STAR_), tag__$1);
  cljs.core.swap_BANG_.call(null, cljs.reader._STAR_tag_table_STAR_, cljs.core.dissoc, tag__$1);
  return old_parser;
};
cljs.reader.register_default_tag_parser_BANG_ = function register_default_tag_parser_BANG_(f) {
  var old_parser = cljs.core.deref.call(null, cljs.reader._STAR_default_data_reader_fn_STAR_);
  cljs.core.swap_BANG_.call(null, cljs.reader._STAR_default_data_reader_fn_STAR_, function(_) {
    return f;
  });
  return old_parser;
};
cljs.reader.deregister_default_tag_parser_BANG_ = function deregister_default_tag_parser_BANG_() {
  var old_parser = cljs.core.deref.call(null, cljs.reader._STAR_default_data_reader_fn_STAR_);
  cljs.core.swap_BANG_.call(null, cljs.reader._STAR_default_data_reader_fn_STAR_, function(_) {
    return null;
  });
  return old_parser;
};
goog.provide("termcat.term");
goog.require("cljs.core");
goog.require("termcat.rewrite");
goog.require("termcat.rewrite");
goog.require("clojure.core.reducers");
goog.require("clojure.core.reducers");
goog.require("cljs.reader");
goog.require("cljs.reader");
termcat.term.ITerm = function() {
  var obj10459 = {};
  return obj10459;
}();
termcat.term.tt = function tt(this$) {
  if (function() {
    var and__3391__auto__ = this$;
    if (and__3391__auto__) {
      return this$.termcat$term$ITerm$tt$arity$1;
    } else {
      return and__3391__auto__;
    }
  }()) {
    return this$.termcat$term$ITerm$tt$arity$1(this$);
  } else {
    var x__4030__auto__ = this$ == null ? null : this$;
    return function() {
      var or__3403__auto__ = termcat.term.tt[goog.typeOf(x__4030__auto__)];
      if (or__3403__auto__) {
        return or__3403__auto__;
      } else {
        var or__3403__auto____$1 = termcat.term.tt["_"];
        if (or__3403__auto____$1) {
          return or__3403__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "ITerm.tt", this$);
        }
      }
    }().call(null, this$);
  }
};
termcat.term.IToken = function() {
  var obj10461 = {};
  return obj10461;
}();
termcat.term.payload = function payload(this$) {
  if (function() {
    var and__3391__auto__ = this$;
    if (and__3391__auto__) {
      return this$.termcat$term$IToken$payload$arity$1;
    } else {
      return and__3391__auto__;
    }
  }()) {
    return this$.termcat$term$IToken$payload$arity$1(this$);
  } else {
    var x__4030__auto__ = this$ == null ? null : this$;
    return function() {
      var or__3403__auto__ = termcat.term.payload[goog.typeOf(x__4030__auto__)];
      if (or__3403__auto__) {
        return or__3403__auto__;
      } else {
        var or__3403__auto____$1 = termcat.term.payload["_"];
        if (or__3403__auto____$1) {
          return or__3403__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "IToken.payload", this$);
        }
      }
    }().call(null, this$);
  }
};
termcat.term.IFragment = function() {
  var obj10463 = {};
  return obj10463;
}();
termcat.term.ednval = function ednval(this$) {
  if (function() {
    var and__3391__auto__ = this$;
    if (and__3391__auto__) {
      return this$.termcat$term$IFragment$ednval$arity$1;
    } else {
      return and__3391__auto__;
    }
  }()) {
    return this$.termcat$term$IFragment$ednval$arity$1(this$);
  } else {
    var x__4030__auto__ = this$ == null ? null : this$;
    return function() {
      var or__3403__auto__ = termcat.term.ednval[goog.typeOf(x__4030__auto__)];
      if (or__3403__auto__) {
        return or__3403__auto__;
      } else {
        var or__3403__auto____$1 = termcat.term.ednval["_"];
        if (or__3403__auto____$1) {
          return or__3403__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "IFragment.ednval", this$);
        }
      }
    }().call(null, this$);
  }
};
termcat.term.IBlock = function() {
  var obj10465 = {};
  return obj10465;
}();
termcat.term.left = function left(this$) {
  if (function() {
    var and__3391__auto__ = this$;
    if (and__3391__auto__) {
      return this$.termcat$term$IBlock$left$arity$1;
    } else {
      return and__3391__auto__;
    }
  }()) {
    return this$.termcat$term$IBlock$left$arity$1(this$);
  } else {
    var x__4030__auto__ = this$ == null ? null : this$;
    return function() {
      var or__3403__auto__ = termcat.term.left[goog.typeOf(x__4030__auto__)];
      if (or__3403__auto__) {
        return or__3403__auto__;
      } else {
        var or__3403__auto____$1 = termcat.term.left["_"];
        if (or__3403__auto____$1) {
          return or__3403__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "IBlock.left", this$);
        }
      }
    }().call(null, this$);
  }
};
termcat.term.center = function center(this$) {
  if (function() {
    var and__3391__auto__ = this$;
    if (and__3391__auto__) {
      return this$.termcat$term$IBlock$center$arity$1;
    } else {
      return and__3391__auto__;
    }
  }()) {
    return this$.termcat$term$IBlock$center$arity$1(this$);
  } else {
    var x__4030__auto__ = this$ == null ? null : this$;
    return function() {
      var or__3403__auto__ = termcat.term.center[goog.typeOf(x__4030__auto__)];
      if (or__3403__auto__) {
        return or__3403__auto__;
      } else {
        var or__3403__auto____$1 = termcat.term.center["_"];
        if (or__3403__auto____$1) {
          return or__3403__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "IBlock.center", this$);
        }
      }
    }().call(null, this$);
  }
};
termcat.term.right = function right(this$) {
  if (function() {
    var and__3391__auto__ = this$;
    if (and__3391__auto__) {
      return this$.termcat$term$IBlock$right$arity$1;
    } else {
      return and__3391__auto__;
    }
  }()) {
    return this$.termcat$term$IBlock$right$arity$1(this$);
  } else {
    var x__4030__auto__ = this$ == null ? null : this$;
    return function() {
      var or__3403__auto__ = termcat.term.right[goog.typeOf(x__4030__auto__)];
      if (or__3403__auto__) {
        return or__3403__auto__;
      } else {
        var or__3403__auto____$1 = termcat.term.right["_"];
        if (or__3403__auto____$1) {
          return or__3403__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "IBlock.right", this$);
        }
      }
    }().call(null, this$);
  }
};
termcat.term.Token = function(tag, payload, __meta, __extmap) {
  this.tag = tag;
  this.payload = payload;
  this.__meta = __meta;
  this.__extmap = __extmap;
  this.cljs$lang$protocol_mask$partition0$ = 2229667594;
  this.cljs$lang$protocol_mask$partition1$ = 8192;
  if (arguments.length > 2) {
    this.__meta = __meta;
    this.__extmap = __extmap;
  } else {
    this.__meta = null;
    this.__extmap = null;
  }
};
termcat.term.Token.prototype.cljs$core$IHash$_hash$arity$1 = function(this__3984__auto__) {
  var self__ = this;
  var this__3984__auto____$1 = this;
  var h__3814__auto__ = self__.__hash;
  if (!(h__3814__auto__ == null)) {
    return h__3814__auto__;
  } else {
    var h__3814__auto____$1 = cljs.core.hash_imap.call(null, this__3984__auto____$1);
    self__.__hash = h__3814__auto____$1;
    return h__3814__auto____$1;
  }
};
termcat.term.Token.prototype.cljs$core$ILookup$_lookup$arity$2 = function(this__3989__auto__, k__3990__auto__) {
  var self__ = this;
  var this__3989__auto____$1 = this;
  return cljs.core._lookup.call(null, this__3989__auto____$1, k__3990__auto__, null);
};
termcat.term.Token.prototype.cljs$core$ILookup$_lookup$arity$3 = function(this__3991__auto__, k10467, else__3992__auto__) {
  var self__ = this;
  var this__3991__auto____$1 = this;
  if (cljs.core.keyword_identical_QMARK_.call(null, k10467, new cljs.core.Keyword(null, "tag", "tag", 1014018828))) {
    return self__.tag;
  } else {
    if (cljs.core.keyword_identical_QMARK_.call(null, k10467, new cljs.core.Keyword(null, "payload", "payload", 4522169600))) {
      return self__.payload;
    } else {
      if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
        return cljs.core.get.call(null, self__.__extmap, k10467, else__3992__auto__);
      } else {
        return null;
      }
    }
  }
};
termcat.term.Token.prototype.cljs$core$IAssociative$_assoc$arity$3 = function(this__3996__auto__, k__3997__auto__, G__10466) {
  var self__ = this;
  var this__3996__auto____$1 = this;
  var pred__10469 = cljs.core.keyword_identical_QMARK_;
  var expr__10470 = k__3997__auto__;
  if (cljs.core.truth_(pred__10469.call(null, new cljs.core.Keyword(null, "tag", "tag", 1014018828), expr__10470))) {
    return new termcat.term.Token(G__10466, self__.payload, self__.__meta, self__.__extmap, null);
  } else {
    if (cljs.core.truth_(pred__10469.call(null, new cljs.core.Keyword(null, "payload", "payload", 4522169600), expr__10470))) {
      return new termcat.term.Token(self__.tag, G__10466, self__.__meta, self__.__extmap, null);
    } else {
      return new termcat.term.Token(self__.tag, self__.payload, self__.__meta, cljs.core.assoc.call(null, self__.__extmap, k__3997__auto__, G__10466), null);
    }
  }
};
termcat.term.Token.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(this__4003__auto__, writer__4004__auto__, opts__4005__auto__) {
  var self__ = this;
  var this__4003__auto____$1 = this;
  var pr_pair__4006__auto__ = function(keyval__4007__auto__) {
    return cljs.core.pr_sequential_writer.call(null, writer__4004__auto__, cljs.core.pr_writer, "", " ", "", opts__4005__auto__, keyval__4007__auto__);
  };
  return cljs.core.pr_sequential_writer.call(null, writer__4004__auto__, pr_pair__4006__auto__, "#termcat.term.Token{", ", ", "}", opts__4005__auto__, cljs.core.concat.call(null, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "tag", "tag", 1014018828), self__.tag], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, 
  [new cljs.core.Keyword(null, "payload", "payload", 4522169600), self__.payload], null)], null), self__.__extmap));
};
termcat.term.Token.prototype.cljs$core$ICollection$_conj$arity$2 = function(this__3994__auto__, entry__3995__auto__) {
  var self__ = this;
  var this__3994__auto____$1 = this;
  if (cljs.core.vector_QMARK_.call(null, entry__3995__auto__)) {
    return cljs.core._assoc.call(null, this__3994__auto____$1, cljs.core._nth.call(null, entry__3995__auto__, 0), cljs.core._nth.call(null, entry__3995__auto__, 1));
  } else {
    return cljs.core.reduce.call(null, cljs.core._conj, this__3994__auto____$1, entry__3995__auto__);
  }
};
termcat.term.Token.prototype.cljs$core$ISeqable$_seq$arity$1 = function(this__4001__auto__) {
  var self__ = this;
  var this__4001__auto____$1 = this;
  return cljs.core.seq.call(null, cljs.core.concat.call(null, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "tag", "tag", 1014018828), self__.tag], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "payload", "payload", 4522169600), self__.payload], null)], null), self__.__extmap));
};
termcat.term.Token.prototype.cljs$core$ICounted$_count$arity$1 = function(this__3993__auto__) {
  var self__ = this;
  var this__3993__auto____$1 = this;
  return 2 + cljs.core.count.call(null, self__.__extmap);
};
termcat.term.Token.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(this__3985__auto__, other__3986__auto__) {
  var self__ = this;
  var this__3985__auto____$1 = this;
  if (cljs.core.truth_(function() {
    var and__3391__auto__ = other__3986__auto__;
    if (cljs.core.truth_(and__3391__auto__)) {
      return this__3985__auto____$1.constructor === other__3986__auto__.constructor && cljs.core.equiv_map.call(null, this__3985__auto____$1, other__3986__auto__);
    } else {
      return and__3391__auto__;
    }
  }())) {
    return true;
  } else {
    return false;
  }
};
termcat.term.Token.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(this__3988__auto__, G__10466) {
  var self__ = this;
  var this__3988__auto____$1 = this;
  return new termcat.term.Token(self__.tag, self__.payload, G__10466, self__.__extmap, self__.__hash);
};
termcat.term.Token.prototype.cljs$core$ICloneable$_clone$arity$1 = function(this__3983__auto__) {
  var self__ = this;
  var this__3983__auto____$1 = this;
  return new termcat.term.Token(self__.tag, self__.payload, self__.__meta, self__.__extmap, self__.__hash);
};
termcat.term.Token.prototype.cljs$core$IMeta$_meta$arity$1 = function(this__3987__auto__) {
  var self__ = this;
  var this__3987__auto____$1 = this;
  return self__.__meta;
};
termcat.term.Token.prototype.cljs$core$IMap$_dissoc$arity$2 = function(this__3998__auto__, k__3999__auto__) {
  var self__ = this;
  var this__3998__auto____$1 = this;
  if (cljs.core.contains_QMARK_.call(null, new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "payload", "payload", 4522169600), null, new cljs.core.Keyword(null, "tag", "tag", 1014018828), null], null), null), k__3999__auto__)) {
    return cljs.core.dissoc.call(null, cljs.core.with_meta.call(null, cljs.core.into.call(null, cljs.core.PersistentArrayMap.EMPTY, this__3998__auto____$1), self__.__meta), k__3999__auto__);
  } else {
    return new termcat.term.Token(self__.tag, self__.payload, self__.__meta, cljs.core.not_empty.call(null, cljs.core.dissoc.call(null, self__.__extmap, k__3999__auto__)), null);
  }
};
termcat.term.Token.cljs$lang$type = true;
termcat.term.Token.cljs$lang$ctorPrSeq = function(this__4023__auto__) {
  return cljs.core._conj.call(null, cljs.core.List.EMPTY, "termcat.term/Token");
};
termcat.term.Token.cljs$lang$ctorPrWriter = function(this__4023__auto__, writer__4024__auto__) {
  return cljs.core._write.call(null, writer__4024__auto__, "termcat.term/Token");
};
termcat.term.__GT_Token = function __GT_Token(tag, payload) {
  return new termcat.term.Token(tag, payload);
};
termcat.term.map__GT_Token = function map__GT_Token(G__10468) {
  return new termcat.term.Token((new cljs.core.Keyword(null, "tag", "tag", 1014018828)).cljs$core$IFn$_invoke$arity$1(G__10468), (new cljs.core.Keyword(null, "payload", "payload", 4522169600)).cljs$core$IFn$_invoke$arity$1(G__10468), null, cljs.core.dissoc.call(null, G__10468, new cljs.core.Keyword(null, "tag", "tag", 1014018828), new cljs.core.Keyword(null, "payload", "payload", 4522169600)));
};
termcat.term.Fragment = function(terms, __meta, __extmap) {
  this.terms = terms;
  this.__meta = __meta;
  this.__extmap = __extmap;
  this.cljs$lang$protocol_mask$partition0$ = 2229667594;
  this.cljs$lang$protocol_mask$partition1$ = 8192;
  if (arguments.length > 1) {
    this.__meta = __meta;
    this.__extmap = __extmap;
  } else {
    this.__meta = null;
    this.__extmap = null;
  }
};
termcat.term.Fragment.prototype.cljs$core$IHash$_hash$arity$1 = function(this__3984__auto__) {
  var self__ = this;
  var this__3984__auto____$1 = this;
  var h__3814__auto__ = self__.__hash;
  if (!(h__3814__auto__ == null)) {
    return h__3814__auto__;
  } else {
    var h__3814__auto____$1 = cljs.core.hash_imap.call(null, this__3984__auto____$1);
    self__.__hash = h__3814__auto____$1;
    return h__3814__auto____$1;
  }
};
termcat.term.Fragment.prototype.cljs$core$ILookup$_lookup$arity$2 = function(this__3989__auto__, k__3990__auto__) {
  var self__ = this;
  var this__3989__auto____$1 = this;
  return cljs.core._lookup.call(null, this__3989__auto____$1, k__3990__auto__, null);
};
termcat.term.Fragment.prototype.cljs$core$ILookup$_lookup$arity$3 = function(this__3991__auto__, k10473, else__3992__auto__) {
  var self__ = this;
  var this__3991__auto____$1 = this;
  if (cljs.core.keyword_identical_QMARK_.call(null, k10473, new cljs.core.Keyword(null, "terms", "terms", 1124154617))) {
    return self__.terms;
  } else {
    if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
      return cljs.core.get.call(null, self__.__extmap, k10473, else__3992__auto__);
    } else {
      return null;
    }
  }
};
termcat.term.Fragment.prototype.cljs$core$IAssociative$_assoc$arity$3 = function(this__3996__auto__, k__3997__auto__, G__10472) {
  var self__ = this;
  var this__3996__auto____$1 = this;
  var pred__10475 = cljs.core.keyword_identical_QMARK_;
  var expr__10476 = k__3997__auto__;
  if (cljs.core.truth_(pred__10475.call(null, new cljs.core.Keyword(null, "terms", "terms", 1124154617), expr__10476))) {
    return new termcat.term.Fragment(G__10472, self__.__meta, self__.__extmap, null);
  } else {
    return new termcat.term.Fragment(self__.terms, self__.__meta, cljs.core.assoc.call(null, self__.__extmap, k__3997__auto__, G__10472), null);
  }
};
termcat.term.Fragment.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(this__4003__auto__, writer__4004__auto__, opts__4005__auto__) {
  var self__ = this;
  var this__4003__auto____$1 = this;
  var pr_pair__4006__auto__ = function(keyval__4007__auto__) {
    return cljs.core.pr_sequential_writer.call(null, writer__4004__auto__, cljs.core.pr_writer, "", " ", "", opts__4005__auto__, keyval__4007__auto__);
  };
  return cljs.core.pr_sequential_writer.call(null, writer__4004__auto__, pr_pair__4006__auto__, "#termcat.term.Fragment{", ", ", "}", opts__4005__auto__, cljs.core.concat.call(null, new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "terms", "terms", 1124154617), self__.terms], null)], null), self__.__extmap));
};
termcat.term.Fragment.prototype.cljs$core$ICollection$_conj$arity$2 = function(this__3994__auto__, entry__3995__auto__) {
  var self__ = this;
  var this__3994__auto____$1 = this;
  if (cljs.core.vector_QMARK_.call(null, entry__3995__auto__)) {
    return cljs.core._assoc.call(null, this__3994__auto____$1, cljs.core._nth.call(null, entry__3995__auto__, 0), cljs.core._nth.call(null, entry__3995__auto__, 1));
  } else {
    return cljs.core.reduce.call(null, cljs.core._conj, this__3994__auto____$1, entry__3995__auto__);
  }
};
termcat.term.Fragment.prototype.cljs$core$ISeqable$_seq$arity$1 = function(this__4001__auto__) {
  var self__ = this;
  var this__4001__auto____$1 = this;
  return cljs.core.seq.call(null, cljs.core.concat.call(null, new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "terms", "terms", 1124154617), self__.terms], null)], null), self__.__extmap));
};
termcat.term.Fragment.prototype.cljs$core$ICounted$_count$arity$1 = function(this__3993__auto__) {
  var self__ = this;
  var this__3993__auto____$1 = this;
  return 1 + cljs.core.count.call(null, self__.__extmap);
};
termcat.term.Fragment.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(this__3985__auto__, other__3986__auto__) {
  var self__ = this;
  var this__3985__auto____$1 = this;
  if (cljs.core.truth_(function() {
    var and__3391__auto__ = other__3986__auto__;
    if (cljs.core.truth_(and__3391__auto__)) {
      return this__3985__auto____$1.constructor === other__3986__auto__.constructor && cljs.core.equiv_map.call(null, this__3985__auto____$1, other__3986__auto__);
    } else {
      return and__3391__auto__;
    }
  }())) {
    return true;
  } else {
    return false;
  }
};
termcat.term.Fragment.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(this__3988__auto__, G__10472) {
  var self__ = this;
  var this__3988__auto____$1 = this;
  return new termcat.term.Fragment(self__.terms, G__10472, self__.__extmap, self__.__hash);
};
termcat.term.Fragment.prototype.cljs$core$ICloneable$_clone$arity$1 = function(this__3983__auto__) {
  var self__ = this;
  var this__3983__auto____$1 = this;
  return new termcat.term.Fragment(self__.terms, self__.__meta, self__.__extmap, self__.__hash);
};
termcat.term.Fragment.prototype.cljs$core$IMeta$_meta$arity$1 = function(this__3987__auto__) {
  var self__ = this;
  var this__3987__auto____$1 = this;
  return self__.__meta;
};
termcat.term.Fragment.prototype.cljs$core$IMap$_dissoc$arity$2 = function(this__3998__auto__, k__3999__auto__) {
  var self__ = this;
  var this__3998__auto____$1 = this;
  if (cljs.core.contains_QMARK_.call(null, new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "terms", "terms", 1124154617), null], null), null), k__3999__auto__)) {
    return cljs.core.dissoc.call(null, cljs.core.with_meta.call(null, cljs.core.into.call(null, cljs.core.PersistentArrayMap.EMPTY, this__3998__auto____$1), self__.__meta), k__3999__auto__);
  } else {
    return new termcat.term.Fragment(self__.terms, self__.__meta, cljs.core.not_empty.call(null, cljs.core.dissoc.call(null, self__.__extmap, k__3999__auto__)), null);
  }
};
termcat.term.Fragment.cljs$lang$type = true;
termcat.term.Fragment.cljs$lang$ctorPrSeq = function(this__4023__auto__) {
  return cljs.core._conj.call(null, cljs.core.List.EMPTY, "termcat.term/Fragment");
};
termcat.term.Fragment.cljs$lang$ctorPrWriter = function(this__4023__auto__, writer__4024__auto__) {
  return cljs.core._write.call(null, writer__4024__auto__, "termcat.term/Fragment");
};
termcat.term.__GT_Fragment = function __GT_Fragment(terms) {
  return new termcat.term.Fragment(terms);
};
termcat.term.map__GT_Fragment = function map__GT_Fragment(G__10474) {
  return new termcat.term.Fragment((new cljs.core.Keyword(null, "terms", "terms", 1124154617)).cljs$core$IFn$_invoke$arity$1(G__10474), null, cljs.core.dissoc.call(null, G__10474, new cljs.core.Keyword(null, "terms", "terms", 1124154617)));
};
termcat.term.Block = function(left, center, right, __meta, __extmap) {
  this.left = left;
  this.center = center;
  this.right = right;
  this.__meta = __meta;
  this.__extmap = __extmap;
  this.cljs$lang$protocol_mask$partition0$ = 2229667594;
  this.cljs$lang$protocol_mask$partition1$ = 8192;
  if (arguments.length > 3) {
    this.__meta = __meta;
    this.__extmap = __extmap;
  } else {
    this.__meta = null;
    this.__extmap = null;
  }
};
termcat.term.Block.prototype.cljs$core$IHash$_hash$arity$1 = function(this__3984__auto__) {
  var self__ = this;
  var this__3984__auto____$1 = this;
  var h__3814__auto__ = self__.__hash;
  if (!(h__3814__auto__ == null)) {
    return h__3814__auto__;
  } else {
    var h__3814__auto____$1 = cljs.core.hash_imap.call(null, this__3984__auto____$1);
    self__.__hash = h__3814__auto____$1;
    return h__3814__auto____$1;
  }
};
termcat.term.Block.prototype.cljs$core$ILookup$_lookup$arity$2 = function(this__3989__auto__, k__3990__auto__) {
  var self__ = this;
  var this__3989__auto____$1 = this;
  return cljs.core._lookup.call(null, this__3989__auto____$1, k__3990__auto__, null);
};
termcat.term.Block.prototype.cljs$core$ILookup$_lookup$arity$3 = function(this__3991__auto__, k10479, else__3992__auto__) {
  var self__ = this;
  var this__3991__auto____$1 = this;
  if (cljs.core.keyword_identical_QMARK_.call(null, k10479, new cljs.core.Keyword(null, "left", "left", 1017222009))) {
    return self__.left;
  } else {
    if (cljs.core.keyword_identical_QMARK_.call(null, k10479, new cljs.core.Keyword(null, "center", "center", 3944857543))) {
      return self__.center;
    } else {
      if (cljs.core.keyword_identical_QMARK_.call(null, k10479, new cljs.core.Keyword(null, "right", "right", 1122416014))) {
        return self__.right;
      } else {
        if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
          return cljs.core.get.call(null, self__.__extmap, k10479, else__3992__auto__);
        } else {
          return null;
        }
      }
    }
  }
};
termcat.term.Block.prototype.cljs$core$IAssociative$_assoc$arity$3 = function(this__3996__auto__, k__3997__auto__, G__10478) {
  var self__ = this;
  var this__3996__auto____$1 = this;
  var pred__10481 = cljs.core.keyword_identical_QMARK_;
  var expr__10482 = k__3997__auto__;
  if (cljs.core.truth_(pred__10481.call(null, new cljs.core.Keyword(null, "left", "left", 1017222009), expr__10482))) {
    return new termcat.term.Block(G__10478, self__.center, self__.right, self__.__meta, self__.__extmap, null);
  } else {
    if (cljs.core.truth_(pred__10481.call(null, new cljs.core.Keyword(null, "center", "center", 3944857543), expr__10482))) {
      return new termcat.term.Block(self__.left, G__10478, self__.right, self__.__meta, self__.__extmap, null);
    } else {
      if (cljs.core.truth_(pred__10481.call(null, new cljs.core.Keyword(null, "right", "right", 1122416014), expr__10482))) {
        return new termcat.term.Block(self__.left, self__.center, G__10478, self__.__meta, self__.__extmap, null);
      } else {
        return new termcat.term.Block(self__.left, self__.center, self__.right, self__.__meta, cljs.core.assoc.call(null, self__.__extmap, k__3997__auto__, G__10478), null);
      }
    }
  }
};
termcat.term.Block.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(this__4003__auto__, writer__4004__auto__, opts__4005__auto__) {
  var self__ = this;
  var this__4003__auto____$1 = this;
  var pr_pair__4006__auto__ = function(keyval__4007__auto__) {
    return cljs.core.pr_sequential_writer.call(null, writer__4004__auto__, cljs.core.pr_writer, "", " ", "", opts__4005__auto__, keyval__4007__auto__);
  };
  return cljs.core.pr_sequential_writer.call(null, writer__4004__auto__, pr_pair__4006__auto__, "#termcat.term.Block{", ", ", "}", opts__4005__auto__, cljs.core.concat.call(null, new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "left", "left", 1017222009), self__.left], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, 
  [new cljs.core.Keyword(null, "center", "center", 3944857543), self__.center], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "right", "right", 1122416014), self__.right], null)], null), self__.__extmap));
};
termcat.term.Block.prototype.cljs$core$ICollection$_conj$arity$2 = function(this__3994__auto__, entry__3995__auto__) {
  var self__ = this;
  var this__3994__auto____$1 = this;
  if (cljs.core.vector_QMARK_.call(null, entry__3995__auto__)) {
    return cljs.core._assoc.call(null, this__3994__auto____$1, cljs.core._nth.call(null, entry__3995__auto__, 0), cljs.core._nth.call(null, entry__3995__auto__, 1));
  } else {
    return cljs.core.reduce.call(null, cljs.core._conj, this__3994__auto____$1, entry__3995__auto__);
  }
};
termcat.term.Block.prototype.cljs$core$ISeqable$_seq$arity$1 = function(this__4001__auto__) {
  var self__ = this;
  var this__4001__auto____$1 = this;
  return cljs.core.seq.call(null, cljs.core.concat.call(null, new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "left", "left", 1017222009), self__.left], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "center", "center", 3944857543), self__.center], null), new cljs.core.PersistentVector(null, 
  2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "right", "right", 1122416014), self__.right], null)], null), self__.__extmap));
};
termcat.term.Block.prototype.cljs$core$ICounted$_count$arity$1 = function(this__3993__auto__) {
  var self__ = this;
  var this__3993__auto____$1 = this;
  return 3 + cljs.core.count.call(null, self__.__extmap);
};
termcat.term.Block.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(this__3985__auto__, other__3986__auto__) {
  var self__ = this;
  var this__3985__auto____$1 = this;
  if (cljs.core.truth_(function() {
    var and__3391__auto__ = other__3986__auto__;
    if (cljs.core.truth_(and__3391__auto__)) {
      return this__3985__auto____$1.constructor === other__3986__auto__.constructor && cljs.core.equiv_map.call(null, this__3985__auto____$1, other__3986__auto__);
    } else {
      return and__3391__auto__;
    }
  }())) {
    return true;
  } else {
    return false;
  }
};
termcat.term.Block.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(this__3988__auto__, G__10478) {
  var self__ = this;
  var this__3988__auto____$1 = this;
  return new termcat.term.Block(self__.left, self__.center, self__.right, G__10478, self__.__extmap, self__.__hash);
};
termcat.term.Block.prototype.cljs$core$ICloneable$_clone$arity$1 = function(this__3983__auto__) {
  var self__ = this;
  var this__3983__auto____$1 = this;
  return new termcat.term.Block(self__.left, self__.center, self__.right, self__.__meta, self__.__extmap, self__.__hash);
};
termcat.term.Block.prototype.cljs$core$IMeta$_meta$arity$1 = function(this__3987__auto__) {
  var self__ = this;
  var this__3987__auto____$1 = this;
  return self__.__meta;
};
termcat.term.Block.prototype.cljs$core$IMap$_dissoc$arity$2 = function(this__3998__auto__, k__3999__auto__) {
  var self__ = this;
  var this__3998__auto____$1 = this;
  if (cljs.core.contains_QMARK_.call(null, new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null, "center", "center", 3944857543), null, new cljs.core.Keyword(null, "right", "right", 1122416014), null, new cljs.core.Keyword(null, "left", "left", 1017222009), null], null), null), k__3999__auto__)) {
    return cljs.core.dissoc.call(null, cljs.core.with_meta.call(null, cljs.core.into.call(null, cljs.core.PersistentArrayMap.EMPTY, this__3998__auto____$1), self__.__meta), k__3999__auto__);
  } else {
    return new termcat.term.Block(self__.left, self__.center, self__.right, self__.__meta, cljs.core.not_empty.call(null, cljs.core.dissoc.call(null, self__.__extmap, k__3999__auto__)), null);
  }
};
termcat.term.Block.cljs$lang$type = true;
termcat.term.Block.cljs$lang$ctorPrSeq = function(this__4023__auto__) {
  return cljs.core._conj.call(null, cljs.core.List.EMPTY, "termcat.term/Block");
};
termcat.term.Block.cljs$lang$ctorPrWriter = function(this__4023__auto__, writer__4024__auto__) {
  return cljs.core._write.call(null, writer__4024__auto__, "termcat.term/Block");
};
termcat.term.__GT_Block = function __GT_Block(left, center, right) {
  return new termcat.term.Block(left, center, right);
};
termcat.term.map__GT_Block = function map__GT_Block(G__10480) {
  return new termcat.term.Block((new cljs.core.Keyword(null, "left", "left", 1017222009)).cljs$core$IFn$_invoke$arity$1(G__10480), (new cljs.core.Keyword(null, "center", "center", 3944857543)).cljs$core$IFn$_invoke$arity$1(G__10480), (new cljs.core.Keyword(null, "right", "right", 1122416014)).cljs$core$IFn$_invoke$arity$1(G__10480), null, cljs.core.dissoc.call(null, G__10480, new cljs.core.Keyword(null, "left", "left", 1017222009), new cljs.core.Keyword(null, "center", "center", 3944857543), new cljs.core.Keyword(null, 
  "right", "right", 1122416014)));
};
termcat.term.token_QMARK_ = function token_QMARK_(x) {
  return cljs.core._EQ_.call(null, cljs.core.type.call(null, x), termcat.term.Token);
};
termcat.term.ldelim_QMARK_ = function ldelim_QMARK_(x) {
  return termcat.term.token_QMARK_.call(null, x) && (cljs.core.vector_QMARK_.call(null, termcat.term.tt.call(null, x)) && cljs.core._EQ_.call(null, cljs.core.first.call(null, termcat.term.tt.call(null, x)), new cljs.core.Keyword(null, "ldelim", "ldelim", 4201320693)));
};
termcat.term.rdelim_QMARK_ = function rdelim_QMARK_(x) {
  return termcat.term.token_QMARK_.call(null, x) && (cljs.core.vector_QMARK_.call(null, termcat.term.tt.call(null, x)) && cljs.core._EQ_.call(null, cljs.core.first.call(null, termcat.term.tt.call(null, x)), new cljs.core.Keyword(null, "rdelim", "rdelim", 4373095599)));
};
termcat.term.delim_QMARK_ = function delim_QMARK_(x) {
  return termcat.term.ldelim_QMARK_.call(null, x) || termcat.term.rdelim_QMARK_.call(null, x);
};
termcat.term.dt = function dt(x) {
  return cljs.core.second.call(null, termcat.term.tt.call(null, x));
};
termcat.term.delim_pair_QMARK_ = function delim_pair_QMARK_(x, y) {
  return termcat.term.ldelim_QMARK_.call(null, x) && (termcat.term.rdelim_QMARK_.call(null, y) && cljs.core._EQ_.call(null, termcat.term.dt.call(null, x), termcat.term.dt.call(null, y)));
};
termcat.term.fragment_QMARK_ = function fragment_QMARK_(x) {
  return cljs.core._EQ_.call(null, cljs.core.type.call(null, x), termcat.term.Fragment);
};
termcat.term.block_QMARK_ = function block_QMARK_(x) {
  return cljs.core._EQ_.call(null, cljs.core.type.call(null, x), termcat.term.Block);
};
termcat.term.token = function() {
  var token = null;
  var token__1 = function(tag) {
    return token.call(null, tag, null);
  };
  var token__2 = function(tag, payload) {
    return new termcat.term.Token(tag, payload);
  };
  token = function(tag, payload) {
    switch(arguments.length) {
      case 1:
        return token__1.call(this, tag);
      case 2:
        return token__2.call(this, tag, payload);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  token.cljs$core$IFn$_invoke$arity$1 = token__1;
  token.cljs$core$IFn$_invoke$arity$2 = token__2;
  return token;
}();
termcat.term.ldelim_t = function ldelim_t(tag) {
  return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "ldelim", "ldelim", 4201320693), tag], null);
};
termcat.term.rdelim_t = function rdelim_t(tag) {
  return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "rdelim", "rdelim", 4373095599), tag], null);
};
termcat.term.ldelim = function() {
  var ldelim = null;
  var ldelim__1 = function(tag) {
    return ldelim.call(null, tag, null);
  };
  var ldelim__2 = function(tag, symb) {
    return termcat.term.token.call(null, termcat.term.ldelim_t.call(null, tag), symb);
  };
  ldelim = function(tag, symb) {
    switch(arguments.length) {
      case 1:
        return ldelim__1.call(this, tag);
      case 2:
        return ldelim__2.call(this, tag, symb);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  ldelim.cljs$core$IFn$_invoke$arity$1 = ldelim__1;
  ldelim.cljs$core$IFn$_invoke$arity$2 = ldelim__2;
  return ldelim;
}();
termcat.term.rdelim = function() {
  var rdelim = null;
  var rdelim__1 = function(tag) {
    return rdelim.call(null, tag, null);
  };
  var rdelim__2 = function(tag, symb) {
    return termcat.term.token.call(null, termcat.term.rdelim_t.call(null, tag), symb);
  };
  rdelim = function(tag, symb) {
    switch(arguments.length) {
      case 1:
        return rdelim__1.call(this, tag);
      case 2:
        return rdelim__2.call(this, tag, symb);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  rdelim.cljs$core$IFn$_invoke$arity$1 = rdelim__1;
  rdelim.cljs$core$IFn$_invoke$arity$2 = rdelim__2;
  return rdelim;
}();
termcat.term.fragmentcat = function() {
  var fragmentcat = null;
  var fragmentcat__1 = function(terms) {
    return new termcat.term.Fragment(cljs.core.vec.call(null, terms));
  };
  var fragmentcat__2 = function() {
    var G__10484__delegate = function(x, xs) {
      return fragmentcat.call(null, cljs.core.apply.call(null, cljs.core.concat, x, xs));
    };
    var G__10484 = function(x, var_args) {
      var xs = null;
      if (arguments.length > 1) {
        xs = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
      }
      return G__10484__delegate.call(this, x, xs);
    };
    G__10484.cljs$lang$maxFixedArity = 1;
    G__10484.cljs$lang$applyTo = function(arglist__10485) {
      var x = cljs.core.first(arglist__10485);
      var xs = cljs.core.rest(arglist__10485);
      return G__10484__delegate(x, xs);
    };
    G__10484.cljs$core$IFn$_invoke$arity$variadic = G__10484__delegate;
    return G__10484;
  }();
  fragmentcat = function(x, var_args) {
    var xs = var_args;
    switch(arguments.length) {
      case 1:
        return fragmentcat__1.call(this, x);
      default:
        return fragmentcat__2.cljs$core$IFn$_invoke$arity$variadic(x, cljs.core.array_seq(arguments, 1));
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  fragmentcat.cljs$lang$maxFixedArity = 1;
  fragmentcat.cljs$lang$applyTo = fragmentcat__2.cljs$lang$applyTo;
  fragmentcat.cljs$core$IFn$_invoke$arity$1 = fragmentcat__1;
  fragmentcat.cljs$core$IFn$_invoke$arity$variadic = fragmentcat__2.cljs$core$IFn$_invoke$arity$variadic;
  return fragmentcat;
}();
termcat.term.fragment = function() {
  var fragment__delegate = function(terms) {
    return termcat.term.fragmentcat.call(null, terms);
  };
  var fragment = function(var_args) {
    var terms = null;
    if (arguments.length > 0) {
      terms = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0), 0);
    }
    return fragment__delegate.call(this, terms);
  };
  fragment.cljs$lang$maxFixedArity = 0;
  fragment.cljs$lang$applyTo = function(arglist__10486) {
    var terms = cljs.core.seq(arglist__10486);
    return fragment__delegate(terms);
  };
  fragment.cljs$core$IFn$_invoke$arity$variadic = fragment__delegate;
  return fragment;
}();
termcat.term.block = function block(left, center, right) {
  return new termcat.term.Block(left, center, right);
};
termcat.term.IToken["null"] = true;
termcat.term.payload["null"] = function(this$) {
  return null;
};
termcat.term.ITerm["null"] = true;
termcat.term.tt["null"] = function(this$) {
  return null;
};
termcat.term.Token.prototype.termcat$term$IToken$ = true;
termcat.term.Token.prototype.termcat$term$IToken$payload$arity$1 = function(this$) {
  var this$__$1 = this;
  return this$__$1.payload;
};
termcat.term.Token.prototype.termcat$term$ITerm$ = true;
termcat.term.Token.prototype.termcat$term$ITerm$tt$arity$1 = function(this$) {
  var this$__$1 = this;
  return this$__$1.tag;
};
termcat.term.Fragment.prototype.termcat$term$IFragment$ = true;
termcat.term.Fragment.prototype.termcat$term$IFragment$ednval$arity$1 = function(this$) {
  var this$__$1 = this;
  if (cljs.core.truth_(clojure.core.reducers.reduce.call(null, cljs.core.constantly.call(null, cljs.core.reduced.call(null, false)), true, clojure.core.reducers.filter.call(null, cljs.core.complement.call(null, termcat.term.token_QMARK_), this$__$1.terms)))) {
    try {
      return cljs.reader.read_string.call(null, clojure.core.reducers.fold.call(null, cljs.core.str, clojure.core.reducers.map.call(null, termcat.term.payload, this$__$1.terms)));
    } catch (e10487) {
      if (e10487 instanceof java.lang.Exception) {
        var x = e10487;
        return null;
      } else {
        if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
          throw e10487;
        } else {
          return null;
        }
      }
    }
  } else {
    return null;
  }
};
termcat.term.Fragment.prototype.termcat$term$ITerm$ = true;
termcat.term.Fragment.prototype.termcat$term$ITerm$tt$arity$1 = function(this$) {
  var this$__$1 = this;
  return new cljs.core.Keyword(null, "fragment", "fragment", 3658601922);
};
termcat.term.Block.prototype.termcat$rewrite$IWrapped$ = true;
termcat.term.Block.prototype.termcat$rewrite$IWrapped$unwrap$arity$1 = function(orig) {
  var orig__$1 = this;
  return orig__$1.center.terms;
};
termcat.term.Block.prototype.termcat$rewrite$IWrapped$rewrap$arity$2 = function(orig, result) {
  var orig__$1 = this;
  return termcat.term.block.call(null, termcat.term.left.call(null, orig__$1), termcat.term.fragmentcat.call(null, result), termcat.term.right.call(null, orig__$1));
};
termcat.term.Block.prototype.termcat$term$IBlock$ = true;
termcat.term.Block.prototype.termcat$term$IBlock$left$arity$1 = function(this$) {
  var this$__$1 = this;
  return this$__$1.left;
};
termcat.term.Block.prototype.termcat$term$IBlock$center$arity$1 = function(this$) {
  var this$__$1 = this;
  return this$__$1.center;
};
termcat.term.Block.prototype.termcat$term$IBlock$right$arity$1 = function(this$) {
  var this$__$1 = this;
  return this$__$1.right;
};
termcat.term.Block.prototype.termcat$term$ITerm$ = true;
termcat.term.Block.prototype.termcat$term$ITerm$tt$arity$1 = function(this$) {
  var this$__$1 = this;
  return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "block", "block", 1107736575), termcat.term.dt.call(null, this$__$1.left)], null);
};
goog.provide("termcat.util.math");
goog.require("cljs.core");
goog.require("termcat.term");
goog.require("termcat.term");
goog.require("termcat.rewrite");
goog.require("termcat.rewrite");
goog.require("clojure.core.reducers");
goog.require("clojure.core.reducers");
goog.require("cljs.reader");
goog.require("cljs.reader");
goog.require("cljs.core.match");
termcat.util.math.number_string_QMARK_ = function number_string_QMARK_(s) {
  try {
    return typeof cljs.reader.read_string.call(null, s) === "number";
  } catch (e10515) {
    if (e10515 instanceof java.lang.Exception) {
      var x = e10515;
      return false;
    } else {
      if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
        throw e10515;
      } else {
        return null;
      }
    }
  }
};
termcat.util.math.math_opts = function math_opts(t) {
  var ocr_10523 = termcat.term.tt.call(null, t);
  try {
    if (cljs.core.vector_QMARK_.call(null, ocr_10523) && cljs.core.count.call(null, ocr_10523) === 2) {
      try {
        var ocr_10523_0__10525 = cljs.core.nth.call(null, ocr_10523, 0);
        if (cljs.core.keyword_identical_QMARK_.call(null, ocr_10523_0__10525, new cljs.core.Keyword(null, "block", "block", 1107736575))) {
          try {
            var ocr_10523_1__10526 = cljs.core.nth.call(null, ocr_10523, 1);
            if (cljs.core.truth_((new cljs.core.Keyword(null, "math", "math", 1017248378)).cljs$core$IFn$_invoke$arity$1(ocr_10523_1__10526))) {
              var x = cljs.core.nth.call(null, ocr_10523, 1);
              return x;
            } else {
              if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
                throw cljs.core.match.backtrack;
              } else {
                return null;
              }
            }
          } catch (e10529) {
            if (e10529 instanceof Error) {
              var e__4796__auto__ = e10529;
              if (e__4796__auto__ === cljs.core.match.backtrack) {
                throw cljs.core.match.backtrack;
              } else {
                throw e__4796__auto__;
              }
            } else {
              if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
                throw e10529;
              } else {
                return null;
              }
            }
          }
        } else {
          if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
            throw cljs.core.match.backtrack;
          } else {
            return null;
          }
        }
      } catch (e10528) {
        if (e10528 instanceof Error) {
          var e__4796__auto__ = e10528;
          if (e__4796__auto__ === cljs.core.match.backtrack) {
            throw cljs.core.match.backtrack;
          } else {
            throw e__4796__auto__;
          }
        } else {
          if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
            throw e10528;
          } else {
            return null;
          }
        }
      }
    } else {
      if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
        throw cljs.core.match.backtrack;
      } else {
        return null;
      }
    }
  } catch (e10527) {
    if (e10527 instanceof Error) {
      var e__4796__auto__ = e10527;
      if (e__4796__auto__ === cljs.core.match.backtrack) {
        return false;
      } else {
        throw e__4796__auto__;
      }
    } else {
      if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
        throw e10527;
      } else {
        return null;
      }
    }
  }
};
termcat.util.math.math_block = function() {
  var math_block__delegate = function(frag, keys) {
    var tag = cljs.core.into.call(null, new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "math", "math", 1017248378), null], null), null), keys);
    return termcat.term.block.call(null, termcat.term.ldelim.call(null, tag), frag, termcat.term.rdelim.call(null, tag));
  };
  var math_block = function(frag, var_args) {
    var keys = null;
    if (arguments.length > 1) {
      keys = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return math_block__delegate.call(this, frag, keys);
  };
  math_block.cljs$lang$maxFixedArity = 1;
  math_block.cljs$lang$applyTo = function(arglist__10530) {
    var frag = cljs.core.first(arglist__10530);
    var keys = cljs.core.rest(arglist__10530);
    return math_block__delegate(frag, keys);
  };
  math_block.cljs$core$IFn$_invoke$arity$variadic = math_block__delegate;
  return math_block;
}();
termcat.util.math.math_cast = function() {
  var math_cast = null;
  var math_cast__1 = function(t) {
    return math_cast.call(null, t, null);
  };
  var math_cast__2 = function(t, opts) {
    var ocr_10543 = termcat.term.tt.call(null, t);
    try {
      if (cljs.core.keyword_identical_QMARK_.call(null, ocr_10543, new cljs.core.Keyword(null, "dash", "dash", 1016980228))) {
        return new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [termcat.util.math.math_block.call(null, termcat.term.fragment.call(null, t), new cljs.core.Keyword(null, "mo", "mo", 1013907732), new cljs.core.Keyword(null, "prefix", "prefix", 4328760836))], null);
      } else {
        if (cljs.core.keyword_identical_QMARK_.call(null, ocr_10543, new cljs.core.Keyword(null, "fun", "fun", 1014006001))) {
          return new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [t], null);
        } else {
          if (cljs.core.keyword_identical_QMARK_.call(null, ocr_10543, new cljs.core.Keyword(null, "text", "text", 1017460895))) {
            return new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [t], null);
          } else {
            if (cljs.core.keyword_identical_QMARK_.call(null, ocr_10543, new cljs.core.Keyword(null, "right-quote", "right-quote", 3807707901))) {
              return new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [t], null);
            } else {
              if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
                throw cljs.core.match.backtrack;
              } else {
                return null;
              }
            }
          }
        }
      }
    } catch (e10549) {
      if (e10549 instanceof Error) {
        var e__4796__auto__ = e10549;
        if (e__4796__auto__ === cljs.core.match.backtrack) {
          try {
            if (cljs.core.vector_QMARK_.call(null, ocr_10543) && cljs.core.count.call(null, ocr_10543) === 2) {
              try {
                var ocr_10543_0__10547 = cljs.core.nth.call(null, ocr_10543, 0);
                if (cljs.core.keyword_identical_QMARK_.call(null, ocr_10543_0__10547, new cljs.core.Keyword(null, "block", "block", 1107736575))) {
                  try {
                    var ocr_10543_1__10548 = cljs.core.nth.call(null, ocr_10543, 1);
                    if (cljs.core.truth_((new cljs.core.Keyword(null, "math", "math", 1017248378)).cljs$core$IFn$_invoke$arity$1(ocr_10543_1__10548))) {
                      return new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [t], null);
                    } else {
                      if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
                        throw cljs.core.match.backtrack;
                      } else {
                        return null;
                      }
                    }
                  } catch (e10553) {
                    if (e10553 instanceof Error) {
                      var e__4796__auto____$1 = e10553;
                      if (e__4796__auto____$1 === cljs.core.match.backtrack) {
                        throw cljs.core.match.backtrack;
                      } else {
                        throw e__4796__auto____$1;
                      }
                    } else {
                      if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
                        throw e10553;
                      } else {
                        return null;
                      }
                    }
                  }
                } else {
                  if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
                    throw cljs.core.match.backtrack;
                  } else {
                    return null;
                  }
                }
              } catch (e10551) {
                if (e10551 instanceof Error) {
                  var e__4796__auto____$1 = e10551;
                  if (e__4796__auto____$1 === cljs.core.match.backtrack) {
                    try {
                      var ocr_10543_0__10547 = cljs.core.nth.call(null, ocr_10543, 0);
                      if (cljs.core.keyword_identical_QMARK_.call(null, ocr_10543_0__10547, new cljs.core.Keyword(null, "block", "block", 1107736575))) {
                        var temp__4090__auto__ = termcat.util.math.math_opts.call(null, t);
                        if (cljs.core.truth_(temp__4090__auto__)) {
                          var cur_opts = temp__4090__auto__;
                          return new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [termcat.term.block.call(null, termcat.term.ldelim.call(null, cljs.core.into.call(null, cur_opts, opts)), termcat.term.center.call(null, t), termcat.term.rdelim.call(null, cljs.core.into.call(null, cur_opts, opts)))], null);
                        } else {
                          return cljs.core.concat.call(null, cljs.core.truth_(termcat.term.payload.call(null, termcat.term.left.call(null, t))) ? new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [termcat.util.math.math_block.call(null, termcat.term.fragment.call(null, termcat.term.left.call(null, t)), new cljs.core.Keyword(null, "mo", "mo", 1013907732))], null) : null, cljs.core.truth_(termcat.rewrite.unwrap.call(null, t)) ? math_cast.call(null, cljs.core.first.call(null, 
                          termcat.rewrite.unwrap.call(null, t)), opts) : null, cljs.core.next.call(null, termcat.rewrite.unwrap.call(null, t)), cljs.core.truth_(termcat.term.payload.call(null, termcat.term.right.call(null, t))) ? new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [termcat.util.math.math_block.call(null, termcat.term.fragment.call(null, termcat.term.right.call(null, t)), new cljs.core.Keyword(null, "mo", "mo", 1013907732))], null) : null);
                        }
                      } else {
                        if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
                          throw cljs.core.match.backtrack;
                        } else {
                          return null;
                        }
                      }
                    } catch (e10552) {
                      if (e10552 instanceof Error) {
                        var e__4796__auto____$2 = e10552;
                        if (e__4796__auto____$2 === cljs.core.match.backtrack) {
                          throw cljs.core.match.backtrack;
                        } else {
                          throw e__4796__auto____$2;
                        }
                      } else {
                        if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
                          throw e10552;
                        } else {
                          return null;
                        }
                      }
                    }
                  } else {
                    throw e__4796__auto____$1;
                  }
                } else {
                  if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
                    throw e10551;
                  } else {
                    return null;
                  }
                }
              }
            } else {
              if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
                throw cljs.core.match.backtrack;
              } else {
                return null;
              }
            }
          } catch (e10550) {
            if (e10550 instanceof Error) {
              var e__4796__auto____$1 = e10550;
              if (e__4796__auto____$1 === cljs.core.match.backtrack) {
                var s = [cljs.core.str(termcat.term.payload.call(null, t))].join("");
                if (cljs.core.truth_(termcat.util.math.number_string_QMARK_.call(null, s))) {
                  return new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [termcat.util.math.math_block.call(null, termcat.term.fragment.call(null, t), new cljs.core.Keyword(null, "mn", "mn", 1013907731))], null);
                } else {
                  return clojure.core.reducers.foldcat.call(null, clojure.core.reducers.map.call(null, function(p1__10531_SHARP_) {
                    return cljs.core.apply.call(null, termcat.util.math.math_block, p1__10531_SHARP_, new cljs.core.Keyword(null, "mi", "mi", 1013907726), opts);
                  }, clojure.core.reducers.map.call(null, termcat.term.fragment, clojure.core.reducers.map.call(null, cljs.core.partial.call(null, termcat.term.token, new cljs.core.Keyword(null, "default", "default", 2558708147)), cljs.core.vec.call(null, s)))));
                }
              } else {
                throw e__4796__auto____$1;
              }
            } else {
              if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
                throw e10550;
              } else {
                return null;
              }
            }
          }
        } else {
          throw e__4796__auto__;
        }
      } else {
        if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
          throw e10549;
        } else {
          return null;
        }
      }
    }
  };
  math_cast = function(t, opts) {
    switch(arguments.length) {
      case 1:
        return math_cast__1.call(this, t);
      case 2:
        return math_cast__2.call(this, t, opts);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  math_cast.cljs$core$IFn$_invoke$arity$1 = math_cast__1;
  math_cast.cljs$core$IFn$_invoke$arity$2 = math_cast__2;
  return math_cast;
}();
termcat.util.math.math_block_QMARK_ = function math_block_QMARK_(t) {
  var ocr_10562 = termcat.term.tt.call(null, t);
  try {
    if (cljs.core.vector_QMARK_.call(null, ocr_10562) && cljs.core.count.call(null, ocr_10562) === 2) {
      try {
        var ocr_10562_0__10565 = cljs.core.nth.call(null, ocr_10562, 0);
        if (cljs.core.keyword_identical_QMARK_.call(null, ocr_10562_0__10565, new cljs.core.Keyword(null, "block", "block", 1107736575))) {
          try {
            var ocr_10562_1__10566 = cljs.core.nth.call(null, ocr_10562, 1);
            if (cljs.core.truth_((new cljs.core.Keyword(null, "math", "math", 1017248378)).cljs$core$IFn$_invoke$arity$1(ocr_10562_1__10566))) {
              return true;
            } else {
              if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
                throw cljs.core.match.backtrack;
              } else {
                return null;
              }
            }
          } catch (e10569) {
            if (e10569 instanceof Error) {
              var e__4796__auto__ = e10569;
              if (e__4796__auto__ === cljs.core.match.backtrack) {
                throw cljs.core.match.backtrack;
              } else {
                throw e__4796__auto__;
              }
            } else {
              if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
                throw e10569;
              } else {
                return null;
              }
            }
          }
        } else {
          if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
            throw cljs.core.match.backtrack;
          } else {
            return null;
          }
        }
      } catch (e10568) {
        if (e10568 instanceof Error) {
          var e__4796__auto__ = e10568;
          if (e__4796__auto__ === cljs.core.match.backtrack) {
            throw cljs.core.match.backtrack;
          } else {
            throw e__4796__auto__;
          }
        } else {
          if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
            throw e10568;
          } else {
            return null;
          }
        }
      }
    } else {
      if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
        throw cljs.core.match.backtrack;
      } else {
        return null;
      }
    }
  } catch (e10567) {
    if (e10567 instanceof Error) {
      var e__4796__auto__ = e10567;
      if (e__4796__auto__ === cljs.core.match.backtrack) {
        return false;
      } else {
        throw e__4796__auto__;
      }
    } else {
      if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
        throw e10567;
      } else {
        return null;
      }
    }
  }
};
termcat.util.math.math_row_cast = function math_row_cast(t) {
  return termcat.util.math.math_block.call(null, termcat.term.fragmentcat.call(null, termcat.util.math.math_cast.call(null, termcat.term.block_QMARK_.call(null, t) && cljs.core.not.call(null, termcat.util.math.math_block_QMARK_.call(null, t)) ? termcat.term.block.call(null, termcat.term.ldelim.call(null, new cljs.core.Keyword(null, "math-row-cast", "math-row-cast", 2044318697)), termcat.term.center.call(null, t), termcat.term.rdelim.call(null, new cljs.core.Keyword(null, "math-row-cast", "math-row-cast", 
  2044318697))) : t)), new cljs.core.Keyword(null, "mrow", "mrow", 1017264575));
};
termcat.util.math.merge_rows = function() {
  var merge_rows__delegate = function(sep, ts) {
    var $ = ts;
    var $__$1 = cljs.core.map.call(null, function($) {
      return function(p1__10570_SHARP_) {
        var ocr_10579 = termcat.term.tt.call(null, p1__10570_SHARP_);
        try {
          if (cljs.core.vector_QMARK_.call(null, ocr_10579) && cljs.core.count.call(null, ocr_10579) === 2) {
            try {
              var ocr_10579_0__10582 = cljs.core.nth.call(null, ocr_10579, 0);
              if (cljs.core.keyword_identical_QMARK_.call(null, ocr_10579_0__10582, new cljs.core.Keyword(null, "block", "block", 1107736575))) {
                try {
                  var ocr_10579_1__10583 = cljs.core.nth.call(null, ocr_10579, 1);
                  if (cljs.core.truth_((new cljs.core.Keyword(null, "mrow", "mrow", 1017264575)).cljs$core$IFn$_invoke$arity$1(ocr_10579_1__10583))) {
                    return termcat.rewrite.unwrap.call(null, p1__10570_SHARP_);
                  } else {
                    if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
                      throw cljs.core.match.backtrack;
                    } else {
                      return null;
                    }
                  }
                } catch (e10586) {
                  if (e10586 instanceof Error) {
                    var e__4796__auto__ = e10586;
                    if (e__4796__auto__ === cljs.core.match.backtrack) {
                      throw cljs.core.match.backtrack;
                    } else {
                      throw e__4796__auto__;
                    }
                  } else {
                    if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
                      throw e10586;
                    } else {
                      return null;
                    }
                  }
                }
              } else {
                if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
                  throw cljs.core.match.backtrack;
                } else {
                  return null;
                }
              }
            } catch (e10585) {
              if (e10585 instanceof Error) {
                var e__4796__auto__ = e10585;
                if (e__4796__auto__ === cljs.core.match.backtrack) {
                  throw cljs.core.match.backtrack;
                } else {
                  throw e__4796__auto__;
                }
              } else {
                if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
                  throw e10585;
                } else {
                  return null;
                }
              }
            }
          } else {
            if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
              throw cljs.core.match.backtrack;
            } else {
              return null;
            }
          }
        } catch (e10584) {
          if (e10584 instanceof Error) {
            var e__4796__auto__ = e10584;
            if (e__4796__auto__ === cljs.core.match.backtrack) {
              return new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [p1__10570_SHARP_], null);
            } else {
              throw e__4796__auto__;
            }
          } else {
            if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
              throw e10584;
            } else {
              return null;
            }
          }
        }
      };
    }($), $);
    var $__$2 = cljs.core.apply.call(null, cljs.core.concat, $__$1);
    var $__$3 = termcat.term.fragmentcat.call(null, $__$2);
    var $__$4 = termcat.util.math.math_block.call(null, $__$3, new cljs.core.Keyword(null, "mrow", "mrow", 1017264575));
    return $__$4;
  };
  var merge_rows = function(sep, var_args) {
    var ts = null;
    if (arguments.length > 1) {
      ts = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return merge_rows__delegate.call(this, sep, ts);
  };
  merge_rows.cljs$lang$maxFixedArity = 1;
  merge_rows.cljs$lang$applyTo = function(arglist__10587) {
    var sep = cljs.core.first(arglist__10587);
    var ts = cljs.core.rest(arglist__10587);
    return merge_rows__delegate(sep, ts);
  };
  merge_rows.cljs$core$IFn$_invoke$arity$variadic = merge_rows__delegate;
  return merge_rows;
}();
goog.provide("termcat.rules.pretokenize");
goog.require("cljs.core");
goog.require("termcat.term");
goog.require("termcat.term");
goog.require("clojure.core.reducers");
goog.require("clojure.core.reducers");
termcat.rules.pretokenize.char_to_token = function char_to_token(c) {
  return termcat.term.token.call(null, function() {
    var G__10037 = c;
    if (cljs.core._EQ_.call(null, " ", G__10037)) {
      return new cljs.core.Keyword(null, "whitespace", "whitespace", 1290815983);
    } else {
      if (cljs.core._EQ_.call(null, "`", G__10037)) {
        return new cljs.core.Keyword(null, "left-quote", "left-quote", 2041480360);
      } else {
        if (cljs.core._EQ_.call(null, "!", G__10037)) {
          return new cljs.core.Keyword(null, "bang", "bang", 1016920490);
        } else {
          if (cljs.core._EQ_.call(null, '"', G__10037)) {
            return new cljs.core.Keyword(null, "double-quote", "double-quote", 969793778);
          } else {
            if (cljs.core._EQ_.call(null, "#", G__10037)) {
              return new cljs.core.Keyword(null, "hash", "hash", 1017099392);
            } else {
              if (cljs.core._EQ_.call(null, "%", G__10037)) {
                return new cljs.core.Keyword(null, "percent", "percent", 4629944247);
              } else {
                if (cljs.core._EQ_.call(null, "'", G__10037)) {
                  return new cljs.core.Keyword(null, "right-quote", "right-quote", 3807707901);
                } else {
                  if (cljs.core._EQ_.call(null, "(", G__10037)) {
                    return termcat.term.ldelim_t.call(null, new cljs.core.Keyword(null, "parenthesis", "parenthesis", 2036987848));
                  } else {
                    if (cljs.core._EQ_.call(null, ")", G__10037)) {
                      return termcat.term.rdelim_t.call(null, new cljs.core.Keyword(null, "parenthesis", "parenthesis", 2036987848));
                    } else {
                      if (cljs.core._EQ_.call(null, "\n", G__10037)) {
                        return new cljs.core.Keyword(null, "newline", "newline", 2859826438);
                      } else {
                        if (cljs.core._EQ_.call(null, "*", G__10037)) {
                          return new cljs.core.Keyword(null, "asterisk", "asterisk", 669280996);
                        } else {
                          if (cljs.core._EQ_.call(null, "+", G__10037)) {
                            return new cljs.core.Keyword(null, "plus", "plus", 1017348364);
                          } else {
                            if (cljs.core._EQ_.call(null, ",", G__10037)) {
                              return new cljs.core.Keyword(null, "comma", "comma", 1108747847);
                            } else {
                              if (cljs.core._EQ_.call(null, "-", G__10037)) {
                                return new cljs.core.Keyword(null, "dash", "dash", 1016980228);
                              } else {
                                if (cljs.core._EQ_.call(null, ".", G__10037)) {
                                  return new cljs.core.Keyword(null, "period", "period", 4317145395);
                                } else {
                                  if (cljs.core._EQ_.call(null, ":", G__10037)) {
                                    return new cljs.core.Keyword(null, "colon", "colon", 1108746961);
                                  } else {
                                    if (cljs.core._EQ_.call(null, "[", G__10037)) {
                                      return termcat.term.ldelim_t.call(null, new cljs.core.Keyword(null, "bracket", "bracket", 1151311898));
                                    } else {
                                      if (cljs.core._EQ_.call(null, "{", G__10037)) {
                                        return termcat.term.ldelim_t.call(null, new cljs.core.Keyword(null, "brace", "brace", 1107901861));
                                      } else {
                                        if (cljs.core._EQ_.call(null, "\x3c", G__10037)) {
                                          return new cljs.core.Keyword(null, "less-than", "less-than", 1333713095);
                                        } else {
                                          if (cljs.core._EQ_.call(null, "\\", G__10037)) {
                                            return new cljs.core.Keyword(null, "escape", "escape", 4014699507);
                                          } else {
                                            if (cljs.core._EQ_.call(null, "|", G__10037)) {
                                              return new cljs.core.Keyword(null, "bar", "bar", 1014001541);
                                            } else {
                                              if (cljs.core._EQ_.call(null, "]", G__10037)) {
                                                return termcat.term.rdelim_t.call(null, new cljs.core.Keyword(null, "bracket", "bracket", 1151311898));
                                              } else {
                                                if (cljs.core._EQ_.call(null, "}", G__10037)) {
                                                  return termcat.term.rdelim_t.call(null, new cljs.core.Keyword(null, "brace", "brace", 1107901861));
                                                } else {
                                                  if (cljs.core._EQ_.call(null, "\x3e", G__10037)) {
                                                    return new cljs.core.Keyword(null, "greater-than", "greater-than", 3888014086);
                                                  } else {
                                                    if (cljs.core._EQ_.call(null, "^", G__10037)) {
                                                      return new cljs.core.Keyword(null, "circumflex", "circumflex", 4463600090);
                                                    } else {
                                                      if (cljs.core._EQ_.call(null, "~", G__10037)) {
                                                        return new cljs.core.Keyword(null, "tilde", "tilde", 1124267722);
                                                      } else {
                                                        if (cljs.core._EQ_.call(null, "?", G__10037)) {
                                                          return new cljs.core.Keyword(null, "question-mark", "question-mark", 4232142790);
                                                        } else {
                                                          if (cljs.core._EQ_.call(null, "_", G__10037)) {
                                                            return new cljs.core.Keyword(null, "underscore", "underscore", 3544053292);
                                                          } else {
                                                            if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
                                                              return new cljs.core.Keyword(null, "default", "default", 2558708147);
                                                            } else {
                                                              return null;
                                                            }
                                                          }
                                                        }
                                                      }
                                                    }
                                                  }
                                                }
                                              }
                                            }
                                          }
                                        }
                                      }
                                    }
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
  }(), c);
};
termcat.rules.pretokenize.map_to_tokens = function map_to_tokens(code) {
  return cljs.core.first.call(null, clojure.core.reducers.reduce.call(null, function(p__10040, c) {
    var vec__10041 = p__10040;
    var result = cljs.core.nth.call(null, vec__10041, 0, null);
    var pos = cljs.core.nth.call(null, vec__10041, 1, null);
    return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.conj.call(null, result, cljs.core.with_meta.call(null, termcat.rules.pretokenize.char_to_token.call(null, c), new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null, "src", "src", 1014018390), code, new cljs.core.Keyword(null, "lpos", "lpos", 1017232858), pos, new cljs.core.Keyword(null, "rpos", "rpos", 1017411604), pos], null))), pos + 1], null);
  }, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.PersistentVector.EMPTY, 0], null), cljs.core.vec.call(null, code)));
};
goog.provide("clojure.string");
goog.require("cljs.core");
goog.require("goog.string.StringBuffer");
goog.require("goog.string.StringBuffer");
goog.require("goog.string");
goog.require("goog.string");
clojure.string.seq_reverse = function seq_reverse(coll) {
  return cljs.core.reduce.call(null, cljs.core.conj, cljs.core.List.EMPTY, coll);
};
clojure.string.reverse = function reverse(s) {
  return s.split("").reverse().join("");
};
clojure.string.replace = function replace(s, match, replacement) {
  if (typeof match === "string") {
    return s.replace(new RegExp(goog.string.regExpEscape(match), "g"), replacement);
  } else {
    if (cljs.core.truth_(match.hasOwnProperty("source"))) {
      return s.replace(new RegExp(match.source, "g"), replacement);
    } else {
      if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
        throw[cljs.core.str("Invalid match arg: "), cljs.core.str(match)].join("");
      } else {
        return null;
      }
    }
  }
};
clojure.string.replace_first = function replace_first(s, match, replacement) {
  return s.replace(match, replacement);
};
clojure.string.join = function() {
  var join = null;
  var join__1 = function(coll) {
    return cljs.core.apply.call(null, cljs.core.str, coll);
  };
  var join__2 = function(separator, coll) {
    return cljs.core.apply.call(null, cljs.core.str, cljs.core.interpose.call(null, separator, coll));
  };
  join = function(separator, coll) {
    switch(arguments.length) {
      case 1:
        return join__1.call(this, separator);
      case 2:
        return join__2.call(this, separator, coll);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  join.cljs$core$IFn$_invoke$arity$1 = join__1;
  join.cljs$core$IFn$_invoke$arity$2 = join__2;
  return join;
}();
clojure.string.upper_case = function upper_case(s) {
  return s.toUpperCase();
};
clojure.string.lower_case = function lower_case(s) {
  return s.toLowerCase();
};
clojure.string.capitalize = function capitalize(s) {
  if (cljs.core.count.call(null, s) < 2) {
    return clojure.string.upper_case.call(null, s);
  } else {
    return[cljs.core.str(clojure.string.upper_case.call(null, cljs.core.subs.call(null, s, 0, 1))), cljs.core.str(clojure.string.lower_case.call(null, cljs.core.subs.call(null, s, 1)))].join("");
  }
};
clojure.string.pop_last_while_empty = function pop_last_while_empty(v) {
  var v__$1 = v;
  while (true) {
    if (cljs.core._EQ_.call(null, "", cljs.core.peek.call(null, v__$1))) {
      var G__11653 = cljs.core.pop.call(null, v__$1);
      v__$1 = G__11653;
      continue;
    } else {
      return v__$1;
    }
    break;
  }
};
clojure.string.discard_trailing_if_needed = function discard_trailing_if_needed(limit, v) {
  if (cljs.core._EQ_.call(null, 0, limit)) {
    return clojure.string.pop_last_while_empty.call(null, v);
  } else {
    return v;
  }
};
clojure.string.split_with_empty_regex = function split_with_empty_regex(s, limit) {
  if (limit <= 0 || limit >= 2 + cljs.core.count.call(null, s)) {
    return cljs.core.conj.call(null, cljs.core.vec.call(null, cljs.core.cons.call(null, "", cljs.core.map.call(null, cljs.core.str, cljs.core.seq.call(null, s)))), "");
  } else {
    var pred__11657 = cljs.core._EQ_;
    var expr__11658 = limit;
    if (cljs.core.truth_(pred__11657.call(null, 1, expr__11658))) {
      return new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [s], null);
    } else {
      if (cljs.core.truth_(pred__11657.call(null, 2, expr__11658))) {
        return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, ["", s], null);
      } else {
        var c = limit - 2;
        return cljs.core.conj.call(null, cljs.core.vec.call(null, cljs.core.cons.call(null, "", cljs.core.subvec.call(null, cljs.core.vec.call(null, cljs.core.map.call(null, cljs.core.str, cljs.core.seq.call(null, s))), 0, c))), cljs.core.subs.call(null, s, c));
      }
    }
  }
};
clojure.string.split = function() {
  var split = null;
  var split__2 = function(s, re) {
    return split.call(null, s, re, 0);
  };
  var split__3 = function(s, re, limit) {
    return clojure.string.discard_trailing_if_needed.call(null, limit, cljs.core._EQ_.call(null, [cljs.core.str(re)].join(""), "/(?:)/") ? clojure.string.split_with_empty_regex.call(null, s, limit) : limit < 1 ? cljs.core.vec.call(null, [cljs.core.str(s)].join("").split(re)) : function() {
      var s__$1 = s;
      var limit__$1 = limit;
      var parts = cljs.core.PersistentVector.EMPTY;
      while (true) {
        if (cljs.core._EQ_.call(null, limit__$1, 1)) {
          return cljs.core.conj.call(null, parts, s__$1);
        } else {
          var temp__4090__auto__ = cljs.core.re_find.call(null, re, s__$1);
          if (cljs.core.truth_(temp__4090__auto__)) {
            var m = temp__4090__auto__;
            var index = s__$1.indexOf(m);
            var G__11660 = s__$1.substring(index + cljs.core.count.call(null, m));
            var G__11661 = limit__$1 - 1;
            var G__11662 = cljs.core.conj.call(null, parts, s__$1.substring(0, index));
            s__$1 = G__11660;
            limit__$1 = G__11661;
            parts = G__11662;
            continue;
          } else {
            return cljs.core.conj.call(null, parts, s__$1);
          }
        }
        break;
      }
    }());
  };
  split = function(s, re, limit) {
    switch(arguments.length) {
      case 2:
        return split__2.call(this, s, re);
      case 3:
        return split__3.call(this, s, re, limit);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  split.cljs$core$IFn$_invoke$arity$2 = split__2;
  split.cljs$core$IFn$_invoke$arity$3 = split__3;
  return split;
}();
clojure.string.split_lines = function split_lines(s) {
  return clojure.string.split.call(null, s, /\n|\r\n/);
};
clojure.string.trim = function trim(s) {
  return goog.string.trim(s);
};
clojure.string.triml = function triml(s) {
  return goog.string.trimLeft(s);
};
clojure.string.trimr = function trimr(s) {
  return goog.string.trimRight(s);
};
clojure.string.trim_newline = function trim_newline(s) {
  var index = s.length;
  while (true) {
    if (index === 0) {
      return "";
    } else {
      var ch = cljs.core.get.call(null, s, index - 1);
      if (cljs.core._EQ_.call(null, ch, "\n") || cljs.core._EQ_.call(null, ch, "\r")) {
        var G__11663 = index - 1;
        index = G__11663;
        continue;
      } else {
        return s.substring(0, index);
      }
    }
    break;
  }
};
clojure.string.blank_QMARK_ = function blank_QMARK_(s) {
  return goog.string.isEmptySafe(s);
};
clojure.string.escape = function escape__$1(s, cmap) {
  var buffer = new goog.string.StringBuffer;
  var length = s.length;
  var index = 0;
  while (true) {
    if (cljs.core._EQ_.call(null, length, index)) {
      return buffer.toString();
    } else {
      var ch = s.charAt(index);
      var temp__4090__auto___11664 = cljs.core.get.call(null, cmap, ch);
      if (cljs.core.truth_(temp__4090__auto___11664)) {
        var replacement_11665 = temp__4090__auto___11664;
        buffer.append([cljs.core.str(replacement_11665)].join(""));
      } else {
        buffer.append(ch);
      }
      var G__11666 = index + 1;
      index = G__11666;
      continue;
    }
    break;
  }
};
goog.provide("termcat.rules.math");
goog.require("cljs.core");
goog.require("termcat.util.math");
goog.require("termcat.util.math");
goog.require("termcat.term");
goog.require("termcat.term");
goog.require("termcat.rewrite");
goog.require("termcat.rewrite");
goog.require("clojure.string");
goog.require("clojure.string");
goog.require("cljs.core.match");
termcat.rules.math.remove_manual_casts = termcat.rewrite.abstraction.call(null, function() {
  var G__9800 = null;
  var G__9800__0 = function() {
    return null;
  };
  var G__9800__2 = function(state__6468__auto__, input__6469__auto__) {
    var padded_input__6470__auto__ = cljs.core.concat.call(null, input__6469__auto__, cljs.core.repeat.call(null, null));
    var vec__9763 = cljs.core.cons.call(null, state__6468__auto__, cljs.core.take.call(null, 4, padded_input__6470__auto__));
    var state = cljs.core.nth.call(null, vec__9763, 0, null);
    var t1 = cljs.core.nth.call(null, vec__9763, 1, null);
    var t2 = cljs.core.nth.call(null, vec__9763, 2, null);
    var t3 = cljs.core.nth.call(null, vec__9763, 3, null);
    var t4 = cljs.core.nth.call(null, vec__9763, 4, null);
    var temp__4090__auto__ = function() {
      var ocr_9764 = clojure.core.reducers.reduce.call(null, cljs.core.conj, new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [state__6468__auto__], null), clojure.core.reducers.take.call(null, 4, clojure.core.reducers.map.call(null, termcat.term.tt, padded_input__6470__auto__)));
      try {
        if (cljs.core.vector_QMARK_.call(null, ocr_9764) && cljs.core.count.call(null, ocr_9764) === 5) {
          try {
            var ocr_9764_3__9786 = cljs.core.nth.call(null, ocr_9764, 3);
            if (ocr_9764_3__9786 === null) {
              return null;
            } else {
              if (cljs.core.keyword_identical_QMARK_.call(null, ocr_9764_3__9786, new cljs.core.Keyword(null, "whitespace", "whitespace", 1290815983))) {
                return null;
              } else {
                if (cljs.core.keyword_identical_QMARK_.call(null, ocr_9764_3__9786, new cljs.core.Keyword(null, "emptyline", "emptyline", 3889609267))) {
                  return null;
                } else {
                  if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
                    throw cljs.core.match.backtrack;
                  } else {
                    return null;
                  }
                }
              }
            }
          } catch (e9789) {
            if (e9789 instanceof Error) {
              var e__4796__auto__ = e9789;
              if (e__4796__auto__ === cljs.core.match.backtrack) {
                try {
                  var ocr_9764_4__9787 = cljs.core.nth.call(null, ocr_9764, 4);
                  if (cljs.core.keyword_identical_QMARK_.call(null, ocr_9764_4__9787, new cljs.core.Keyword(null, "double-quote", "double-quote", 969793778))) {
                    return null;
                  } else {
                    if (cljs.core.keyword_identical_QMARK_.call(null, ocr_9764_4__9787, new cljs.core.Keyword(null, "asterisk", "asterisk", 669280996))) {
                      return null;
                    } else {
                      if (cljs.core.keyword_identical_QMARK_.call(null, ocr_9764_4__9787, new cljs.core.Keyword(null, "plus", "plus", 1017348364))) {
                        return null;
                      } else {
                        if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
                          throw cljs.core.match.backtrack;
                        } else {
                          return null;
                        }
                      }
                    }
                  }
                } catch (e9790) {
                  if (e9790 instanceof Error) {
                    var e__4796__auto____$1 = e9790;
                    if (e__4796__auto____$1 === cljs.core.match.backtrack) {
                      try {
                        var ocr_9764_1__9784 = cljs.core.nth.call(null, ocr_9764, 1);
                        if (ocr_9764_1__9784 === null) {
                          try {
                            var ocr_9764_2__9785 = cljs.core.nth.call(null, ocr_9764, 2);
                            if (cljs.core.keyword_identical_QMARK_.call(null, ocr_9764_2__9785, new cljs.core.Keyword(null, "double-quote", "double-quote", 969793778))) {
                              return new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [null, t1, termcat.util.math.math_block.call(null, termcat.term.block_QMARK_.call(null, t3) ? termcat.term.center.call(null, t3) : termcat.term.fragment.call(null, t3), new cljs.core.Keyword(null, "text", "text", 1017460895)), t4], null);
                            } else {
                              if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
                                throw cljs.core.match.backtrack;
                              } else {
                                return null;
                              }
                            }
                          } catch (e9798) {
                            if (e9798 instanceof Error) {
                              var e__4796__auto____$2 = e9798;
                              if (e__4796__auto____$2 === cljs.core.match.backtrack) {
                                throw cljs.core.match.backtrack;
                              } else {
                                throw e__4796__auto____$2;
                              }
                            } else {
                              if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
                                throw e9798;
                              } else {
                                return null;
                              }
                            }
                          }
                        } else {
                          if (cljs.core.keyword_identical_QMARK_.call(null, ocr_9764_1__9784, new cljs.core.Keyword(null, "whitespace", "whitespace", 1290815983))) {
                            try {
                              var ocr_9764_2__9785 = cljs.core.nth.call(null, ocr_9764, 2);
                              if (cljs.core.keyword_identical_QMARK_.call(null, ocr_9764_2__9785, new cljs.core.Keyword(null, "double-quote", "double-quote", 969793778))) {
                                return new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [null, t1, termcat.util.math.math_block.call(null, termcat.term.block_QMARK_.call(null, t3) ? termcat.term.center.call(null, t3) : termcat.term.fragment.call(null, t3), new cljs.core.Keyword(null, "text", "text", 1017460895)), t4], null);
                              } else {
                                if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
                                  throw cljs.core.match.backtrack;
                                } else {
                                  return null;
                                }
                              }
                            } catch (e9799) {
                              if (e9799 instanceof Error) {
                                var e__4796__auto____$2 = e9799;
                                if (e__4796__auto____$2 === cljs.core.match.backtrack) {
                                  throw cljs.core.match.backtrack;
                                } else {
                                  throw e__4796__auto____$2;
                                }
                              } else {
                                if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
                                  throw e9799;
                                } else {
                                  return null;
                                }
                              }
                            }
                          } else {
                            if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
                              throw cljs.core.match.backtrack;
                            } else {
                              return null;
                            }
                          }
                        }
                      } catch (e9791) {
                        if (e9791 instanceof Error) {
                          var e__4796__auto____$2 = e9791;
                          if (e__4796__auto____$2 === cljs.core.match.backtrack) {
                            try {
                              var ocr_9764_1__9784 = cljs.core.nth.call(null, ocr_9764, 1);
                              if (ocr_9764_1__9784 === null) {
                                try {
                                  var ocr_9764_2__9785 = cljs.core.nth.call(null, ocr_9764, 2);
                                  if (cljs.core.keyword_identical_QMARK_.call(null, ocr_9764_2__9785, new cljs.core.Keyword(null, "asterisk", "asterisk", 669280996))) {
                                    return cljs.core.concat.call(null, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [null, t1], null), termcat.term.block_QMARK_.call(null, t3) ? new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [termcat.util.math.math_block.call(null, termcat.term.center.call(null, t3), new cljs.core.Keyword(null, "mi", "mi", 1013907726))], null) : termcat.util.math.math_cast.call(null, t3), new cljs.core.PersistentVector(null, 
                                    1, 5, cljs.core.PersistentVector.EMPTY_NODE, [t4], null));
                                  } else {
                                    if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
                                      throw cljs.core.match.backtrack;
                                    } else {
                                      return null;
                                    }
                                  }
                                } catch (e9796) {
                                  if (e9796 instanceof Error) {
                                    var e__4796__auto____$3 = e9796;
                                    if (e__4796__auto____$3 === cljs.core.match.backtrack) {
                                      throw cljs.core.match.backtrack;
                                    } else {
                                      throw e__4796__auto____$3;
                                    }
                                  } else {
                                    if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
                                      throw e9796;
                                    } else {
                                      return null;
                                    }
                                  }
                                }
                              } else {
                                if (cljs.core.keyword_identical_QMARK_.call(null, ocr_9764_1__9784, new cljs.core.Keyword(null, "whitespace", "whitespace", 1290815983))) {
                                  try {
                                    var ocr_9764_2__9785 = cljs.core.nth.call(null, ocr_9764, 2);
                                    if (cljs.core.keyword_identical_QMARK_.call(null, ocr_9764_2__9785, new cljs.core.Keyword(null, "asterisk", "asterisk", 669280996))) {
                                      return cljs.core.concat.call(null, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [null, t1], null), termcat.term.block_QMARK_.call(null, t3) ? new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [termcat.util.math.math_block.call(null, termcat.term.center.call(null, t3), new cljs.core.Keyword(null, "mi", "mi", 1013907726))], null) : termcat.util.math.math_cast.call(null, t3), new cljs.core.PersistentVector(null, 
                                      1, 5, cljs.core.PersistentVector.EMPTY_NODE, [t4], null));
                                    } else {
                                      if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
                                        throw cljs.core.match.backtrack;
                                      } else {
                                        return null;
                                      }
                                    }
                                  } catch (e9797) {
                                    if (e9797 instanceof Error) {
                                      var e__4796__auto____$3 = e9797;
                                      if (e__4796__auto____$3 === cljs.core.match.backtrack) {
                                        throw cljs.core.match.backtrack;
                                      } else {
                                        throw e__4796__auto____$3;
                                      }
                                    } else {
                                      if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
                                        throw e9797;
                                      } else {
                                        return null;
                                      }
                                    }
                                  }
                                } else {
                                  if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
                                    throw cljs.core.match.backtrack;
                                  } else {
                                    return null;
                                  }
                                }
                              }
                            } catch (e9792) {
                              if (e9792 instanceof Error) {
                                var e__4796__auto____$3 = e9792;
                                if (e__4796__auto____$3 === cljs.core.match.backtrack) {
                                  try {
                                    var ocr_9764_1__9784 = cljs.core.nth.call(null, ocr_9764, 1);
                                    if (ocr_9764_1__9784 === null) {
                                      try {
                                        var ocr_9764_2__9785 = cljs.core.nth.call(null, ocr_9764, 2);
                                        if (cljs.core.keyword_identical_QMARK_.call(null, ocr_9764_2__9785, new cljs.core.Keyword(null, "plus", "plus", 1017348364))) {
                                          var ts = termcat.term.block_QMARK_.call(null, t3) ? termcat.rewrite.unwrap.call(null, t3) : new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [t3], null);
                                          return cljs.core.concat.call(null, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [null, t1], null), cljs.core.mapcat.call(null, function(ts, ocr_9764_2__9785, ocr_9764_1__9784, e__4796__auto____$3, e__4796__auto____$2, e__4796__auto____$1, e__4796__auto__, ocr_9764) {
                                            return function(p1__9762_SHARP_) {
                                              return termcat.util.math.math_cast.call(null, p1__9762_SHARP_, new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "script", "script", 4401185853), null], null), null));
                                            };
                                          }(ts, ocr_9764_2__9785, ocr_9764_1__9784, e__4796__auto____$3, e__4796__auto____$2, e__4796__auto____$1, e__4796__auto__, ocr_9764), ts), new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [t4], null));
                                        } else {
                                          if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
                                            throw cljs.core.match.backtrack;
                                          } else {
                                            return null;
                                          }
                                        }
                                      } catch (e9794) {
                                        if (e9794 instanceof Error) {
                                          var e__4796__auto____$4 = e9794;
                                          if (e__4796__auto____$4 === cljs.core.match.backtrack) {
                                            throw cljs.core.match.backtrack;
                                          } else {
                                            throw e__4796__auto____$4;
                                          }
                                        } else {
                                          if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
                                            throw e9794;
                                          } else {
                                            return null;
                                          }
                                        }
                                      }
                                    } else {
                                      if (cljs.core.keyword_identical_QMARK_.call(null, ocr_9764_1__9784, new cljs.core.Keyword(null, "whitespace", "whitespace", 1290815983))) {
                                        try {
                                          var ocr_9764_2__9785 = cljs.core.nth.call(null, ocr_9764, 2);
                                          if (cljs.core.keyword_identical_QMARK_.call(null, ocr_9764_2__9785, new cljs.core.Keyword(null, "plus", "plus", 1017348364))) {
                                            var ts = termcat.term.block_QMARK_.call(null, t3) ? termcat.rewrite.unwrap.call(null, t3) : new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [t3], null);
                                            return cljs.core.concat.call(null, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [null, t1], null), cljs.core.mapcat.call(null, function(ts, ocr_9764_2__9785, ocr_9764_1__9784, e__4796__auto____$3, e__4796__auto____$2, e__4796__auto____$1, e__4796__auto__, ocr_9764) {
                                              return function(p1__9762_SHARP_) {
                                                return termcat.util.math.math_cast.call(null, p1__9762_SHARP_, new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "script", "script", 4401185853), null], null), null));
                                              };
                                            }(ts, ocr_9764_2__9785, ocr_9764_1__9784, e__4796__auto____$3, e__4796__auto____$2, e__4796__auto____$1, e__4796__auto__, ocr_9764), ts), new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [t4], null));
                                          } else {
                                            if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
                                              throw cljs.core.match.backtrack;
                                            } else {
                                              return null;
                                            }
                                          }
                                        } catch (e9795) {
                                          if (e9795 instanceof Error) {
                                            var e__4796__auto____$4 = e9795;
                                            if (e__4796__auto____$4 === cljs.core.match.backtrack) {
                                              throw cljs.core.match.backtrack;
                                            } else {
                                              throw e__4796__auto____$4;
                                            }
                                          } else {
                                            if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
                                              throw e9795;
                                            } else {
                                              return null;
                                            }
                                          }
                                        }
                                      } else {
                                        if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
                                          throw cljs.core.match.backtrack;
                                        } else {
                                          return null;
                                        }
                                      }
                                    }
                                  } catch (e9793) {
                                    if (e9793 instanceof Error) {
                                      var e__4796__auto____$4 = e9793;
                                      if (e__4796__auto____$4 === cljs.core.match.backtrack) {
                                        throw cljs.core.match.backtrack;
                                      } else {
                                        throw e__4796__auto____$4;
                                      }
                                    } else {
                                      if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
                                        throw e9793;
                                      } else {
                                        return null;
                                      }
                                    }
                                  }
                                } else {
                                  throw e__4796__auto____$3;
                                }
                              } else {
                                if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
                                  throw e9792;
                                } else {
                                  return null;
                                }
                              }
                            }
                          } else {
                            throw e__4796__auto____$2;
                          }
                        } else {
                          if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
                            throw e9791;
                          } else {
                            return null;
                          }
                        }
                      }
                    } else {
                      throw e__4796__auto____$1;
                    }
                  } else {
                    if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
                      throw e9790;
                    } else {
                      return null;
                    }
                  }
                }
              } else {
                throw e__4796__auto__;
              }
            } else {
              if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
                throw e9789;
              } else {
                return null;
              }
            }
          }
        } else {
          if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
            throw cljs.core.match.backtrack;
          } else {
            return null;
          }
        }
      } catch (e9788) {
        if (e9788 instanceof Error) {
          var e__4796__auto__ = e9788;
          if (e__4796__auto__ === cljs.core.match.backtrack) {
            return null;
          } else {
            throw e__4796__auto__;
          }
        } else {
          if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
            throw e9788;
          } else {
            return null;
          }
        }
      }
    }();
    if (cljs.core.truth_(temp__4090__auto__)) {
      var r__6471__auto__ = temp__4090__auto__;
      return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [function() {
        var or__3403__auto__ = cljs.core.first.call(null, r__6471__auto__);
        if (cljs.core.truth_(or__3403__auto__)) {
          return or__3403__auto__;
        } else {
          return state__6468__auto__;
        }
      }(), cljs.core.concat.call(null, cljs.core.next.call(null, r__6471__auto__), cljs.core.drop.call(null, 4, input__6469__auto__))], null);
    } else {
      return null;
    }
  };
  G__9800 = function(state__6468__auto__, input__6469__auto__) {
    switch(arguments.length) {
      case 0:
        return G__9800__0.call(this);
      case 2:
        return G__9800__2.call(this, state__6468__auto__, input__6469__auto__);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  return G__9800;
}());
termcat.rules.math.introduce_math_operators = termcat.rewrite.abstraction.call(null, function() {
  var G__9848 = null;
  var G__9848__0 = function() {
    return null;
  };
  var G__9848__2 = function(state__6468__auto__, input__6469__auto__) {
    var padded_input__6470__auto__ = cljs.core.concat.call(null, input__6469__auto__, cljs.core.repeat.call(null, null));
    var vec__9801 = cljs.core.cons.call(null, state__6468__auto__, cljs.core.take.call(null, 7, padded_input__6470__auto__));
    var state = cljs.core.nth.call(null, vec__9801, 0, null);
    var t1 = cljs.core.nth.call(null, vec__9801, 1, null);
    var t2 = cljs.core.nth.call(null, vec__9801, 2, null);
    var t3 = cljs.core.nth.call(null, vec__9801, 3, null);
    var t4 = cljs.core.nth.call(null, vec__9801, 4, null);
    var t5 = cljs.core.nth.call(null, vec__9801, 5, null);
    var t6 = cljs.core.nth.call(null, vec__9801, 6, null);
    var t7 = cljs.core.nth.call(null, vec__9801, 7, null);
    var temp__4090__auto__ = function() {
      var ocr_9802 = clojure.core.reducers.reduce.call(null, cljs.core.conj, new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [state__6468__auto__], null), clojure.core.reducers.take.call(null, 7, clojure.core.reducers.map.call(null, termcat.term.tt, padded_input__6470__auto__)));
      try {
        if (cljs.core.vector_QMARK_.call(null, ocr_9802) && cljs.core.count.call(null, ocr_9802) === 8) {
          try {
            var ocr_9802_2__9822 = cljs.core.nth.call(null, ocr_9802, 2);
            if (cljs.core.keyword_identical_QMARK_.call(null, ocr_9802_2__9822, new cljs.core.Keyword(null, "whitespace", "whitespace", 1290815983))) {
              try {
                var ocr_9802_3__9823 = cljs.core.nth.call(null, ocr_9802, 3);
                if (cljs.core.keyword_identical_QMARK_.call(null, ocr_9802_3__9823, new cljs.core.Keyword(null, "tilde", "tilde", 1124267722))) {
                  try {
                    var ocr_9802_5__9825 = cljs.core.nth.call(null, ocr_9802, 5);
                    if (cljs.core.keyword_identical_QMARK_.call(null, ocr_9802_5__9825, new cljs.core.Keyword(null, "tilde", "tilde", 1124267722))) {
                      try {
                        var ocr_9802_6__9826 = cljs.core.nth.call(null, ocr_9802, 6);
                        if (cljs.core.keyword_identical_QMARK_.call(null, ocr_9802_6__9826, new cljs.core.Keyword(null, "whitespace", "whitespace", 1290815983))) {
                          var temp__4090__auto__ = cljs.core.concat.call(null, function() {
                            var ocr_9842 = termcat.term.payload.call(null, t3);
                            try {
                              if (cljs.core._EQ_.call(null, ocr_9842, "~")) {
                                return cljs.core.PersistentVector.EMPTY;
                              } else {
                                if (ocr_9842 === "~~") {
                                  return new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "normal-left", "normal-left", 706343071)], null);
                                } else {
                                  if (ocr_9842 === "~~~") {
                                    return new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "wide-left", "wide-left", 4774122035)], null);
                                  } else {
                                    if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
                                      throw cljs.core.match.backtrack;
                                    } else {
                                      return null;
                                    }
                                  }
                                }
                              }
                            } catch (e9844) {
                              if (e9844 instanceof Error) {
                                var e__4796__auto__ = e9844;
                                if (e__4796__auto__ === cljs.core.match.backtrack) {
                                  return null;
                                } else {
                                  throw e__4796__auto__;
                                }
                              } else {
                                if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
                                  throw e9844;
                                } else {
                                  return null;
                                }
                              }
                            }
                          }(), function() {
                            var ocr_9845 = termcat.term.payload.call(null, t5);
                            try {
                              if (cljs.core._EQ_.call(null, ocr_9845, "~")) {
                                return cljs.core.PersistentVector.EMPTY;
                              } else {
                                if (ocr_9845 === "~~") {
                                  return new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "normal-right", "normal-right", 4370070824)], null);
                                } else {
                                  if (ocr_9845 === "~~~") {
                                    return new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "wide-right", "wide-right", 1622199828)], null);
                                  } else {
                                    if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
                                      throw cljs.core.match.backtrack;
                                    } else {
                                      return null;
                                    }
                                  }
                                }
                              }
                            } catch (e9847) {
                              if (e9847 instanceof Error) {
                                var e__4796__auto__ = e9847;
                                if (e__4796__auto__ === cljs.core.match.backtrack) {
                                  return null;
                                } else {
                                  throw e__4796__auto__;
                                }
                              } else {
                                if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
                                  throw e9847;
                                } else {
                                  return null;
                                }
                              }
                            }
                          }());
                          if (cljs.core.truth_(temp__4090__auto__)) {
                            var opt = temp__4090__auto__;
                            return cljs.core.concat.call(null, new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [null], null), termcat.util.math.math_cast.call(null, t1), new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.apply.call(null, termcat.util.math.math_block, termcat.term.block_QMARK_.call(null, t4) ? termcat.term.center.call(null, t4) : termcat.term.fragment.call(null, t4), new cljs.core.Keyword(null, "mo", "mo", 
                            1013907732), new cljs.core.Keyword(null, "infix", "infix", 1114252354), opt)], null), termcat.util.math.math_cast.call(null, t7));
                          } else {
                            return null;
                          }
                        } else {
                          if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
                            throw cljs.core.match.backtrack;
                          } else {
                            return null;
                          }
                        }
                      } catch (e9841) {
                        if (e9841 instanceof Error) {
                          var e__4796__auto__ = e9841;
                          if (e__4796__auto__ === cljs.core.match.backtrack) {
                            throw cljs.core.match.backtrack;
                          } else {
                            throw e__4796__auto__;
                          }
                        } else {
                          if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
                            throw e9841;
                          } else {
                            return null;
                          }
                        }
                      }
                    } else {
                      if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
                        throw cljs.core.match.backtrack;
                      } else {
                        return null;
                      }
                    }
                  } catch (e9840) {
                    if (e9840 instanceof Error) {
                      var e__4796__auto__ = e9840;
                      if (e__4796__auto__ === cljs.core.match.backtrack) {
                        throw cljs.core.match.backtrack;
                      } else {
                        throw e__4796__auto__;
                      }
                    } else {
                      if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
                        throw e9840;
                      } else {
                        return null;
                      }
                    }
                  }
                } else {
                  if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
                    throw cljs.core.match.backtrack;
                  } else {
                    return null;
                  }
                }
              } catch (e9839) {
                if (e9839 instanceof Error) {
                  var e__4796__auto__ = e9839;
                  if (e__4796__auto__ === cljs.core.match.backtrack) {
                    throw cljs.core.match.backtrack;
                  } else {
                    throw e__4796__auto__;
                  }
                } else {
                  if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
                    throw e9839;
                  } else {
                    return null;
                  }
                }
              }
            } else {
              if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
                throw cljs.core.match.backtrack;
              } else {
                return null;
              }
            }
          } catch (e9829) {
            if (e9829 instanceof Error) {
              var e__4796__auto__ = e9829;
              if (e__4796__auto__ === cljs.core.match.backtrack) {
                try {
                  var ocr_9802_2__9822 = cljs.core.nth.call(null, ocr_9802, 2);
                  if (cljs.core.keyword_identical_QMARK_.call(null, ocr_9802_2__9822, new cljs.core.Keyword(null, "whitespace", "whitespace", 1290815983))) {
                    try {
                      var ocr_9802_3__9823 = cljs.core.nth.call(null, ocr_9802, 3);
                      if (cljs.core.keyword_identical_QMARK_.call(null, ocr_9802_3__9823, new cljs.core.Keyword(null, "tilde", "tilde", 1124267722))) {
                        var temp__4090__auto__ = function() {
                          var ocr_9832 = termcat.term.payload.call(null, t3);
                          try {
                            if (cljs.core._EQ_.call(null, ocr_9832, "~")) {
                              return cljs.core.PersistentVector.EMPTY;
                            } else {
                              if (ocr_9832 === "~~") {
                                return new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "normal-right", "normal-right", 4370070824)], null);
                              } else {
                                if (ocr_9832 === "~~~") {
                                  return new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "wide-right", "wide-right", 1622199828)], null);
                                } else {
                                  if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
                                    throw cljs.core.match.backtrack;
                                  } else {
                                    return null;
                                  }
                                }
                              }
                            }
                          } catch (e9834) {
                            if (e9834 instanceof Error) {
                              var e__4796__auto____$1 = e9834;
                              if (e__4796__auto____$1 === cljs.core.match.backtrack) {
                                return null;
                              } else {
                                throw e__4796__auto____$1;
                              }
                            } else {
                              if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
                                throw e9834;
                              } else {
                                return null;
                              }
                            }
                          }
                        }();
                        if (cljs.core.truth_(temp__4090__auto__)) {
                          var opt = temp__4090__auto__;
                          return cljs.core.concat.call(null, new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [null], null), termcat.util.math.math_cast.call(null, t1), new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.apply.call(null, termcat.util.math.math_block, termcat.term.block_QMARK_.call(null, t4) ? termcat.term.center.call(null, t4) : termcat.term.fragment.call(null, t4), new cljs.core.Keyword(null, "mo", "mo", 1013907732), 
                          new cljs.core.Keyword(null, "postfix", "postfix", 622699239), opt)], null), new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [t5, t6, t7], null));
                        } else {
                          return null;
                        }
                      } else {
                        if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
                          throw cljs.core.match.backtrack;
                        } else {
                          return null;
                        }
                      }
                    } catch (e9831) {
                      if (e9831 instanceof Error) {
                        var e__4796__auto____$1 = e9831;
                        if (e__4796__auto____$1 === cljs.core.match.backtrack) {
                          throw cljs.core.match.backtrack;
                        } else {
                          throw e__4796__auto____$1;
                        }
                      } else {
                        if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
                          throw e9831;
                        } else {
                          return null;
                        }
                      }
                    }
                  } else {
                    if (cljs.core.keyword_identical_QMARK_.call(null, ocr_9802_2__9822, new cljs.core.Keyword(null, "tilde", "tilde", 1124267722))) {
                      try {
                        var ocr_9802_3__9823 = cljs.core.nth.call(null, ocr_9802, 3);
                        if (cljs.core.keyword_identical_QMARK_.call(null, ocr_9802_3__9823, new cljs.core.Keyword(null, "whitespace", "whitespace", 1290815983))) {
                          var temp__4090__auto__ = function() {
                            var ocr_9836 = termcat.term.payload.call(null, t2);
                            try {
                              if (cljs.core._EQ_.call(null, ocr_9836, "~")) {
                                return cljs.core.PersistentVector.EMPTY;
                              } else {
                                if (ocr_9836 === "~~") {
                                  return new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "normal-left", "normal-left", 706343071)], null);
                                } else {
                                  if (ocr_9836 === "~~~") {
                                    return new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "wide-left", "wide-left", 4774122035)], null);
                                  } else {
                                    if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
                                      throw cljs.core.match.backtrack;
                                    } else {
                                      return null;
                                    }
                                  }
                                }
                              }
                            } catch (e9838) {
                              if (e9838 instanceof Error) {
                                var e__4796__auto____$1 = e9838;
                                if (e__4796__auto____$1 === cljs.core.match.backtrack) {
                                  return null;
                                } else {
                                  throw e__4796__auto____$1;
                                }
                              } else {
                                if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
                                  throw e9838;
                                } else {
                                  return null;
                                }
                              }
                            }
                          }();
                          if (cljs.core.truth_(temp__4090__auto__)) {
                            var opt = temp__4090__auto__;
                            return cljs.core.concat.call(null, new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [null], null), new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.apply.call(null, termcat.util.math.math_block, termcat.term.block_QMARK_.call(null, t1) ? termcat.term.center.call(null, t1) : termcat.term.fragment.call(null, t1), new cljs.core.Keyword(null, "mo", "mo", 1013907732), new cljs.core.Keyword(null, "prefix", 
                            "prefix", 4328760836), opt)], null), cljs.core.contains_QMARK_.call(null, new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null, "right-quote", "right-quote", 3807707901), null, new cljs.core.Keyword(null, "circumflex", "circumflex", 4463600090), null, new cljs.core.Keyword(null, "underscore", "underscore", 3544053292), null], null), null), termcat.term.tt.call(null, t4)) ? new cljs.core.PersistentVector(null, 1, 5, 
                            cljs.core.PersistentVector.EMPTY_NODE, [t4], null) : termcat.util.math.math_cast.call(null, t4), new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [t5, t6, t7], null));
                          } else {
                            return null;
                          }
                        } else {
                          if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
                            throw cljs.core.match.backtrack;
                          } else {
                            return null;
                          }
                        }
                      } catch (e9835) {
                        if (e9835 instanceof Error) {
                          var e__4796__auto____$1 = e9835;
                          if (e__4796__auto____$1 === cljs.core.match.backtrack) {
                            throw cljs.core.match.backtrack;
                          } else {
                            throw e__4796__auto____$1;
                          }
                        } else {
                          if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
                            throw e9835;
                          } else {
                            return null;
                          }
                        }
                      }
                    } else {
                      if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
                        throw cljs.core.match.backtrack;
                      } else {
                        return null;
                      }
                    }
                  }
                } catch (e9830) {
                  if (e9830 instanceof Error) {
                    var e__4796__auto____$1 = e9830;
                    if (e__4796__auto____$1 === cljs.core.match.backtrack) {
                      throw cljs.core.match.backtrack;
                    } else {
                      throw e__4796__auto____$1;
                    }
                  } else {
                    if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
                      throw e9830;
                    } else {
                      return null;
                    }
                  }
                }
              } else {
                throw e__4796__auto__;
              }
            } else {
              if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
                throw e9829;
              } else {
                return null;
              }
            }
          }
        } else {
          if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
            throw cljs.core.match.backtrack;
          } else {
            return null;
          }
        }
      } catch (e9828) {
        if (e9828 instanceof Error) {
          var e__4796__auto__ = e9828;
          if (e__4796__auto__ === cljs.core.match.backtrack) {
            return null;
          } else {
            throw e__4796__auto__;
          }
        } else {
          if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
            throw e9828;
          } else {
            return null;
          }
        }
      }
    }();
    if (cljs.core.truth_(temp__4090__auto__)) {
      var r__6471__auto__ = temp__4090__auto__;
      return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [function() {
        var or__3403__auto__ = cljs.core.first.call(null, r__6471__auto__);
        if (cljs.core.truth_(or__3403__auto__)) {
          return or__3403__auto__;
        } else {
          return state__6468__auto__;
        }
      }(), cljs.core.concat.call(null, cljs.core.next.call(null, r__6471__auto__), cljs.core.drop.call(null, 7, input__6469__auto__))], null);
    } else {
      return null;
    }
  };
  G__9848 = function(state__6468__auto__, input__6469__auto__) {
    switch(arguments.length) {
      case 0:
        return G__9848__0.call(this);
      case 2:
        return G__9848__2.call(this, state__6468__auto__, input__6469__auto__);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  return G__9848;
}());
termcat.rules.math.split_base_sub_sup = function split_base_sub_sup(t) {
  var ocr_9863 = termcat.term.tt.call(null, t);
  try {
    if (cljs.core.vector_QMARK_.call(null, ocr_9863) && cljs.core.count.call(null, ocr_9863) === 2) {
      try {
        var ocr_9863_0__9868 = cljs.core.nth.call(null, ocr_9863, 0);
        if (cljs.core.keyword_identical_QMARK_.call(null, ocr_9863_0__9868, new cljs.core.Keyword(null, "block", "block", 1107736575))) {
          try {
            var ocr_9863_1__9869 = cljs.core.nth.call(null, ocr_9863, 1);
            if (cljs.core.truth_((new cljs.core.Keyword(null, "msub", "msub", 1017265701)).cljs$core$IFn$_invoke$arity$1(ocr_9863_1__9869))) {
              return new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.first.call(null, termcat.rewrite.unwrap.call(null, t)), cljs.core.second.call(null, termcat.rewrite.unwrap.call(null, t)), null], null);
            } else {
              if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
                throw cljs.core.match.backtrack;
              } else {
                return null;
              }
            }
          } catch (e9876) {
            if (e9876 instanceof Error) {
              var e__4796__auto__ = e9876;
              if (e__4796__auto__ === cljs.core.match.backtrack) {
                throw cljs.core.match.backtrack;
              } else {
                throw e__4796__auto__;
              }
            } else {
              if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
                throw e9876;
              } else {
                return null;
              }
            }
          }
        } else {
          if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
            throw cljs.core.match.backtrack;
          } else {
            return null;
          }
        }
      } catch (e9871) {
        if (e9871 instanceof Error) {
          var e__4796__auto__ = e9871;
          if (e__4796__auto__ === cljs.core.match.backtrack) {
            try {
              var ocr_9863_0__9868 = cljs.core.nth.call(null, ocr_9863, 0);
              if (cljs.core.keyword_identical_QMARK_.call(null, ocr_9863_0__9868, new cljs.core.Keyword(null, "block", "block", 1107736575))) {
                try {
                  var ocr_9863_1__9869 = cljs.core.nth.call(null, ocr_9863, 1);
                  if (cljs.core.truth_((new cljs.core.Keyword(null, "msup", "msup", 1017265715)).cljs$core$IFn$_invoke$arity$1(ocr_9863_1__9869))) {
                    return new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.first.call(null, termcat.rewrite.unwrap.call(null, t)), null, cljs.core.second.call(null, termcat.rewrite.unwrap.call(null, t))], null);
                  } else {
                    if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
                      throw cljs.core.match.backtrack;
                    } else {
                      return null;
                    }
                  }
                } catch (e9875) {
                  if (e9875 instanceof Error) {
                    var e__4796__auto____$1 = e9875;
                    if (e__4796__auto____$1 === cljs.core.match.backtrack) {
                      throw cljs.core.match.backtrack;
                    } else {
                      throw e__4796__auto____$1;
                    }
                  } else {
                    if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
                      throw e9875;
                    } else {
                      return null;
                    }
                  }
                }
              } else {
                if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
                  throw cljs.core.match.backtrack;
                } else {
                  return null;
                }
              }
            } catch (e9872) {
              if (e9872 instanceof Error) {
                var e__4796__auto____$1 = e9872;
                if (e__4796__auto____$1 === cljs.core.match.backtrack) {
                  try {
                    var ocr_9863_0__9868 = cljs.core.nth.call(null, ocr_9863, 0);
                    if (cljs.core.keyword_identical_QMARK_.call(null, ocr_9863_0__9868, new cljs.core.Keyword(null, "block", "block", 1107736575))) {
                      try {
                        var ocr_9863_1__9869 = cljs.core.nth.call(null, ocr_9863, 1);
                        if (cljs.core.truth_((new cljs.core.Keyword(null, "msubsup", "msubsup", 2370995757)).cljs$core$IFn$_invoke$arity$1(ocr_9863_1__9869))) {
                          return new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.first.call(null, termcat.rewrite.unwrap.call(null, t)), cljs.core.second.call(null, termcat.rewrite.unwrap.call(null, t)), cljs.core.nth.call(null, termcat.rewrite.unwrap.call(null, t), 2)], null);
                        } else {
                          if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
                            throw cljs.core.match.backtrack;
                          } else {
                            return null;
                          }
                        }
                      } catch (e9874) {
                        if (e9874 instanceof Error) {
                          var e__4796__auto____$2 = e9874;
                          if (e__4796__auto____$2 === cljs.core.match.backtrack) {
                            throw cljs.core.match.backtrack;
                          } else {
                            throw e__4796__auto____$2;
                          }
                        } else {
                          if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
                            throw e9874;
                          } else {
                            return null;
                          }
                        }
                      }
                    } else {
                      if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
                        throw cljs.core.match.backtrack;
                      } else {
                        return null;
                      }
                    }
                  } catch (e9873) {
                    if (e9873 instanceof Error) {
                      var e__4796__auto____$2 = e9873;
                      if (e__4796__auto____$2 === cljs.core.match.backtrack) {
                        throw cljs.core.match.backtrack;
                      } else {
                        throw e__4796__auto____$2;
                      }
                    } else {
                      if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
                        throw e9873;
                      } else {
                        return null;
                      }
                    }
                  }
                } else {
                  throw e__4796__auto____$1;
                }
              } else {
                if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
                  throw e9872;
                } else {
                  return null;
                }
              }
            }
          } else {
            throw e__4796__auto__;
          }
        } else {
          if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
            throw e9871;
          } else {
            return null;
          }
        }
      }
    } else {
      if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
        throw cljs.core.match.backtrack;
      } else {
        return null;
      }
    }
  } catch (e9870) {
    if (e9870 instanceof Error) {
      var e__4796__auto__ = e9870;
      if (e__4796__auto__ === cljs.core.match.backtrack) {
        return new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [t, null, null], null);
      } else {
        throw e__4796__auto__;
      }
    } else {
      if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
        throw e9870;
      } else {
        return null;
      }
    }
  }
};
termcat.rules.math.subsup_token = function subsup_token(x, y) {
  var $ = cljs.core.map.call(null, function(p1__9877_SHARP_, p2__9878_SHARP_) {
    return cljs.core.filter.call(null, cljs.core.complement.call(null, cljs.core.nil_QMARK_), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [p1__9877_SHARP_, p2__9878_SHARP_], null));
  }, x, y);
  var $__$1 = cljs.core.map.call(null, function($) {
    return function(p1__9879_SHARP_) {
      if (!cljs.core.empty_QMARK_.call(null, p1__9879_SHARP_)) {
        return cljs.core.apply.call(null, termcat.util.math.merge_rows, termcat.util.math.math_block.call(null, termcat.term.fragment.call(null, termcat.term.token.call(null, new cljs.core.Keyword(null, "html", "html", 1017117469), "\x26InvisibleComma;")), new cljs.core.Keyword(null, "mo", "mo", 1013907732)), cljs.core.mapcat.call(null, termcat.util.math.math_cast, p1__9879_SHARP_));
      } else {
        return null;
      }
    };
  }($), $);
  var $__$2 = cljs.core.vec.call(null, $__$1);
  var $__$3 = function() {
    try {
      if (cljs.core.vector_QMARK_.call(null, $__$2) && cljs.core.count.call(null, $__$2) === 3) {
        try {
          var $_0__9895 = cljs.core.nth.call(null, $__$2, 0);
          if ($_0__9895 === null) {
            return null;
          } else {
            if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
              throw cljs.core.match.backtrack;
            } else {
              return null;
            }
          }
        } catch (e9899) {
          if (e9899 instanceof Error) {
            var e__4796__auto__ = e9899;
            if (e__4796__auto__ === cljs.core.match.backtrack) {
              try {
                var $_1__9896 = cljs.core.nth.call(null, $__$2, 1);
                if ($_1__9896 === null) {
                  try {
                    var $_2__9897 = cljs.core.nth.call(null, $__$2, 2);
                    if ($_2__9897 === null) {
                      var a = cljs.core.nth.call(null, $__$2, 0);
                      return null;
                    } else {
                      if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
                        throw cljs.core.match.backtrack;
                      } else {
                        return null;
                      }
                    }
                  } catch (e9903) {
                    if (e9903 instanceof Error) {
                      var e__4796__auto____$1 = e9903;
                      if (e__4796__auto____$1 === cljs.core.match.backtrack) {
                        throw cljs.core.match.backtrack;
                      } else {
                        throw e__4796__auto____$1;
                      }
                    } else {
                      if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
                        throw e9903;
                      } else {
                        return null;
                      }
                    }
                  }
                } else {
                  if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
                    throw cljs.core.match.backtrack;
                  } else {
                    return null;
                  }
                }
              } catch (e9900) {
                if (e9900 instanceof Error) {
                  var e__4796__auto____$1 = e9900;
                  if (e__4796__auto____$1 === cljs.core.match.backtrack) {
                    try {
                      var $_1__9896 = cljs.core.nth.call(null, $__$2, 1);
                      if ($_1__9896 === null) {
                        var a = cljs.core.nth.call(null, $__$2, 0);
                        var b = cljs.core.nth.call(null, $__$2, 2);
                        return termcat.util.math.math_block.call(null, termcat.term.fragment.call(null, a, b), new cljs.core.Keyword(null, "msup", "msup", 1017265715));
                      } else {
                        if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
                          throw cljs.core.match.backtrack;
                        } else {
                          return null;
                        }
                      }
                    } catch (e9901) {
                      if (e9901 instanceof Error) {
                        var e__4796__auto____$2 = e9901;
                        if (e__4796__auto____$2 === cljs.core.match.backtrack) {
                          try {
                            var $_2__9897 = cljs.core.nth.call(null, $__$2, 2);
                            if ($_2__9897 === null) {
                              var b = cljs.core.nth.call(null, $__$2, 1);
                              var a = cljs.core.nth.call(null, $__$2, 0);
                              return termcat.util.math.math_block.call(null, termcat.term.fragment.call(null, a, b), new cljs.core.Keyword(null, "msub", "msub", 1017265701));
                            } else {
                              if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
                                throw cljs.core.match.backtrack;
                              } else {
                                return null;
                              }
                            }
                          } catch (e9902) {
                            if (e9902 instanceof Error) {
                              var e__4796__auto____$3 = e9902;
                              if (e__4796__auto____$3 === cljs.core.match.backtrack) {
                                var c = cljs.core.nth.call(null, $__$2, 2);
                                var b = cljs.core.nth.call(null, $__$2, 1);
                                var a = cljs.core.nth.call(null, $__$2, 0);
                                return termcat.util.math.math_block.call(null, termcat.term.fragment.call(null, a, b, c), new cljs.core.Keyword(null, "msubsup", "msubsup", 2370995757));
                              } else {
                                throw e__4796__auto____$3;
                              }
                            } else {
                              if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
                                throw e9902;
                              } else {
                                return null;
                              }
                            }
                          }
                        } else {
                          throw e__4796__auto____$2;
                        }
                      } else {
                        if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
                          throw e9901;
                        } else {
                          return null;
                        }
                      }
                    }
                  } else {
                    throw e__4796__auto____$1;
                  }
                } else {
                  if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
                    throw e9900;
                  } else {
                    return null;
                  }
                }
              }
            } else {
              throw e__4796__auto__;
            }
          } else {
            if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
              throw e9899;
            } else {
              return null;
            }
          }
        }
      } else {
        if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
          throw cljs.core.match.backtrack;
        } else {
          return null;
        }
      }
    } catch (e9898) {
      if (e9898 instanceof Error) {
        var e__4796__auto__ = e9898;
        if (e__4796__auto__ === cljs.core.match.backtrack) {
          throw new Error([cljs.core.str("No matching clause: "), cljs.core.str($__$2)].join(""));
        } else {
          throw e__4796__auto__;
        }
      } else {
        if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
          throw e9898;
        } else {
          return null;
        }
      }
    }
  }();
  return $__$3;
};
termcat.rules.math.introduce_msub_msup = termcat.rewrite.abstraction.call(null, function() {
  var G__9962 = null;
  var G__9962__0 = function() {
    return null;
  };
  var G__9962__2 = function(state__6468__auto__, input__6469__auto__) {
    var padded_input__6470__auto__ = cljs.core.concat.call(null, input__6469__auto__, cljs.core.repeat.call(null, null));
    var vec__9904 = cljs.core.cons.call(null, state__6468__auto__, cljs.core.take.call(null, 3, padded_input__6470__auto__));
    var state = cljs.core.nth.call(null, vec__9904, 0, null);
    var t1 = cljs.core.nth.call(null, vec__9904, 1, null);
    var t2 = cljs.core.nth.call(null, vec__9904, 2, null);
    var t3 = cljs.core.nth.call(null, vec__9904, 3, null);
    var temp__4090__auto__ = function() {
      var ocr_9905 = clojure.core.reducers.reduce.call(null, cljs.core.conj, new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [state__6468__auto__], null), clojure.core.reducers.take.call(null, 3, clojure.core.reducers.map.call(null, termcat.term.tt, padded_input__6470__auto__)));
      try {
        if (cljs.core.vector_QMARK_.call(null, ocr_9905) && cljs.core.count.call(null, ocr_9905) === 4) {
          try {
            var ocr_9905_1__9917 = cljs.core.nth.call(null, ocr_9905, 1);
            if (cljs.core.vector_QMARK_.call(null, ocr_9905_1__9917) && cljs.core.count.call(null, ocr_9905_1__9917) === 2) {
              try {
                var ocr_9905_1__9917_0__9920 = cljs.core.nth.call(null, ocr_9905_1__9917, 0);
                if (cljs.core.keyword_identical_QMARK_.call(null, ocr_9905_1__9917_0__9920, new cljs.core.Keyword(null, "block", "block", 1107736575))) {
                  try {
                    var ocr_9905_1__9917_1__9921 = cljs.core.nth.call(null, ocr_9905_1__9917, 1);
                    if (cljs.core.truth_((new cljs.core.Keyword(null, "math", "math", 1017248378)).cljs$core$IFn$_invoke$arity$1(ocr_9905_1__9917_1__9921))) {
                      try {
                        var ocr_9905_2__9918 = cljs.core.nth.call(null, ocr_9905, 2);
                        if (cljs.core.keyword_identical_QMARK_.call(null, ocr_9905_2__9918, new cljs.core.Keyword(null, "right-quote", "right-quote", 3807707901))) {
                          return new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [null, termcat.rules.math.subsup_token.call(null, termcat.rules.math.split_base_sub_sup.call(null, t1), new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [null, null, termcat.util.math.math_block.call(null, termcat.term.fragment.call(null, termcat.term.token.call(null, new cljs.core.Keyword(null, "default", "default", 2558708147), function() {
                            var length = cljs.core.count.call(null, [cljs.core.str(termcat.term.payload.call(null, t2))].join(""));
                            var G__9961 = length;
                            if (cljs.core._EQ_.call(null, 1, G__9961)) {
                              return "\u2032";
                            } else {
                              if (cljs.core._EQ_.call(null, 2, G__9961)) {
                                return "\u2033";
                              } else {
                                if (cljs.core._EQ_.call(null, 3, G__9961)) {
                                  return "\u2034";
                                } else {
                                  if (cljs.core._EQ_.call(null, 4, G__9961)) {
                                    return "\u2057";
                                  } else {
                                    if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
                                      return clojure.string.join.call(null, cljs.core.repeat.call(null, length, "\u2032"));
                                    } else {
                                      return null;
                                    }
                                  }
                                }
                              }
                            }
                          }())), new cljs.core.Keyword(null, "mo", "mo", 1013907732))], null)), t3], null);
                        } else {
                          if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
                            throw cljs.core.match.backtrack;
                          } else {
                            return null;
                          }
                        }
                      } catch (e9960) {
                        if (e9960 instanceof Error) {
                          var e__4796__auto__ = e9960;
                          if (e__4796__auto__ === cljs.core.match.backtrack) {
                            throw cljs.core.match.backtrack;
                          } else {
                            throw e__4796__auto__;
                          }
                        } else {
                          if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
                            throw e9960;
                          } else {
                            return null;
                          }
                        }
                      }
                    } else {
                      if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
                        throw cljs.core.match.backtrack;
                      } else {
                        return null;
                      }
                    }
                  } catch (e9959) {
                    if (e9959 instanceof Error) {
                      var e__4796__auto__ = e9959;
                      if (e__4796__auto__ === cljs.core.match.backtrack) {
                        throw cljs.core.match.backtrack;
                      } else {
                        throw e__4796__auto__;
                      }
                    } else {
                      if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
                        throw e9959;
                      } else {
                        return null;
                      }
                    }
                  }
                } else {
                  if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
                    throw cljs.core.match.backtrack;
                  } else {
                    return null;
                  }
                }
              } catch (e9958) {
                if (e9958 instanceof Error) {
                  var e__4796__auto__ = e9958;
                  if (e__4796__auto__ === cljs.core.match.backtrack) {
                    throw cljs.core.match.backtrack;
                  } else {
                    throw e__4796__auto__;
                  }
                } else {
                  if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
                    throw e9958;
                  } else {
                    return null;
                  }
                }
              }
            } else {
              if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
                throw cljs.core.match.backtrack;
              } else {
                return null;
              }
            }
          } catch (e9935) {
            if (e9935 instanceof Error) {
              var e__4796__auto__ = e9935;
              if (e__4796__auto__ === cljs.core.match.backtrack) {
                try {
                  var ocr_9905_1__9917 = cljs.core.nth.call(null, ocr_9905, 1);
                  if (cljs.core.keyword_identical_QMARK_.call(null, ocr_9905_1__9917, new cljs.core.Keyword(null, "default", "default", 2558708147))) {
                    try {
                      var ocr_9905_2__9918 = cljs.core.nth.call(null, ocr_9905, 2);
                      if (cljs.core.keyword_identical_QMARK_.call(null, ocr_9905_2__9918, new cljs.core.Keyword(null, "underscore", "underscore", 3544053292))) {
                        try {
                          var ocr_9905_3__9919 = cljs.core.nth.call(null, ocr_9905, 3);
                          if (cljs.core.keyword_identical_QMARK_.call(null, ocr_9905_3__9919, new cljs.core.Keyword(null, "default", "default", 2558708147))) {
                            return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [null, termcat.rules.math.subsup_token.call(null, termcat.rules.math.split_base_sub_sup.call(null, t1), new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [null, termcat.util.math.math_row_cast.call(null, t3), null], null))], null);
                          } else {
                            if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
                              throw cljs.core.match.backtrack;
                            } else {
                              return null;
                            }
                          }
                        } catch (e9955) {
                          if (e9955 instanceof Error) {
                            var e__4796__auto____$1 = e9955;
                            if (e__4796__auto____$1 === cljs.core.match.backtrack) {
                              try {
                                var ocr_9905_3__9919 = cljs.core.nth.call(null, ocr_9905, 3);
                                if (cljs.core.vector_QMARK_.call(null, ocr_9905_3__9919) && cljs.core.count.call(null, ocr_9905_3__9919) === 2) {
                                  try {
                                    var ocr_9905_3__9919_0__9922 = cljs.core.nth.call(null, ocr_9905_3__9919, 0);
                                    if (cljs.core.keyword_identical_QMARK_.call(null, ocr_9905_3__9919_0__9922, new cljs.core.Keyword(null, "block", "block", 1107736575))) {
                                      return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [null, termcat.rules.math.subsup_token.call(null, termcat.rules.math.split_base_sub_sup.call(null, t1), new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [null, termcat.util.math.math_row_cast.call(null, t3), null], null))], null);
                                    } else {
                                      if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
                                        throw cljs.core.match.backtrack;
                                      } else {
                                        return null;
                                      }
                                    }
                                  } catch (e9957) {
                                    if (e9957 instanceof Error) {
                                      var e__4796__auto____$2 = e9957;
                                      if (e__4796__auto____$2 === cljs.core.match.backtrack) {
                                        throw cljs.core.match.backtrack;
                                      } else {
                                        throw e__4796__auto____$2;
                                      }
                                    } else {
                                      if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
                                        throw e9957;
                                      } else {
                                        return null;
                                      }
                                    }
                                  }
                                } else {
                                  if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
                                    throw cljs.core.match.backtrack;
                                  } else {
                                    return null;
                                  }
                                }
                              } catch (e9956) {
                                if (e9956 instanceof Error) {
                                  var e__4796__auto____$2 = e9956;
                                  if (e__4796__auto____$2 === cljs.core.match.backtrack) {
                                    throw cljs.core.match.backtrack;
                                  } else {
                                    throw e__4796__auto____$2;
                                  }
                                } else {
                                  if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
                                    throw e9956;
                                  } else {
                                    return null;
                                  }
                                }
                              }
                            } else {
                              throw e__4796__auto____$1;
                            }
                          } else {
                            if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
                              throw e9955;
                            } else {
                              return null;
                            }
                          }
                        }
                      } else {
                        if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
                          throw cljs.core.match.backtrack;
                        } else {
                          return null;
                        }
                      }
                    } catch (e9954) {
                      if (e9954 instanceof Error) {
                        var e__4796__auto____$1 = e9954;
                        if (e__4796__auto____$1 === cljs.core.match.backtrack) {
                          throw cljs.core.match.backtrack;
                        } else {
                          throw e__4796__auto____$1;
                        }
                      } else {
                        if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
                          throw e9954;
                        } else {
                          return null;
                        }
                      }
                    }
                  } else {
                    if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
                      throw cljs.core.match.backtrack;
                    } else {
                      return null;
                    }
                  }
                } catch (e9936) {
                  if (e9936 instanceof Error) {
                    var e__4796__auto____$1 = e9936;
                    if (e__4796__auto____$1 === cljs.core.match.backtrack) {
                      try {
                        var ocr_9905_1__9917 = cljs.core.nth.call(null, ocr_9905, 1);
                        if (cljs.core.vector_QMARK_.call(null, ocr_9905_1__9917) && cljs.core.count.call(null, ocr_9905_1__9917) === 2) {
                          try {
                            var ocr_9905_1__9917_0__9924 = cljs.core.nth.call(null, ocr_9905_1__9917, 0);
                            if (cljs.core.keyword_identical_QMARK_.call(null, ocr_9905_1__9917_0__9924, new cljs.core.Keyword(null, "block", "block", 1107736575))) {
                              try {
                                var ocr_9905_2__9918 = cljs.core.nth.call(null, ocr_9905, 2);
                                if (cljs.core.keyword_identical_QMARK_.call(null, ocr_9905_2__9918, new cljs.core.Keyword(null, "underscore", "underscore", 3544053292))) {
                                  try {
                                    var ocr_9905_3__9919 = cljs.core.nth.call(null, ocr_9905, 3);
                                    if (cljs.core.keyword_identical_QMARK_.call(null, ocr_9905_3__9919, new cljs.core.Keyword(null, "default", "default", 2558708147))) {
                                      return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [null, termcat.rules.math.subsup_token.call(null, termcat.rules.math.split_base_sub_sup.call(null, t1), new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [null, termcat.util.math.math_row_cast.call(null, t3), null], null))], null);
                                    } else {
                                      if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
                                        throw cljs.core.match.backtrack;
                                      } else {
                                        return null;
                                      }
                                    }
                                  } catch (e9951) {
                                    if (e9951 instanceof Error) {
                                      var e__4796__auto____$2 = e9951;
                                      if (e__4796__auto____$2 === cljs.core.match.backtrack) {
                                        try {
                                          var ocr_9905_3__9919 = cljs.core.nth.call(null, ocr_9905, 3);
                                          if (cljs.core.vector_QMARK_.call(null, ocr_9905_3__9919) && cljs.core.count.call(null, ocr_9905_3__9919) === 2) {
                                            try {
                                              var ocr_9905_3__9919_0__9926 = cljs.core.nth.call(null, ocr_9905_3__9919, 0);
                                              if (cljs.core.keyword_identical_QMARK_.call(null, ocr_9905_3__9919_0__9926, new cljs.core.Keyword(null, "block", "block", 1107736575))) {
                                                return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [null, termcat.rules.math.subsup_token.call(null, termcat.rules.math.split_base_sub_sup.call(null, t1), new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [null, termcat.util.math.math_row_cast.call(null, t3), null], null))], null);
                                              } else {
                                                if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
                                                  throw cljs.core.match.backtrack;
                                                } else {
                                                  return null;
                                                }
                                              }
                                            } catch (e9953) {
                                              if (e9953 instanceof Error) {
                                                var e__4796__auto____$3 = e9953;
                                                if (e__4796__auto____$3 === cljs.core.match.backtrack) {
                                                  throw cljs.core.match.backtrack;
                                                } else {
                                                  throw e__4796__auto____$3;
                                                }
                                              } else {
                                                if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
                                                  throw e9953;
                                                } else {
                                                  return null;
                                                }
                                              }
                                            }
                                          } else {
                                            if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
                                              throw cljs.core.match.backtrack;
                                            } else {
                                              return null;
                                            }
                                          }
                                        } catch (e9952) {
                                          if (e9952 instanceof Error) {
                                            var e__4796__auto____$3 = e9952;
                                            if (e__4796__auto____$3 === cljs.core.match.backtrack) {
                                              throw cljs.core.match.backtrack;
                                            } else {
                                              throw e__4796__auto____$3;
                                            }
                                          } else {
                                            if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
                                              throw e9952;
                                            } else {
                                              return null;
                                            }
                                          }
                                        }
                                      } else {
                                        throw e__4796__auto____$2;
                                      }
                                    } else {
                                      if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
                                        throw e9951;
                                      } else {
                                        return null;
                                      }
                                    }
                                  }
                                } else {
                                  if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
                                    throw cljs.core.match.backtrack;
                                  } else {
                                    return null;
                                  }
                                }
                              } catch (e9950) {
                                if (e9950 instanceof Error) {
                                  var e__4796__auto____$2 = e9950;
                                  if (e__4796__auto____$2 === cljs.core.match.backtrack) {
                                    throw cljs.core.match.backtrack;
                                  } else {
                                    throw e__4796__auto____$2;
                                  }
                                } else {
                                  if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
                                    throw e9950;
                                  } else {
                                    return null;
                                  }
                                }
                              }
                            } else {
                              if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
                                throw cljs.core.match.backtrack;
                              } else {
                                return null;
                              }
                            }
                          } catch (e9949) {
                            if (e9949 instanceof Error) {
                              var e__4796__auto____$2 = e9949;
                              if (e__4796__auto____$2 === cljs.core.match.backtrack) {
                                throw cljs.core.match.backtrack;
                              } else {
                                throw e__4796__auto____$2;
                              }
                            } else {
                              if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
                                throw e9949;
                              } else {
                                return null;
                              }
                            }
                          }
                        } else {
                          if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
                            throw cljs.core.match.backtrack;
                          } else {
                            return null;
                          }
                        }
                      } catch (e9937) {
                        if (e9937 instanceof Error) {
                          var e__4796__auto____$2 = e9937;
                          if (e__4796__auto____$2 === cljs.core.match.backtrack) {
                            try {
                              var ocr_9905_1__9917 = cljs.core.nth.call(null, ocr_9905, 1);
                              if (cljs.core.keyword_identical_QMARK_.call(null, ocr_9905_1__9917, new cljs.core.Keyword(null, "default", "default", 2558708147))) {
                                try {
                                  var ocr_9905_2__9918 = cljs.core.nth.call(null, ocr_9905, 2);
                                  if (cljs.core.keyword_identical_QMARK_.call(null, ocr_9905_2__9918, new cljs.core.Keyword(null, "circumflex", "circumflex", 4463600090))) {
                                    try {
                                      var ocr_9905_3__9919 = cljs.core.nth.call(null, ocr_9905, 3);
                                      if (cljs.core.keyword_identical_QMARK_.call(null, ocr_9905_3__9919, new cljs.core.Keyword(null, "default", "default", 2558708147))) {
                                        return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [null, termcat.rules.math.subsup_token.call(null, termcat.rules.math.split_base_sub_sup.call(null, t1), new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [null, null, termcat.util.math.math_row_cast.call(null, t3)], null))], null);
                                      } else {
                                        if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
                                          throw cljs.core.match.backtrack;
                                        } else {
                                          return null;
                                        }
                                      }
                                    } catch (e9946) {
                                      if (e9946 instanceof Error) {
                                        var e__4796__auto____$3 = e9946;
                                        if (e__4796__auto____$3 === cljs.core.match.backtrack) {
                                          try {
                                            var ocr_9905_3__9919 = cljs.core.nth.call(null, ocr_9905, 3);
                                            if (cljs.core.vector_QMARK_.call(null, ocr_9905_3__9919) && cljs.core.count.call(null, ocr_9905_3__9919) === 2) {
                                              try {
                                                var ocr_9905_3__9919_0__9928 = cljs.core.nth.call(null, ocr_9905_3__9919, 0);
                                                if (cljs.core.keyword_identical_QMARK_.call(null, ocr_9905_3__9919_0__9928, new cljs.core.Keyword(null, "block", "block", 1107736575))) {
                                                  return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [null, termcat.rules.math.subsup_token.call(null, termcat.rules.math.split_base_sub_sup.call(null, t1), new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [null, null, termcat.util.math.math_row_cast.call(null, t3)], null))], null);
                                                } else {
                                                  if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
                                                    throw cljs.core.match.backtrack;
                                                  } else {
                                                    return null;
                                                  }
                                                }
                                              } catch (e9948) {
                                                if (e9948 instanceof Error) {
                                                  var e__4796__auto____$4 = e9948;
                                                  if (e__4796__auto____$4 === cljs.core.match.backtrack) {
                                                    throw cljs.core.match.backtrack;
                                                  } else {
                                                    throw e__4796__auto____$4;
                                                  }
                                                } else {
                                                  if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
                                                    throw e9948;
                                                  } else {
                                                    return null;
                                                  }
                                                }
                                              }
                                            } else {
                                              if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
                                                throw cljs.core.match.backtrack;
                                              } else {
                                                return null;
                                              }
                                            }
                                          } catch (e9947) {
                                            if (e9947 instanceof Error) {
                                              var e__4796__auto____$4 = e9947;
                                              if (e__4796__auto____$4 === cljs.core.match.backtrack) {
                                                throw cljs.core.match.backtrack;
                                              } else {
                                                throw e__4796__auto____$4;
                                              }
                                            } else {
                                              if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
                                                throw e9947;
                                              } else {
                                                return null;
                                              }
                                            }
                                          }
                                        } else {
                                          throw e__4796__auto____$3;
                                        }
                                      } else {
                                        if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
                                          throw e9946;
                                        } else {
                                          return null;
                                        }
                                      }
                                    }
                                  } else {
                                    if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
                                      throw cljs.core.match.backtrack;
                                    } else {
                                      return null;
                                    }
                                  }
                                } catch (e9945) {
                                  if (e9945 instanceof Error) {
                                    var e__4796__auto____$3 = e9945;
                                    if (e__4796__auto____$3 === cljs.core.match.backtrack) {
                                      throw cljs.core.match.backtrack;
                                    } else {
                                      throw e__4796__auto____$3;
                                    }
                                  } else {
                                    if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
                                      throw e9945;
                                    } else {
                                      return null;
                                    }
                                  }
                                }
                              } else {
                                if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
                                  throw cljs.core.match.backtrack;
                                } else {
                                  return null;
                                }
                              }
                            } catch (e9938) {
                              if (e9938 instanceof Error) {
                                var e__4796__auto____$3 = e9938;
                                if (e__4796__auto____$3 === cljs.core.match.backtrack) {
                                  try {
                                    var ocr_9905_1__9917 = cljs.core.nth.call(null, ocr_9905, 1);
                                    if (cljs.core.vector_QMARK_.call(null, ocr_9905_1__9917) && cljs.core.count.call(null, ocr_9905_1__9917) === 2) {
                                      try {
                                        var ocr_9905_1__9917_0__9930 = cljs.core.nth.call(null, ocr_9905_1__9917, 0);
                                        if (cljs.core.keyword_identical_QMARK_.call(null, ocr_9905_1__9917_0__9930, new cljs.core.Keyword(null, "block", "block", 1107736575))) {
                                          try {
                                            var ocr_9905_2__9918 = cljs.core.nth.call(null, ocr_9905, 2);
                                            if (cljs.core.keyword_identical_QMARK_.call(null, ocr_9905_2__9918, new cljs.core.Keyword(null, "circumflex", "circumflex", 4463600090))) {
                                              try {
                                                var ocr_9905_3__9919 = cljs.core.nth.call(null, ocr_9905, 3);
                                                if (cljs.core.keyword_identical_QMARK_.call(null, ocr_9905_3__9919, new cljs.core.Keyword(null, "default", "default", 2558708147))) {
                                                  return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [null, termcat.rules.math.subsup_token.call(null, termcat.rules.math.split_base_sub_sup.call(null, t1), new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [null, null, termcat.util.math.math_row_cast.call(null, t3)], null))], null);
                                                } else {
                                                  if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
                                                    throw cljs.core.match.backtrack;
                                                  } else {
                                                    return null;
                                                  }
                                                }
                                              } catch (e9942) {
                                                if (e9942 instanceof Error) {
                                                  var e__4796__auto____$4 = e9942;
                                                  if (e__4796__auto____$4 === cljs.core.match.backtrack) {
                                                    try {
                                                      var ocr_9905_3__9919 = cljs.core.nth.call(null, ocr_9905, 3);
                                                      if (cljs.core.vector_QMARK_.call(null, ocr_9905_3__9919) && cljs.core.count.call(null, ocr_9905_3__9919) === 2) {
                                                        try {
                                                          var ocr_9905_3__9919_0__9932 = cljs.core.nth.call(null, ocr_9905_3__9919, 0);
                                                          if (cljs.core.keyword_identical_QMARK_.call(null, ocr_9905_3__9919_0__9932, new cljs.core.Keyword(null, "block", "block", 1107736575))) {
                                                            return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [null, termcat.rules.math.subsup_token.call(null, termcat.rules.math.split_base_sub_sup.call(null, t1), new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [null, null, termcat.util.math.math_row_cast.call(null, t3)], null))], null);
                                                          } else {
                                                            if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
                                                              throw cljs.core.match.backtrack;
                                                            } else {
                                                              return null;
                                                            }
                                                          }
                                                        } catch (e9944) {
                                                          if (e9944 instanceof Error) {
                                                            var e__4796__auto____$5 = e9944;
                                                            if (e__4796__auto____$5 === cljs.core.match.backtrack) {
                                                              throw cljs.core.match.backtrack;
                                                            } else {
                                                              throw e__4796__auto____$5;
                                                            }
                                                          } else {
                                                            if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
                                                              throw e9944;
                                                            } else {
                                                              return null;
                                                            }
                                                          }
                                                        }
                                                      } else {
                                                        if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
                                                          throw cljs.core.match.backtrack;
                                                        } else {
                                                          return null;
                                                        }
                                                      }
                                                    } catch (e9943) {
                                                      if (e9943 instanceof Error) {
                                                        var e__4796__auto____$5 = e9943;
                                                        if (e__4796__auto____$5 === cljs.core.match.backtrack) {
                                                          throw cljs.core.match.backtrack;
                                                        } else {
                                                          throw e__4796__auto____$5;
                                                        }
                                                      } else {
                                                        if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
                                                          throw e9943;
                                                        } else {
                                                          return null;
                                                        }
                                                      }
                                                    }
                                                  } else {
                                                    throw e__4796__auto____$4;
                                                  }
                                                } else {
                                                  if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
                                                    throw e9942;
                                                  } else {
                                                    return null;
                                                  }
                                                }
                                              }
                                            } else {
                                              if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
                                                throw cljs.core.match.backtrack;
                                              } else {
                                                return null;
                                              }
                                            }
                                          } catch (e9941) {
                                            if (e9941 instanceof Error) {
                                              var e__4796__auto____$4 = e9941;
                                              if (e__4796__auto____$4 === cljs.core.match.backtrack) {
                                                throw cljs.core.match.backtrack;
                                              } else {
                                                throw e__4796__auto____$4;
                                              }
                                            } else {
                                              if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
                                                throw e9941;
                                              } else {
                                                return null;
                                              }
                                            }
                                          }
                                        } else {
                                          if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
                                            throw cljs.core.match.backtrack;
                                          } else {
                                            return null;
                                          }
                                        }
                                      } catch (e9940) {
                                        if (e9940 instanceof Error) {
                                          var e__4796__auto____$4 = e9940;
                                          if (e__4796__auto____$4 === cljs.core.match.backtrack) {
                                            throw cljs.core.match.backtrack;
                                          } else {
                                            throw e__4796__auto____$4;
                                          }
                                        } else {
                                          if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
                                            throw e9940;
                                          } else {
                                            return null;
                                          }
                                        }
                                      }
                                    } else {
                                      if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
                                        throw cljs.core.match.backtrack;
                                      } else {
                                        return null;
                                      }
                                    }
                                  } catch (e9939) {
                                    if (e9939 instanceof Error) {
                                      var e__4796__auto____$4 = e9939;
                                      if (e__4796__auto____$4 === cljs.core.match.backtrack) {
                                        throw cljs.core.match.backtrack;
                                      } else {
                                        throw e__4796__auto____$4;
                                      }
                                    } else {
                                      if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
                                        throw e9939;
                                      } else {
                                        return null;
                                      }
                                    }
                                  }
                                } else {
                                  throw e__4796__auto____$3;
                                }
                              } else {
                                if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
                                  throw e9938;
                                } else {
                                  return null;
                                }
                              }
                            }
                          } else {
                            throw e__4796__auto____$2;
                          }
                        } else {
                          if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
                            throw e9937;
                          } else {
                            return null;
                          }
                        }
                      }
                    } else {
                      throw e__4796__auto____$1;
                    }
                  } else {
                    if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
                      throw e9936;
                    } else {
                      return null;
                    }
                  }
                }
              } else {
                throw e__4796__auto__;
              }
            } else {
              if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
                throw e9935;
              } else {
                return null;
              }
            }
          }
        } else {
          if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
            throw cljs.core.match.backtrack;
          } else {
            return null;
          }
        }
      } catch (e9934) {
        if (e9934 instanceof Error) {
          var e__4796__auto__ = e9934;
          if (e__4796__auto__ === cljs.core.match.backtrack) {
            return null;
          } else {
            throw e__4796__auto__;
          }
        } else {
          if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
            throw e9934;
          } else {
            return null;
          }
        }
      }
    }();
    if (cljs.core.truth_(temp__4090__auto__)) {
      var r__6471__auto__ = temp__4090__auto__;
      return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [function() {
        var or__3403__auto__ = cljs.core.first.call(null, r__6471__auto__);
        if (cljs.core.truth_(or__3403__auto__)) {
          return or__3403__auto__;
        } else {
          return state__6468__auto__;
        }
      }(), cljs.core.concat.call(null, cljs.core.next.call(null, r__6471__auto__), cljs.core.drop.call(null, 3, input__6469__auto__))], null);
    } else {
      return null;
    }
  };
  G__9962 = function(state__6468__auto__, input__6469__auto__) {
    switch(arguments.length) {
      case 0:
        return G__9962__0.call(this);
      case 2:
        return G__9962__2.call(this, state__6468__auto__, input__6469__auto__);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  return G__9962;
}());
termcat.rules.math.introduce_mfrac = termcat.rewrite.abstraction.call(null, function() {
  var G__9991 = null;
  var G__9991__0 = function() {
    return null;
  };
  var G__9991__2 = function(state__6468__auto__, input__6469__auto__) {
    var padded_input__6470__auto__ = cljs.core.concat.call(null, input__6469__auto__, cljs.core.repeat.call(null, null));
    var vec__9963 = cljs.core.cons.call(null, state__6468__auto__, cljs.core.take.call(null, 3, padded_input__6470__auto__));
    var state = cljs.core.nth.call(null, vec__9963, 0, null);
    var t1 = cljs.core.nth.call(null, vec__9963, 1, null);
    var t2 = cljs.core.nth.call(null, vec__9963, 2, null);
    var t3 = cljs.core.nth.call(null, vec__9963, 3, null);
    var temp__4090__auto__ = function() {
      var ocr_9964 = clojure.core.reducers.reduce.call(null, cljs.core.conj, new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [state__6468__auto__], null), clojure.core.reducers.take.call(null, 3, clojure.core.reducers.map.call(null, termcat.term.tt, padded_input__6470__auto__)));
      try {
        if (cljs.core.vector_QMARK_.call(null, ocr_9964) && cljs.core.count.call(null, ocr_9964) === 4) {
          try {
            var ocr_9964_1__9970 = cljs.core.nth.call(null, ocr_9964, 1);
            if (cljs.core.keyword_identical_QMARK_.call(null, ocr_9964_1__9970, new cljs.core.Keyword(null, "default", "default", 2558708147))) {
              try {
                var ocr_9964_2__9971 = cljs.core.nth.call(null, ocr_9964, 2);
                if (cljs.core.keyword_identical_QMARK_.call(null, ocr_9964_2__9971, new cljs.core.Keyword(null, "bar", "bar", 1014001541))) {
                  try {
                    var ocr_9964_3__9972 = cljs.core.nth.call(null, ocr_9964, 3);
                    if (cljs.core.keyword_identical_QMARK_.call(null, ocr_9964_3__9972, new cljs.core.Keyword(null, "default", "default", 2558708147))) {
                      return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [null, termcat.util.math.math_block.call(null, termcat.term.fragment.call(null, termcat.util.math.math_row_cast.call(null, t1), termcat.util.math.math_row_cast.call(null, t3)), new cljs.core.Keyword(null, "mfrac", "mfrac", 1117719373))], null);
                    } else {
                      if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
                        throw cljs.core.match.backtrack;
                      } else {
                        return null;
                      }
                    }
                  } catch (e9988) {
                    if (e9988 instanceof Error) {
                      var e__4796__auto__ = e9988;
                      if (e__4796__auto__ === cljs.core.match.backtrack) {
                        try {
                          var ocr_9964_3__9972 = cljs.core.nth.call(null, ocr_9964, 3);
                          if (cljs.core.vector_QMARK_.call(null, ocr_9964_3__9972) && cljs.core.count.call(null, ocr_9964_3__9972) === 2) {
                            try {
                              var ocr_9964_3__9972_0__9973 = cljs.core.nth.call(null, ocr_9964_3__9972, 0);
                              if (cljs.core.keyword_identical_QMARK_.call(null, ocr_9964_3__9972_0__9973, new cljs.core.Keyword(null, "block", "block", 1107736575))) {
                                return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [null, termcat.util.math.math_block.call(null, termcat.term.fragment.call(null, termcat.util.math.math_row_cast.call(null, t1), termcat.util.math.math_row_cast.call(null, t3)), new cljs.core.Keyword(null, "mfrac", "mfrac", 1117719373))], null);
                              } else {
                                if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
                                  throw cljs.core.match.backtrack;
                                } else {
                                  return null;
                                }
                              }
                            } catch (e9990) {
                              if (e9990 instanceof Error) {
                                var e__4796__auto____$1 = e9990;
                                if (e__4796__auto____$1 === cljs.core.match.backtrack) {
                                  throw cljs.core.match.backtrack;
                                } else {
                                  throw e__4796__auto____$1;
                                }
                              } else {
                                if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
                                  throw e9990;
                                } else {
                                  return null;
                                }
                              }
                            }
                          } else {
                            if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
                              throw cljs.core.match.backtrack;
                            } else {
                              return null;
                            }
                          }
                        } catch (e9989) {
                          if (e9989 instanceof Error) {
                            var e__4796__auto____$1 = e9989;
                            if (e__4796__auto____$1 === cljs.core.match.backtrack) {
                              throw cljs.core.match.backtrack;
                            } else {
                              throw e__4796__auto____$1;
                            }
                          } else {
                            if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
                              throw e9989;
                            } else {
                              return null;
                            }
                          }
                        }
                      } else {
                        throw e__4796__auto__;
                      }
                    } else {
                      if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
                        throw e9988;
                      } else {
                        return null;
                      }
                    }
                  }
                } else {
                  if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
                    throw cljs.core.match.backtrack;
                  } else {
                    return null;
                  }
                }
              } catch (e9987) {
                if (e9987 instanceof Error) {
                  var e__4796__auto__ = e9987;
                  if (e__4796__auto__ === cljs.core.match.backtrack) {
                    throw cljs.core.match.backtrack;
                  } else {
                    throw e__4796__auto__;
                  }
                } else {
                  if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
                    throw e9987;
                  } else {
                    return null;
                  }
                }
              }
            } else {
              if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
                throw cljs.core.match.backtrack;
              } else {
                return null;
              }
            }
          } catch (e9980) {
            if (e9980 instanceof Error) {
              var e__4796__auto__ = e9980;
              if (e__4796__auto__ === cljs.core.match.backtrack) {
                try {
                  var ocr_9964_1__9970 = cljs.core.nth.call(null, ocr_9964, 1);
                  if (cljs.core.vector_QMARK_.call(null, ocr_9964_1__9970) && cljs.core.count.call(null, ocr_9964_1__9970) === 2) {
                    try {
                      var ocr_9964_1__9970_0__9975 = cljs.core.nth.call(null, ocr_9964_1__9970, 0);
                      if (cljs.core.keyword_identical_QMARK_.call(null, ocr_9964_1__9970_0__9975, new cljs.core.Keyword(null, "block", "block", 1107736575))) {
                        try {
                          var ocr_9964_2__9971 = cljs.core.nth.call(null, ocr_9964, 2);
                          if (cljs.core.keyword_identical_QMARK_.call(null, ocr_9964_2__9971, new cljs.core.Keyword(null, "bar", "bar", 1014001541))) {
                            try {
                              var ocr_9964_3__9972 = cljs.core.nth.call(null, ocr_9964, 3);
                              if (cljs.core.keyword_identical_QMARK_.call(null, ocr_9964_3__9972, new cljs.core.Keyword(null, "default", "default", 2558708147))) {
                                return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [null, termcat.util.math.math_block.call(null, termcat.term.fragment.call(null, termcat.util.math.math_row_cast.call(null, t1), termcat.util.math.math_row_cast.call(null, t3)), new cljs.core.Keyword(null, "mfrac", "mfrac", 1117719373))], null);
                              } else {
                                if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
                                  throw cljs.core.match.backtrack;
                                } else {
                                  return null;
                                }
                              }
                            } catch (e9984) {
                              if (e9984 instanceof Error) {
                                var e__4796__auto____$1 = e9984;
                                if (e__4796__auto____$1 === cljs.core.match.backtrack) {
                                  try {
                                    var ocr_9964_3__9972 = cljs.core.nth.call(null, ocr_9964, 3);
                                    if (cljs.core.vector_QMARK_.call(null, ocr_9964_3__9972) && cljs.core.count.call(null, ocr_9964_3__9972) === 2) {
                                      try {
                                        var ocr_9964_3__9972_0__9977 = cljs.core.nth.call(null, ocr_9964_3__9972, 0);
                                        if (cljs.core.keyword_identical_QMARK_.call(null, ocr_9964_3__9972_0__9977, new cljs.core.Keyword(null, "block", "block", 1107736575))) {
                                          return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [null, termcat.util.math.math_block.call(null, termcat.term.fragment.call(null, termcat.util.math.math_row_cast.call(null, t1), termcat.util.math.math_row_cast.call(null, t3)), new cljs.core.Keyword(null, "mfrac", "mfrac", 1117719373))], null);
                                        } else {
                                          if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
                                            throw cljs.core.match.backtrack;
                                          } else {
                                            return null;
                                          }
                                        }
                                      } catch (e9986) {
                                        if (e9986 instanceof Error) {
                                          var e__4796__auto____$2 = e9986;
                                          if (e__4796__auto____$2 === cljs.core.match.backtrack) {
                                            throw cljs.core.match.backtrack;
                                          } else {
                                            throw e__4796__auto____$2;
                                          }
                                        } else {
                                          if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
                                            throw e9986;
                                          } else {
                                            return null;
                                          }
                                        }
                                      }
                                    } else {
                                      if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
                                        throw cljs.core.match.backtrack;
                                      } else {
                                        return null;
                                      }
                                    }
                                  } catch (e9985) {
                                    if (e9985 instanceof Error) {
                                      var e__4796__auto____$2 = e9985;
                                      if (e__4796__auto____$2 === cljs.core.match.backtrack) {
                                        throw cljs.core.match.backtrack;
                                      } else {
                                        throw e__4796__auto____$2;
                                      }
                                    } else {
                                      if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
                                        throw e9985;
                                      } else {
                                        return null;
                                      }
                                    }
                                  }
                                } else {
                                  throw e__4796__auto____$1;
                                }
                              } else {
                                if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
                                  throw e9984;
                                } else {
                                  return null;
                                }
                              }
                            }
                          } else {
                            if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
                              throw cljs.core.match.backtrack;
                            } else {
                              return null;
                            }
                          }
                        } catch (e9983) {
                          if (e9983 instanceof Error) {
                            var e__4796__auto____$1 = e9983;
                            if (e__4796__auto____$1 === cljs.core.match.backtrack) {
                              throw cljs.core.match.backtrack;
                            } else {
                              throw e__4796__auto____$1;
                            }
                          } else {
                            if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
                              throw e9983;
                            } else {
                              return null;
                            }
                          }
                        }
                      } else {
                        if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
                          throw cljs.core.match.backtrack;
                        } else {
                          return null;
                        }
                      }
                    } catch (e9982) {
                      if (e9982 instanceof Error) {
                        var e__4796__auto____$1 = e9982;
                        if (e__4796__auto____$1 === cljs.core.match.backtrack) {
                          throw cljs.core.match.backtrack;
                        } else {
                          throw e__4796__auto____$1;
                        }
                      } else {
                        if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
                          throw e9982;
                        } else {
                          return null;
                        }
                      }
                    }
                  } else {
                    if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
                      throw cljs.core.match.backtrack;
                    } else {
                      return null;
                    }
                  }
                } catch (e9981) {
                  if (e9981 instanceof Error) {
                    var e__4796__auto____$1 = e9981;
                    if (e__4796__auto____$1 === cljs.core.match.backtrack) {
                      throw cljs.core.match.backtrack;
                    } else {
                      throw e__4796__auto____$1;
                    }
                  } else {
                    if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
                      throw e9981;
                    } else {
                      return null;
                    }
                  }
                }
              } else {
                throw e__4796__auto__;
              }
            } else {
              if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
                throw e9980;
              } else {
                return null;
              }
            }
          }
        } else {
          if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
            throw cljs.core.match.backtrack;
          } else {
            return null;
          }
        }
      } catch (e9979) {
        if (e9979 instanceof Error) {
          var e__4796__auto__ = e9979;
          if (e__4796__auto__ === cljs.core.match.backtrack) {
            return null;
          } else {
            throw e__4796__auto__;
          }
        } else {
          if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
            throw e9979;
          } else {
            return null;
          }
        }
      }
    }();
    if (cljs.core.truth_(temp__4090__auto__)) {
      var r__6471__auto__ = temp__4090__auto__;
      return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [function() {
        var or__3403__auto__ = cljs.core.first.call(null, r__6471__auto__);
        if (cljs.core.truth_(or__3403__auto__)) {
          return or__3403__auto__;
        } else {
          return state__6468__auto__;
        }
      }(), cljs.core.concat.call(null, cljs.core.next.call(null, r__6471__auto__), cljs.core.drop.call(null, 3, input__6469__auto__))], null);
    } else {
      return null;
    }
  };
  G__9991 = function(state__6468__auto__, input__6469__auto__) {
    switch(arguments.length) {
      case 0:
        return G__9991__0.call(this);
      case 2:
        return G__9991__2.call(this, state__6468__auto__, input__6469__auto__);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  return G__9991;
}());
termcat.rules.math.math_cast_next_token = termcat.rewrite.abstraction.call(null, function() {
  var G__10012 = null;
  var G__10012__0 = function() {
    return null;
  };
  var G__10012__2 = function(state__6468__auto__, input__6469__auto__) {
    var padded_input__6470__auto__ = cljs.core.concat.call(null, input__6469__auto__, cljs.core.repeat.call(null, null));
    var vec__9992 = cljs.core.cons.call(null, state__6468__auto__, cljs.core.take.call(null, 2, padded_input__6470__auto__));
    var state = cljs.core.nth.call(null, vec__9992, 0, null);
    var t1 = cljs.core.nth.call(null, vec__9992, 1, null);
    var t2 = cljs.core.nth.call(null, vec__9992, 2, null);
    var temp__4090__auto__ = function() {
      var ocr_9993 = clojure.core.reducers.reduce.call(null, cljs.core.conj, new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [state__6468__auto__], null), clojure.core.reducers.take.call(null, 2, clojure.core.reducers.map.call(null, termcat.term.tt, padded_input__6470__auto__)));
      try {
        if (cljs.core.vector_QMARK_.call(null, ocr_9993) && cljs.core.count.call(null, ocr_9993) === 3) {
          try {
            var ocr_9993_1__9999 = cljs.core.nth.call(null, ocr_9993, 1);
            if (cljs.core.vector_QMARK_.call(null, ocr_9993_1__9999) && cljs.core.count.call(null, ocr_9993_1__9999) === 2) {
              try {
                var ocr_9993_1__9999_0__10001 = cljs.core.nth.call(null, ocr_9993_1__9999, 0);
                if (cljs.core.keyword_identical_QMARK_.call(null, ocr_9993_1__9999_0__10001, new cljs.core.Keyword(null, "block", "block", 1107736575))) {
                  try {
                    var ocr_9993_1__9999_1__10002 = cljs.core.nth.call(null, ocr_9993_1__9999, 1);
                    if (cljs.core.truth_((new cljs.core.Keyword(null, "math", "math", 1017248378)).cljs$core$IFn$_invoke$arity$1(ocr_9993_1__9999_1__10002))) {
                      try {
                        var ocr_9993_2__10000 = cljs.core.nth.call(null, ocr_9993, 2);
                        if (cljs.core.keyword_identical_QMARK_.call(null, ocr_9993_2__10000, new cljs.core.Keyword(null, "default", "default", 2558708147))) {
                          return cljs.core.concat.call(null, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [null, t1], null), termcat.util.math.math_cast.call(null, t2));
                        } else {
                          if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
                            throw cljs.core.match.backtrack;
                          } else {
                            return null;
                          }
                        }
                      } catch (e10009) {
                        if (e10009 instanceof Error) {
                          var e__4796__auto__ = e10009;
                          if (e__4796__auto__ === cljs.core.match.backtrack) {
                            try {
                              var ocr_9993_2__10000 = cljs.core.nth.call(null, ocr_9993, 2);
                              if (cljs.core.vector_QMARK_.call(null, ocr_9993_2__10000) && cljs.core.count.call(null, ocr_9993_2__10000) === 2) {
                                try {
                                  var ocr_9993_2__10000_0__10003 = cljs.core.nth.call(null, ocr_9993_2__10000, 0);
                                  if (cljs.core.keyword_identical_QMARK_.call(null, ocr_9993_2__10000_0__10003, new cljs.core.Keyword(null, "block", "block", 1107736575))) {
                                    return cljs.core.concat.call(null, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [null, t1], null), termcat.util.math.math_cast.call(null, t2));
                                  } else {
                                    if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
                                      throw cljs.core.match.backtrack;
                                    } else {
                                      return null;
                                    }
                                  }
                                } catch (e10011) {
                                  if (e10011 instanceof Error) {
                                    var e__4796__auto____$1 = e10011;
                                    if (e__4796__auto____$1 === cljs.core.match.backtrack) {
                                      throw cljs.core.match.backtrack;
                                    } else {
                                      throw e__4796__auto____$1;
                                    }
                                  } else {
                                    if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
                                      throw e10011;
                                    } else {
                                      return null;
                                    }
                                  }
                                }
                              } else {
                                if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
                                  throw cljs.core.match.backtrack;
                                } else {
                                  return null;
                                }
                              }
                            } catch (e10010) {
                              if (e10010 instanceof Error) {
                                var e__4796__auto____$1 = e10010;
                                if (e__4796__auto____$1 === cljs.core.match.backtrack) {
                                  throw cljs.core.match.backtrack;
                                } else {
                                  throw e__4796__auto____$1;
                                }
                              } else {
                                if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
                                  throw e10010;
                                } else {
                                  return null;
                                }
                              }
                            }
                          } else {
                            throw e__4796__auto__;
                          }
                        } else {
                          if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
                            throw e10009;
                          } else {
                            return null;
                          }
                        }
                      }
                    } else {
                      if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
                        throw cljs.core.match.backtrack;
                      } else {
                        return null;
                      }
                    }
                  } catch (e10008) {
                    if (e10008 instanceof Error) {
                      var e__4796__auto__ = e10008;
                      if (e__4796__auto__ === cljs.core.match.backtrack) {
                        throw cljs.core.match.backtrack;
                      } else {
                        throw e__4796__auto__;
                      }
                    } else {
                      if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
                        throw e10008;
                      } else {
                        return null;
                      }
                    }
                  }
                } else {
                  if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
                    throw cljs.core.match.backtrack;
                  } else {
                    return null;
                  }
                }
              } catch (e10007) {
                if (e10007 instanceof Error) {
                  var e__4796__auto__ = e10007;
                  if (e__4796__auto__ === cljs.core.match.backtrack) {
                    throw cljs.core.match.backtrack;
                  } else {
                    throw e__4796__auto__;
                  }
                } else {
                  if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
                    throw e10007;
                  } else {
                    return null;
                  }
                }
              }
            } else {
              if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
                throw cljs.core.match.backtrack;
              } else {
                return null;
              }
            }
          } catch (e10006) {
            if (e10006 instanceof Error) {
              var e__4796__auto__ = e10006;
              if (e__4796__auto__ === cljs.core.match.backtrack) {
                throw cljs.core.match.backtrack;
              } else {
                throw e__4796__auto__;
              }
            } else {
              if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
                throw e10006;
              } else {
                return null;
              }
            }
          }
        } else {
          if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
            throw cljs.core.match.backtrack;
          } else {
            return null;
          }
        }
      } catch (e10005) {
        if (e10005 instanceof Error) {
          var e__4796__auto__ = e10005;
          if (e__4796__auto__ === cljs.core.match.backtrack) {
            return null;
          } else {
            throw e__4796__auto__;
          }
        } else {
          if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
            throw e10005;
          } else {
            return null;
          }
        }
      }
    }();
    if (cljs.core.truth_(temp__4090__auto__)) {
      var r__6471__auto__ = temp__4090__auto__;
      return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [function() {
        var or__3403__auto__ = cljs.core.first.call(null, r__6471__auto__);
        if (cljs.core.truth_(or__3403__auto__)) {
          return or__3403__auto__;
        } else {
          return state__6468__auto__;
        }
      }(), cljs.core.concat.call(null, cljs.core.next.call(null, r__6471__auto__), cljs.core.drop.call(null, 2, input__6469__auto__))], null);
    } else {
      return null;
    }
  };
  G__10012 = function(state__6468__auto__, input__6469__auto__) {
    switch(arguments.length) {
      case 0:
        return G__10012__0.call(this);
      case 2:
        return G__10012__2.call(this, state__6468__auto__, input__6469__auto__);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  return G__10012;
}());
termcat.rules.math.remove_superfluous_whitespace = termcat.rewrite.abstraction.call(null, function() {
  var G__10035 = null;
  var G__10035__0 = function() {
    return null;
  };
  var G__10035__2 = function(state__6468__auto__, input__6469__auto__) {
    var padded_input__6470__auto__ = cljs.core.concat.call(null, input__6469__auto__, cljs.core.repeat.call(null, null));
    var vec__10013 = cljs.core.cons.call(null, state__6468__auto__, cljs.core.take.call(null, 3, padded_input__6470__auto__));
    var state = cljs.core.nth.call(null, vec__10013, 0, null);
    var t1 = cljs.core.nth.call(null, vec__10013, 1, null);
    var t2 = cljs.core.nth.call(null, vec__10013, 2, null);
    var t3 = cljs.core.nth.call(null, vec__10013, 3, null);
    var temp__4090__auto__ = function() {
      var ocr_10014 = clojure.core.reducers.reduce.call(null, cljs.core.conj, new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [state__6468__auto__], null), clojure.core.reducers.take.call(null, 3, clojure.core.reducers.map.call(null, termcat.term.tt, padded_input__6470__auto__)));
      try {
        if (cljs.core.vector_QMARK_.call(null, ocr_10014) && cljs.core.count.call(null, ocr_10014) === 4) {
          try {
            var ocr_10014_1__10020 = cljs.core.nth.call(null, ocr_10014, 1);
            if (cljs.core.vector_QMARK_.call(null, ocr_10014_1__10020) && cljs.core.count.call(null, ocr_10014_1__10020) === 2) {
              try {
                var ocr_10014_1__10020_0__10023 = cljs.core.nth.call(null, ocr_10014_1__10020, 0);
                if (cljs.core.keyword_identical_QMARK_.call(null, ocr_10014_1__10020_0__10023, new cljs.core.Keyword(null, "block", "block", 1107736575))) {
                  try {
                    var ocr_10014_1__10020_1__10024 = cljs.core.nth.call(null, ocr_10014_1__10020, 1);
                    if (cljs.core.truth_((new cljs.core.Keyword(null, "math", "math", 1017248378)).cljs$core$IFn$_invoke$arity$1(ocr_10014_1__10020_1__10024))) {
                      try {
                        var ocr_10014_2__10021 = cljs.core.nth.call(null, ocr_10014, 2);
                        if (cljs.core.keyword_identical_QMARK_.call(null, ocr_10014_2__10021, new cljs.core.Keyword(null, "whitespace", "whitespace", 1290815983))) {
                          try {
                            var ocr_10014_3__10022 = cljs.core.nth.call(null, ocr_10014, 3);
                            if (cljs.core.vector_QMARK_.call(null, ocr_10014_3__10022) && cljs.core.count.call(null, ocr_10014_3__10022) === 2) {
                              try {
                                var ocr_10014_3__10022_0__10025 = cljs.core.nth.call(null, ocr_10014_3__10022, 0);
                                if (cljs.core.keyword_identical_QMARK_.call(null, ocr_10014_3__10022_0__10025, new cljs.core.Keyword(null, "block", "block", 1107736575))) {
                                  try {
                                    var ocr_10014_3__10022_1__10026 = cljs.core.nth.call(null, ocr_10014_3__10022, 1);
                                    if (cljs.core.truth_((new cljs.core.Keyword(null, "math", "math", 1017248378)).cljs$core$IFn$_invoke$arity$1(ocr_10014_3__10022_1__10026))) {
                                      return new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [null, t1, t3], null);
                                    } else {
                                      if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
                                        throw cljs.core.match.backtrack;
                                      } else {
                                        return null;
                                      }
                                    }
                                  } catch (e10034) {
                                    if (e10034 instanceof Error) {
                                      var e__4796__auto__ = e10034;
                                      if (e__4796__auto__ === cljs.core.match.backtrack) {
                                        throw cljs.core.match.backtrack;
                                      } else {
                                        throw e__4796__auto__;
                                      }
                                    } else {
                                      if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
                                        throw e10034;
                                      } else {
                                        return null;
                                      }
                                    }
                                  }
                                } else {
                                  if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
                                    throw cljs.core.match.backtrack;
                                  } else {
                                    return null;
                                  }
                                }
                              } catch (e10033) {
                                if (e10033 instanceof Error) {
                                  var e__4796__auto__ = e10033;
                                  if (e__4796__auto__ === cljs.core.match.backtrack) {
                                    throw cljs.core.match.backtrack;
                                  } else {
                                    throw e__4796__auto__;
                                  }
                                } else {
                                  if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
                                    throw e10033;
                                  } else {
                                    return null;
                                  }
                                }
                              }
                            } else {
                              if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
                                throw cljs.core.match.backtrack;
                              } else {
                                return null;
                              }
                            }
                          } catch (e10032) {
                            if (e10032 instanceof Error) {
                              var e__4796__auto__ = e10032;
                              if (e__4796__auto__ === cljs.core.match.backtrack) {
                                throw cljs.core.match.backtrack;
                              } else {
                                throw e__4796__auto__;
                              }
                            } else {
                              if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
                                throw e10032;
                              } else {
                                return null;
                              }
                            }
                          }
                        } else {
                          if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
                            throw cljs.core.match.backtrack;
                          } else {
                            return null;
                          }
                        }
                      } catch (e10031) {
                        if (e10031 instanceof Error) {
                          var e__4796__auto__ = e10031;
                          if (e__4796__auto__ === cljs.core.match.backtrack) {
                            throw cljs.core.match.backtrack;
                          } else {
                            throw e__4796__auto__;
                          }
                        } else {
                          if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
                            throw e10031;
                          } else {
                            return null;
                          }
                        }
                      }
                    } else {
                      if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
                        throw cljs.core.match.backtrack;
                      } else {
                        return null;
                      }
                    }
                  } catch (e10030) {
                    if (e10030 instanceof Error) {
                      var e__4796__auto__ = e10030;
                      if (e__4796__auto__ === cljs.core.match.backtrack) {
                        throw cljs.core.match.backtrack;
                      } else {
                        throw e__4796__auto__;
                      }
                    } else {
                      if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
                        throw e10030;
                      } else {
                        return null;
                      }
                    }
                  }
                } else {
                  if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
                    throw cljs.core.match.backtrack;
                  } else {
                    return null;
                  }
                }
              } catch (e10029) {
                if (e10029 instanceof Error) {
                  var e__4796__auto__ = e10029;
                  if (e__4796__auto__ === cljs.core.match.backtrack) {
                    throw cljs.core.match.backtrack;
                  } else {
                    throw e__4796__auto__;
                  }
                } else {
                  if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
                    throw e10029;
                  } else {
                    return null;
                  }
                }
              }
            } else {
              if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
                throw cljs.core.match.backtrack;
              } else {
                return null;
              }
            }
          } catch (e10028) {
            if (e10028 instanceof Error) {
              var e__4796__auto__ = e10028;
              if (e__4796__auto__ === cljs.core.match.backtrack) {
                throw cljs.core.match.backtrack;
              } else {
                throw e__4796__auto__;
              }
            } else {
              if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
                throw e10028;
              } else {
                return null;
              }
            }
          }
        } else {
          if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
            throw cljs.core.match.backtrack;
          } else {
            return null;
          }
        }
      } catch (e10027) {
        if (e10027 instanceof Error) {
          var e__4796__auto__ = e10027;
          if (e__4796__auto__ === cljs.core.match.backtrack) {
            return null;
          } else {
            throw e__4796__auto__;
          }
        } else {
          if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
            throw e10027;
          } else {
            return null;
          }
        }
      }
    }();
    if (cljs.core.truth_(temp__4090__auto__)) {
      var r__6471__auto__ = temp__4090__auto__;
      return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [function() {
        var or__3403__auto__ = cljs.core.first.call(null, r__6471__auto__);
        if (cljs.core.truth_(or__3403__auto__)) {
          return or__3403__auto__;
        } else {
          return state__6468__auto__;
        }
      }(), cljs.core.concat.call(null, cljs.core.next.call(null, r__6471__auto__), cljs.core.drop.call(null, 3, input__6469__auto__))], null);
    } else {
      return null;
    }
  };
  G__10035 = function(state__6468__auto__, input__6469__auto__) {
    switch(arguments.length) {
      case 0:
        return G__10035__0.call(this);
      case 2:
        return G__10035__2.call(this, state__6468__auto__, input__6469__auto__);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  return G__10035;
}());
goog.provide("termcat.rules.html");
goog.require("cljs.core");
goog.require("termcat.term");
goog.require("termcat.util.math");
goog.require("termcat.term");
goog.require("clojure.core.reducers");
goog.require("clojure.string");
goog.require("termcat.rewrite");
goog.require("clojure.core.reducers");
goog.require("termcat.rewrite");
goog.require("termcat.util.math");
goog.require("clojure.string");
goog.require("cljs.core.match");
termcat.rules.html.text_block_QMARK_ = function text_block_QMARK_(x) {
  return termcat.term.block_QMARK_.call(null, x) && cljs.core.not.call(null, (new cljs.core.Keyword(null, "math", "math", 1017248378)).cljs$core$IFn$_invoke$arity$1(cljs.core.second.call(null, termcat.term.tt.call(null, x))));
};
termcat.rules.html.introduce_nbsp_entities = termcat.rewrite.abstraction.call(null, function() {
  var G__9197 = null;
  var G__9197__0 = function() {
    return null;
  };
  var G__9197__2 = function(state__6468__auto__, input__6469__auto__) {
    var padded_input__6470__auto__ = cljs.core.concat.call(null, input__6469__auto__, cljs.core.repeat.call(null, null));
    var vec__9189 = cljs.core.cons.call(null, state__6468__auto__, cljs.core.take.call(null, 1, padded_input__6470__auto__));
    var state = cljs.core.nth.call(null, vec__9189, 0, null);
    var t1 = cljs.core.nth.call(null, vec__9189, 1, null);
    var temp__4090__auto__ = function() {
      var ocr_9190 = clojure.core.reducers.reduce.call(null, cljs.core.conj, new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [state__6468__auto__], null), clojure.core.reducers.take.call(null, 1, clojure.core.reducers.map.call(null, termcat.term.tt, padded_input__6470__auto__)));
      try {
        if (cljs.core.vector_QMARK_.call(null, ocr_9190) && cljs.core.count.call(null, ocr_9190) === 2) {
          try {
            var ocr_9190_1__9194 = cljs.core.nth.call(null, ocr_9190, 1);
            if (cljs.core.keyword_identical_QMARK_.call(null, ocr_9190_1__9194, new cljs.core.Keyword(null, "tilde", "tilde", 1124267722))) {
              return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [null, termcat.term.token.call(null, new cljs.core.Keyword(null, "html", "html", 1017117469), "\x26nbsp;")], null);
            } else {
              if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
                throw cljs.core.match.backtrack;
              } else {
                return null;
              }
            }
          } catch (e9196) {
            if (e9196 instanceof Error) {
              var e__4796__auto__ = e9196;
              if (e__4796__auto__ === cljs.core.match.backtrack) {
                throw cljs.core.match.backtrack;
              } else {
                throw e__4796__auto__;
              }
            } else {
              if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
                throw e9196;
              } else {
                return null;
              }
            }
          }
        } else {
          if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
            throw cljs.core.match.backtrack;
          } else {
            return null;
          }
        }
      } catch (e9195) {
        if (e9195 instanceof Error) {
          var e__4796__auto__ = e9195;
          if (e__4796__auto__ === cljs.core.match.backtrack) {
            return null;
          } else {
            throw e__4796__auto__;
          }
        } else {
          if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
            throw e9195;
          } else {
            return null;
          }
        }
      }
    }();
    if (cljs.core.truth_(temp__4090__auto__)) {
      var r__6471__auto__ = temp__4090__auto__;
      return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [function() {
        var or__3403__auto__ = cljs.core.first.call(null, r__6471__auto__);
        if (cljs.core.truth_(or__3403__auto__)) {
          return or__3403__auto__;
        } else {
          return state__6468__auto__;
        }
      }(), cljs.core.concat.call(null, cljs.core.next.call(null, r__6471__auto__), cljs.core.drop.call(null, 1, input__6469__auto__))], null);
    } else {
      return null;
    }
  };
  G__9197 = function(state__6468__auto__, input__6469__auto__) {
    switch(arguments.length) {
      case 0:
        return G__9197__0.call(this);
      case 2:
        return G__9197__2.call(this, state__6468__auto__, input__6469__auto__);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  return G__9197;
}());
termcat.rules.html.introduce_typographic_dashes = termcat.rewrite.abstraction.call(null, function() {
  var G__9207 = null;
  var G__9207__0 = function() {
    return null;
  };
  var G__9207__2 = function(state__6468__auto__, input__6469__auto__) {
    var padded_input__6470__auto__ = cljs.core.concat.call(null, input__6469__auto__, cljs.core.repeat.call(null, null));
    var vec__9198 = cljs.core.cons.call(null, state__6468__auto__, cljs.core.take.call(null, 1, padded_input__6470__auto__));
    var state = cljs.core.nth.call(null, vec__9198, 0, null);
    var t1 = cljs.core.nth.call(null, vec__9198, 1, null);
    var temp__4090__auto__ = function() {
      var ocr_9199 = clojure.core.reducers.reduce.call(null, cljs.core.conj, new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [state__6468__auto__], null), clojure.core.reducers.take.call(null, 1, clojure.core.reducers.map.call(null, termcat.term.tt, padded_input__6470__auto__)));
      try {
        if (cljs.core.vector_QMARK_.call(null, ocr_9199) && cljs.core.count.call(null, ocr_9199) === 2) {
          try {
            var ocr_9199_1__9203 = cljs.core.nth.call(null, ocr_9199, 1);
            if (cljs.core.keyword_identical_QMARK_.call(null, ocr_9199_1__9203, new cljs.core.Keyword(null, "dash", "dash", 1016980228))) {
              var G__9206 = typeof termcat.term.payload.call(null, t1) === "string" ? cljs.core.count.call(null, termcat.term.payload.call(null, t1)) : null;
              if (cljs.core._EQ_.call(null, 3, G__9206)) {
                return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [null, termcat.term.token.call(null, new cljs.core.Keyword(null, "default", "default", 2558708147), "\u2014")], null);
              } else {
                if (cljs.core._EQ_.call(null, 2, G__9206)) {
                  return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [null, termcat.term.token.call(null, new cljs.core.Keyword(null, "default", "default", 2558708147), "\u2013")], null);
                } else {
                  if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
                    return null;
                  } else {
                    return null;
                  }
                }
              }
            } else {
              if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
                throw cljs.core.match.backtrack;
              } else {
                return null;
              }
            }
          } catch (e9205) {
            if (e9205 instanceof Error) {
              var e__4796__auto__ = e9205;
              if (e__4796__auto__ === cljs.core.match.backtrack) {
                throw cljs.core.match.backtrack;
              } else {
                throw e__4796__auto__;
              }
            } else {
              if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
                throw e9205;
              } else {
                return null;
              }
            }
          }
        } else {
          if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
            throw cljs.core.match.backtrack;
          } else {
            return null;
          }
        }
      } catch (e9204) {
        if (e9204 instanceof Error) {
          var e__4796__auto__ = e9204;
          if (e__4796__auto__ === cljs.core.match.backtrack) {
            return null;
          } else {
            throw e__4796__auto__;
          }
        } else {
          if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
            throw e9204;
          } else {
            return null;
          }
        }
      }
    }();
    if (cljs.core.truth_(temp__4090__auto__)) {
      var r__6471__auto__ = temp__4090__auto__;
      return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [function() {
        var or__3403__auto__ = cljs.core.first.call(null, r__6471__auto__);
        if (cljs.core.truth_(or__3403__auto__)) {
          return or__3403__auto__;
        } else {
          return state__6468__auto__;
        }
      }(), cljs.core.concat.call(null, cljs.core.next.call(null, r__6471__auto__), cljs.core.drop.call(null, 1, input__6469__auto__))], null);
    } else {
      return null;
    }
  };
  G__9207 = function(state__6468__auto__, input__6469__auto__) {
    switch(arguments.length) {
      case 0:
        return G__9207__0.call(this);
      case 2:
        return G__9207__2.call(this, state__6468__auto__, input__6469__auto__);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  return G__9207;
}());
termcat.rules.html.introduce_typographic_quotes = termcat.rewrite.abstraction.call(null, function() {
  var G__9217 = null;
  var G__9217__0 = function() {
    return new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "in-math-tag", "in-math-tag", 1739643503), false], null);
  };
  var G__9217__2 = function(state__6468__auto__, input__6469__auto__) {
    var padded_input__6470__auto__ = cljs.core.concat.call(null, input__6469__auto__, cljs.core.repeat.call(null, null));
    var vec__9208 = cljs.core.cons.call(null, state__6468__auto__, cljs.core.take.call(null, 1, padded_input__6470__auto__));
    var state = cljs.core.nth.call(null, vec__9208, 0, null);
    var t1 = cljs.core.nth.call(null, vec__9208, 1, null);
    var temp__4090__auto__ = function() {
      var ocr_9209 = clojure.core.reducers.reduce.call(null, cljs.core.conj, new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [state__6468__auto__], null), clojure.core.reducers.take.call(null, 1, clojure.core.reducers.map.call(null, termcat.term.tt, padded_input__6470__auto__)));
      try {
        if (cljs.core.vector_QMARK_.call(null, ocr_9209) && cljs.core.count.call(null, ocr_9209) === 2) {
          try {
            var ocr_9209_1__9214 = cljs.core.nth.call(null, ocr_9209, 1);
            if (cljs.core.keyword_identical_QMARK_.call(null, ocr_9209_1__9214, new cljs.core.Keyword(null, "left-quote", "left-quote", 2041480360))) {
              var length = cljs.core.count.call(null, [cljs.core.str(termcat.term.payload.call(null, t1))].join(""));
              var doublec = length / 2 | 0;
              var also_single = cljs.core.odd_QMARK_.call(null, cljs.core.mod.call(null, length, 2));
              return cljs.core.concat.call(null, new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [null], null), cljs.core.repeat.call(null, doublec, termcat.term.token.call(null, new cljs.core.Keyword(null, "default", "default", 2558708147), "\u201c")), also_single ? new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [termcat.term.token.call(null, new cljs.core.Keyword(null, "default", "default", 2558708147), "\u2018")], null) : null);
            } else {
              if (cljs.core.keyword_identical_QMARK_.call(null, ocr_9209_1__9214, new cljs.core.Keyword(null, "right-quote", "right-quote", 3807707901))) {
                var length = cljs.core.count.call(null, [cljs.core.str(termcat.term.payload.call(null, t1))].join(""));
                var doublec = length / 2 | 0;
                var also_single = cljs.core.odd_QMARK_.call(null, cljs.core.mod.call(null, length, 2));
                return cljs.core.concat.call(null, new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [null], null), also_single ? new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [termcat.term.token.call(null, new cljs.core.Keyword(null, "default", "default", 2558708147), "\u2019")], null) : null, cljs.core.repeat.call(null, doublec, termcat.term.token.call(null, new cljs.core.Keyword(null, "default", "default", 2558708147), "\u201d")));
              } else {
                if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
                  throw cljs.core.match.backtrack;
                } else {
                  return null;
                }
              }
            }
          } catch (e9216) {
            if (e9216 instanceof Error) {
              var e__4796__auto__ = e9216;
              if (e__4796__auto__ === cljs.core.match.backtrack) {
                throw cljs.core.match.backtrack;
              } else {
                throw e__4796__auto__;
              }
            } else {
              if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
                throw e9216;
              } else {
                return null;
              }
            }
          }
        } else {
          if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
            throw cljs.core.match.backtrack;
          } else {
            return null;
          }
        }
      } catch (e9215) {
        if (e9215 instanceof Error) {
          var e__4796__auto__ = e9215;
          if (e__4796__auto__ === cljs.core.match.backtrack) {
            return null;
          } else {
            throw e__4796__auto__;
          }
        } else {
          if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
            throw e9215;
          } else {
            return null;
          }
        }
      }
    }();
    if (cljs.core.truth_(temp__4090__auto__)) {
      var r__6471__auto__ = temp__4090__auto__;
      return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [function() {
        var or__3403__auto__ = cljs.core.first.call(null, r__6471__auto__);
        if (cljs.core.truth_(or__3403__auto__)) {
          return or__3403__auto__;
        } else {
          return state__6468__auto__;
        }
      }(), cljs.core.concat.call(null, cljs.core.next.call(null, r__6471__auto__), cljs.core.drop.call(null, 1, input__6469__auto__))], null);
    } else {
      return null;
    }
  };
  G__9217 = function(state__6468__auto__, input__6469__auto__) {
    switch(arguments.length) {
      case 0:
        return G__9217__0.call(this);
      case 2:
        return G__9217__2.call(this, state__6468__auto__, input__6469__auto__);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  return G__9217;
}());
termcat.rules.html.introduce_typographic_full_stops = termcat.rewrite.abstraction.call(null, function() {
  var G__9237 = null;
  var G__9237__0 = function() {
    return null;
  };
  var G__9237__2 = function(state__6468__auto__, input__6469__auto__) {
    var padded_input__6470__auto__ = cljs.core.concat.call(null, input__6469__auto__, cljs.core.repeat.call(null, null));
    var vec__9218 = cljs.core.cons.call(null, state__6468__auto__, cljs.core.take.call(null, 3, padded_input__6470__auto__));
    var state = cljs.core.nth.call(null, vec__9218, 0, null);
    var t1 = cljs.core.nth.call(null, vec__9218, 1, null);
    var t2 = cljs.core.nth.call(null, vec__9218, 2, null);
    var t3 = cljs.core.nth.call(null, vec__9218, 3, null);
    var temp__4090__auto__ = function() {
      var ocr_9219 = clojure.core.reducers.reduce.call(null, cljs.core.conj, new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [state__6468__auto__], null), clojure.core.reducers.take.call(null, 3, clojure.core.reducers.map.call(null, termcat.term.tt, padded_input__6470__auto__)));
      try {
        if (cljs.core.vector_QMARK_.call(null, ocr_9219) && cljs.core.count.call(null, ocr_9219) === 4) {
          try {
            var ocr_9219_1__9224 = cljs.core.nth.call(null, ocr_9219, 1);
            if (cljs.core.keyword_identical_QMARK_.call(null, ocr_9219_1__9224, new cljs.core.Keyword(null, "default", "default", 2558708147))) {
              try {
                var ocr_9219_2__9225 = cljs.core.nth.call(null, ocr_9219, 2);
                if (cljs.core.keyword_identical_QMARK_.call(null, ocr_9219_2__9225, new cljs.core.Keyword(null, "period", "period", 4317145395))) {
                  try {
                    var ocr_9219_3__9226 = cljs.core.nth.call(null, ocr_9219, 3);
                    if (cljs.core.keyword_identical_QMARK_.call(null, ocr_9219_3__9226, new cljs.core.Keyword(null, "whitespace", "whitespace", 1290815983))) {
                      if (cljs.core.truth_(function() {
                        var and__3391__auto__ = cljs.core._EQ_.call(null, termcat.term.payload.call(null, t2), ".");
                        if (and__3391__auto__) {
                          var or__3403__auto__ = termcat.term.block_QMARK_.call(null, t1);
                          if (or__3403__auto__) {
                            return or__3403__auto__;
                          } else {
                            return cljs.core.re_matches.call(null, /[^\\.]*/, [cljs.core.str(termcat.term.payload.call(null, t1))].join(""));
                          }
                        } else {
                          return and__3391__auto__;
                        }
                      }())) {
                        return new cljs.core.PersistentVector(null, 6, 5, cljs.core.PersistentVector.EMPTY_NODE, [null, t1, termcat.term.token.call(null, new cljs.core.Keyword(null, "html", "html", 1017117469), "\x3cspan class\x3d'wide_punctuation_mark'\x3e"), t2, termcat.term.token.call(null, new cljs.core.Keyword(null, "html", "html", 1017117469), "\x3c/span\x3e"), t3], null);
                      } else {
                        return null;
                      }
                    } else {
                      if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
                        throw cljs.core.match.backtrack;
                      } else {
                        return null;
                      }
                    }
                  } catch (e9236) {
                    if (e9236 instanceof Error) {
                      var e__4796__auto__ = e9236;
                      if (e__4796__auto__ === cljs.core.match.backtrack) {
                        throw cljs.core.match.backtrack;
                      } else {
                        throw e__4796__auto__;
                      }
                    } else {
                      if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
                        throw e9236;
                      } else {
                        return null;
                      }
                    }
                  }
                } else {
                  if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
                    throw cljs.core.match.backtrack;
                  } else {
                    return null;
                  }
                }
              } catch (e9235) {
                if (e9235 instanceof Error) {
                  var e__4796__auto__ = e9235;
                  if (e__4796__auto__ === cljs.core.match.backtrack) {
                    throw cljs.core.match.backtrack;
                  } else {
                    throw e__4796__auto__;
                  }
                } else {
                  if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
                    throw e9235;
                  } else {
                    return null;
                  }
                }
              }
            } else {
              if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
                throw cljs.core.match.backtrack;
              } else {
                return null;
              }
            }
          } catch (e9230) {
            if (e9230 instanceof Error) {
              var e__4796__auto__ = e9230;
              if (e__4796__auto__ === cljs.core.match.backtrack) {
                try {
                  var ocr_9219_1__9224 = cljs.core.nth.call(null, ocr_9219, 1);
                  if (cljs.core.vector_QMARK_.call(null, ocr_9219_1__9224) && cljs.core.count.call(null, ocr_9219_1__9224) === 2) {
                    try {
                      var ocr_9219_1__9224_0__9227 = cljs.core.nth.call(null, ocr_9219_1__9224, 0);
                      if (cljs.core.keyword_identical_QMARK_.call(null, ocr_9219_1__9224_0__9227, new cljs.core.Keyword(null, "block", "block", 1107736575))) {
                        try {
                          var ocr_9219_2__9225 = cljs.core.nth.call(null, ocr_9219, 2);
                          if (cljs.core.keyword_identical_QMARK_.call(null, ocr_9219_2__9225, new cljs.core.Keyword(null, "period", "period", 4317145395))) {
                            try {
                              var ocr_9219_3__9226 = cljs.core.nth.call(null, ocr_9219, 3);
                              if (cljs.core.keyword_identical_QMARK_.call(null, ocr_9219_3__9226, new cljs.core.Keyword(null, "whitespace", "whitespace", 1290815983))) {
                                if (cljs.core.truth_(function() {
                                  var and__3391__auto__ = cljs.core._EQ_.call(null, termcat.term.payload.call(null, t2), ".");
                                  if (and__3391__auto__) {
                                    var or__3403__auto__ = termcat.term.block_QMARK_.call(null, t1);
                                    if (or__3403__auto__) {
                                      return or__3403__auto__;
                                    } else {
                                      return cljs.core.re_matches.call(null, /[^\\.]*/, [cljs.core.str(termcat.term.payload.call(null, t1))].join(""));
                                    }
                                  } else {
                                    return and__3391__auto__;
                                  }
                                }())) {
                                  return new cljs.core.PersistentVector(null, 6, 5, cljs.core.PersistentVector.EMPTY_NODE, [null, t1, termcat.term.token.call(null, new cljs.core.Keyword(null, "html", "html", 1017117469), "\x3cspan class\x3d'wide_punctuation_mark'\x3e"), t2, termcat.term.token.call(null, new cljs.core.Keyword(null, "html", "html", 1017117469), "\x3c/span\x3e"), t3], null);
                                } else {
                                  return null;
                                }
                              } else {
                                if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
                                  throw cljs.core.match.backtrack;
                                } else {
                                  return null;
                                }
                              }
                            } catch (e9234) {
                              if (e9234 instanceof Error) {
                                var e__4796__auto____$1 = e9234;
                                if (e__4796__auto____$1 === cljs.core.match.backtrack) {
                                  throw cljs.core.match.backtrack;
                                } else {
                                  throw e__4796__auto____$1;
                                }
                              } else {
                                if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
                                  throw e9234;
                                } else {
                                  return null;
                                }
                              }
                            }
                          } else {
                            if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
                              throw cljs.core.match.backtrack;
                            } else {
                              return null;
                            }
                          }
                        } catch (e9233) {
                          if (e9233 instanceof Error) {
                            var e__4796__auto____$1 = e9233;
                            if (e__4796__auto____$1 === cljs.core.match.backtrack) {
                              throw cljs.core.match.backtrack;
                            } else {
                              throw e__4796__auto____$1;
                            }
                          } else {
                            if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
                              throw e9233;
                            } else {
                              return null;
                            }
                          }
                        }
                      } else {
                        if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
                          throw cljs.core.match.backtrack;
                        } else {
                          return null;
                        }
                      }
                    } catch (e9232) {
                      if (e9232 instanceof Error) {
                        var e__4796__auto____$1 = e9232;
                        if (e__4796__auto____$1 === cljs.core.match.backtrack) {
                          throw cljs.core.match.backtrack;
                        } else {
                          throw e__4796__auto____$1;
                        }
                      } else {
                        if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
                          throw e9232;
                        } else {
                          return null;
                        }
                      }
                    }
                  } else {
                    if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
                      throw cljs.core.match.backtrack;
                    } else {
                      return null;
                    }
                  }
                } catch (e9231) {
                  if (e9231 instanceof Error) {
                    var e__4796__auto____$1 = e9231;
                    if (e__4796__auto____$1 === cljs.core.match.backtrack) {
                      throw cljs.core.match.backtrack;
                    } else {
                      throw e__4796__auto____$1;
                    }
                  } else {
                    if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
                      throw e9231;
                    } else {
                      return null;
                    }
                  }
                }
              } else {
                throw e__4796__auto__;
              }
            } else {
              if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
                throw e9230;
              } else {
                return null;
              }
            }
          }
        } else {
          if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
            throw cljs.core.match.backtrack;
          } else {
            return null;
          }
        }
      } catch (e9229) {
        if (e9229 instanceof Error) {
          var e__4796__auto__ = e9229;
          if (e__4796__auto__ === cljs.core.match.backtrack) {
            return null;
          } else {
            throw e__4796__auto__;
          }
        } else {
          if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
            throw e9229;
          } else {
            return null;
          }
        }
      }
    }();
    if (cljs.core.truth_(temp__4090__auto__)) {
      var r__6471__auto__ = temp__4090__auto__;
      return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [function() {
        var or__3403__auto__ = cljs.core.first.call(null, r__6471__auto__);
        if (cljs.core.truth_(or__3403__auto__)) {
          return or__3403__auto__;
        } else {
          return state__6468__auto__;
        }
      }(), cljs.core.concat.call(null, cljs.core.next.call(null, r__6471__auto__), cljs.core.drop.call(null, 3, input__6469__auto__))], null);
    } else {
      return null;
    }
  };
  G__9237 = function(state__6468__auto__, input__6469__auto__) {
    switch(arguments.length) {
      case 0:
        return G__9237__0.call(this);
      case 2:
        return G__9237__2.call(this, state__6468__auto__, input__6469__auto__);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  return G__9237;
}());
termcat.rules.html.introduce_typographic_colons = termcat.rewrite.abstraction.call(null, function() {
  var G__9261 = null;
  var G__9261__0 = function() {
    return null;
  };
  var G__9261__2 = function(state__6468__auto__, input__6469__auto__) {
    var padded_input__6470__auto__ = cljs.core.concat.call(null, input__6469__auto__, cljs.core.repeat.call(null, null));
    var vec__9238 = cljs.core.cons.call(null, state__6468__auto__, cljs.core.take.call(null, 3, padded_input__6470__auto__));
    var state = cljs.core.nth.call(null, vec__9238, 0, null);
    var t1 = cljs.core.nth.call(null, vec__9238, 1, null);
    var t2 = cljs.core.nth.call(null, vec__9238, 2, null);
    var t3 = cljs.core.nth.call(null, vec__9238, 3, null);
    var temp__4090__auto__ = function() {
      var ocr_9239 = clojure.core.reducers.reduce.call(null, cljs.core.conj, new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [state__6468__auto__], null), clojure.core.reducers.take.call(null, 3, clojure.core.reducers.map.call(null, termcat.term.tt, padded_input__6470__auto__)));
      try {
        if (cljs.core.vector_QMARK_.call(null, ocr_9239) && cljs.core.count.call(null, ocr_9239) === 4) {
          try {
            var ocr_9239_1__9244 = cljs.core.nth.call(null, ocr_9239, 1);
            if (cljs.core.keyword_identical_QMARK_.call(null, ocr_9239_1__9244, new cljs.core.Keyword(null, "default", "default", 2558708147))) {
              try {
                var ocr_9239_2__9245 = cljs.core.nth.call(null, ocr_9239, 2);
                if (cljs.core.keyword_identical_QMARK_.call(null, ocr_9239_2__9245, new cljs.core.Keyword(null, "colon", "colon", 1108746961))) {
                  try {
                    var ocr_9239_3__9246 = cljs.core.nth.call(null, ocr_9239, 3);
                    if (cljs.core.keyword_identical_QMARK_.call(null, ocr_9239_3__9246, new cljs.core.Keyword(null, "whitespace", "whitespace", 1290815983))) {
                      return new cljs.core.PersistentVector(null, 6, 5, cljs.core.PersistentVector.EMPTY_NODE, [null, t1, termcat.term.token.call(null, new cljs.core.Keyword(null, "html", "html", 1017117469), "\x3cspan class\x3d'wide_punctuation_mark'\x3e"), t2, termcat.term.token.call(null, new cljs.core.Keyword(null, "html", "html", 1017117469), "\x3c/span\x3e"), t3], null);
                    } else {
                      if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
                        throw cljs.core.match.backtrack;
                      } else {
                        return null;
                      }
                    }
                  } catch (e9258) {
                    if (e9258 instanceof Error) {
                      var e__4796__auto__ = e9258;
                      if (e__4796__auto__ === cljs.core.match.backtrack) {
                        throw cljs.core.match.backtrack;
                      } else {
                        throw e__4796__auto__;
                      }
                    } else {
                      if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
                        throw e9258;
                      } else {
                        return null;
                      }
                    }
                  }
                } else {
                  if (cljs.core.keyword_identical_QMARK_.call(null, ocr_9239_2__9245, new cljs.core.Keyword(null, "bang", "bang", 1016920490))) {
                    try {
                      var ocr_9239_3__9246 = cljs.core.nth.call(null, ocr_9239, 3);
                      if (cljs.core.keyword_identical_QMARK_.call(null, ocr_9239_3__9246, new cljs.core.Keyword(null, "whitespace", "whitespace", 1290815983))) {
                        return new cljs.core.PersistentVector(null, 6, 5, cljs.core.PersistentVector.EMPTY_NODE, [null, t1, termcat.term.token.call(null, new cljs.core.Keyword(null, "html", "html", 1017117469), "\x3cspan class\x3d'wide_punctuation_mark'\x3e"), t2, termcat.term.token.call(null, new cljs.core.Keyword(null, "html", "html", 1017117469), "\x3c/span\x3e"), t3], null);
                      } else {
                        if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
                          throw cljs.core.match.backtrack;
                        } else {
                          return null;
                        }
                      }
                    } catch (e9259) {
                      if (e9259 instanceof Error) {
                        var e__4796__auto__ = e9259;
                        if (e__4796__auto__ === cljs.core.match.backtrack) {
                          throw cljs.core.match.backtrack;
                        } else {
                          throw e__4796__auto__;
                        }
                      } else {
                        if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
                          throw e9259;
                        } else {
                          return null;
                        }
                      }
                    }
                  } else {
                    if (cljs.core.keyword_identical_QMARK_.call(null, ocr_9239_2__9245, new cljs.core.Keyword(null, "question-mark", "question-mark", 4232142790))) {
                      try {
                        var ocr_9239_3__9246 = cljs.core.nth.call(null, ocr_9239, 3);
                        if (cljs.core.keyword_identical_QMARK_.call(null, ocr_9239_3__9246, new cljs.core.Keyword(null, "whitespace", "whitespace", 1290815983))) {
                          return new cljs.core.PersistentVector(null, 6, 5, cljs.core.PersistentVector.EMPTY_NODE, [null, t1, termcat.term.token.call(null, new cljs.core.Keyword(null, "html", "html", 1017117469), "\x3cspan class\x3d'wide_punctuation_mark'\x3e"), t2, termcat.term.token.call(null, new cljs.core.Keyword(null, "html", "html", 1017117469), "\x3c/span\x3e"), t3], null);
                        } else {
                          if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
                            throw cljs.core.match.backtrack;
                          } else {
                            return null;
                          }
                        }
                      } catch (e9260) {
                        if (e9260 instanceof Error) {
                          var e__4796__auto__ = e9260;
                          if (e__4796__auto__ === cljs.core.match.backtrack) {
                            throw cljs.core.match.backtrack;
                          } else {
                            throw e__4796__auto__;
                          }
                        } else {
                          if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
                            throw e9260;
                          } else {
                            return null;
                          }
                        }
                      }
                    } else {
                      if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
                        throw cljs.core.match.backtrack;
                      } else {
                        return null;
                      }
                    }
                  }
                }
              } catch (e9257) {
                if (e9257 instanceof Error) {
                  var e__4796__auto__ = e9257;
                  if (e__4796__auto__ === cljs.core.match.backtrack) {
                    throw cljs.core.match.backtrack;
                  } else {
                    throw e__4796__auto__;
                  }
                } else {
                  if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
                    throw e9257;
                  } else {
                    return null;
                  }
                }
              }
            } else {
              if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
                throw cljs.core.match.backtrack;
              } else {
                return null;
              }
            }
          } catch (e9250) {
            if (e9250 instanceof Error) {
              var e__4796__auto__ = e9250;
              if (e__4796__auto__ === cljs.core.match.backtrack) {
                try {
                  var ocr_9239_1__9244 = cljs.core.nth.call(null, ocr_9239, 1);
                  if (cljs.core.vector_QMARK_.call(null, ocr_9239_1__9244) && cljs.core.count.call(null, ocr_9239_1__9244) === 2) {
                    try {
                      var ocr_9239_1__9244_0__9247 = cljs.core.nth.call(null, ocr_9239_1__9244, 0);
                      if (cljs.core.keyword_identical_QMARK_.call(null, ocr_9239_1__9244_0__9247, new cljs.core.Keyword(null, "block", "block", 1107736575))) {
                        try {
                          var ocr_9239_2__9245 = cljs.core.nth.call(null, ocr_9239, 2);
                          if (cljs.core.keyword_identical_QMARK_.call(null, ocr_9239_2__9245, new cljs.core.Keyword(null, "colon", "colon", 1108746961))) {
                            try {
                              var ocr_9239_3__9246 = cljs.core.nth.call(null, ocr_9239, 3);
                              if (cljs.core.keyword_identical_QMARK_.call(null, ocr_9239_3__9246, new cljs.core.Keyword(null, "whitespace", "whitespace", 1290815983))) {
                                return new cljs.core.PersistentVector(null, 6, 5, cljs.core.PersistentVector.EMPTY_NODE, [null, t1, termcat.term.token.call(null, new cljs.core.Keyword(null, "html", "html", 1017117469), "\x3cspan class\x3d'wide_punctuation_mark'\x3e"), t2, termcat.term.token.call(null, new cljs.core.Keyword(null, "html", "html", 1017117469), "\x3c/span\x3e"), t3], null);
                              } else {
                                if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
                                  throw cljs.core.match.backtrack;
                                } else {
                                  return null;
                                }
                              }
                            } catch (e9254) {
                              if (e9254 instanceof Error) {
                                var e__4796__auto____$1 = e9254;
                                if (e__4796__auto____$1 === cljs.core.match.backtrack) {
                                  throw cljs.core.match.backtrack;
                                } else {
                                  throw e__4796__auto____$1;
                                }
                              } else {
                                if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
                                  throw e9254;
                                } else {
                                  return null;
                                }
                              }
                            }
                          } else {
                            if (cljs.core.keyword_identical_QMARK_.call(null, ocr_9239_2__9245, new cljs.core.Keyword(null, "bang", "bang", 1016920490))) {
                              try {
                                var ocr_9239_3__9246 = cljs.core.nth.call(null, ocr_9239, 3);
                                if (cljs.core.keyword_identical_QMARK_.call(null, ocr_9239_3__9246, new cljs.core.Keyword(null, "whitespace", "whitespace", 1290815983))) {
                                  return new cljs.core.PersistentVector(null, 6, 5, cljs.core.PersistentVector.EMPTY_NODE, [null, t1, termcat.term.token.call(null, new cljs.core.Keyword(null, "html", "html", 1017117469), "\x3cspan class\x3d'wide_punctuation_mark'\x3e"), t2, termcat.term.token.call(null, new cljs.core.Keyword(null, "html", "html", 1017117469), "\x3c/span\x3e"), t3], null);
                                } else {
                                  if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
                                    throw cljs.core.match.backtrack;
                                  } else {
                                    return null;
                                  }
                                }
                              } catch (e9255) {
                                if (e9255 instanceof Error) {
                                  var e__4796__auto____$1 = e9255;
                                  if (e__4796__auto____$1 === cljs.core.match.backtrack) {
                                    throw cljs.core.match.backtrack;
                                  } else {
                                    throw e__4796__auto____$1;
                                  }
                                } else {
                                  if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
                                    throw e9255;
                                  } else {
                                    return null;
                                  }
                                }
                              }
                            } else {
                              if (cljs.core.keyword_identical_QMARK_.call(null, ocr_9239_2__9245, new cljs.core.Keyword(null, "question-mark", "question-mark", 4232142790))) {
                                try {
                                  var ocr_9239_3__9246 = cljs.core.nth.call(null, ocr_9239, 3);
                                  if (cljs.core.keyword_identical_QMARK_.call(null, ocr_9239_3__9246, new cljs.core.Keyword(null, "whitespace", "whitespace", 1290815983))) {
                                    return new cljs.core.PersistentVector(null, 6, 5, cljs.core.PersistentVector.EMPTY_NODE, [null, t1, termcat.term.token.call(null, new cljs.core.Keyword(null, "html", "html", 1017117469), "\x3cspan class\x3d'wide_punctuation_mark'\x3e"), t2, termcat.term.token.call(null, new cljs.core.Keyword(null, "html", "html", 1017117469), "\x3c/span\x3e"), t3], null);
                                  } else {
                                    if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
                                      throw cljs.core.match.backtrack;
                                    } else {
                                      return null;
                                    }
                                  }
                                } catch (e9256) {
                                  if (e9256 instanceof Error) {
                                    var e__4796__auto____$1 = e9256;
                                    if (e__4796__auto____$1 === cljs.core.match.backtrack) {
                                      throw cljs.core.match.backtrack;
                                    } else {
                                      throw e__4796__auto____$1;
                                    }
                                  } else {
                                    if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
                                      throw e9256;
                                    } else {
                                      return null;
                                    }
                                  }
                                }
                              } else {
                                if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
                                  throw cljs.core.match.backtrack;
                                } else {
                                  return null;
                                }
                              }
                            }
                          }
                        } catch (e9253) {
                          if (e9253 instanceof Error) {
                            var e__4796__auto____$1 = e9253;
                            if (e__4796__auto____$1 === cljs.core.match.backtrack) {
                              throw cljs.core.match.backtrack;
                            } else {
                              throw e__4796__auto____$1;
                            }
                          } else {
                            if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
                              throw e9253;
                            } else {
                              return null;
                            }
                          }
                        }
                      } else {
                        if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
                          throw cljs.core.match.backtrack;
                        } else {
                          return null;
                        }
                      }
                    } catch (e9252) {
                      if (e9252 instanceof Error) {
                        var e__4796__auto____$1 = e9252;
                        if (e__4796__auto____$1 === cljs.core.match.backtrack) {
                          throw cljs.core.match.backtrack;
                        } else {
                          throw e__4796__auto____$1;
                        }
                      } else {
                        if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
                          throw e9252;
                        } else {
                          return null;
                        }
                      }
                    }
                  } else {
                    if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
                      throw cljs.core.match.backtrack;
                    } else {
                      return null;
                    }
                  }
                } catch (e9251) {
                  if (e9251 instanceof Error) {
                    var e__4796__auto____$1 = e9251;
                    if (e__4796__auto____$1 === cljs.core.match.backtrack) {
                      throw cljs.core.match.backtrack;
                    } else {
                      throw e__4796__auto____$1;
                    }
                  } else {
                    if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
                      throw e9251;
                    } else {
                      return null;
                    }
                  }
                }
              } else {
                throw e__4796__auto__;
              }
            } else {
              if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
                throw e9250;
              } else {
                return null;
              }
            }
          }
        } else {
          if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
            throw cljs.core.match.backtrack;
          } else {
            return null;
          }
        }
      } catch (e9249) {
        if (e9249 instanceof Error) {
          var e__4796__auto__ = e9249;
          if (e__4796__auto__ === cljs.core.match.backtrack) {
            return null;
          } else {
            throw e__4796__auto__;
          }
        } else {
          if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
            throw e9249;
          } else {
            return null;
          }
        }
      }
    }();
    if (cljs.core.truth_(temp__4090__auto__)) {
      var r__6471__auto__ = temp__4090__auto__;
      return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [function() {
        var or__3403__auto__ = cljs.core.first.call(null, r__6471__auto__);
        if (cljs.core.truth_(or__3403__auto__)) {
          return or__3403__auto__;
        } else {
          return state__6468__auto__;
        }
      }(), cljs.core.concat.call(null, cljs.core.next.call(null, r__6471__auto__), cljs.core.drop.call(null, 3, input__6469__auto__))], null);
    } else {
      return null;
    }
  };
  G__9261 = function(state__6468__auto__, input__6469__auto__) {
    switch(arguments.length) {
      case 0:
        return G__9261__0.call(this);
      case 2:
        return G__9261__2.call(this, state__6468__auto__, input__6469__auto__);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  return G__9261;
}());
termcat.rules.html.remove_error_tokens = termcat.rewrite.abstraction.call(null, function() {
  var G__9270 = null;
  var G__9270__0 = function() {
    return null;
  };
  var G__9270__2 = function(state__6468__auto__, input__6469__auto__) {
    var padded_input__6470__auto__ = cljs.core.concat.call(null, input__6469__auto__, cljs.core.repeat.call(null, null));
    var vec__9262 = cljs.core.cons.call(null, state__6468__auto__, cljs.core.take.call(null, 1, padded_input__6470__auto__));
    var state = cljs.core.nth.call(null, vec__9262, 0, null);
    var t1 = cljs.core.nth.call(null, vec__9262, 1, null);
    var temp__4090__auto__ = function() {
      var ocr_9263 = clojure.core.reducers.reduce.call(null, cljs.core.conj, new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [state__6468__auto__], null), clojure.core.reducers.take.call(null, 1, clojure.core.reducers.map.call(null, termcat.term.tt, padded_input__6470__auto__)));
      try {
        if (cljs.core.vector_QMARK_.call(null, ocr_9263) && cljs.core.count.call(null, ocr_9263) === 2) {
          try {
            var ocr_9263_1__9267 = cljs.core.nth.call(null, ocr_9263, 1);
            if (cljs.core.keyword_identical_QMARK_.call(null, ocr_9263_1__9267, new cljs.core.Keyword(null, "error", "error", 1110689146))) {
              return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [null, termcat.util.math.math_block.call(null, termcat.term.fragment.call(null, termcat.term.token.call(null, new cljs.core.Keyword(null, "default", "default", 2558708147), termcat.term.payload.call(null, t1))), new cljs.core.Keyword(null, "error", "error", 1110689146))], null);
            } else {
              if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
                throw cljs.core.match.backtrack;
              } else {
                return null;
              }
            }
          } catch (e9269) {
            if (e9269 instanceof Error) {
              var e__4796__auto__ = e9269;
              if (e__4796__auto__ === cljs.core.match.backtrack) {
                throw cljs.core.match.backtrack;
              } else {
                throw e__4796__auto__;
              }
            } else {
              if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
                throw e9269;
              } else {
                return null;
              }
            }
          }
        } else {
          if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
            throw cljs.core.match.backtrack;
          } else {
            return null;
          }
        }
      } catch (e9268) {
        if (e9268 instanceof Error) {
          var e__4796__auto__ = e9268;
          if (e__4796__auto__ === cljs.core.match.backtrack) {
            return null;
          } else {
            throw e__4796__auto__;
          }
        } else {
          if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
            throw e9268;
          } else {
            return null;
          }
        }
      }
    }();
    if (cljs.core.truth_(temp__4090__auto__)) {
      var r__6471__auto__ = temp__4090__auto__;
      return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [function() {
        var or__3403__auto__ = cljs.core.first.call(null, r__6471__auto__);
        if (cljs.core.truth_(or__3403__auto__)) {
          return or__3403__auto__;
        } else {
          return state__6468__auto__;
        }
      }(), cljs.core.concat.call(null, cljs.core.next.call(null, r__6471__auto__), cljs.core.drop.call(null, 1, input__6469__auto__))], null);
    } else {
      return null;
    }
  };
  G__9270 = function(state__6468__auto__, input__6469__auto__) {
    switch(arguments.length) {
      case 0:
        return G__9270__0.call(this);
      case 2:
        return G__9270__2.call(this, state__6468__auto__, input__6469__auto__);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  return G__9270;
}());
termcat.rules.html.wrap_math_block = function wrap_math_block(t, props) {
  var tag_name = function() {
    var pred__9291 = function(p1__9272_SHARP_, p2__9271_SHARP_) {
      return cljs.core.contains_QMARK_.call(null, p2__9271_SHARP_, p1__9272_SHARP_);
    };
    var expr__9292 = props;
    if (pred__9291.call(null, new cljs.core.Keyword(null, "mo", "mo", 1013907732), expr__9292)) {
      return "mo";
    } else {
      if (pred__9291.call(null, new cljs.core.Keyword(null, "mi", "mi", 1013907726), expr__9292)) {
        return "mi";
      } else {
        if (pred__9291.call(null, new cljs.core.Keyword(null, "mn", "mn", 1013907731), expr__9292)) {
          return "mn";
        } else {
          return null;
        }
      }
    }
  }();
  return cljs.core.concat.call(null, new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [termcat.term.token.call(null, new cljs.core.Keyword(null, "open-math", "open-math", 2513851421)), termcat.term.token.call(null, new cljs.core.Keyword(null, "html", "html", 1017117469), [cljs.core.str("\x3c"), cljs.core.str(tag_name), cljs.core.str(cljs.core.contains_QMARK_.call(null, props, new cljs.core.Keyword(null, "script", "script", 4401185853)) ? " mathvariant\x3dscript" : 
  null), cljs.core.str(function() {
    var pred__9294 = function(p1__9274_SHARP_, p2__9273_SHARP_) {
      return cljs.core.contains_QMARK_.call(null, p2__9273_SHARP_, p1__9274_SHARP_);
    };
    var expr__9295 = props;
    if (pred__9294.call(null, new cljs.core.Keyword(null, "prefix", "prefix", 4328760836), expr__9295)) {
      return " form\x3dprefix lspace\x3d0em";
    } else {
      if (pred__9294.call(null, new cljs.core.Keyword(null, "infix", "infix", 1114252354), expr__9295)) {
        return " form\x3dinfix";
      } else {
        if (pred__9294.call(null, new cljs.core.Keyword(null, "postfix", "postfix", 622699239), expr__9295)) {
          return " form\x3dpostfix rspace\x3d0em";
        } else {
          return null;
        }
      }
    }
  }()), cljs.core.str(function() {
    var pred__9297 = function(p1__9276_SHARP_, p2__9275_SHARP_) {
      return cljs.core.contains_QMARK_.call(null, p2__9275_SHARP_, p1__9276_SHARP_);
    };
    var expr__9298 = props;
    if (pred__9297.call(null, new cljs.core.Keyword(null, "wide-left", "wide-left", 4774122035), expr__9298)) {
      return " lspace\x3dveryverythickmathspace";
    } else {
      if (pred__9297.call(null, new cljs.core.Keyword(null, "normal-left", "normal-left", 706343071), expr__9298)) {
        return " lspace\x3dthickmathspace";
      } else {
        return null;
      }
    }
  }()), cljs.core.str(function() {
    var pred__9300 = function(p1__9278_SHARP_, p2__9277_SHARP_) {
      return cljs.core.contains_QMARK_.call(null, p2__9277_SHARP_, p1__9278_SHARP_);
    };
    var expr__9301 = props;
    if (pred__9300.call(null, new cljs.core.Keyword(null, "wide-right", "wide-right", 1622199828), expr__9301)) {
      return " rspace\x3dveryverythickmathspace";
    } else {
      if (pred__9300.call(null, new cljs.core.Keyword(null, "normal-right", "normal-right", 4370070824), expr__9301)) {
        return " rspace\x3dthickmathspace";
      } else {
        return null;
      }
    }
  }()), cljs.core.str("\x3e")].join("")), termcat.term.token.call(null, new cljs.core.Keyword(null, "already-math", "already-math", 4669760207))], null), termcat.rewrite.unwrap.call(null, t), new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [termcat.term.token.call(null, new cljs.core.Keyword(null, "still-math", "still-math", 3487826815)), termcat.term.token.call(null, new cljs.core.Keyword(null, "html", "html", 1017117469), [cljs.core.str("\x3c"), cljs.core.str("/"), 
  cljs.core.str(tag_name), cljs.core.str("\x3e")].join("")), termcat.term.token.call(null, new cljs.core.Keyword(null, "close-math", "close-math", 3200923951))], null));
};
termcat.rules.html.introduce_inner_math_tags = termcat.rewrite.abstraction.call(null, function() {
  var G__9343 = null;
  var G__9343__0 = function() {
    return null;
  };
  var G__9343__2 = function(state__6468__auto__, input__6469__auto__) {
    var padded_input__6470__auto__ = cljs.core.concat.call(null, input__6469__auto__, cljs.core.repeat.call(null, null));
    var vec__9303 = cljs.core.cons.call(null, state__6468__auto__, cljs.core.take.call(null, 1, padded_input__6470__auto__));
    var state = cljs.core.nth.call(null, vec__9303, 0, null);
    var t1 = cljs.core.nth.call(null, vec__9303, 1, null);
    var temp__4090__auto__ = function() {
      var ocr_9304 = clojure.core.reducers.reduce.call(null, cljs.core.conj, new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [state__6468__auto__], null), clojure.core.reducers.take.call(null, 1, clojure.core.reducers.map.call(null, termcat.term.tt, padded_input__6470__auto__)));
      try {
        if (cljs.core.vector_QMARK_.call(null, ocr_9304) && cljs.core.count.call(null, ocr_9304) === 2) {
          try {
            var ocr_9304_1__9322 = cljs.core.nth.call(null, ocr_9304, 1);
            if (cljs.core.vector_QMARK_.call(null, ocr_9304_1__9322) && cljs.core.count.call(null, ocr_9304_1__9322) === 2) {
              try {
                var ocr_9304_1__9322_0__9323 = cljs.core.nth.call(null, ocr_9304_1__9322, 0);
                if (cljs.core.keyword_identical_QMARK_.call(null, ocr_9304_1__9322_0__9323, new cljs.core.Keyword(null, "block", "block", 1107736575))) {
                  try {
                    var ocr_9304_1__9322_1__9324 = cljs.core.nth.call(null, ocr_9304_1__9322, 1);
                    if (cljs.core.truth_((new cljs.core.Keyword(null, "text", "text", 1017460895)).cljs$core$IFn$_invoke$arity$1(ocr_9304_1__9322_1__9324))) {
                      return null;
                    } else {
                      if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
                        throw cljs.core.match.backtrack;
                      } else {
                        return null;
                      }
                    }
                  } catch (e9342) {
                    if (e9342 instanceof Error) {
                      var e__4796__auto__ = e9342;
                      if (e__4796__auto__ === cljs.core.match.backtrack) {
                        throw cljs.core.match.backtrack;
                      } else {
                        throw e__4796__auto__;
                      }
                    } else {
                      if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
                        throw e9342;
                      } else {
                        return null;
                      }
                    }
                  }
                } else {
                  if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
                    throw cljs.core.match.backtrack;
                  } else {
                    return null;
                  }
                }
              } catch (e9327) {
                if (e9327 instanceof Error) {
                  var e__4796__auto__ = e9327;
                  if (e__4796__auto__ === cljs.core.match.backtrack) {
                    try {
                      var ocr_9304_1__9322_0__9323 = cljs.core.nth.call(null, ocr_9304_1__9322, 0);
                      if (cljs.core.keyword_identical_QMARK_.call(null, ocr_9304_1__9322_0__9323, new cljs.core.Keyword(null, "block", "block", 1107736575))) {
                        try {
                          var ocr_9304_1__9322_1__9324 = cljs.core.nth.call(null, ocr_9304_1__9322, 1);
                          if (cljs.core.truth_((new cljs.core.Keyword(null, "error", "error", 1110689146)).cljs$core$IFn$_invoke$arity$1(ocr_9304_1__9322_1__9324))) {
                            return cljs.core.concat.call(null, new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [null, termcat.term.token.call(null, new cljs.core.Keyword(null, "open-math", "open-math", 2513851421)), termcat.term.token.call(null, new cljs.core.Keyword(null, "html", "html", 1017117469), "\x3cmerror\x3e"), termcat.term.token.call(null, new cljs.core.Keyword(null, "html", "html", 1017117469), "\x3cmtext\x3e")], null), termcat.rewrite.unwrap.call(null, 
                            t1), new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [termcat.term.token.call(null, new cljs.core.Keyword(null, "html", "html", 1017117469), "\x3c/mtext\x3e"), termcat.term.token.call(null, new cljs.core.Keyword(null, "html", "html", 1017117469), "\x3c/merror\x3e"), termcat.term.token.call(null, new cljs.core.Keyword(null, "close-math", "close-math", 3200923951))], null));
                          } else {
                            if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
                              throw cljs.core.match.backtrack;
                            } else {
                              return null;
                            }
                          }
                        } catch (e9341) {
                          if (e9341 instanceof Error) {
                            var e__4796__auto____$1 = e9341;
                            if (e__4796__auto____$1 === cljs.core.match.backtrack) {
                              throw cljs.core.match.backtrack;
                            } else {
                              throw e__4796__auto____$1;
                            }
                          } else {
                            if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
                              throw e9341;
                            } else {
                              return null;
                            }
                          }
                        }
                      } else {
                        if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
                          throw cljs.core.match.backtrack;
                        } else {
                          return null;
                        }
                      }
                    } catch (e9328) {
                      if (e9328 instanceof Error) {
                        var e__4796__auto____$1 = e9328;
                        if (e__4796__auto____$1 === cljs.core.match.backtrack) {
                          try {
                            var ocr_9304_1__9322_0__9323 = cljs.core.nth.call(null, ocr_9304_1__9322, 0);
                            if (cljs.core.keyword_identical_QMARK_.call(null, ocr_9304_1__9322_0__9323, new cljs.core.Keyword(null, "block", "block", 1107736575))) {
                              try {
                                var ocr_9304_1__9322_1__9324 = cljs.core.nth.call(null, ocr_9304_1__9322, 1);
                                if (cljs.core.truth_((new cljs.core.Keyword(null, "msup", "msup", 1017265715)).cljs$core$IFn$_invoke$arity$1(ocr_9304_1__9322_1__9324))) {
                                  return cljs.core.concat.call(null, new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [null, termcat.term.token.call(null, new cljs.core.Keyword(null, "open-math", "open-math", 2513851421)), termcat.term.token.call(null, new cljs.core.Keyword(null, "html", "html", 1017117469), "\x3cmsup\x3e"), termcat.term.token.call(null, new cljs.core.Keyword(null, "already-math", "already-math", 4669760207))], null), termcat.rewrite.unwrap.call(null, 
                                  t1), new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [termcat.term.token.call(null, new cljs.core.Keyword(null, "still-math", "still-math", 3487826815)), termcat.term.token.call(null, new cljs.core.Keyword(null, "html", "html", 1017117469), "\x3c/msup\x3e"), termcat.term.token.call(null, new cljs.core.Keyword(null, "close-math", "close-math", 3200923951))], null));
                                } else {
                                  if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
                                    throw cljs.core.match.backtrack;
                                  } else {
                                    return null;
                                  }
                                }
                              } catch (e9340) {
                                if (e9340 instanceof Error) {
                                  var e__4796__auto____$2 = e9340;
                                  if (e__4796__auto____$2 === cljs.core.match.backtrack) {
                                    throw cljs.core.match.backtrack;
                                  } else {
                                    throw e__4796__auto____$2;
                                  }
                                } else {
                                  if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
                                    throw e9340;
                                  } else {
                                    return null;
                                  }
                                }
                              }
                            } else {
                              if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
                                throw cljs.core.match.backtrack;
                              } else {
                                return null;
                              }
                            }
                          } catch (e9329) {
                            if (e9329 instanceof Error) {
                              var e__4796__auto____$2 = e9329;
                              if (e__4796__auto____$2 === cljs.core.match.backtrack) {
                                try {
                                  var ocr_9304_1__9322_0__9323 = cljs.core.nth.call(null, ocr_9304_1__9322, 0);
                                  if (cljs.core.keyword_identical_QMARK_.call(null, ocr_9304_1__9322_0__9323, new cljs.core.Keyword(null, "block", "block", 1107736575))) {
                                    try {
                                      var ocr_9304_1__9322_1__9324 = cljs.core.nth.call(null, ocr_9304_1__9322, 1);
                                      if (cljs.core.truth_((new cljs.core.Keyword(null, "msub", "msub", 1017265701)).cljs$core$IFn$_invoke$arity$1(ocr_9304_1__9322_1__9324))) {
                                        return cljs.core.concat.call(null, new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [null, termcat.term.token.call(null, new cljs.core.Keyword(null, "open-math", "open-math", 2513851421)), termcat.term.token.call(null, new cljs.core.Keyword(null, "html", "html", 1017117469), "\x3cmsub\x3e"), termcat.term.token.call(null, new cljs.core.Keyword(null, "already-math", "already-math", 4669760207))], null), termcat.rewrite.unwrap.call(null, 
                                        t1), new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [termcat.term.token.call(null, new cljs.core.Keyword(null, "still-math", "still-math", 3487826815)), termcat.term.token.call(null, new cljs.core.Keyword(null, "html", "html", 1017117469), "\x3c/msub\x3e"), termcat.term.token.call(null, new cljs.core.Keyword(null, "close-math", "close-math", 3200923951))], null));
                                      } else {
                                        if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
                                          throw cljs.core.match.backtrack;
                                        } else {
                                          return null;
                                        }
                                      }
                                    } catch (e9339) {
                                      if (e9339 instanceof Error) {
                                        var e__4796__auto____$3 = e9339;
                                        if (e__4796__auto____$3 === cljs.core.match.backtrack) {
                                          throw cljs.core.match.backtrack;
                                        } else {
                                          throw e__4796__auto____$3;
                                        }
                                      } else {
                                        if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
                                          throw e9339;
                                        } else {
                                          return null;
                                        }
                                      }
                                    }
                                  } else {
                                    if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
                                      throw cljs.core.match.backtrack;
                                    } else {
                                      return null;
                                    }
                                  }
                                } catch (e9330) {
                                  if (e9330 instanceof Error) {
                                    var e__4796__auto____$3 = e9330;
                                    if (e__4796__auto____$3 === cljs.core.match.backtrack) {
                                      try {
                                        var ocr_9304_1__9322_0__9323 = cljs.core.nth.call(null, ocr_9304_1__9322, 0);
                                        if (cljs.core.keyword_identical_QMARK_.call(null, ocr_9304_1__9322_0__9323, new cljs.core.Keyword(null, "block", "block", 1107736575))) {
                                          try {
                                            var ocr_9304_1__9322_1__9324 = cljs.core.nth.call(null, ocr_9304_1__9322, 1);
                                            if (cljs.core.truth_((new cljs.core.Keyword(null, "msubsup", "msubsup", 2370995757)).cljs$core$IFn$_invoke$arity$1(ocr_9304_1__9322_1__9324))) {
                                              return cljs.core.concat.call(null, new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [null, termcat.term.token.call(null, new cljs.core.Keyword(null, "open-math", "open-math", 2513851421)), termcat.term.token.call(null, new cljs.core.Keyword(null, "html", "html", 1017117469), "\x3cmsubsup\x3e"), termcat.term.token.call(null, new cljs.core.Keyword(null, "already-math", "already-math", 4669760207))], null), termcat.rewrite.unwrap.call(null, 
                                              t1), new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [termcat.term.token.call(null, new cljs.core.Keyword(null, "still-math", "still-math", 3487826815)), termcat.term.token.call(null, new cljs.core.Keyword(null, "html", "html", 1017117469), "\x3c/msubsup\x3e"), termcat.term.token.call(null, new cljs.core.Keyword(null, "close-math", "close-math", 3200923951))], null));
                                            } else {
                                              if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
                                                throw cljs.core.match.backtrack;
                                              } else {
                                                return null;
                                              }
                                            }
                                          } catch (e9338) {
                                            if (e9338 instanceof Error) {
                                              var e__4796__auto____$4 = e9338;
                                              if (e__4796__auto____$4 === cljs.core.match.backtrack) {
                                                throw cljs.core.match.backtrack;
                                              } else {
                                                throw e__4796__auto____$4;
                                              }
                                            } else {
                                              if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
                                                throw e9338;
                                              } else {
                                                return null;
                                              }
                                            }
                                          }
                                        } else {
                                          if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
                                            throw cljs.core.match.backtrack;
                                          } else {
                                            return null;
                                          }
                                        }
                                      } catch (e9331) {
                                        if (e9331 instanceof Error) {
                                          var e__4796__auto____$4 = e9331;
                                          if (e__4796__auto____$4 === cljs.core.match.backtrack) {
                                            try {
                                              var ocr_9304_1__9322_0__9323 = cljs.core.nth.call(null, ocr_9304_1__9322, 0);
                                              if (cljs.core.keyword_identical_QMARK_.call(null, ocr_9304_1__9322_0__9323, new cljs.core.Keyword(null, "block", "block", 1107736575))) {
                                                try {
                                                  var ocr_9304_1__9322_1__9324 = cljs.core.nth.call(null, ocr_9304_1__9322, 1);
                                                  if (cljs.core.truth_((new cljs.core.Keyword(null, "mfrac", "mfrac", 1117719373)).cljs$core$IFn$_invoke$arity$1(ocr_9304_1__9322_1__9324))) {
                                                    return cljs.core.concat.call(null, new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [null, termcat.term.token.call(null, new cljs.core.Keyword(null, "open-math", "open-math", 2513851421)), termcat.term.token.call(null, new cljs.core.Keyword(null, "html", "html", 1017117469), "\x3cmfrac\x3e"), termcat.term.token.call(null, new cljs.core.Keyword(null, "already-math", "already-math", 4669760207))], null), termcat.rewrite.unwrap.call(null, 
                                                    t1), new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [termcat.term.token.call(null, new cljs.core.Keyword(null, "still-math", "still-math", 3487826815)), termcat.term.token.call(null, new cljs.core.Keyword(null, "html", "html", 1017117469), "\x3c/mfrac\x3e"), termcat.term.token.call(null, new cljs.core.Keyword(null, "close-math", "close-math", 3200923951))], null));
                                                  } else {
                                                    if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
                                                      throw cljs.core.match.backtrack;
                                                    } else {
                                                      return null;
                                                    }
                                                  }
                                                } catch (e9337) {
                                                  if (e9337 instanceof Error) {
                                                    var e__4796__auto____$5 = e9337;
                                                    if (e__4796__auto____$5 === cljs.core.match.backtrack) {
                                                      throw cljs.core.match.backtrack;
                                                    } else {
                                                      throw e__4796__auto____$5;
                                                    }
                                                  } else {
                                                    if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
                                                      throw e9337;
                                                    } else {
                                                      return null;
                                                    }
                                                  }
                                                }
                                              } else {
                                                if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
                                                  throw cljs.core.match.backtrack;
                                                } else {
                                                  return null;
                                                }
                                              }
                                            } catch (e9332) {
                                              if (e9332 instanceof Error) {
                                                var e__4796__auto____$5 = e9332;
                                                if (e__4796__auto____$5 === cljs.core.match.backtrack) {
                                                  try {
                                                    var ocr_9304_1__9322_0__9323 = cljs.core.nth.call(null, ocr_9304_1__9322, 0);
                                                    if (cljs.core.keyword_identical_QMARK_.call(null, ocr_9304_1__9322_0__9323, new cljs.core.Keyword(null, "block", "block", 1107736575))) {
                                                      try {
                                                        var ocr_9304_1__9322_1__9324 = cljs.core.nth.call(null, ocr_9304_1__9322, 1);
                                                        if (cljs.core.truth_((new cljs.core.Keyword(null, "mrow", "mrow", 1017264575)).cljs$core$IFn$_invoke$arity$1(ocr_9304_1__9322_1__9324))) {
                                                          return cljs.core.concat.call(null, new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [null, termcat.term.token.call(null, new cljs.core.Keyword(null, "open-math", "open-math", 2513851421)), termcat.term.token.call(null, new cljs.core.Keyword(null, "html", "html", 1017117469), "\x3cmrow\x3e"), termcat.term.token.call(null, new cljs.core.Keyword(null, "already-math", "already-math", 4669760207))], null), termcat.rewrite.unwrap.call(null, 
                                                          t1), new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [termcat.term.token.call(null, new cljs.core.Keyword(null, "still-math", "still-math", 3487826815)), termcat.term.token.call(null, new cljs.core.Keyword(null, "html", "html", 1017117469), "\x3c/mrow\x3e"), termcat.term.token.call(null, new cljs.core.Keyword(null, "close-math", "close-math", 3200923951))], null));
                                                        } else {
                                                          if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
                                                            throw cljs.core.match.backtrack;
                                                          } else {
                                                            return null;
                                                          }
                                                        }
                                                      } catch (e9336) {
                                                        if (e9336 instanceof Error) {
                                                          var e__4796__auto____$6 = e9336;
                                                          if (e__4796__auto____$6 === cljs.core.match.backtrack) {
                                                            throw cljs.core.match.backtrack;
                                                          } else {
                                                            throw e__4796__auto____$6;
                                                          }
                                                        } else {
                                                          if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
                                                            throw e9336;
                                                          } else {
                                                            return null;
                                                          }
                                                        }
                                                      }
                                                    } else {
                                                      if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
                                                        throw cljs.core.match.backtrack;
                                                      } else {
                                                        return null;
                                                      }
                                                    }
                                                  } catch (e9333) {
                                                    if (e9333 instanceof Error) {
                                                      var e__4796__auto____$6 = e9333;
                                                      if (e__4796__auto____$6 === cljs.core.match.backtrack) {
                                                        try {
                                                          var ocr_9304_1__9322_0__9323 = cljs.core.nth.call(null, ocr_9304_1__9322, 0);
                                                          if (cljs.core.keyword_identical_QMARK_.call(null, ocr_9304_1__9322_0__9323, new cljs.core.Keyword(null, "block", "block", 1107736575))) {
                                                            try {
                                                              var ocr_9304_1__9322_1__9324 = cljs.core.nth.call(null, ocr_9304_1__9322, 1);
                                                              if (cljs.core.truth_((new cljs.core.Keyword(null, "math", "math", 1017248378)).cljs$core$IFn$_invoke$arity$1(ocr_9304_1__9322_1__9324))) {
                                                                var x = cljs.core.nth.call(null, ocr_9304_1__9322, 1);
                                                                return cljs.core.concat.call(null, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [null, termcat.term.token.call(null, new cljs.core.Keyword(null, "open-math", "open-math", 2513851421))], null), termcat.rules.html.wrap_math_block.call(null, t1, x), new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [termcat.term.token.call(null, new cljs.core.Keyword(null, "close-math", 
                                                                "close-math", 3200923951))], null));
                                                              } else {
                                                                if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
                                                                  throw cljs.core.match.backtrack;
                                                                } else {
                                                                  return null;
                                                                }
                                                              }
                                                            } catch (e9335) {
                                                              if (e9335 instanceof Error) {
                                                                var e__4796__auto____$7 = e9335;
                                                                if (e__4796__auto____$7 === cljs.core.match.backtrack) {
                                                                  throw cljs.core.match.backtrack;
                                                                } else {
                                                                  throw e__4796__auto____$7;
                                                                }
                                                              } else {
                                                                if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
                                                                  throw e9335;
                                                                } else {
                                                                  return null;
                                                                }
                                                              }
                                                            }
                                                          } else {
                                                            if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
                                                              throw cljs.core.match.backtrack;
                                                            } else {
                                                              return null;
                                                            }
                                                          }
                                                        } catch (e9334) {
                                                          if (e9334 instanceof Error) {
                                                            var e__4796__auto____$7 = e9334;
                                                            if (e__4796__auto____$7 === cljs.core.match.backtrack) {
                                                              throw cljs.core.match.backtrack;
                                                            } else {
                                                              throw e__4796__auto____$7;
                                                            }
                                                          } else {
                                                            if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
                                                              throw e9334;
                                                            } else {
                                                              return null;
                                                            }
                                                          }
                                                        }
                                                      } else {
                                                        throw e__4796__auto____$6;
                                                      }
                                                    } else {
                                                      if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
                                                        throw e9333;
                                                      } else {
                                                        return null;
                                                      }
                                                    }
                                                  }
                                                } else {
                                                  throw e__4796__auto____$5;
                                                }
                                              } else {
                                                if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
                                                  throw e9332;
                                                } else {
                                                  return null;
                                                }
                                              }
                                            }
                                          } else {
                                            throw e__4796__auto____$4;
                                          }
                                        } else {
                                          if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
                                            throw e9331;
                                          } else {
                                            return null;
                                          }
                                        }
                                      }
                                    } else {
                                      throw e__4796__auto____$3;
                                    }
                                  } else {
                                    if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
                                      throw e9330;
                                    } else {
                                      return null;
                                    }
                                  }
                                }
                              } else {
                                throw e__4796__auto____$2;
                              }
                            } else {
                              if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
                                throw e9329;
                              } else {
                                return null;
                              }
                            }
                          }
                        } else {
                          throw e__4796__auto____$1;
                        }
                      } else {
                        if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
                          throw e9328;
                        } else {
                          return null;
                        }
                      }
                    }
                  } else {
                    throw e__4796__auto__;
                  }
                } else {
                  if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
                    throw e9327;
                  } else {
                    return null;
                  }
                }
              }
            } else {
              if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
                throw cljs.core.match.backtrack;
              } else {
                return null;
              }
            }
          } catch (e9326) {
            if (e9326 instanceof Error) {
              var e__4796__auto__ = e9326;
              if (e__4796__auto__ === cljs.core.match.backtrack) {
                throw cljs.core.match.backtrack;
              } else {
                throw e__4796__auto__;
              }
            } else {
              if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
                throw e9326;
              } else {
                return null;
              }
            }
          }
        } else {
          if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
            throw cljs.core.match.backtrack;
          } else {
            return null;
          }
        }
      } catch (e9325) {
        if (e9325 instanceof Error) {
          var e__4796__auto__ = e9325;
          if (e__4796__auto__ === cljs.core.match.backtrack) {
            return null;
          } else {
            throw e__4796__auto__;
          }
        } else {
          if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
            throw e9325;
          } else {
            return null;
          }
        }
      }
    }();
    if (cljs.core.truth_(temp__4090__auto__)) {
      var r__6471__auto__ = temp__4090__auto__;
      return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [function() {
        var or__3403__auto__ = cljs.core.first.call(null, r__6471__auto__);
        if (cljs.core.truth_(or__3403__auto__)) {
          return or__3403__auto__;
        } else {
          return state__6468__auto__;
        }
      }(), cljs.core.concat.call(null, cljs.core.next.call(null, r__6471__auto__), cljs.core.drop.call(null, 1, input__6469__auto__))], null);
    } else {
      return null;
    }
  };
  G__9343 = function(state__6468__auto__, input__6469__auto__) {
    switch(arguments.length) {
      case 0:
        return G__9343__0.call(this);
      case 2:
        return G__9343__2.call(this, state__6468__auto__, input__6469__auto__);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  return G__9343;
}());
termcat.rules.html.remove_double_math_tokens = termcat.rewrite.abstraction.call(null, function() {
  var G__9360 = null;
  var G__9360__0 = function() {
    return null;
  };
  var G__9360__2 = function(state__6468__auto__, input__6469__auto__) {
    var padded_input__6470__auto__ = cljs.core.concat.call(null, input__6469__auto__, cljs.core.repeat.call(null, null));
    var vec__9344 = cljs.core.cons.call(null, state__6468__auto__, cljs.core.take.call(null, 2, padded_input__6470__auto__));
    var state = cljs.core.nth.call(null, vec__9344, 0, null);
    var t1 = cljs.core.nth.call(null, vec__9344, 1, null);
    var t2 = cljs.core.nth.call(null, vec__9344, 2, null);
    var temp__4090__auto__ = function() {
      var ocr_9345 = clojure.core.reducers.reduce.call(null, cljs.core.conj, new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [state__6468__auto__], null), clojure.core.reducers.take.call(null, 2, clojure.core.reducers.map.call(null, termcat.term.tt, padded_input__6470__auto__)));
      try {
        if (cljs.core.vector_QMARK_.call(null, ocr_9345) && cljs.core.count.call(null, ocr_9345) === 3) {
          try {
            var ocr_9345_1__9352 = cljs.core.nth.call(null, ocr_9345, 1);
            if (cljs.core.keyword_identical_QMARK_.call(null, ocr_9345_1__9352, new cljs.core.Keyword(null, "already-math", "already-math", 4669760207))) {
              try {
                var ocr_9345_2__9353 = cljs.core.nth.call(null, ocr_9345, 2);
                if (cljs.core.keyword_identical_QMARK_.call(null, ocr_9345_2__9353, new cljs.core.Keyword(null, "already-math", "already-math", 4669760207))) {
                  return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [null, t1], null);
                } else {
                  if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
                    throw cljs.core.match.backtrack;
                  } else {
                    return null;
                  }
                }
              } catch (e9356) {
                if (e9356 instanceof Error) {
                  var e__4796__auto__ = e9356;
                  if (e__4796__auto__ === cljs.core.match.backtrack) {
                    throw cljs.core.match.backtrack;
                  } else {
                    throw e__4796__auto__;
                  }
                } else {
                  if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
                    throw e9356;
                  } else {
                    return null;
                  }
                }
              }
            } else {
              if (cljs.core.keyword_identical_QMARK_.call(null, ocr_9345_1__9352, new cljs.core.Keyword(null, "still-math", "still-math", 3487826815))) {
                try {
                  var ocr_9345_2__9353 = cljs.core.nth.call(null, ocr_9345, 2);
                  if (cljs.core.keyword_identical_QMARK_.call(null, ocr_9345_2__9353, new cljs.core.Keyword(null, "still-math", "still-math", 3487826815))) {
                    return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [null, t1], null);
                  } else {
                    if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
                      throw cljs.core.match.backtrack;
                    } else {
                      return null;
                    }
                  }
                } catch (e9357) {
                  if (e9357 instanceof Error) {
                    var e__4796__auto__ = e9357;
                    if (e__4796__auto__ === cljs.core.match.backtrack) {
                      throw cljs.core.match.backtrack;
                    } else {
                      throw e__4796__auto__;
                    }
                  } else {
                    if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
                      throw e9357;
                    } else {
                      return null;
                    }
                  }
                }
              } else {
                if (cljs.core.keyword_identical_QMARK_.call(null, ocr_9345_1__9352, new cljs.core.Keyword(null, "close-math", "close-math", 3200923951))) {
                  try {
                    var ocr_9345_2__9353 = cljs.core.nth.call(null, ocr_9345, 2);
                    if (cljs.core.keyword_identical_QMARK_.call(null, ocr_9345_2__9353, new cljs.core.Keyword(null, "close-math", "close-math", 3200923951))) {
                      return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [null, t1], null);
                    } else {
                      if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
                        throw cljs.core.match.backtrack;
                      } else {
                        return null;
                      }
                    }
                  } catch (e9358) {
                    if (e9358 instanceof Error) {
                      var e__4796__auto__ = e9358;
                      if (e__4796__auto__ === cljs.core.match.backtrack) {
                        throw cljs.core.match.backtrack;
                      } else {
                        throw e__4796__auto__;
                      }
                    } else {
                      if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
                        throw e9358;
                      } else {
                        return null;
                      }
                    }
                  }
                } else {
                  if (cljs.core.keyword_identical_QMARK_.call(null, ocr_9345_1__9352, new cljs.core.Keyword(null, "open-math", "open-math", 2513851421))) {
                    try {
                      var ocr_9345_2__9353 = cljs.core.nth.call(null, ocr_9345, 2);
                      if (cljs.core.keyword_identical_QMARK_.call(null, ocr_9345_2__9353, new cljs.core.Keyword(null, "open-math", "open-math", 2513851421))) {
                        return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [null, t1], null);
                      } else {
                        if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
                          throw cljs.core.match.backtrack;
                        } else {
                          return null;
                        }
                      }
                    } catch (e9359) {
                      if (e9359 instanceof Error) {
                        var e__4796__auto__ = e9359;
                        if (e__4796__auto__ === cljs.core.match.backtrack) {
                          throw cljs.core.match.backtrack;
                        } else {
                          throw e__4796__auto__;
                        }
                      } else {
                        if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
                          throw e9359;
                        } else {
                          return null;
                        }
                      }
                    }
                  } else {
                    if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
                      throw cljs.core.match.backtrack;
                    } else {
                      return null;
                    }
                  }
                }
              }
            }
          } catch (e9355) {
            if (e9355 instanceof Error) {
              var e__4796__auto__ = e9355;
              if (e__4796__auto__ === cljs.core.match.backtrack) {
                throw cljs.core.match.backtrack;
              } else {
                throw e__4796__auto__;
              }
            } else {
              if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
                throw e9355;
              } else {
                return null;
              }
            }
          }
        } else {
          if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
            throw cljs.core.match.backtrack;
          } else {
            return null;
          }
        }
      } catch (e9354) {
        if (e9354 instanceof Error) {
          var e__4796__auto__ = e9354;
          if (e__4796__auto__ === cljs.core.match.backtrack) {
            return null;
          } else {
            throw e__4796__auto__;
          }
        } else {
          if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
            throw e9354;
          } else {
            return null;
          }
        }
      }
    }();
    if (cljs.core.truth_(temp__4090__auto__)) {
      var r__6471__auto__ = temp__4090__auto__;
      return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [function() {
        var or__3403__auto__ = cljs.core.first.call(null, r__6471__auto__);
        if (cljs.core.truth_(or__3403__auto__)) {
          return or__3403__auto__;
        } else {
          return state__6468__auto__;
        }
      }(), cljs.core.concat.call(null, cljs.core.next.call(null, r__6471__auto__), cljs.core.drop.call(null, 2, input__6469__auto__))], null);
    } else {
      return null;
    }
  };
  G__9360 = function(state__6468__auto__, input__6469__auto__) {
    switch(arguments.length) {
      case 0:
        return G__9360__0.call(this);
      case 2:
        return G__9360__2.call(this, state__6468__auto__, input__6469__auto__);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  return G__9360;
}());
termcat.rules.html.remove_canceling_math_tokens = termcat.rewrite.abstraction.call(null, function() {
  var G__9376 = null;
  var G__9376__0 = function() {
    return null;
  };
  var G__9376__2 = function(state__6468__auto__, input__6469__auto__) {
    var padded_input__6470__auto__ = cljs.core.concat.call(null, input__6469__auto__, cljs.core.repeat.call(null, null));
    var vec__9361 = cljs.core.cons.call(null, state__6468__auto__, cljs.core.take.call(null, 2, padded_input__6470__auto__));
    var state = cljs.core.nth.call(null, vec__9361, 0, null);
    var t1 = cljs.core.nth.call(null, vec__9361, 1, null);
    var t2 = cljs.core.nth.call(null, vec__9361, 2, null);
    var temp__4090__auto__ = function() {
      var ocr_9362 = clojure.core.reducers.reduce.call(null, cljs.core.conj, new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [state__6468__auto__], null), clojure.core.reducers.take.call(null, 2, clojure.core.reducers.map.call(null, termcat.term.tt, padded_input__6470__auto__)));
      try {
        if (cljs.core.vector_QMARK_.call(null, ocr_9362) && cljs.core.count.call(null, ocr_9362) === 3) {
          try {
            var ocr_9362_1__9368 = cljs.core.nth.call(null, ocr_9362, 1);
            if (cljs.core.keyword_identical_QMARK_.call(null, ocr_9362_1__9368, new cljs.core.Keyword(null, "close-math", "close-math", 3200923951))) {
              try {
                var ocr_9362_2__9369 = cljs.core.nth.call(null, ocr_9362, 2);
                if (cljs.core.keyword_identical_QMARK_.call(null, ocr_9362_2__9369, new cljs.core.Keyword(null, "open-math", "open-math", 2513851421))) {
                  return new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [null], null);
                } else {
                  if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
                    throw cljs.core.match.backtrack;
                  } else {
                    return null;
                  }
                }
              } catch (e9374) {
                if (e9374 instanceof Error) {
                  var e__4796__auto__ = e9374;
                  if (e__4796__auto__ === cljs.core.match.backtrack) {
                    throw cljs.core.match.backtrack;
                  } else {
                    throw e__4796__auto__;
                  }
                } else {
                  if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
                    throw e9374;
                  } else {
                    return null;
                  }
                }
              }
            } else {
              if (cljs.core.keyword_identical_QMARK_.call(null, ocr_9362_1__9368, new cljs.core.Keyword(null, "already-math", "already-math", 4669760207))) {
                try {
                  var ocr_9362_2__9369 = cljs.core.nth.call(null, ocr_9362, 2);
                  if (cljs.core.keyword_identical_QMARK_.call(null, ocr_9362_2__9369, new cljs.core.Keyword(null, "open-math", "open-math", 2513851421))) {
                    return new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [null], null);
                  } else {
                    if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
                      throw cljs.core.match.backtrack;
                    } else {
                      return null;
                    }
                  }
                } catch (e9375) {
                  if (e9375 instanceof Error) {
                    var e__4796__auto__ = e9375;
                    if (e__4796__auto__ === cljs.core.match.backtrack) {
                      throw cljs.core.match.backtrack;
                    } else {
                      throw e__4796__auto__;
                    }
                  } else {
                    if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
                      throw e9375;
                    } else {
                      return null;
                    }
                  }
                }
              } else {
                if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
                  throw cljs.core.match.backtrack;
                } else {
                  return null;
                }
              }
            }
          } catch (e9371) {
            if (e9371 instanceof Error) {
              var e__4796__auto__ = e9371;
              if (e__4796__auto__ === cljs.core.match.backtrack) {
                try {
                  var ocr_9362_1__9368 = cljs.core.nth.call(null, ocr_9362, 1);
                  if (cljs.core.keyword_identical_QMARK_.call(null, ocr_9362_1__9368, new cljs.core.Keyword(null, "close-math", "close-math", 3200923951))) {
                    try {
                      var ocr_9362_2__9369 = cljs.core.nth.call(null, ocr_9362, 2);
                      if (cljs.core.keyword_identical_QMARK_.call(null, ocr_9362_2__9369, new cljs.core.Keyword(null, "still-math", "still-math", 3487826815))) {
                        return new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [null], null);
                      } else {
                        if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
                          throw cljs.core.match.backtrack;
                        } else {
                          return null;
                        }
                      }
                    } catch (e9373) {
                      if (e9373 instanceof Error) {
                        var e__4796__auto____$1 = e9373;
                        if (e__4796__auto____$1 === cljs.core.match.backtrack) {
                          throw cljs.core.match.backtrack;
                        } else {
                          throw e__4796__auto____$1;
                        }
                      } else {
                        if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
                          throw e9373;
                        } else {
                          return null;
                        }
                      }
                    }
                  } else {
                    if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
                      throw cljs.core.match.backtrack;
                    } else {
                      return null;
                    }
                  }
                } catch (e9372) {
                  if (e9372 instanceof Error) {
                    var e__4796__auto____$1 = e9372;
                    if (e__4796__auto____$1 === cljs.core.match.backtrack) {
                      throw cljs.core.match.backtrack;
                    } else {
                      throw e__4796__auto____$1;
                    }
                  } else {
                    if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
                      throw e9372;
                    } else {
                      return null;
                    }
                  }
                }
              } else {
                throw e__4796__auto__;
              }
            } else {
              if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
                throw e9371;
              } else {
                return null;
              }
            }
          }
        } else {
          if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
            throw cljs.core.match.backtrack;
          } else {
            return null;
          }
        }
      } catch (e9370) {
        if (e9370 instanceof Error) {
          var e__4796__auto__ = e9370;
          if (e__4796__auto__ === cljs.core.match.backtrack) {
            return null;
          } else {
            throw e__4796__auto__;
          }
        } else {
          if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
            throw e9370;
          } else {
            return null;
          }
        }
      }
    }();
    if (cljs.core.truth_(temp__4090__auto__)) {
      var r__6471__auto__ = temp__4090__auto__;
      return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [function() {
        var or__3403__auto__ = cljs.core.first.call(null, r__6471__auto__);
        if (cljs.core.truth_(or__3403__auto__)) {
          return or__3403__auto__;
        } else {
          return state__6468__auto__;
        }
      }(), cljs.core.concat.call(null, cljs.core.next.call(null, r__6471__auto__), cljs.core.drop.call(null, 2, input__6469__auto__))], null);
    } else {
      return null;
    }
  };
  G__9376 = function(state__6468__auto__, input__6469__auto__) {
    switch(arguments.length) {
      case 0:
        return G__9376__0.call(this);
      case 2:
        return G__9376__2.call(this, state__6468__auto__, input__6469__auto__);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  return G__9376;
}());
termcat.rules.html.introduce_mtext_tags = function() {
  var introduce_mtext_tags = null;
  var introduce_mtext_tags__0 = function() {
    return new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "count", "count", 1108755585), 0, new cljs.core.Keyword(null, "in-text", "in-text", 2906831943), false], null);
  };
  var introduce_mtext_tags__2 = function(state__6468__auto__, input__6469__auto__) {
    var padded_input__6470__auto__ = cljs.core.concat.call(null, input__6469__auto__, cljs.core.repeat.call(null, null));
    var vec__9415 = cljs.core.cons.call(null, state__6468__auto__, cljs.core.take.call(null, 2, padded_input__6470__auto__));
    var state = cljs.core.nth.call(null, vec__9415, 0, null);
    var t1 = cljs.core.nth.call(null, vec__9415, 1, null);
    var t2 = cljs.core.nth.call(null, vec__9415, 2, null);
    var temp__4090__auto__ = function() {
      var ocr_9416 = clojure.core.reducers.reduce.call(null, cljs.core.conj, new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [state__6468__auto__], null), clojure.core.reducers.take.call(null, 2, clojure.core.reducers.map.call(null, termcat.term.tt, padded_input__6470__auto__)));
      try {
        if (cljs.core.vector_QMARK_.call(null, ocr_9416) && cljs.core.count.call(null, ocr_9416) === 3) {
          try {
            var ocr_9416_1__9427 = cljs.core.nth.call(null, ocr_9416, 1);
            if (cljs.core.keyword_identical_QMARK_.call(null, ocr_9416_1__9427, new cljs.core.Keyword(null, "still-math", "still-math", 3487826815))) {
              try {
                var ocr_9416_0__9426 = cljs.core.nth.call(null, ocr_9416, 0);
                if (function() {
                  var G__9448 = ocr_9416_0__9426;
                  if (G__9448) {
                    var bit__4053__auto__ = G__9448.cljs$lang$protocol_mask$partition0$ & 256;
                    if (bit__4053__auto__ || G__9448.cljs$core$ILookup$) {
                      return true;
                    } else {
                      if (!G__9448.cljs$lang$protocol_mask$partition0$) {
                        return cljs.core.native_satisfies_QMARK_.call(null, cljs.core.ILookup, G__9448);
                      } else {
                        return false;
                      }
                    }
                  } else {
                    return cljs.core.native_satisfies_QMARK_.call(null, cljs.core.ILookup, G__9448);
                  }
                }()) {
                  try {
                    var ocr_9416_0__9426_in_text__9431 = cljs.core.get.call(null, ocr_9416_0__9426, new cljs.core.Keyword(null, "in-text", "in-text", 2906831943), new cljs.core.Keyword("clojure.core.match", "not-found", "clojure.core.match/not-found", 594371962));
                    if (ocr_9416_0__9426_in_text__9431 === true) {
                      return new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.assoc.call(null, state, new cljs.core.Keyword(null, "in-text", "in-text", 2906831943), false), termcat.term.token.call(null, new cljs.core.Keyword(null, "html", "html", 1017117469), "\x3c/mtext\x3e"), t2], null);
                    } else {
                      if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
                        throw cljs.core.match.backtrack;
                      } else {
                        return null;
                      }
                    }
                  } catch (e9449) {
                    if (e9449 instanceof Error) {
                      var e__4796__auto__ = e9449;
                      if (e__4796__auto__ === cljs.core.match.backtrack) {
                        throw cljs.core.match.backtrack;
                      } else {
                        throw e__4796__auto__;
                      }
                    } else {
                      if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
                        throw e9449;
                      } else {
                        return null;
                      }
                    }
                  }
                } else {
                  if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
                    throw cljs.core.match.backtrack;
                  } else {
                    return null;
                  }
                }
              } catch (e9447) {
                if (e9447 instanceof Error) {
                  var e__4796__auto__ = e9447;
                  if (e__4796__auto__ === cljs.core.match.backtrack) {
                    throw cljs.core.match.backtrack;
                  } else {
                    throw e__4796__auto__;
                  }
                } else {
                  if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
                    throw e9447;
                  } else {
                    return null;
                  }
                }
              }
            } else {
              if (cljs.core.keyword_identical_QMARK_.call(null, ocr_9416_1__9427, new cljs.core.Keyword(null, "open-math", "open-math", 2513851421))) {
                try {
                  var ocr_9416_0__9426 = cljs.core.nth.call(null, ocr_9416, 0);
                  if (function() {
                    var G__9451 = ocr_9416_0__9426;
                    if (G__9451) {
                      var bit__4053__auto__ = G__9451.cljs$lang$protocol_mask$partition0$ & 256;
                      if (bit__4053__auto__ || G__9451.cljs$core$ILookup$) {
                        return true;
                      } else {
                        if (!G__9451.cljs$lang$protocol_mask$partition0$) {
                          return cljs.core.native_satisfies_QMARK_.call(null, cljs.core.ILookup, G__9451);
                        } else {
                          return false;
                        }
                      }
                    } else {
                      return cljs.core.native_satisfies_QMARK_.call(null, cljs.core.ILookup, G__9451);
                    }
                  }()) {
                    try {
                      var ocr_9416_0__9426_in_text__9434 = cljs.core.get.call(null, ocr_9416_0__9426, new cljs.core.Keyword(null, "in-text", "in-text", 2906831943), new cljs.core.Keyword("clojure.core.match", "not-found", "clojure.core.match/not-found", 594371962));
                      if (ocr_9416_0__9426_in_text__9434 === true) {
                        return new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.update_in.call(null, cljs.core.assoc.call(null, state, new cljs.core.Keyword(null, "in-text", "in-text", 2906831943), false), new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "count", "count", 1108755585)], null), cljs.core.inc), termcat.term.token.call(null, new cljs.core.Keyword(null, "html", "html", 1017117469), 
                        "\x3c/mtext\x3e"), t2], null);
                      } else {
                        if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
                          throw cljs.core.match.backtrack;
                        } else {
                          return null;
                        }
                      }
                    } catch (e9452) {
                      if (e9452 instanceof Error) {
                        var e__4796__auto__ = e9452;
                        if (e__4796__auto__ === cljs.core.match.backtrack) {
                          throw cljs.core.match.backtrack;
                        } else {
                          throw e__4796__auto__;
                        }
                      } else {
                        if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
                          throw e9452;
                        } else {
                          return null;
                        }
                      }
                    }
                  } else {
                    if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
                      throw cljs.core.match.backtrack;
                    } else {
                      return null;
                    }
                  }
                } catch (e9450) {
                  if (e9450 instanceof Error) {
                    var e__4796__auto__ = e9450;
                    if (e__4796__auto__ === cljs.core.match.backtrack) {
                      throw cljs.core.match.backtrack;
                    } else {
                      throw e__4796__auto__;
                    }
                  } else {
                    if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
                      throw e9450;
                    } else {
                      return null;
                    }
                  }
                }
              } else {
                if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
                  throw cljs.core.match.backtrack;
                } else {
                  return null;
                }
              }
            }
          } catch (e9439) {
            if (e9439 instanceof Error) {
              var e__4796__auto__ = e9439;
              if (e__4796__auto__ === cljs.core.match.backtrack) {
                try {
                  var ocr_9416_1__9427 = cljs.core.nth.call(null, ocr_9416, 1);
                  if (cljs.core.keyword_identical_QMARK_.call(null, ocr_9416_1__9427, new cljs.core.Keyword(null, "open-math", "open-math", 2513851421))) {
                    return new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.update_in.call(null, state, new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "count", "count", 1108755585)], null), cljs.core.inc), t1, t2], null);
                  } else {
                    if (cljs.core.keyword_identical_QMARK_.call(null, ocr_9416_1__9427, new cljs.core.Keyword(null, "close-math", "close-math", 3200923951))) {
                      try {
                        var ocr_9416_2__9428 = cljs.core.nth.call(null, ocr_9416, 2);
                        if (cljs.core.keyword_identical_QMARK_.call(null, ocr_9416_2__9428, new cljs.core.Keyword(null, "still-math", "still-math", 3487826815))) {
                          return new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.update_in.call(null, state, new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "count", "count", 1108755585)], null), cljs.core.dec), t1, t2], null);
                        } else {
                          if (cljs.core.keyword_identical_QMARK_.call(null, ocr_9416_2__9428, new cljs.core.Keyword(null, "open-math", "open-math", 2513851421))) {
                            return new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.update_in.call(null, state, new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "count", "count", 1108755585)], null), cljs.core.dec), t1, t2], null);
                          } else {
                            if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
                              throw cljs.core.match.backtrack;
                            } else {
                              return null;
                            }
                          }
                        }
                      } catch (e9446) {
                        if (e9446 instanceof Error) {
                          var e__4796__auto____$1 = e9446;
                          if (e__4796__auto____$1 === cljs.core.match.backtrack) {
                            throw cljs.core.match.backtrack;
                          } else {
                            throw e__4796__auto____$1;
                          }
                        } else {
                          if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
                            throw e9446;
                          } else {
                            return null;
                          }
                        }
                      }
                    } else {
                      if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
                        throw cljs.core.match.backtrack;
                      } else {
                        return null;
                      }
                    }
                  }
                } catch (e9440) {
                  if (e9440 instanceof Error) {
                    var e__4796__auto____$1 = e9440;
                    if (e__4796__auto____$1 === cljs.core.match.backtrack) {
                      try {
                        var ocr_9416_1__9427 = cljs.core.nth.call(null, ocr_9416, 1);
                        if (cljs.core.keyword_identical_QMARK_.call(null, ocr_9416_1__9427, new cljs.core.Keyword(null, "close-math", "close-math", 3200923951))) {
                          try {
                            var ocr_9416_0__9426 = cljs.core.nth.call(null, ocr_9416, 0);
                            if (function() {
                              var G__9444 = ocr_9416_0__9426;
                              if (G__9444) {
                                var bit__4053__auto__ = G__9444.cljs$lang$protocol_mask$partition0$ & 256;
                                if (bit__4053__auto__ || G__9444.cljs$core$ILookup$) {
                                  return true;
                                } else {
                                  if (!G__9444.cljs$lang$protocol_mask$partition0$) {
                                    return cljs.core.native_satisfies_QMARK_.call(null, cljs.core.ILookup, G__9444);
                                  } else {
                                    return false;
                                  }
                                }
                              } else {
                                return cljs.core.native_satisfies_QMARK_.call(null, cljs.core.ILookup, G__9444);
                              }
                            }()) {
                              try {
                                var ocr_9416_0__9426_count__9437 = cljs.core.get.call(null, ocr_9416_0__9426, new cljs.core.Keyword(null, "count", "count", 1108755585), new cljs.core.Keyword("clojure.core.match", "not-found", "clojure.core.match/not-found", 594371962));
                                if (ocr_9416_0__9426_count__9437 === 1) {
                                  return new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.assoc.call(null, state, new cljs.core.Keyword(null, "count", "count", 1108755585), 0), t1, t2], null);
                                } else {
                                  if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
                                    throw cljs.core.match.backtrack;
                                  } else {
                                    return null;
                                  }
                                }
                              } catch (e9445) {
                                if (e9445 instanceof Error) {
                                  var e__4796__auto____$2 = e9445;
                                  if (e__4796__auto____$2 === cljs.core.match.backtrack) {
                                    throw cljs.core.match.backtrack;
                                  } else {
                                    throw e__4796__auto____$2;
                                  }
                                } else {
                                  if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
                                    throw e9445;
                                  } else {
                                    return null;
                                  }
                                }
                              }
                            } else {
                              if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
                                throw cljs.core.match.backtrack;
                              } else {
                                return null;
                              }
                            }
                          } catch (e9443) {
                            if (e9443 instanceof Error) {
                              var e__4796__auto____$2 = e9443;
                              if (e__4796__auto____$2 === cljs.core.match.backtrack) {
                                throw cljs.core.match.backtrack;
                              } else {
                                throw e__4796__auto____$2;
                              }
                            } else {
                              if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
                                throw e9443;
                              } else {
                                return null;
                              }
                            }
                          }
                        } else {
                          if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
                            throw cljs.core.match.backtrack;
                          } else {
                            return null;
                          }
                        }
                      } catch (e9441) {
                        if (e9441 instanceof Error) {
                          var e__4796__auto____$2 = e9441;
                          if (e__4796__auto____$2 === cljs.core.match.backtrack) {
                            try {
                              var ocr_9416_1__9427 = cljs.core.nth.call(null, ocr_9416, 1);
                              if (cljs.core.keyword_identical_QMARK_.call(null, ocr_9416_1__9427, new cljs.core.Keyword(null, "close-math", "close-math", 3200923951))) {
                                return cljs.core.concat.call(null, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.update_in.call(null, cljs.core.assoc.call(null, state, new cljs.core.Keyword(null, "in-text", "in-text", 2906831943), true), new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "count", "count", 1108755585)], null), cljs.core.dec), termcat.term.token.call(null, new cljs.core.Keyword(null, 
                                "html", "html", 1017117469), "\x3cmtext\x3e")], null), !cljs.core._EQ_.call(null, new cljs.core.Keyword(null, "whitespace", "whitespace", 1290815983), termcat.term.tt.call(null, t2)) ? new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [t2], null) : null);
                              } else {
                                if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
                                  throw cljs.core.match.backtrack;
                                } else {
                                  return null;
                                }
                              }
                            } catch (e9442) {
                              if (e9442 instanceof Error) {
                                var e__4796__auto____$3 = e9442;
                                if (e__4796__auto____$3 === cljs.core.match.backtrack) {
                                  throw cljs.core.match.backtrack;
                                } else {
                                  throw e__4796__auto____$3;
                                }
                              } else {
                                if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
                                  throw e9442;
                                } else {
                                  return null;
                                }
                              }
                            }
                          } else {
                            throw e__4796__auto____$2;
                          }
                        } else {
                          if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
                            throw e9441;
                          } else {
                            return null;
                          }
                        }
                      }
                    } else {
                      throw e__4796__auto____$1;
                    }
                  } else {
                    if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
                      throw e9440;
                    } else {
                      return null;
                    }
                  }
                }
              } else {
                throw e__4796__auto__;
              }
            } else {
              if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
                throw e9439;
              } else {
                return null;
              }
            }
          }
        } else {
          if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
            throw cljs.core.match.backtrack;
          } else {
            return null;
          }
        }
      } catch (e9438) {
        if (e9438 instanceof Error) {
          var e__4796__auto__ = e9438;
          if (e__4796__auto__ === cljs.core.match.backtrack) {
            return null;
          } else {
            throw e__4796__auto__;
          }
        } else {
          if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
            throw e9438;
          } else {
            return null;
          }
        }
      }
    }();
    if (cljs.core.truth_(temp__4090__auto__)) {
      var r__6471__auto__ = temp__4090__auto__;
      return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [function() {
        var or__3403__auto__ = cljs.core.first.call(null, r__6471__auto__);
        if (cljs.core.truth_(or__3403__auto__)) {
          return or__3403__auto__;
        } else {
          return state__6468__auto__;
        }
      }(), cljs.core.concat.call(null, cljs.core.next.call(null, r__6471__auto__), cljs.core.drop.call(null, 2, input__6469__auto__))], null);
    } else {
      return null;
    }
  };
  introduce_mtext_tags = function(state__6468__auto__, input__6469__auto__) {
    switch(arguments.length) {
      case 0:
        return introduce_mtext_tags__0.call(this);
      case 2:
        return introduce_mtext_tags__2.call(this, state__6468__auto__, input__6469__auto__);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  introduce_mtext_tags.cljs$core$IFn$_invoke$arity$0 = introduce_mtext_tags__0;
  introduce_mtext_tags.cljs$core$IFn$_invoke$arity$2 = introduce_mtext_tags__2;
  return introduce_mtext_tags;
}();
termcat.rules.html.introduce_outer_math_tags = termcat.rewrite.abstraction.call(null, function() {
  var G__9465 = null;
  var G__9465__0 = function() {
    return null;
  };
  var G__9465__2 = function(state__6468__auto__, input__6469__auto__) {
    var padded_input__6470__auto__ = cljs.core.concat.call(null, input__6469__auto__, cljs.core.repeat.call(null, null));
    var vec__9453 = cljs.core.cons.call(null, state__6468__auto__, cljs.core.take.call(null, 2, padded_input__6470__auto__));
    var state = cljs.core.nth.call(null, vec__9453, 0, null);
    var t1 = cljs.core.nth.call(null, vec__9453, 1, null);
    var t2 = cljs.core.nth.call(null, vec__9453, 2, null);
    var temp__4090__auto__ = function() {
      var ocr_9454 = clojure.core.reducers.reduce.call(null, cljs.core.conj, new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [state__6468__auto__], null), clojure.core.reducers.take.call(null, 2, clojure.core.reducers.map.call(null, termcat.term.tt, padded_input__6470__auto__)));
      try {
        if (cljs.core.vector_QMARK_.call(null, ocr_9454) && cljs.core.count.call(null, ocr_9454) === 3) {
          try {
            var ocr_9454_1__9461 = cljs.core.nth.call(null, ocr_9454, 1);
            if (cljs.core.keyword_identical_QMARK_.call(null, ocr_9454_1__9461, new cljs.core.Keyword(null, "close-math", "close-math", 3200923951))) {
              return new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [null, termcat.term.token.call(null, new cljs.core.Keyword(null, "html", "html", 1017117469), "\x3c/math\x3e"), t2], null);
            } else {
              if (cljs.core.keyword_identical_QMARK_.call(null, ocr_9454_1__9461, new cljs.core.Keyword(null, "open-math", "open-math", 2513851421))) {
                return new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [null, termcat.term.token.call(null, new cljs.core.Keyword(null, "html", "html", 1017117469), "\x3cmath\x3e"), t2], null);
              } else {
                if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
                  throw cljs.core.match.backtrack;
                } else {
                  return null;
                }
              }
            }
          } catch (e9464) {
            if (e9464 instanceof Error) {
              var e__4796__auto__ = e9464;
              if (e__4796__auto__ === cljs.core.match.backtrack) {
                throw cljs.core.match.backtrack;
              } else {
                throw e__4796__auto__;
              }
            } else {
              if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
                throw e9464;
              } else {
                return null;
              }
            }
          }
        } else {
          if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
            throw cljs.core.match.backtrack;
          } else {
            return null;
          }
        }
      } catch (e9463) {
        if (e9463 instanceof Error) {
          var e__4796__auto__ = e9463;
          if (e__4796__auto__ === cljs.core.match.backtrack) {
            return null;
          } else {
            throw e__4796__auto__;
          }
        } else {
          if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
            throw e9463;
          } else {
            return null;
          }
        }
      }
    }();
    if (cljs.core.truth_(temp__4090__auto__)) {
      var r__6471__auto__ = temp__4090__auto__;
      return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [function() {
        var or__3403__auto__ = cljs.core.first.call(null, r__6471__auto__);
        if (cljs.core.truth_(or__3403__auto__)) {
          return or__3403__auto__;
        } else {
          return state__6468__auto__;
        }
      }(), cljs.core.concat.call(null, cljs.core.next.call(null, r__6471__auto__), cljs.core.drop.call(null, 2, input__6469__auto__))], null);
    } else {
      return null;
    }
  };
  G__9465 = function(state__6468__auto__, input__6469__auto__) {
    switch(arguments.length) {
      case 0:
        return G__9465__0.call(this);
      case 2:
        return G__9465__2.call(this, state__6468__auto__, input__6469__auto__);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  return G__9465;
}());
termcat.rules.html.escape = function escape__$1(s) {
  if (typeof s === "string") {
    return clojure.string.join.call(null, function() {
      var iter__4120__auto__ = function iter__9474(s__9475) {
        return new cljs.core.LazySeq(null, function() {
          var s__9475__$1 = s__9475;
          while (true) {
            var temp__4092__auto__ = cljs.core.seq.call(null, s__9475__$1);
            if (temp__4092__auto__) {
              var s__9475__$2 = temp__4092__auto__;
              if (cljs.core.chunked_seq_QMARK_.call(null, s__9475__$2)) {
                var c__4118__auto__ = cljs.core.chunk_first.call(null, s__9475__$2);
                var size__4119__auto__ = cljs.core.count.call(null, c__4118__auto__);
                var b__9477 = cljs.core.chunk_buffer.call(null, size__4119__auto__);
                if (function() {
                  var i__9476 = 0;
                  while (true) {
                    if (i__9476 < size__4119__auto__) {
                      var c = cljs.core._nth.call(null, c__4118__auto__, i__9476);
                      cljs.core.chunk_append.call(null, b__9477, function() {
                        var G__9480 = c;
                        if (cljs.core._EQ_.call(null, '"', G__9480)) {
                          return "\x26quot;";
                        } else {
                          if (cljs.core._EQ_.call(null, "'", G__9480)) {
                            return "\x26apos;";
                          } else {
                            if (cljs.core._EQ_.call(null, "\x26", G__9480)) {
                              return "\x26amp;";
                            } else {
                              if (cljs.core._EQ_.call(null, "\x3e", G__9480)) {
                                return "\x26gt;";
                              } else {
                                if (cljs.core._EQ_.call(null, "\x3c", G__9480)) {
                                  return "\x26lt;";
                                } else {
                                  if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
                                    return c;
                                  } else {
                                    return null;
                                  }
                                }
                              }
                            }
                          }
                        }
                      }());
                      var G__9482 = i__9476 + 1;
                      i__9476 = G__9482;
                      continue;
                    } else {
                      return true;
                    }
                    break;
                  }
                }()) {
                  return cljs.core.chunk_cons.call(null, cljs.core.chunk.call(null, b__9477), iter__9474.call(null, cljs.core.chunk_rest.call(null, s__9475__$2)));
                } else {
                  return cljs.core.chunk_cons.call(null, cljs.core.chunk.call(null, b__9477), null);
                }
              } else {
                var c = cljs.core.first.call(null, s__9475__$2);
                return cljs.core.cons.call(null, function() {
                  var G__9481 = c;
                  if (cljs.core._EQ_.call(null, '"', G__9481)) {
                    return "\x26quot;";
                  } else {
                    if (cljs.core._EQ_.call(null, "'", G__9481)) {
                      return "\x26apos;";
                    } else {
                      if (cljs.core._EQ_.call(null, "\x26", G__9481)) {
                        return "\x26amp;";
                      } else {
                        if (cljs.core._EQ_.call(null, "\x3e", G__9481)) {
                          return "\x26gt;";
                        } else {
                          if (cljs.core._EQ_.call(null, "\x3c", G__9481)) {
                            return "\x26lt;";
                          } else {
                            if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
                              return c;
                            } else {
                              return null;
                            }
                          }
                        }
                      }
                    }
                  }
                }(), iter__9474.call(null, cljs.core.rest.call(null, s__9475__$2)));
              }
            } else {
              return null;
            }
            break;
          }
        }, null, null);
      };
      return iter__4120__auto__.call(null, s);
    }());
  } else {
    if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
      return "";
    } else {
      return null;
    }
  }
};
termcat.rules.html.flatten = termcat.rewrite.abstraction.call(null, function() {
  var G__9495 = null;
  var G__9495__0 = function() {
    return null;
  };
  var G__9495__2 = function(state__6468__auto__, input__6469__auto__) {
    var padded_input__6470__auto__ = cljs.core.concat.call(null, input__6469__auto__, cljs.core.repeat.call(null, null));
    var vec__9483 = cljs.core.cons.call(null, state__6468__auto__, cljs.core.take.call(null, 1, padded_input__6470__auto__));
    var state = cljs.core.nth.call(null, vec__9483, 0, null);
    var t1 = cljs.core.nth.call(null, vec__9483, 1, null);
    var temp__4090__auto__ = function() {
      var ocr_9484 = clojure.core.reducers.reduce.call(null, cljs.core.conj, new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [state__6468__auto__], null), clojure.core.reducers.take.call(null, 1, clojure.core.reducers.map.call(null, termcat.term.tt, padded_input__6470__auto__)));
      try {
        if (cljs.core.vector_QMARK_.call(null, ocr_9484) && cljs.core.count.call(null, ocr_9484) === 2) {
          try {
            var ocr_9484_1__9489 = cljs.core.nth.call(null, ocr_9484, 1);
            if (cljs.core.vector_QMARK_.call(null, ocr_9484_1__9489) && cljs.core.count.call(null, ocr_9484_1__9489) === 2) {
              try {
                var ocr_9484_1__9489_0__9490 = cljs.core.nth.call(null, ocr_9484_1__9489, 0);
                if (cljs.core.keyword_identical_QMARK_.call(null, ocr_9484_1__9489_0__9490, new cljs.core.Keyword(null, "block", "block", 1107736575))) {
                  return cljs.core.concat.call(null, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [null, termcat.term.token.call(null, new cljs.core.Keyword(null, "html", "html", 1017117469), termcat.rules.html.escape.call(null, termcat.term.payload.call(null, termcat.term.left.call(null, t1))))], null), termcat.rewrite.unwrap.call(null, t1), new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [termcat.term.token.call(null, new cljs.core.Keyword(null, 
                  "html", "html", 1017117469), termcat.rules.html.escape.call(null, termcat.term.payload.call(null, termcat.term.right.call(null, t1))))], null));
                } else {
                  if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
                    throw cljs.core.match.backtrack;
                  } else {
                    return null;
                  }
                }
              } catch (e9494) {
                if (e9494 instanceof Error) {
                  var e__4796__auto__ = e9494;
                  if (e__4796__auto__ === cljs.core.match.backtrack) {
                    throw cljs.core.match.backtrack;
                  } else {
                    throw e__4796__auto__;
                  }
                } else {
                  if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
                    throw e9494;
                  } else {
                    return null;
                  }
                }
              }
            } else {
              if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
                throw cljs.core.match.backtrack;
              } else {
                return null;
              }
            }
          } catch (e9493) {
            if (e9493 instanceof Error) {
              var e__4796__auto__ = e9493;
              if (e__4796__auto__ === cljs.core.match.backtrack) {
                throw cljs.core.match.backtrack;
              } else {
                throw e__4796__auto__;
              }
            } else {
              if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
                throw e9493;
              } else {
                return null;
              }
            }
          }
        } else {
          if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
            throw cljs.core.match.backtrack;
          } else {
            return null;
          }
        }
      } catch (e9492) {
        if (e9492 instanceof Error) {
          var e__4796__auto__ = e9492;
          if (e__4796__auto__ === cljs.core.match.backtrack) {
            return null;
          } else {
            throw e__4796__auto__;
          }
        } else {
          if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
            throw e9492;
          } else {
            return null;
          }
        }
      }
    }();
    if (cljs.core.truth_(temp__4090__auto__)) {
      var r__6471__auto__ = temp__4090__auto__;
      return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [function() {
        var or__3403__auto__ = cljs.core.first.call(null, r__6471__auto__);
        if (cljs.core.truth_(or__3403__auto__)) {
          return or__3403__auto__;
        } else {
          return state__6468__auto__;
        }
      }(), cljs.core.concat.call(null, cljs.core.next.call(null, r__6471__auto__), cljs.core.drop.call(null, 1, input__6469__auto__))], null);
    } else {
      return null;
    }
  };
  G__9495 = function(state__6468__auto__, input__6469__auto__) {
    switch(arguments.length) {
      case 0:
        return G__9495__0.call(this);
      case 2:
        return G__9495__2.call(this, state__6468__auto__, input__6469__auto__);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  return G__9495;
}());
termcat.rules.html.separate_head_body = function() {
  var separate_head_body = null;
  var separate_head_body__0 = function() {
    return new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null, "context", "context", 1965435169), new cljs.core.Keyword(null, "body", "body", 1016933652), new cljs.core.Keyword(null, "body", "body", 1016933652), cljs.core.PersistentVector.EMPTY, new cljs.core.Keyword(null, "head", "head", 1017102674), cljs.core.PersistentVector.EMPTY], null);
  };
  var separate_head_body__2 = function(state__6468__auto__, input__6469__auto__) {
    var padded_input__6470__auto__ = cljs.core.concat.call(null, input__6469__auto__, cljs.core.repeat.call(null, null));
    var vec__9507 = cljs.core.cons.call(null, state__6468__auto__, cljs.core.take.call(null, 1, padded_input__6470__auto__));
    var state = cljs.core.nth.call(null, vec__9507, 0, null);
    var t1 = cljs.core.nth.call(null, vec__9507, 1, null);
    var temp__4090__auto__ = function() {
      var ocr_9508 = clojure.core.reducers.reduce.call(null, cljs.core.conj, new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [state__6468__auto__], null), clojure.core.reducers.take.call(null, 1, clojure.core.reducers.map.call(null, termcat.term.tt, padded_input__6470__auto__)));
      try {
        if (cljs.core.vector_QMARK_.call(null, ocr_9508) && cljs.core.count.call(null, ocr_9508) === 2) {
          var ocr_9515 = clojure.string.lower_case.call(null, [cljs.core.str(termcat.term.payload.call(null, t1))].join(""));
          try {
            if (ocr_9515 === "\x3chead\x3e") {
              return new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.assoc.call(null, state, new cljs.core.Keyword(null, "context", "context", 1965435169), new cljs.core.Keyword(null, "head", "head", 1017102674))], null);
            } else {
              if (ocr_9515 === "\x3c/head\x3e") {
                return new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.assoc.call(null, state, new cljs.core.Keyword(null, "context", "context", 1965435169), new cljs.core.Keyword(null, "body", "body", 1016933652))], null);
              } else {
                if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
                  throw cljs.core.match.backtrack;
                } else {
                  return null;
                }
              }
            }
          } catch (e9517) {
            if (e9517 instanceof Error) {
              var e__4796__auto__ = e9517;
              if (e__4796__auto__ === cljs.core.match.backtrack) {
                return new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.update_in.call(null, state, new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [(new cljs.core.Keyword(null, "context", "context", 1965435169)).cljs$core$IFn$_invoke$arity$1(state)], null), cljs.core.conj, t1)], null);
              } else {
                throw e__4796__auto__;
              }
            } else {
              if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
                throw e9517;
              } else {
                return null;
              }
            }
          }
        } else {
          if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
            throw cljs.core.match.backtrack;
          } else {
            return null;
          }
        }
      } catch (e9514) {
        if (e9514 instanceof Error) {
          var e__4796__auto__ = e9514;
          if (e__4796__auto__ === cljs.core.match.backtrack) {
            return null;
          } else {
            throw e__4796__auto__;
          }
        } else {
          if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
            throw e9514;
          } else {
            return null;
          }
        }
      }
    }();
    if (cljs.core.truth_(temp__4090__auto__)) {
      var r__6471__auto__ = temp__4090__auto__;
      return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [function() {
        var or__3403__auto__ = cljs.core.first.call(null, r__6471__auto__);
        if (cljs.core.truth_(or__3403__auto__)) {
          return or__3403__auto__;
        } else {
          return state__6468__auto__;
        }
      }(), cljs.core.concat.call(null, cljs.core.next.call(null, r__6471__auto__), cljs.core.drop.call(null, 1, input__6469__auto__))], null);
    } else {
      return null;
    }
  };
  separate_head_body = function(state__6468__auto__, input__6469__auto__) {
    switch(arguments.length) {
      case 0:
        return separate_head_body__0.call(this);
      case 2:
        return separate_head_body__2.call(this, state__6468__auto__, input__6469__auto__);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  separate_head_body.cljs$core$IFn$_invoke$arity$0 = separate_head_body__0;
  separate_head_body.cljs$core$IFn$_invoke$arity$2 = separate_head_body__2;
  return separate_head_body;
}();
termcat.rules.html.add_boilerplate = function() {
  var add_boilerplate = null;
  var add_boilerplate__0 = function() {
    return null;
  };
  var add_boilerplate__2 = function(state, input) {
    return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [null, cljs.core.concat.call(null, new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [termcat.term.token.call(null, new cljs.core.Keyword(null, "html", "html", 1017117469), "\x3c!DOCTYPE html\x3e"), termcat.term.token.call(null, new cljs.core.Keyword(null, "html", "html", 1017117469), "\x3chtml\x3e"), termcat.term.token.call(null, new cljs.core.Keyword(null, "html", "html", 
    1017117469), "\x3chead\x3e"), termcat.term.token.call(null, new cljs.core.Keyword(null, "html", "html", 1017117469), "\x3cmeta charset\x3d'utf-8'\x3e")], null), (new cljs.core.Keyword(null, "head", "head", 1017102674)).cljs$core$IFn$_invoke$arity$1(state), new cljs.core.PersistentVector(null, 8, 5, cljs.core.PersistentVector.EMPTY_NODE, [termcat.term.token.call(null, new cljs.core.Keyword(null, "html", "html", 1017117469), "\x3cscript type\x3d'text/x-mathjax-config'\x3e"), termcat.term.token.call(null, 
    new cljs.core.Keyword(null, "html", "html", 1017117469), "MathJax.Hub.Config({ "), termcat.term.token.call(null, new cljs.core.Keyword(null, "html", "html", 1017117469), "MathML: { useMathMLspacing: true } });"), termcat.term.token.call(null, new cljs.core.Keyword(null, "html", "html", 1017117469), "\x3c/script\x3e"), termcat.term.token.call(null, new cljs.core.Keyword(null, "html", "html", 1017117469), "\x3cscript async src\x3d'http://cdn.mathjax.org/mathjax/latest/MathJax.js?config\x3dMML_HTMLorMML'\x3e\x3c/script\x3e"), 
    termcat.term.token.call(null, new cljs.core.Keyword(null, "html", "html", 1017117469), "\x3c/head\x3e"), termcat.term.token.call(null, new cljs.core.Keyword(null, "html", "html", 1017117469), "\x3cbody\x3e"), termcat.term.token.call(null, new cljs.core.Keyword(null, "start-body", "start-body", 3689019295))], null), (new cljs.core.Keyword(null, "body", "body", 1016933652)).cljs$core$IFn$_invoke$arity$1(state), new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [termcat.term.token.call(null, 
    new cljs.core.Keyword(null, "end-body", "end-body", 2692748998)), termcat.term.token.call(null, new cljs.core.Keyword(null, "html", "html", 1017117469), "\x3c/body\x3e"), termcat.term.token.call(null, new cljs.core.Keyword(null, "html", "html", 1017117469), "\x3c/html\x3e")], null))], null);
  };
  add_boilerplate = function(state, input) {
    switch(arguments.length) {
      case 0:
        return add_boilerplate__0.call(this);
      case 2:
        return add_boilerplate__2.call(this, state, input);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  add_boilerplate.cljs$core$IFn$_invoke$arity$0 = add_boilerplate__0;
  add_boilerplate.cljs$core$IFn$_invoke$arity$2 = add_boilerplate__2;
  return add_boilerplate;
}();
termcat.rules.html.remove_superfluous_whitespace = termcat.rewrite.abstraction.call(null, function() {
  var G__9541 = null;
  var G__9541__0 = function() {
    return null;
  };
  var G__9541__2 = function(state__6468__auto__, input__6469__auto__) {
    var padded_input__6470__auto__ = cljs.core.concat.call(null, input__6469__auto__, cljs.core.repeat.call(null, null));
    var vec__9518 = cljs.core.cons.call(null, state__6468__auto__, cljs.core.take.call(null, 2, padded_input__6470__auto__));
    var state = cljs.core.nth.call(null, vec__9518, 0, null);
    var t1 = cljs.core.nth.call(null, vec__9518, 1, null);
    var t2 = cljs.core.nth.call(null, vec__9518, 2, null);
    var temp__4090__auto__ = function() {
      var ocr_9519 = clojure.core.reducers.reduce.call(null, cljs.core.conj, new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [state__6468__auto__], null), clojure.core.reducers.take.call(null, 2, clojure.core.reducers.map.call(null, termcat.term.tt, padded_input__6470__auto__)));
      try {
        if (cljs.core.vector_QMARK_.call(null, ocr_9519) && cljs.core.count.call(null, ocr_9519) === 3) {
          try {
            var ocr_9519_1__9527 = cljs.core.nth.call(null, ocr_9519, 1);
            if (cljs.core.keyword_identical_QMARK_.call(null, ocr_9519_1__9527, new cljs.core.Keyword(null, "emptyline", "emptyline", 3889609267))) {
              try {
                var ocr_9519_2__9528 = cljs.core.nth.call(null, ocr_9519, 2);
                if (cljs.core.keyword_identical_QMARK_.call(null, ocr_9519_2__9528, new cljs.core.Keyword(null, "emptyline", "emptyline", 3889609267))) {
                  return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [null, t1], null);
                } else {
                  if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
                    throw cljs.core.match.backtrack;
                  } else {
                    return null;
                  }
                }
              } catch (e9539) {
                if (e9539 instanceof Error) {
                  var e__4796__auto__ = e9539;
                  if (e__4796__auto__ === cljs.core.match.backtrack) {
                    throw cljs.core.match.backtrack;
                  } else {
                    throw e__4796__auto__;
                  }
                } else {
                  if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
                    throw e9539;
                  } else {
                    return null;
                  }
                }
              }
            } else {
              if (cljs.core.keyword_identical_QMARK_.call(null, ocr_9519_1__9527, new cljs.core.Keyword(null, "whitespace", "whitespace", 1290815983))) {
                try {
                  var ocr_9519_2__9528 = cljs.core.nth.call(null, ocr_9519, 2);
                  if (cljs.core.keyword_identical_QMARK_.call(null, ocr_9519_2__9528, new cljs.core.Keyword(null, "whitespace", "whitespace", 1290815983))) {
                    return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [null, t2], null);
                  } else {
                    if (cljs.core.keyword_identical_QMARK_.call(null, ocr_9519_2__9528, new cljs.core.Keyword(null, "emptyline", "emptyline", 3889609267))) {
                      return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [null, t2], null);
                    } else {
                      if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
                        throw cljs.core.match.backtrack;
                      } else {
                        return null;
                      }
                    }
                  }
                } catch (e9540) {
                  if (e9540 instanceof Error) {
                    var e__4796__auto__ = e9540;
                    if (e__4796__auto__ === cljs.core.match.backtrack) {
                      throw cljs.core.match.backtrack;
                    } else {
                      throw e__4796__auto__;
                    }
                  } else {
                    if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
                      throw e9540;
                    } else {
                      return null;
                    }
                  }
                }
              } else {
                if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
                  throw cljs.core.match.backtrack;
                } else {
                  return null;
                }
              }
            }
          } catch (e9530) {
            if (e9530 instanceof Error) {
              var e__4796__auto__ = e9530;
              if (e__4796__auto__ === cljs.core.match.backtrack) {
                try {
                  var ocr_9519_1__9527 = cljs.core.nth.call(null, ocr_9519, 1);
                  if (cljs.core.keyword_identical_QMARK_.call(null, ocr_9519_1__9527, new cljs.core.Keyword(null, "whitespace", "whitespace", 1290815983))) {
                    try {
                      var ocr_9519_2__9528 = cljs.core.nth.call(null, ocr_9519, 2);
                      if (cljs.core.keyword_identical_QMARK_.call(null, ocr_9519_2__9528, new cljs.core.Keyword(null, "whitespace", "whitespace", 1290815983))) {
                        return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [null, t1], null);
                      } else {
                        if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
                          throw cljs.core.match.backtrack;
                        } else {
                          return null;
                        }
                      }
                    } catch (e9535) {
                      if (e9535 instanceof Error) {
                        var e__4796__auto____$1 = e9535;
                        if (e__4796__auto____$1 === cljs.core.match.backtrack) {
                          throw cljs.core.match.backtrack;
                        } else {
                          throw e__4796__auto____$1;
                        }
                      } else {
                        if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
                          throw e9535;
                        } else {
                          return null;
                        }
                      }
                    }
                  } else {
                    if (cljs.core.keyword_identical_QMARK_.call(null, ocr_9519_1__9527, new cljs.core.Keyword(null, "emptyline", "emptyline", 3889609267))) {
                      try {
                        var ocr_9519_2__9528 = cljs.core.nth.call(null, ocr_9519, 2);
                        if (cljs.core.keyword_identical_QMARK_.call(null, ocr_9519_2__9528, new cljs.core.Keyword(null, "whitespace", "whitespace", 1290815983))) {
                          return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [null, t1], null);
                        } else {
                          if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
                            throw cljs.core.match.backtrack;
                          } else {
                            return null;
                          }
                        }
                      } catch (e9536) {
                        if (e9536 instanceof Error) {
                          var e__4796__auto____$1 = e9536;
                          if (e__4796__auto____$1 === cljs.core.match.backtrack) {
                            throw cljs.core.match.backtrack;
                          } else {
                            throw e__4796__auto____$1;
                          }
                        } else {
                          if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
                            throw e9536;
                          } else {
                            return null;
                          }
                        }
                      }
                    } else {
                      if (cljs.core.keyword_identical_QMARK_.call(null, ocr_9519_1__9527, new cljs.core.Keyword(null, "start-body", "start-body", 3689019295))) {
                        try {
                          var ocr_9519_2__9528 = cljs.core.nth.call(null, ocr_9519, 2);
                          if (cljs.core.keyword_identical_QMARK_.call(null, ocr_9519_2__9528, new cljs.core.Keyword(null, "whitespace", "whitespace", 1290815983))) {
                            return new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [null], null);
                          } else {
                            if (cljs.core.keyword_identical_QMARK_.call(null, ocr_9519_2__9528, new cljs.core.Keyword(null, "emptyline", "emptyline", 3889609267))) {
                              return new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [null], null);
                            } else {
                              if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
                                throw cljs.core.match.backtrack;
                              } else {
                                return null;
                              }
                            }
                          }
                        } catch (e9537) {
                          if (e9537 instanceof Error) {
                            var e__4796__auto____$1 = e9537;
                            if (e__4796__auto____$1 === cljs.core.match.backtrack) {
                              throw cljs.core.match.backtrack;
                            } else {
                              throw e__4796__auto____$1;
                            }
                          } else {
                            if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
                              throw e9537;
                            } else {
                              return null;
                            }
                          }
                        }
                      } else {
                        if (ocr_9519_1__9527 === null) {
                          try {
                            var ocr_9519_2__9528 = cljs.core.nth.call(null, ocr_9519, 2);
                            if (cljs.core.keyword_identical_QMARK_.call(null, ocr_9519_2__9528, new cljs.core.Keyword(null, "whitespace", "whitespace", 1290815983))) {
                              return new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [null], null);
                            } else {
                              if (cljs.core.keyword_identical_QMARK_.call(null, ocr_9519_2__9528, new cljs.core.Keyword(null, "emptyline", "emptyline", 3889609267))) {
                                return new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [null], null);
                              } else {
                                if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
                                  throw cljs.core.match.backtrack;
                                } else {
                                  return null;
                                }
                              }
                            }
                          } catch (e9538) {
                            if (e9538 instanceof Error) {
                              var e__4796__auto____$1 = e9538;
                              if (e__4796__auto____$1 === cljs.core.match.backtrack) {
                                throw cljs.core.match.backtrack;
                              } else {
                                throw e__4796__auto____$1;
                              }
                            } else {
                              if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
                                throw e9538;
                              } else {
                                return null;
                              }
                            }
                          }
                        } else {
                          if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
                            throw cljs.core.match.backtrack;
                          } else {
                            return null;
                          }
                        }
                      }
                    }
                  }
                } catch (e9531) {
                  if (e9531 instanceof Error) {
                    var e__4796__auto____$1 = e9531;
                    if (e__4796__auto____$1 === cljs.core.match.backtrack) {
                      try {
                        var ocr_9519_1__9527 = cljs.core.nth.call(null, ocr_9519, 1);
                        if (cljs.core.keyword_identical_QMARK_.call(null, ocr_9519_1__9527, new cljs.core.Keyword(null, "whitespace", "whitespace", 1290815983))) {
                          try {
                            var ocr_9519_2__9528 = cljs.core.nth.call(null, ocr_9519, 2);
                            if (cljs.core.keyword_identical_QMARK_.call(null, ocr_9519_2__9528, new cljs.core.Keyword(null, "end-body", "end-body", 2692748998))) {
                              return new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [null], null);
                            } else {
                              if (ocr_9519_2__9528 === null) {
                                return new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [null], null);
                              } else {
                                if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
                                  throw cljs.core.match.backtrack;
                                } else {
                                  return null;
                                }
                              }
                            }
                          } catch (e9533) {
                            if (e9533 instanceof Error) {
                              var e__4796__auto____$2 = e9533;
                              if (e__4796__auto____$2 === cljs.core.match.backtrack) {
                                throw cljs.core.match.backtrack;
                              } else {
                                throw e__4796__auto____$2;
                              }
                            } else {
                              if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
                                throw e9533;
                              } else {
                                return null;
                              }
                            }
                          }
                        } else {
                          if (cljs.core.keyword_identical_QMARK_.call(null, ocr_9519_1__9527, new cljs.core.Keyword(null, "emptyline", "emptyline", 3889609267))) {
                            try {
                              var ocr_9519_2__9528 = cljs.core.nth.call(null, ocr_9519, 2);
                              if (cljs.core.keyword_identical_QMARK_.call(null, ocr_9519_2__9528, new cljs.core.Keyword(null, "end-body", "end-body", 2692748998))) {
                                return new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [null], null);
                              } else {
                                if (ocr_9519_2__9528 === null) {
                                  return new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [null], null);
                                } else {
                                  if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
                                    throw cljs.core.match.backtrack;
                                  } else {
                                    return null;
                                  }
                                }
                              }
                            } catch (e9534) {
                              if (e9534 instanceof Error) {
                                var e__4796__auto____$2 = e9534;
                                if (e__4796__auto____$2 === cljs.core.match.backtrack) {
                                  throw cljs.core.match.backtrack;
                                } else {
                                  throw e__4796__auto____$2;
                                }
                              } else {
                                if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
                                  throw e9534;
                                } else {
                                  return null;
                                }
                              }
                            }
                          } else {
                            if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
                              throw cljs.core.match.backtrack;
                            } else {
                              return null;
                            }
                          }
                        }
                      } catch (e9532) {
                        if (e9532 instanceof Error) {
                          var e__4796__auto____$2 = e9532;
                          if (e__4796__auto____$2 === cljs.core.match.backtrack) {
                            throw cljs.core.match.backtrack;
                          } else {
                            throw e__4796__auto____$2;
                          }
                        } else {
                          if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
                            throw e9532;
                          } else {
                            return null;
                          }
                        }
                      }
                    } else {
                      throw e__4796__auto____$1;
                    }
                  } else {
                    if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
                      throw e9531;
                    } else {
                      return null;
                    }
                  }
                }
              } else {
                throw e__4796__auto__;
              }
            } else {
              if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
                throw e9530;
              } else {
                return null;
              }
            }
          }
        } else {
          if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
            throw cljs.core.match.backtrack;
          } else {
            return null;
          }
        }
      } catch (e9529) {
        if (e9529 instanceof Error) {
          var e__4796__auto__ = e9529;
          if (e__4796__auto__ === cljs.core.match.backtrack) {
            return null;
          } else {
            throw e__4796__auto__;
          }
        } else {
          if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
            throw e9529;
          } else {
            return null;
          }
        }
      }
    }();
    if (cljs.core.truth_(temp__4090__auto__)) {
      var r__6471__auto__ = temp__4090__auto__;
      return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [function() {
        var or__3403__auto__ = cljs.core.first.call(null, r__6471__auto__);
        if (cljs.core.truth_(or__3403__auto__)) {
          return or__3403__auto__;
        } else {
          return state__6468__auto__;
        }
      }(), cljs.core.concat.call(null, cljs.core.next.call(null, r__6471__auto__), cljs.core.drop.call(null, 2, input__6469__auto__))], null);
    } else {
      return null;
    }
  };
  G__9541 = function(state__6468__auto__, input__6469__auto__) {
    switch(arguments.length) {
      case 0:
        return G__9541__0.call(this);
      case 2:
        return G__9541__2.call(this, state__6468__auto__, input__6469__auto__);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  return G__9541;
}());
termcat.rules.html.to_html_tokens = termcat.rewrite.abstraction.call(null, function() {
  var G__9555 = null;
  var G__9555__0 = function() {
    return null;
  };
  var G__9555__2 = function(state__6468__auto__, input__6469__auto__) {
    var padded_input__6470__auto__ = cljs.core.concat.call(null, input__6469__auto__, cljs.core.repeat.call(null, null));
    var vec__9542 = cljs.core.cons.call(null, state__6468__auto__, cljs.core.take.call(null, 1, padded_input__6470__auto__));
    var state = cljs.core.nth.call(null, vec__9542, 0, null);
    var t1 = cljs.core.nth.call(null, vec__9542, 1, null);
    var temp__4090__auto__ = function() {
      var ocr_9543 = clojure.core.reducers.reduce.call(null, cljs.core.conj, new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [state__6468__auto__], null), clojure.core.reducers.take.call(null, 1, clojure.core.reducers.map.call(null, termcat.term.tt, padded_input__6470__auto__)));
      try {
        if (cljs.core.vector_QMARK_.call(null, ocr_9543) && cljs.core.count.call(null, ocr_9543) === 2) {
          try {
            var ocr_9543_1__9552 = cljs.core.nth.call(null, ocr_9543, 1);
            if (cljs.core.keyword_identical_QMARK_.call(null, ocr_9543_1__9552, new cljs.core.Keyword(null, "whitespace", "whitespace", 1290815983))) {
              if (cljs.core.truth_(termcat.term.payload.call(null, t1))) {
                return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [null, termcat.term.token.call(null, new cljs.core.Keyword(null, "html", "html", 1017117469), " ")], null);
              } else {
                return new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [null], null);
              }
            } else {
              if (cljs.core.keyword_identical_QMARK_.call(null, ocr_9543_1__9552, new cljs.core.Keyword(null, "emptyline", "emptyline", 3889609267))) {
                return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [null, termcat.term.token.call(null, new cljs.core.Keyword(null, "html", "html", 1017117469), "\x3cp\x3e")], null);
              } else {
                if (cljs.core.keyword_identical_QMARK_.call(null, ocr_9543_1__9552, new cljs.core.Keyword(null, "html", "html", 1017117469))) {
                  return null;
                } else {
                  if (ocr_9543_1__9552 === null) {
                    return null;
                  } else {
                    if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
                      throw cljs.core.match.backtrack;
                    } else {
                      return null;
                    }
                  }
                }
              }
            }
          } catch (e9554) {
            if (e9554 instanceof Error) {
              var e__4796__auto__ = e9554;
              if (e__4796__auto__ === cljs.core.match.backtrack) {
                return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [null, termcat.term.token.call(null, new cljs.core.Keyword(null, "html", "html", 1017117469), termcat.rules.html.escape.call(null, termcat.term.payload.call(null, t1)))], null);
              } else {
                throw e__4796__auto__;
              }
            } else {
              if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
                throw e9554;
              } else {
                return null;
              }
            }
          }
        } else {
          if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
            throw cljs.core.match.backtrack;
          } else {
            return null;
          }
        }
      } catch (e9553) {
        if (e9553 instanceof Error) {
          var e__4796__auto__ = e9553;
          if (e__4796__auto__ === cljs.core.match.backtrack) {
            return null;
          } else {
            throw e__4796__auto__;
          }
        } else {
          if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
            throw e9553;
          } else {
            return null;
          }
        }
      }
    }();
    if (cljs.core.truth_(temp__4090__auto__)) {
      var r__6471__auto__ = temp__4090__auto__;
      return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [function() {
        var or__3403__auto__ = cljs.core.first.call(null, r__6471__auto__);
        if (cljs.core.truth_(or__3403__auto__)) {
          return or__3403__auto__;
        } else {
          return state__6468__auto__;
        }
      }(), cljs.core.concat.call(null, cljs.core.next.call(null, r__6471__auto__), cljs.core.drop.call(null, 1, input__6469__auto__))], null);
    } else {
      return null;
    }
  };
  G__9555 = function(state__6468__auto__, input__6469__auto__) {
    switch(arguments.length) {
      case 0:
        return G__9555__0.call(this);
      case 2:
        return G__9555__2.call(this, state__6468__auto__, input__6469__auto__);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  return G__9555;
}());
termcat.rules.html.to_string = function to_string(v) {
  return clojure.core.reducers.reduce.call(null, cljs.core.str, clojure.core.reducers.map.call(null, termcat.term.payload, v));
};
goog.provide("termcat.util.lambda");
goog.require("cljs.core");
goog.require("termcat.util.math");
goog.require("termcat.util.math");
goog.require("termcat.term");
goog.require("termcat.term");
goog.require("termcat.rewrite");
goog.require("termcat.rewrite");
goog.require("clojure.string");
goog.require("clojure.string");
termcat.util.lambda.tval = function tval(t, pred) {
  var $ = termcat.term.ednval.call(null, termcat.term.center.call(null, t));
  var $__$1 = cljs.core.truth_(pred.call(null, $)) ? $ : function() {
    throw new java.lang.Exception("Wrong type");
  }();
  return $__$1;
};
termcat.util.lambda.curry_fun = function() {
  var curry_fun = null;
  var curry_fun__1 = function(f) {
    return function(self, x) {
      if (cljs.core.truth_(x)) {
        return new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [termcat.term.token.call(null, new cljs.core.Keyword(null, "fun", "fun", 1014006001), curry_fun.call(null, cljs.core.partial.call(null, f, x)))], null);
      } else {
        return f.call(null);
      }
    };
  };
  var curry_fun__2 = function(f, n) {
    if (cljs.core._EQ_.call(null, n, 1)) {
      return function(self__7749__auto__, x) {
        if (cljs.core.truth_(x)) {
          return f.call(null, x);
        } else {
          return new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [termcat.term.token.call(null, new cljs.core.Keyword(null, "error", "error", 1110689146), "Missing (system) function argument(s)")], null);
        }
      };
    } else {
      return function(self__7749__auto__, x) {
        if (cljs.core.truth_(x)) {
          return new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [termcat.term.token.call(null, new cljs.core.Keyword(null, "fun", "fun", 1014006001), curry_fun.call(null, cljs.core.partial.call(null, f, x), n - 1))], null);
        } else {
          return new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [termcat.term.token.call(null, new cljs.core.Keyword(null, "error", "error", 1110689146), "Missing (system) function argument(s)")], null);
        }
      };
    }
  };
  curry_fun = function(f, n) {
    switch(arguments.length) {
      case 1:
        return curry_fun__1.call(this, f);
      case 2:
        return curry_fun__2.call(this, f, n);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  curry_fun.cljs$core$IFn$_invoke$arity$1 = curry_fun__1;
  curry_fun.cljs$core$IFn$_invoke$arity$2 = curry_fun__2;
  return curry_fun;
}();
termcat.util.lambda.html_constant = function html_constant(code) {
  return function(self__7743__auto__, constant_fun_x10489) {
    if (cljs.core.truth_(constant_fun_x10489)) {
      return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [termcat.term.token.call(null, new cljs.core.Keyword(null, "html", "html", 1017117469), code), constant_fun_x10489], null);
    } else {
      return new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [termcat.term.token.call(null, new cljs.core.Keyword(null, "html", "html", 1017117469), code)], null);
    }
  };
};
termcat.util.lambda.html_wrapper = function html_wrapper(tag) {
  return function(self__7749__auto__, x) {
    if (cljs.core.truth_(x)) {
      return cljs.core.concat.call(null, new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [termcat.term.token.call(null, new cljs.core.Keyword(null, "html", "html", 1017117469), [cljs.core.str("\x3c"), cljs.core.str(tag), cljs.core.str("\x3e")].join(""))], null), termcat.rewrite.unwrap.call(null, x), new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [termcat.term.token.call(null, new cljs.core.Keyword(null, "html", "html", 1017117469), 
      [cljs.core.str("\x3c"), cljs.core.str("/"), cljs.core.str(tag), cljs.core.str("\x3e")].join(""))], null));
    } else {
      return new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [termcat.term.token.call(null, new cljs.core.Keyword(null, "error", "error", 1110689146), "Missing (system) function argument(s)")], null);
    }
  };
};
termcat.util.lambda.html_link = function html_link(text, url) {
  return new cljs.core.PersistentVector(null, 5, 5, cljs.core.PersistentVector.EMPTY_NODE, [termcat.term.token.call(null, new cljs.core.Keyword(null, "html", "html", 1017117469), "\x3ca href\x3d'"), termcat.util.math.math_block.call(null, termcat.term.center.call(null, url), new cljs.core.Keyword(null, "text", "text", 1017460895)), termcat.term.token.call(null, new cljs.core.Keyword(null, "html", "html", 1017117469), "'\x3e"), termcat.util.math.math_block.call(null, termcat.term.center.call(null, 
  text), new cljs.core.Keyword(null, "text", "text", 1017460895)), termcat.term.token.call(null, new cljs.core.Keyword(null, "html", "html", 1017117469), "\x3c/a\x3e")], null);
};
termcat.util.lambda.html_image = function html_image(alt_text, url) {
  return new cljs.core.PersistentVector(null, 5, 5, cljs.core.PersistentVector.EMPTY_NODE, [termcat.term.token.call(null, new cljs.core.Keyword(null, "html", "html", 1017117469), "\x3cimg src\x3d'"), termcat.util.math.math_block.call(null, termcat.term.center.call(null, url), new cljs.core.Keyword(null, "text", "text", 1017460895)), termcat.term.token.call(null, new cljs.core.Keyword(null, "html", "html", 1017117469), "' alt\x3d'"), termcat.util.math.math_block.call(null, termcat.term.center.call(null, 
  alt_text), new cljs.core.Keyword(null, "text", "text", 1017460895)), termcat.term.token.call(null, new cljs.core.Keyword(null, "html", "html", 1017117469), "'\x3e")], null);
};
termcat.util.lambda.bullet_list = function() {
  var bullet_list__delegate = function(rows) {
    return cljs.core.concat.call(null, new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [termcat.term.token.call(null, new cljs.core.Keyword(null, "html", "html", 1017117469), "\x3cul\x3e")], null), cljs.core.mapcat.call(null, function(x) {
      return cljs.core.concat.call(null, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [termcat.term.token.call(null, new cljs.core.Keyword(null, "html", "html", 1017117469), "\x3cli\x3e"), termcat.term.token.call(null, new cljs.core.Keyword(null, "whitespace", "whitespace", 1290815983))], null), termcat.rewrite.unwrap.call(null, x), new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [termcat.term.token.call(null, new cljs.core.Keyword(null, 
      "whitespace", "whitespace", 1290815983))], null));
    }, rows), new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [termcat.term.token.call(null, new cljs.core.Keyword(null, "html", "html", 1017117469), "\x3c/ul\x3e")], null));
  };
  var bullet_list = function(var_args) {
    var rows = null;
    if (arguments.length > 0) {
      rows = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0), 0);
    }
    return bullet_list__delegate.call(this, rows);
  };
  bullet_list.cljs$lang$maxFixedArity = 0;
  bullet_list.cljs$lang$applyTo = function(arglist__10490) {
    var rows = cljs.core.seq(arglist__10490);
    return bullet_list__delegate(rows);
  };
  bullet_list.cljs$core$IFn$_invoke$arity$variadic = bullet_list__delegate;
  return bullet_list;
}();
termcat.util.lambda.numbered_list = function() {
  var numbered_list__delegate = function(rows) {
    return cljs.core.concat.call(null, new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [termcat.term.token.call(null, new cljs.core.Keyword(null, "html", "html", 1017117469), "\x3col\x3e")], null), cljs.core.mapcat.call(null, function(x) {
      return cljs.core.concat.call(null, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [termcat.term.token.call(null, new cljs.core.Keyword(null, "html", "html", 1017117469), "\x3cli\x3e"), termcat.term.token.call(null, new cljs.core.Keyword(null, "whitespace", "whitespace", 1290815983))], null), termcat.rewrite.unwrap.call(null, x), new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [termcat.term.token.call(null, new cljs.core.Keyword(null, 
      "whitespace", "whitespace", 1290815983))], null));
    }, rows), new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [termcat.term.token.call(null, new cljs.core.Keyword(null, "html", "html", 1017117469), "\x3c/ol\x3e")], null));
  };
  var numbered_list = function(var_args) {
    var rows = null;
    if (arguments.length > 0) {
      rows = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0), 0);
    }
    return numbered_list__delegate.call(this, rows);
  };
  numbered_list.cljs$lang$maxFixedArity = 0;
  numbered_list.cljs$lang$applyTo = function(arglist__10491) {
    var rows = cljs.core.seq(arglist__10491);
    return numbered_list__delegate(rows);
  };
  numbered_list.cljs$core$IFn$_invoke$arity$variadic = numbered_list__delegate;
  return numbered_list;
}();
termcat.util.lambda.map_fn = function() {
  var map_fn__delegate = function(lambda, args) {
    var x = cljs.core.mapcat.call(null, function(x, y) {
      return cljs.core.concat.call(null, new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [termcat.term.token.call(null, new cljs.core.Keyword(null, "whitespace", "whitespace", 1290815983))], null), x, new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [y], null));
    }, cljs.core.repeat.call(null, termcat.rewrite.unwrap.call(null, lambda)), args);
    return x;
  };
  var map_fn = function(lambda, var_args) {
    var args = null;
    if (arguments.length > 1) {
      args = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return map_fn__delegate.call(this, lambda, args);
  };
  map_fn.cljs$lang$maxFixedArity = 1;
  map_fn.cljs$lang$applyTo = function(arglist__10492) {
    var lambda = cljs.core.first(arglist__10492);
    var args = cljs.core.rest(arglist__10492);
    return map_fn__delegate(lambda, args);
  };
  map_fn.cljs$core$IFn$_invoke$arity$variadic = map_fn__delegate;
  return map_fn;
}();
termcat.util.lambda.reduce_fn = function reduce_fn(lambda, result) {
  return new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [termcat.term.token.call(null, new cljs.core.Keyword(null, "fun", "fun", 1014006001), function(self, new_el) {
    if (new_el == null) {
      return new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [result], null);
    } else {
      return new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [termcat.term.token.call(null, new cljs.core.Keyword(null, "fun", "fun", 1014006001), termcat.util.lambda.curry_fun.call(null, reduce_fn, 2)), lambda, termcat.term.block.call(null, termcat.term.ldelim.call(null, new cljs.core.Keyword(null, "reduce-fn", "reduce-fn", 3052859905)), termcat.term.fragmentcat.call(null, termcat.rewrite.unwrap.call(null, lambda), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, 
      [result, new_el], null)), termcat.term.rdelim.call(null, new cljs.core.Keyword(null, "reduce-fn", "reduce-fn", 3052859905)))], null);
    }
  })], null);
};
termcat.util.lambda.block_source = function block_source(block_t) {
  var lpos = (new cljs.core.Keyword(null, "lpos", "lpos", 1017232858)).cljs$core$IFn$_invoke$arity$1(cljs.core.meta.call(null, termcat.term.left.call(null, block_t)));
  var rpos = (new cljs.core.Keyword(null, "rpos", "rpos", 1017411604)).cljs$core$IFn$_invoke$arity$1(cljs.core.meta.call(null, termcat.term.right.call(null, block_t)));
  var src = (new cljs.core.Keyword(null, "src", "src", 1014018390)).cljs$core$IFn$_invoke$arity$1(cljs.core.meta.call(null, termcat.term.left.call(null, block_t)));
  if (cljs.core.truth_(function() {
    var and__3391__auto__ = lpos;
    if (cljs.core.truth_(and__3391__auto__)) {
      return rpos;
    } else {
      return and__3391__auto__;
    }
  }())) {
    return termcat.term.token.call(null, new cljs.core.Keyword(null, "default", "default", 2558708147), cljs.core.subs.call(null, src, lpos + 1, rpos));
  } else {
    return termcat.term.token.call(null, new cljs.core.Keyword(null, "error", "error", 1110689146), "Source code not found");
  }
};
termcat.util.lambda.lit = function lit(src) {
  return new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [termcat.util.lambda.block_source.call(null, src)], null);
};
termcat.util.lambda.litfork = function litfork(src) {
  return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [termcat.term.block.call(null, termcat.term.ldelim.call(null, new cljs.core.Keyword(null, "litfork", "litfork", 1196392267)), termcat.term.fragment.call(null, termcat.util.lambda.block_source.call(null, src)), termcat.term.rdelim.call(null, new cljs.core.Keyword(null, "litfork", "litfork", 1196392267))), src], null);
};
termcat.util.lambda.nth_fn = function nth_fn(n) {
  return new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [termcat.term.token.call(null, new cljs.core.Keyword(null, "fun", "fun", 1014006001), termcat.util.lambda.curry_fun.call(null, function() {
    var G__10495__delegate = function(args) {
      try {
        return termcat.rewrite.unwrap.call(null, cljs.core.nth.call(null, args, termcat.util.lambda.tval.call(null, n, cljs.core.integer_QMARK_)));
      } catch (e10494) {
        if (e10494 instanceof java.lang.Exception) {
          var x__7737__auto__ = e10494;
          return new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [termcat.term.token.call(null, new cljs.core.Keyword(null, "error", "error", 1110689146), x__7737__auto__.getMessage())], null);
        } else {
          if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
            throw e10494;
          } else {
            return null;
          }
        }
      }
    };
    var G__10495 = function(var_args) {
      var args = null;
      if (arguments.length > 0) {
        args = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0), 0);
      }
      return G__10495__delegate.call(this, args);
    };
    G__10495.cljs$lang$maxFixedArity = 0;
    G__10495.cljs$lang$applyTo = function(arglist__10496) {
      var args = cljs.core.seq(arglist__10496);
      return G__10495__delegate(args);
    };
    G__10495.cljs$core$IFn$_invoke$arity$variadic = G__10495__delegate;
    return G__10495;
  }()))], null);
};
termcat.util.lambda.apply_fn = function apply_fn(f, arg) {
  return cljs.core.concat.call(null, cljs.core.mapcat.call(null, termcat.rewrite.unwrap, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [f, arg], null)), new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [termcat.term.token.call(null, new cljs.core.Keyword(null, "whitespace", "whitespace", 1290815983))], null));
};
termcat.util.lambda.plus = function plus(x, y) {
  try {
    return new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [termcat.term.token.call(null, new cljs.core.Keyword(null, "default", "default", 2558708147), [cljs.core.str(termcat.util.lambda.tval.call(null, x, cljs.core.number_QMARK_) + termcat.util.lambda.tval.call(null, y, cljs.core.number_QMARK_))].join(""))], null);
  } catch (e10498) {
    if (e10498 instanceof java.lang.Exception) {
      var x__7737__auto__ = e10498;
      return new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [termcat.term.token.call(null, new cljs.core.Keyword(null, "error", "error", 1110689146), x__7737__auto__.getMessage())], null);
    } else {
      if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
        throw e10498;
      } else {
        return null;
      }
    }
  }
};
termcat.util.lambda.greater_than = function greater_than(x, y) {
  try {
    return new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [termcat.term.token.call(null, new cljs.core.Keyword(null, "default", "default", 2558708147), [cljs.core.str(termcat.util.lambda.tval.call(null, x, cljs.core.number_QMARK_) > termcat.util.lambda.tval.call(null, y, cljs.core.number_QMARK_))].join(""))], null);
  } catch (e10500) {
    if (e10500 instanceof java.lang.Exception) {
      var x__7737__auto__ = e10500;
      return new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [termcat.term.token.call(null, new cljs.core.Keyword(null, "error", "error", 1110689146), x__7737__auto__.getMessage())], null);
    } else {
      if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
        throw e10500;
      } else {
        return null;
      }
    }
  }
};
termcat.util.lambda.range_fn = function range_fn(start, end) {
  try {
    return cljs.core.map.call(null, function(p1__10501_SHARP_) {
      return termcat.term.block.call(null, termcat.term.ldelim.call(null, new cljs.core.Keyword(null, "range", "range", 1122184367)), termcat.term.fragment.call(null, termcat.term.token.call(null, new cljs.core.Keyword(null, "default", "default", 2558708147), p1__10501_SHARP_)), termcat.term.rdelim.call(null, new cljs.core.Keyword(null, "range", "range", 1122184367)));
    }, cljs.core.map.call(null, cljs.core.str, cljs.core.range.call(null, termcat.util.lambda.tval.call(null, start, cljs.core.integer_QMARK_), termcat.util.lambda.tval.call(null, end, cljs.core.integer_QMARK_))));
  } catch (e10503) {
    if (e10503 instanceof java.lang.Exception) {
      var x__7737__auto__ = e10503;
      return new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [termcat.term.token.call(null, new cljs.core.Keyword(null, "error", "error", 1110689146), x__7737__auto__.getMessage())], null);
    } else {
      if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
        throw e10503;
      } else {
        return null;
      }
    }
  }
};
termcat.util.lambda.eq_fn = function eq_fn(t1, t2) {
  var v1 = termcat.util.lambda.tval.call(null, t1, cljs.core.constantly.call(null, true));
  var v2 = termcat.util.lambda.tval.call(null, t2, cljs.core.constantly.call(null, true));
  return new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [termcat.term.token.call(null, new cljs.core.Keyword(null, "default", "default", 2558708147), [cljs.core.str(cljs.core.not_EQ_.call(null, null, v1) && cljs.core._EQ_.call(null, v1, v2))].join(""))], null);
};
termcat.util.lambda.fun_map = cljs.core.PersistentHashMap.fromArrays([".apply", ":h1", ":h2", ":h3", ":h4", ":h5", ":h6", ":img", ".lit", ":numbered-list", ".litfork", ".identity", ".map", ".range", ":bullet-list", ":strong", ":quotation", ":underline", ".add", ".nth", ".reduce", ":link", ".eq", ":emph", ".gt"], [termcat.util.lambda.curry_fun.call(null, termcat.util.lambda.apply_fn, 2), termcat.util.lambda.html_wrapper.call(null, "h1"), termcat.util.lambda.html_wrapper.call(null, "h2"), termcat.util.lambda.html_wrapper.call(null, 
"h3"), termcat.util.lambda.html_wrapper.call(null, "h4"), termcat.util.lambda.html_wrapper.call(null, "h5"), termcat.util.lambda.html_wrapper.call(null, "h6"), termcat.util.lambda.curry_fun.call(null, termcat.util.lambda.html_image, 2), termcat.util.lambda.curry_fun.call(null, termcat.util.lambda.lit, 1), termcat.util.lambda.curry_fun.call(null, termcat.util.lambda.numbered_list), termcat.util.lambda.curry_fun.call(null, termcat.util.lambda.litfork, 1), function(self__7749__auto__, x) {
  if (cljs.core.truth_(x)) {
    return termcat.rewrite.unwrap.call(null, x);
  } else {
    return new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [termcat.term.token.call(null, new cljs.core.Keyword(null, "error", "error", 1110689146), "Missing (system) function argument(s)")], null);
  }
}, termcat.util.lambda.curry_fun.call(null, termcat.util.lambda.map_fn), termcat.util.lambda.curry_fun.call(null, termcat.util.lambda.range_fn, 2), termcat.util.lambda.curry_fun.call(null, termcat.util.lambda.bullet_list), termcat.util.lambda.html_wrapper.call(null, "strong"), termcat.util.lambda.html_wrapper.call(null, "blockquote"), termcat.util.lambda.html_wrapper.call(null, "u"), termcat.util.lambda.curry_fun.call(null, termcat.util.lambda.plus, 2), termcat.util.lambda.curry_fun.call(null, termcat.util.lambda.nth_fn, 
1), termcat.util.lambda.curry_fun.call(null, termcat.util.lambda.reduce_fn, 2), termcat.util.lambda.curry_fun.call(null, termcat.util.lambda.html_link, 2), termcat.util.lambda.curry_fun.call(null, termcat.util.lambda.eq_fn, 2), termcat.util.lambda.html_wrapper.call(null, "em"), termcat.util.lambda.curry_fun.call(null, termcat.util.lambda.greater_than, 2)]);
termcat.util.lambda.fun_call_head = function fun_call_head(fname) {
  var f = cljs.core.get.call(null, termcat.util.lambda.fun_map, fname);
  if (cljs.core.fn_QMARK_.call(null, f)) {
    return termcat.term.token.call(null, new cljs.core.Keyword(null, "fun", "fun", 1014006001), cljs.core.with_meta.call(null, f, new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "fun-name", "fun-name", 2344786315), fname], null)));
  } else {
    return termcat.term.token.call(null, new cljs.core.Keyword(null, "error", "error", 1110689146), [cljs.core.str("Function not found \u2013 "), cljs.core.str(fname)].join(""));
  }
};
termcat.util.lambda.fun_call_seq = function() {
  var fun_call_seq__delegate = function(fname, args) {
    return cljs.core.concat.call(null, new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [termcat.util.lambda.fun_call_head.call(null, fname)], null), function() {
      var iter__4120__auto__ = function iter__10508(s__10509) {
        return new cljs.core.LazySeq(null, function() {
          var s__10509__$1 = s__10509;
          while (true) {
            var temp__4092__auto__ = cljs.core.seq.call(null, s__10509__$1);
            if (temp__4092__auto__) {
              var s__10509__$2 = temp__4092__auto__;
              if (cljs.core.chunked_seq_QMARK_.call(null, s__10509__$2)) {
                var c__4118__auto__ = cljs.core.chunk_first.call(null, s__10509__$2);
                var size__4119__auto__ = cljs.core.count.call(null, c__4118__auto__);
                var b__10511 = cljs.core.chunk_buffer.call(null, size__4119__auto__);
                if (function() {
                  var i__10510 = 0;
                  while (true) {
                    if (i__10510 < size__4119__auto__) {
                      var arg = cljs.core._nth.call(null, c__4118__auto__, i__10510);
                      cljs.core.chunk_append.call(null, b__10511, termcat.term.block.call(null, termcat.term.token.call(null, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "ldelim", "ldelim", 4201320693), new cljs.core.Keyword(null, "fun-call-seq", "fun-call-seq", 1459025008)], null)), arg, termcat.term.token.call(null, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "rdelim", 
                      "rdelim", 4373095599), new cljs.core.Keyword(null, "fun-call-seq", "fun-call-seq", 1459025008)], null))));
                      var G__10512 = i__10510 + 1;
                      i__10510 = G__10512;
                      continue;
                    } else {
                      return true;
                    }
                    break;
                  }
                }()) {
                  return cljs.core.chunk_cons.call(null, cljs.core.chunk.call(null, b__10511), iter__10508.call(null, cljs.core.chunk_rest.call(null, s__10509__$2)));
                } else {
                  return cljs.core.chunk_cons.call(null, cljs.core.chunk.call(null, b__10511), null);
                }
              } else {
                var arg = cljs.core.first.call(null, s__10509__$2);
                return cljs.core.cons.call(null, termcat.term.block.call(null, termcat.term.token.call(null, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "ldelim", "ldelim", 4201320693), new cljs.core.Keyword(null, "fun-call-seq", "fun-call-seq", 1459025008)], null)), arg, termcat.term.token.call(null, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "rdelim", "rdelim", 
                4373095599), new cljs.core.Keyword(null, "fun-call-seq", "fun-call-seq", 1459025008)], null))), iter__10508.call(null, cljs.core.rest.call(null, s__10509__$2)));
              }
            } else {
              return null;
            }
            break;
          }
        }, null, null);
      };
      return iter__4120__auto__.call(null, args);
    }());
  };
  var fun_call_seq = function(fname, var_args) {
    var args = null;
    if (arguments.length > 1) {
      args = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return fun_call_seq__delegate.call(this, fname, args);
  };
  fun_call_seq.cljs$lang$maxFixedArity = 1;
  fun_call_seq.cljs$lang$applyTo = function(arglist__10513) {
    var fname = cljs.core.first(arglist__10513);
    var args = cljs.core.rest(arglist__10513);
    return fun_call_seq__delegate(fname, args);
  };
  fun_call_seq.cljs$core$IFn$_invoke$arity$variadic = fun_call_seq__delegate;
  return fun_call_seq;
}();
goog.provide("termcat.rules.markdown");
goog.require("cljs.core");
goog.require("termcat.util.lambda");
goog.require("termcat.util.lambda");
goog.require("termcat.term");
goog.require("termcat.term");
goog.require("termcat.rewrite");
goog.require("termcat.rewrite");
termcat.rules.markdown.introduce_section_calls = termcat.rewrite.abstraction.call(null, function() {
  var G__9598 = null;
  var G__9598__0 = function() {
    return null;
  };
  var G__9598__2 = function(state__6468__auto__, input__6469__auto__) {
    var padded_input__6470__auto__ = cljs.core.concat.call(null, input__6469__auto__, cljs.core.repeat.call(null, null));
    var vec__9556 = cljs.core.cons.call(null, state__6468__auto__, cljs.core.take.call(null, 2, padded_input__6470__auto__));
    var state = cljs.core.nth.call(null, vec__9556, 0, null);
    var t1 = cljs.core.nth.call(null, vec__9556, 1, null);
    var t2 = cljs.core.nth.call(null, vec__9556, 2, null);
    var temp__4090__auto__ = function() {
      var ocr_9557 = clojure.core.reducers.reduce.call(null, cljs.core.conj, new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [state__6468__auto__], null), clojure.core.reducers.take.call(null, 2, clojure.core.reducers.map.call(null, termcat.term.tt, padded_input__6470__auto__)));
      try {
        if (cljs.core.vector_QMARK_.call(null, ocr_9557) && cljs.core.count.call(null, ocr_9557) === 3) {
          try {
            var ocr_9557_1__9574 = cljs.core.nth.call(null, ocr_9557, 1);
            if (cljs.core.keyword_identical_QMARK_.call(null, ocr_9557_1__9574, new cljs.core.Keyword(null, "fun", "fun", 1014006001))) {
              return null;
            } else {
              if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
                throw cljs.core.match.backtrack;
              } else {
                return null;
              }
            }
          } catch (e9581) {
            if (e9581 instanceof Error) {
              var e__4796__auto__ = e9581;
              if (e__4796__auto__ === cljs.core.match.backtrack) {
                try {
                  var ocr_9557_1__9574 = cljs.core.nth.call(null, ocr_9557, 1);
                  if (cljs.core.vector_QMARK_.call(null, ocr_9557_1__9574) && cljs.core.count.call(null, ocr_9557_1__9574) === 2) {
                    try {
                      var ocr_9557_1__9574_0__9576 = cljs.core.nth.call(null, ocr_9557_1__9574, 0);
                      if (cljs.core.keyword_identical_QMARK_.call(null, ocr_9557_1__9574_0__9576, new cljs.core.Keyword(null, "block", "block", 1107736575))) {
                        try {
                          var ocr_9557_1__9574_1__9577 = cljs.core.nth.call(null, ocr_9557_1__9574, 1);
                          if (cljs.core.keyword_identical_QMARK_.call(null, ocr_9557_1__9574_1__9577, new cljs.core.Keyword(null, "lambda", "lambda", 4198778681))) {
                            return null;
                          } else {
                            if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
                              throw cljs.core.match.backtrack;
                            } else {
                              return null;
                            }
                          }
                        } catch (e9597) {
                          if (e9597 instanceof Error) {
                            var e__4796__auto____$1 = e9597;
                            if (e__4796__auto____$1 === cljs.core.match.backtrack) {
                              throw cljs.core.match.backtrack;
                            } else {
                              throw e__4796__auto____$1;
                            }
                          } else {
                            if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
                              throw e9597;
                            } else {
                              return null;
                            }
                          }
                        }
                      } else {
                        if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
                          throw cljs.core.match.backtrack;
                        } else {
                          return null;
                        }
                      }
                    } catch (e9596) {
                      if (e9596 instanceof Error) {
                        var e__4796__auto____$1 = e9596;
                        if (e__4796__auto____$1 === cljs.core.match.backtrack) {
                          throw cljs.core.match.backtrack;
                        } else {
                          throw e__4796__auto____$1;
                        }
                      } else {
                        if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
                          throw e9596;
                        } else {
                          return null;
                        }
                      }
                    }
                  } else {
                    if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
                      throw cljs.core.match.backtrack;
                    } else {
                      return null;
                    }
                  }
                } catch (e9582) {
                  if (e9582 instanceof Error) {
                    var e__4796__auto____$1 = e9582;
                    if (e__4796__auto____$1 === cljs.core.match.backtrack) {
                      try {
                        var ocr_9557_2__9575 = cljs.core.nth.call(null, ocr_9557, 2);
                        if (cljs.core.vector_QMARK_.call(null, ocr_9557_2__9575) && cljs.core.count.call(null, ocr_9557_2__9575) === 2) {
                          try {
                            var ocr_9557_2__9575_0__9578 = cljs.core.nth.call(null, ocr_9557_2__9575, 0);
                            if (cljs.core.keyword_identical_QMARK_.call(null, ocr_9557_2__9575_0__9578, new cljs.core.Keyword(null, "block", "block", 1107736575))) {
                              try {
                                var ocr_9557_2__9575_1__9579 = cljs.core.nth.call(null, ocr_9557_2__9575, 1);
                                if (cljs.core.keyword_identical_QMARK_.call(null, ocr_9557_2__9575_1__9579, new cljs.core.Keyword(null, "h1", "h1", 1013907515))) {
                                  return new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [null, t1, termcat.util.lambda.fun_call_head.call(null, ":h1"), t2], null);
                                } else {
                                  if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
                                    throw cljs.core.match.backtrack;
                                  } else {
                                    return null;
                                  }
                                }
                              } catch (e9595) {
                                if (e9595 instanceof Error) {
                                  var e__4796__auto____$2 = e9595;
                                  if (e__4796__auto____$2 === cljs.core.match.backtrack) {
                                    throw cljs.core.match.backtrack;
                                  } else {
                                    throw e__4796__auto____$2;
                                  }
                                } else {
                                  if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
                                    throw e9595;
                                  } else {
                                    return null;
                                  }
                                }
                              }
                            } else {
                              if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
                                throw cljs.core.match.backtrack;
                              } else {
                                return null;
                              }
                            }
                          } catch (e9584) {
                            if (e9584 instanceof Error) {
                              var e__4796__auto____$2 = e9584;
                              if (e__4796__auto____$2 === cljs.core.match.backtrack) {
                                try {
                                  var ocr_9557_2__9575_0__9578 = cljs.core.nth.call(null, ocr_9557_2__9575, 0);
                                  if (cljs.core.keyword_identical_QMARK_.call(null, ocr_9557_2__9575_0__9578, new cljs.core.Keyword(null, "block", "block", 1107736575))) {
                                    try {
                                      var ocr_9557_2__9575_1__9579 = cljs.core.nth.call(null, ocr_9557_2__9575, 1);
                                      if (cljs.core.keyword_identical_QMARK_.call(null, ocr_9557_2__9575_1__9579, new cljs.core.Keyword(null, "h2", "h2", 1013907516))) {
                                        return new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [null, t1, termcat.util.lambda.fun_call_head.call(null, ":h2"), t2], null);
                                      } else {
                                        if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
                                          throw cljs.core.match.backtrack;
                                        } else {
                                          return null;
                                        }
                                      }
                                    } catch (e9594) {
                                      if (e9594 instanceof Error) {
                                        var e__4796__auto____$3 = e9594;
                                        if (e__4796__auto____$3 === cljs.core.match.backtrack) {
                                          throw cljs.core.match.backtrack;
                                        } else {
                                          throw e__4796__auto____$3;
                                        }
                                      } else {
                                        if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
                                          throw e9594;
                                        } else {
                                          return null;
                                        }
                                      }
                                    }
                                  } else {
                                    if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
                                      throw cljs.core.match.backtrack;
                                    } else {
                                      return null;
                                    }
                                  }
                                } catch (e9585) {
                                  if (e9585 instanceof Error) {
                                    var e__4796__auto____$3 = e9585;
                                    if (e__4796__auto____$3 === cljs.core.match.backtrack) {
                                      try {
                                        var ocr_9557_2__9575_0__9578 = cljs.core.nth.call(null, ocr_9557_2__9575, 0);
                                        if (cljs.core.keyword_identical_QMARK_.call(null, ocr_9557_2__9575_0__9578, new cljs.core.Keyword(null, "block", "block", 1107736575))) {
                                          try {
                                            var ocr_9557_2__9575_1__9579 = cljs.core.nth.call(null, ocr_9557_2__9575, 1);
                                            if (cljs.core.keyword_identical_QMARK_.call(null, ocr_9557_2__9575_1__9579, new cljs.core.Keyword(null, "h3", "h3", 1013907517))) {
                                              return new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [null, t1, termcat.util.lambda.fun_call_head.call(null, ":h3"), t2], null);
                                            } else {
                                              if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
                                                throw cljs.core.match.backtrack;
                                              } else {
                                                return null;
                                              }
                                            }
                                          } catch (e9593) {
                                            if (e9593 instanceof Error) {
                                              var e__4796__auto____$4 = e9593;
                                              if (e__4796__auto____$4 === cljs.core.match.backtrack) {
                                                throw cljs.core.match.backtrack;
                                              } else {
                                                throw e__4796__auto____$4;
                                              }
                                            } else {
                                              if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
                                                throw e9593;
                                              } else {
                                                return null;
                                              }
                                            }
                                          }
                                        } else {
                                          if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
                                            throw cljs.core.match.backtrack;
                                          } else {
                                            return null;
                                          }
                                        }
                                      } catch (e9586) {
                                        if (e9586 instanceof Error) {
                                          var e__4796__auto____$4 = e9586;
                                          if (e__4796__auto____$4 === cljs.core.match.backtrack) {
                                            try {
                                              var ocr_9557_2__9575_0__9578 = cljs.core.nth.call(null, ocr_9557_2__9575, 0);
                                              if (cljs.core.keyword_identical_QMARK_.call(null, ocr_9557_2__9575_0__9578, new cljs.core.Keyword(null, "block", "block", 1107736575))) {
                                                try {
                                                  var ocr_9557_2__9575_1__9579 = cljs.core.nth.call(null, ocr_9557_2__9575, 1);
                                                  if (cljs.core.keyword_identical_QMARK_.call(null, ocr_9557_2__9575_1__9579, new cljs.core.Keyword(null, "h4", "h4", 1013907518))) {
                                                    return new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [null, t1, termcat.util.lambda.fun_call_head.call(null, ":h4"), t2], null);
                                                  } else {
                                                    if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
                                                      throw cljs.core.match.backtrack;
                                                    } else {
                                                      return null;
                                                    }
                                                  }
                                                } catch (e9592) {
                                                  if (e9592 instanceof Error) {
                                                    var e__4796__auto____$5 = e9592;
                                                    if (e__4796__auto____$5 === cljs.core.match.backtrack) {
                                                      throw cljs.core.match.backtrack;
                                                    } else {
                                                      throw e__4796__auto____$5;
                                                    }
                                                  } else {
                                                    if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
                                                      throw e9592;
                                                    } else {
                                                      return null;
                                                    }
                                                  }
                                                }
                                              } else {
                                                if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
                                                  throw cljs.core.match.backtrack;
                                                } else {
                                                  return null;
                                                }
                                              }
                                            } catch (e9587) {
                                              if (e9587 instanceof Error) {
                                                var e__4796__auto____$5 = e9587;
                                                if (e__4796__auto____$5 === cljs.core.match.backtrack) {
                                                  try {
                                                    var ocr_9557_2__9575_0__9578 = cljs.core.nth.call(null, ocr_9557_2__9575, 0);
                                                    if (cljs.core.keyword_identical_QMARK_.call(null, ocr_9557_2__9575_0__9578, new cljs.core.Keyword(null, "block", "block", 1107736575))) {
                                                      try {
                                                        var ocr_9557_2__9575_1__9579 = cljs.core.nth.call(null, ocr_9557_2__9575, 1);
                                                        if (cljs.core.keyword_identical_QMARK_.call(null, ocr_9557_2__9575_1__9579, new cljs.core.Keyword(null, "h5", "h5", 1013907519))) {
                                                          return new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [null, t1, termcat.util.lambda.fun_call_head.call(null, ":h5"), t2], null);
                                                        } else {
                                                          if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
                                                            throw cljs.core.match.backtrack;
                                                          } else {
                                                            return null;
                                                          }
                                                        }
                                                      } catch (e9591) {
                                                        if (e9591 instanceof Error) {
                                                          var e__4796__auto____$6 = e9591;
                                                          if (e__4796__auto____$6 === cljs.core.match.backtrack) {
                                                            throw cljs.core.match.backtrack;
                                                          } else {
                                                            throw e__4796__auto____$6;
                                                          }
                                                        } else {
                                                          if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
                                                            throw e9591;
                                                          } else {
                                                            return null;
                                                          }
                                                        }
                                                      }
                                                    } else {
                                                      if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
                                                        throw cljs.core.match.backtrack;
                                                      } else {
                                                        return null;
                                                      }
                                                    }
                                                  } catch (e9588) {
                                                    if (e9588 instanceof Error) {
                                                      var e__4796__auto____$6 = e9588;
                                                      if (e__4796__auto____$6 === cljs.core.match.backtrack) {
                                                        try {
                                                          var ocr_9557_2__9575_0__9578 = cljs.core.nth.call(null, ocr_9557_2__9575, 0);
                                                          if (cljs.core.keyword_identical_QMARK_.call(null, ocr_9557_2__9575_0__9578, new cljs.core.Keyword(null, "block", "block", 1107736575))) {
                                                            try {
                                                              var ocr_9557_2__9575_1__9579 = cljs.core.nth.call(null, ocr_9557_2__9575, 1);
                                                              if (cljs.core.keyword_identical_QMARK_.call(null, ocr_9557_2__9575_1__9579, new cljs.core.Keyword(null, "h6", "h6", 1013907520))) {
                                                                return new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [null, t1, termcat.util.lambda.fun_call_head.call(null, ":h6"), t2], null);
                                                              } else {
                                                                if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
                                                                  throw cljs.core.match.backtrack;
                                                                } else {
                                                                  return null;
                                                                }
                                                              }
                                                            } catch (e9590) {
                                                              if (e9590 instanceof Error) {
                                                                var e__4796__auto____$7 = e9590;
                                                                if (e__4796__auto____$7 === cljs.core.match.backtrack) {
                                                                  throw cljs.core.match.backtrack;
                                                                } else {
                                                                  throw e__4796__auto____$7;
                                                                }
                                                              } else {
                                                                if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
                                                                  throw e9590;
                                                                } else {
                                                                  return null;
                                                                }
                                                              }
                                                            }
                                                          } else {
                                                            if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
                                                              throw cljs.core.match.backtrack;
                                                            } else {
                                                              return null;
                                                            }
                                                          }
                                                        } catch (e9589) {
                                                          if (e9589 instanceof Error) {
                                                            var e__4796__auto____$7 = e9589;
                                                            if (e__4796__auto____$7 === cljs.core.match.backtrack) {
                                                              throw cljs.core.match.backtrack;
                                                            } else {
                                                              throw e__4796__auto____$7;
                                                            }
                                                          } else {
                                                            if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
                                                              throw e9589;
                                                            } else {
                                                              return null;
                                                            }
                                                          }
                                                        }
                                                      } else {
                                                        throw e__4796__auto____$6;
                                                      }
                                                    } else {
                                                      if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
                                                        throw e9588;
                                                      } else {
                                                        return null;
                                                      }
                                                    }
                                                  }
                                                } else {
                                                  throw e__4796__auto____$5;
                                                }
                                              } else {
                                                if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
                                                  throw e9587;
                                                } else {
                                                  return null;
                                                }
                                              }
                                            }
                                          } else {
                                            throw e__4796__auto____$4;
                                          }
                                        } else {
                                          if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
                                            throw e9586;
                                          } else {
                                            return null;
                                          }
                                        }
                                      }
                                    } else {
                                      throw e__4796__auto____$3;
                                    }
                                  } else {
                                    if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
                                      throw e9585;
                                    } else {
                                      return null;
                                    }
                                  }
                                }
                              } else {
                                throw e__4796__auto____$2;
                              }
                            } else {
                              if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
                                throw e9584;
                              } else {
                                return null;
                              }
                            }
                          }
                        } else {
                          if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
                            throw cljs.core.match.backtrack;
                          } else {
                            return null;
                          }
                        }
                      } catch (e9583) {
                        if (e9583 instanceof Error) {
                          var e__4796__auto____$2 = e9583;
                          if (e__4796__auto____$2 === cljs.core.match.backtrack) {
                            throw cljs.core.match.backtrack;
                          } else {
                            throw e__4796__auto____$2;
                          }
                        } else {
                          if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
                            throw e9583;
                          } else {
                            return null;
                          }
                        }
                      }
                    } else {
                      throw e__4796__auto____$1;
                    }
                  } else {
                    if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
                      throw e9582;
                    } else {
                      return null;
                    }
                  }
                }
              } else {
                throw e__4796__auto__;
              }
            } else {
              if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
                throw e9581;
              } else {
                return null;
              }
            }
          }
        } else {
          if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
            throw cljs.core.match.backtrack;
          } else {
            return null;
          }
        }
      } catch (e9580) {
        if (e9580 instanceof Error) {
          var e__4796__auto__ = e9580;
          if (e__4796__auto__ === cljs.core.match.backtrack) {
            return null;
          } else {
            throw e__4796__auto__;
          }
        } else {
          if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
            throw e9580;
          } else {
            return null;
          }
        }
      }
    }();
    if (cljs.core.truth_(temp__4090__auto__)) {
      var r__6471__auto__ = temp__4090__auto__;
      return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [function() {
        var or__3403__auto__ = cljs.core.first.call(null, r__6471__auto__);
        if (cljs.core.truth_(or__3403__auto__)) {
          return or__3403__auto__;
        } else {
          return state__6468__auto__;
        }
      }(), cljs.core.concat.call(null, cljs.core.next.call(null, r__6471__auto__), cljs.core.drop.call(null, 2, input__6469__auto__))], null);
    } else {
      return null;
    }
  };
  G__9598 = function(state__6468__auto__, input__6469__auto__) {
    switch(arguments.length) {
      case 0:
        return G__9598__0.call(this);
      case 2:
        return G__9598__2.call(this, state__6468__auto__, input__6469__auto__);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  return G__9598;
}());
termcat.rules.markdown.introduce_blockquote_calls = termcat.rewrite.abstraction.call(null, function() {
  var G__9621 = null;
  var G__9621__0 = function() {
    return null;
  };
  var G__9621__2 = function(state__6468__auto__, input__6469__auto__) {
    var padded_input__6470__auto__ = cljs.core.concat.call(null, input__6469__auto__, cljs.core.repeat.call(null, null));
    var vec__9599 = cljs.core.cons.call(null, state__6468__auto__, cljs.core.take.call(null, 2, padded_input__6470__auto__));
    var state = cljs.core.nth.call(null, vec__9599, 0, null);
    var t1 = cljs.core.nth.call(null, vec__9599, 1, null);
    var t2 = cljs.core.nth.call(null, vec__9599, 2, null);
    var temp__4090__auto__ = function() {
      var ocr_9600 = clojure.core.reducers.reduce.call(null, cljs.core.conj, new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [state__6468__auto__], null), clojure.core.reducers.take.call(null, 2, clojure.core.reducers.map.call(null, termcat.term.tt, padded_input__6470__auto__)));
      try {
        if (cljs.core.vector_QMARK_.call(null, ocr_9600) && cljs.core.count.call(null, ocr_9600) === 3) {
          try {
            var ocr_9600_1__9607 = cljs.core.nth.call(null, ocr_9600, 1);
            if (cljs.core.keyword_identical_QMARK_.call(null, ocr_9600_1__9607, new cljs.core.Keyword(null, "fun", "fun", 1014006001))) {
              return null;
            } else {
              if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
                throw cljs.core.match.backtrack;
              } else {
                return null;
              }
            }
          } catch (e9614) {
            if (e9614 instanceof Error) {
              var e__4796__auto__ = e9614;
              if (e__4796__auto__ === cljs.core.match.backtrack) {
                try {
                  var ocr_9600_1__9607 = cljs.core.nth.call(null, ocr_9600, 1);
                  if (cljs.core.vector_QMARK_.call(null, ocr_9600_1__9607) && cljs.core.count.call(null, ocr_9600_1__9607) === 2) {
                    try {
                      var ocr_9600_1__9607_0__9609 = cljs.core.nth.call(null, ocr_9600_1__9607, 0);
                      if (cljs.core.keyword_identical_QMARK_.call(null, ocr_9600_1__9607_0__9609, new cljs.core.Keyword(null, "block", "block", 1107736575))) {
                        try {
                          var ocr_9600_1__9607_1__9610 = cljs.core.nth.call(null, ocr_9600_1__9607, 1);
                          if (cljs.core.keyword_identical_QMARK_.call(null, ocr_9600_1__9607_1__9610, new cljs.core.Keyword(null, "lambda", "lambda", 4198778681))) {
                            return null;
                          } else {
                            if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
                              throw cljs.core.match.backtrack;
                            } else {
                              return null;
                            }
                          }
                        } catch (e9620) {
                          if (e9620 instanceof Error) {
                            var e__4796__auto____$1 = e9620;
                            if (e__4796__auto____$1 === cljs.core.match.backtrack) {
                              throw cljs.core.match.backtrack;
                            } else {
                              throw e__4796__auto____$1;
                            }
                          } else {
                            if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
                              throw e9620;
                            } else {
                              return null;
                            }
                          }
                        }
                      } else {
                        if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
                          throw cljs.core.match.backtrack;
                        } else {
                          return null;
                        }
                      }
                    } catch (e9619) {
                      if (e9619 instanceof Error) {
                        var e__4796__auto____$1 = e9619;
                        if (e__4796__auto____$1 === cljs.core.match.backtrack) {
                          throw cljs.core.match.backtrack;
                        } else {
                          throw e__4796__auto____$1;
                        }
                      } else {
                        if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
                          throw e9619;
                        } else {
                          return null;
                        }
                      }
                    }
                  } else {
                    if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
                      throw cljs.core.match.backtrack;
                    } else {
                      return null;
                    }
                  }
                } catch (e9615) {
                  if (e9615 instanceof Error) {
                    var e__4796__auto____$1 = e9615;
                    if (e__4796__auto____$1 === cljs.core.match.backtrack) {
                      try {
                        var ocr_9600_2__9608 = cljs.core.nth.call(null, ocr_9600, 2);
                        if (cljs.core.vector_QMARK_.call(null, ocr_9600_2__9608) && cljs.core.count.call(null, ocr_9600_2__9608) === 2) {
                          try {
                            var ocr_9600_2__9608_0__9611 = cljs.core.nth.call(null, ocr_9600_2__9608, 0);
                            if (cljs.core.keyword_identical_QMARK_.call(null, ocr_9600_2__9608_0__9611, new cljs.core.Keyword(null, "block", "block", 1107736575))) {
                              try {
                                var ocr_9600_2__9608_1__9612 = cljs.core.nth.call(null, ocr_9600_2__9608, 1);
                                if (cljs.core.keyword_identical_QMARK_.call(null, ocr_9600_2__9608_1__9612, new cljs.core.Keyword(null, "indent", "indent", 4124632094))) {
                                  return new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [null, t1, termcat.util.lambda.fun_call_head.call(null, ":quotation"), t2], null);
                                } else {
                                  if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
                                    throw cljs.core.match.backtrack;
                                  } else {
                                    return null;
                                  }
                                }
                              } catch (e9618) {
                                if (e9618 instanceof Error) {
                                  var e__4796__auto____$2 = e9618;
                                  if (e__4796__auto____$2 === cljs.core.match.backtrack) {
                                    throw cljs.core.match.backtrack;
                                  } else {
                                    throw e__4796__auto____$2;
                                  }
                                } else {
                                  if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
                                    throw e9618;
                                  } else {
                                    return null;
                                  }
                                }
                              }
                            } else {
                              if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
                                throw cljs.core.match.backtrack;
                              } else {
                                return null;
                              }
                            }
                          } catch (e9617) {
                            if (e9617 instanceof Error) {
                              var e__4796__auto____$2 = e9617;
                              if (e__4796__auto____$2 === cljs.core.match.backtrack) {
                                throw cljs.core.match.backtrack;
                              } else {
                                throw e__4796__auto____$2;
                              }
                            } else {
                              if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
                                throw e9617;
                              } else {
                                return null;
                              }
                            }
                          }
                        } else {
                          if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
                            throw cljs.core.match.backtrack;
                          } else {
                            return null;
                          }
                        }
                      } catch (e9616) {
                        if (e9616 instanceof Error) {
                          var e__4796__auto____$2 = e9616;
                          if (e__4796__auto____$2 === cljs.core.match.backtrack) {
                            throw cljs.core.match.backtrack;
                          } else {
                            throw e__4796__auto____$2;
                          }
                        } else {
                          if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
                            throw e9616;
                          } else {
                            return null;
                          }
                        }
                      }
                    } else {
                      throw e__4796__auto____$1;
                    }
                  } else {
                    if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
                      throw e9615;
                    } else {
                      return null;
                    }
                  }
                }
              } else {
                throw e__4796__auto__;
              }
            } else {
              if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
                throw e9614;
              } else {
                return null;
              }
            }
          }
        } else {
          if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
            throw cljs.core.match.backtrack;
          } else {
            return null;
          }
        }
      } catch (e9613) {
        if (e9613 instanceof Error) {
          var e__4796__auto__ = e9613;
          if (e__4796__auto__ === cljs.core.match.backtrack) {
            return null;
          } else {
            throw e__4796__auto__;
          }
        } else {
          if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
            throw e9613;
          } else {
            return null;
          }
        }
      }
    }();
    if (cljs.core.truth_(temp__4090__auto__)) {
      var r__6471__auto__ = temp__4090__auto__;
      return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [function() {
        var or__3403__auto__ = cljs.core.first.call(null, r__6471__auto__);
        if (cljs.core.truth_(or__3403__auto__)) {
          return or__3403__auto__;
        } else {
          return state__6468__auto__;
        }
      }(), cljs.core.concat.call(null, cljs.core.next.call(null, r__6471__auto__), cljs.core.drop.call(null, 2, input__6469__auto__))], null);
    } else {
      return null;
    }
  };
  G__9621 = function(state__6468__auto__, input__6469__auto__) {
    switch(arguments.length) {
      case 0:
        return G__9621__0.call(this);
      case 2:
        return G__9621__2.call(this, state__6468__auto__, input__6469__auto__);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  return G__9621;
}());
termcat.rules.markdown.introduce_bullet_list_calls = termcat.rewrite.abstraction.call(null, function() {
  var G__9651 = null;
  var G__9651__0 = function() {
    return null;
  };
  var G__9651__2 = function(state__6468__auto__, input__6469__auto__) {
    var padded_input__6470__auto__ = cljs.core.concat.call(null, input__6469__auto__, cljs.core.repeat.call(null, null));
    var vec__9622 = cljs.core.cons.call(null, state__6468__auto__, cljs.core.take.call(null, 2, padded_input__6470__auto__));
    var state = cljs.core.nth.call(null, vec__9622, 0, null);
    var t1 = cljs.core.nth.call(null, vec__9622, 1, null);
    var t2 = cljs.core.nth.call(null, vec__9622, 2, null);
    var temp__4090__auto__ = function() {
      var ocr_9623 = clojure.core.reducers.reduce.call(null, cljs.core.conj, new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [state__6468__auto__], null), clojure.core.reducers.take.call(null, 2, clojure.core.reducers.map.call(null, termcat.term.tt, padded_input__6470__auto__)));
      try {
        if (cljs.core.vector_QMARK_.call(null, ocr_9623) && cljs.core.count.call(null, ocr_9623) === 3) {
          try {
            var ocr_9623_1__9632 = cljs.core.nth.call(null, ocr_9623, 1);
            if (cljs.core.vector_QMARK_.call(null, ocr_9623_1__9632) && cljs.core.count.call(null, ocr_9623_1__9632) === 2) {
              try {
                var ocr_9623_1__9632_0__9634 = cljs.core.nth.call(null, ocr_9623_1__9632, 0);
                if (cljs.core.keyword_identical_QMARK_.call(null, ocr_9623_1__9632_0__9634, new cljs.core.Keyword(null, "block", "block", 1107736575))) {
                  try {
                    var ocr_9623_1__9632_1__9635 = cljs.core.nth.call(null, ocr_9623_1__9632, 1);
                    if (cljs.core.keyword_identical_QMARK_.call(null, ocr_9623_1__9632_1__9635, new cljs.core.Keyword(null, "bullet", "bullet", 3930937460))) {
                      return null;
                    } else {
                      if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
                        throw cljs.core.match.backtrack;
                      } else {
                        return null;
                      }
                    }
                  } catch (e9650) {
                    if (e9650 instanceof Error) {
                      var e__4796__auto__ = e9650;
                      if (e__4796__auto__ === cljs.core.match.backtrack) {
                        throw cljs.core.match.backtrack;
                      } else {
                        throw e__4796__auto__;
                      }
                    } else {
                      if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
                        throw e9650;
                      } else {
                        return null;
                      }
                    }
                  }
                } else {
                  if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
                    throw cljs.core.match.backtrack;
                  } else {
                    return null;
                  }
                }
              } catch (e9649) {
                if (e9649 instanceof Error) {
                  var e__4796__auto__ = e9649;
                  if (e__4796__auto__ === cljs.core.match.backtrack) {
                    throw cljs.core.match.backtrack;
                  } else {
                    throw e__4796__auto__;
                  }
                } else {
                  if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
                    throw e9649;
                  } else {
                    return null;
                  }
                }
              }
            } else {
              if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
                throw cljs.core.match.backtrack;
              } else {
                return null;
              }
            }
          } catch (e9641) {
            if (e9641 instanceof Error) {
              var e__4796__auto__ = e9641;
              if (e__4796__auto__ === cljs.core.match.backtrack) {
                try {
                  var ocr_9623_1__9632 = cljs.core.nth.call(null, ocr_9623, 1);
                  if (cljs.core.keyword_identical_QMARK_.call(null, ocr_9623_1__9632, new cljs.core.Keyword(null, "fun", "fun", 1014006001))) {
                    return null;
                  } else {
                    if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
                      throw cljs.core.match.backtrack;
                    } else {
                      return null;
                    }
                  }
                } catch (e9642) {
                  if (e9642 instanceof Error) {
                    var e__4796__auto____$1 = e9642;
                    if (e__4796__auto____$1 === cljs.core.match.backtrack) {
                      try {
                        var ocr_9623_1__9632 = cljs.core.nth.call(null, ocr_9623, 1);
                        if (cljs.core.vector_QMARK_.call(null, ocr_9623_1__9632) && cljs.core.count.call(null, ocr_9623_1__9632) === 2) {
                          try {
                            var ocr_9623_1__9632_0__9636 = cljs.core.nth.call(null, ocr_9623_1__9632, 0);
                            if (cljs.core.keyword_identical_QMARK_.call(null, ocr_9623_1__9632_0__9636, new cljs.core.Keyword(null, "block", "block", 1107736575))) {
                              try {
                                var ocr_9623_1__9632_1__9637 = cljs.core.nth.call(null, ocr_9623_1__9632, 1);
                                if (cljs.core.keyword_identical_QMARK_.call(null, ocr_9623_1__9632_1__9637, new cljs.core.Keyword(null, "lambda", "lambda", 4198778681))) {
                                  return null;
                                } else {
                                  if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
                                    throw cljs.core.match.backtrack;
                                  } else {
                                    return null;
                                  }
                                }
                              } catch (e9648) {
                                if (e9648 instanceof Error) {
                                  var e__4796__auto____$2 = e9648;
                                  if (e__4796__auto____$2 === cljs.core.match.backtrack) {
                                    throw cljs.core.match.backtrack;
                                  } else {
                                    throw e__4796__auto____$2;
                                  }
                                } else {
                                  if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
                                    throw e9648;
                                  } else {
                                    return null;
                                  }
                                }
                              }
                            } else {
                              if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
                                throw cljs.core.match.backtrack;
                              } else {
                                return null;
                              }
                            }
                          } catch (e9647) {
                            if (e9647 instanceof Error) {
                              var e__4796__auto____$2 = e9647;
                              if (e__4796__auto____$2 === cljs.core.match.backtrack) {
                                throw cljs.core.match.backtrack;
                              } else {
                                throw e__4796__auto____$2;
                              }
                            } else {
                              if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
                                throw e9647;
                              } else {
                                return null;
                              }
                            }
                          }
                        } else {
                          if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
                            throw cljs.core.match.backtrack;
                          } else {
                            return null;
                          }
                        }
                      } catch (e9643) {
                        if (e9643 instanceof Error) {
                          var e__4796__auto____$2 = e9643;
                          if (e__4796__auto____$2 === cljs.core.match.backtrack) {
                            try {
                              var ocr_9623_2__9633 = cljs.core.nth.call(null, ocr_9623, 2);
                              if (cljs.core.vector_QMARK_.call(null, ocr_9623_2__9633) && cljs.core.count.call(null, ocr_9623_2__9633) === 2) {
                                try {
                                  var ocr_9623_2__9633_0__9638 = cljs.core.nth.call(null, ocr_9623_2__9633, 0);
                                  if (cljs.core.keyword_identical_QMARK_.call(null, ocr_9623_2__9633_0__9638, new cljs.core.Keyword(null, "block", "block", 1107736575))) {
                                    try {
                                      var ocr_9623_2__9633_1__9639 = cljs.core.nth.call(null, ocr_9623_2__9633, 1);
                                      if (cljs.core.keyword_identical_QMARK_.call(null, ocr_9623_2__9633_1__9639, new cljs.core.Keyword(null, "bullet", "bullet", 3930937460))) {
                                        return new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [null, t1, termcat.util.lambda.fun_call_head.call(null, ":bullet-list"), t2], null);
                                      } else {
                                        if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
                                          throw cljs.core.match.backtrack;
                                        } else {
                                          return null;
                                        }
                                      }
                                    } catch (e9646) {
                                      if (e9646 instanceof Error) {
                                        var e__4796__auto____$3 = e9646;
                                        if (e__4796__auto____$3 === cljs.core.match.backtrack) {
                                          throw cljs.core.match.backtrack;
                                        } else {
                                          throw e__4796__auto____$3;
                                        }
                                      } else {
                                        if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
                                          throw e9646;
                                        } else {
                                          return null;
                                        }
                                      }
                                    }
                                  } else {
                                    if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
                                      throw cljs.core.match.backtrack;
                                    } else {
                                      return null;
                                    }
                                  }
                                } catch (e9645) {
                                  if (e9645 instanceof Error) {
                                    var e__4796__auto____$3 = e9645;
                                    if (e__4796__auto____$3 === cljs.core.match.backtrack) {
                                      throw cljs.core.match.backtrack;
                                    } else {
                                      throw e__4796__auto____$3;
                                    }
                                  } else {
                                    if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
                                      throw e9645;
                                    } else {
                                      return null;
                                    }
                                  }
                                }
                              } else {
                                if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
                                  throw cljs.core.match.backtrack;
                                } else {
                                  return null;
                                }
                              }
                            } catch (e9644) {
                              if (e9644 instanceof Error) {
                                var e__4796__auto____$3 = e9644;
                                if (e__4796__auto____$3 === cljs.core.match.backtrack) {
                                  throw cljs.core.match.backtrack;
                                } else {
                                  throw e__4796__auto____$3;
                                }
                              } else {
                                if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
                                  throw e9644;
                                } else {
                                  return null;
                                }
                              }
                            }
                          } else {
                            throw e__4796__auto____$2;
                          }
                        } else {
                          if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
                            throw e9643;
                          } else {
                            return null;
                          }
                        }
                      }
                    } else {
                      throw e__4796__auto____$1;
                    }
                  } else {
                    if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
                      throw e9642;
                    } else {
                      return null;
                    }
                  }
                }
              } else {
                throw e__4796__auto__;
              }
            } else {
              if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
                throw e9641;
              } else {
                return null;
              }
            }
          }
        } else {
          if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
            throw cljs.core.match.backtrack;
          } else {
            return null;
          }
        }
      } catch (e9640) {
        if (e9640 instanceof Error) {
          var e__4796__auto__ = e9640;
          if (e__4796__auto__ === cljs.core.match.backtrack) {
            return null;
          } else {
            throw e__4796__auto__;
          }
        } else {
          if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
            throw e9640;
          } else {
            return null;
          }
        }
      }
    }();
    if (cljs.core.truth_(temp__4090__auto__)) {
      var r__6471__auto__ = temp__4090__auto__;
      return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [function() {
        var or__3403__auto__ = cljs.core.first.call(null, r__6471__auto__);
        if (cljs.core.truth_(or__3403__auto__)) {
          return or__3403__auto__;
        } else {
          return state__6468__auto__;
        }
      }(), cljs.core.concat.call(null, cljs.core.next.call(null, r__6471__auto__), cljs.core.drop.call(null, 2, input__6469__auto__))], null);
    } else {
      return null;
    }
  };
  G__9651 = function(state__6468__auto__, input__6469__auto__) {
    switch(arguments.length) {
      case 0:
        return G__9651__0.call(this);
      case 2:
        return G__9651__2.call(this, state__6468__auto__, input__6469__auto__);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  return G__9651;
}());
termcat.rules.markdown.introduce_img_calls = termcat.rewrite.abstraction.call(null, function() {
  var G__9683 = null;
  var G__9683__0 = function() {
    return null;
  };
  var G__9683__2 = function(state__6468__auto__, input__6469__auto__) {
    var padded_input__6470__auto__ = cljs.core.concat.call(null, input__6469__auto__, cljs.core.repeat.call(null, null));
    var vec__9652 = cljs.core.cons.call(null, state__6468__auto__, cljs.core.take.call(null, 4, padded_input__6470__auto__));
    var state = cljs.core.nth.call(null, vec__9652, 0, null);
    var t1 = cljs.core.nth.call(null, vec__9652, 1, null);
    var t2 = cljs.core.nth.call(null, vec__9652, 2, null);
    var t3 = cljs.core.nth.call(null, vec__9652, 3, null);
    var t4 = cljs.core.nth.call(null, vec__9652, 4, null);
    var temp__4090__auto__ = function() {
      var ocr_9653 = clojure.core.reducers.reduce.call(null, cljs.core.conj, new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [state__6468__auto__], null), clojure.core.reducers.take.call(null, 4, clojure.core.reducers.map.call(null, termcat.term.tt, padded_input__6470__auto__)));
      try {
        if (cljs.core.vector_QMARK_.call(null, ocr_9653) && cljs.core.count.call(null, ocr_9653) === 5) {
          try {
            var ocr_9653_4__9666 = cljs.core.nth.call(null, ocr_9653, 4);
            if (cljs.core.vector_QMARK_.call(null, ocr_9653_4__9666) && cljs.core.count.call(null, ocr_9653_4__9666) === 2) {
              try {
                var ocr_9653_4__9666_0__9667 = cljs.core.nth.call(null, ocr_9653_4__9666, 0);
                if (cljs.core.keyword_identical_QMARK_.call(null, ocr_9653_4__9666_0__9667, new cljs.core.Keyword(null, "block", "block", 1107736575))) {
                  return null;
                } else {
                  if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
                    throw cljs.core.match.backtrack;
                  } else {
                    return null;
                  }
                }
              } catch (e9682) {
                if (e9682 instanceof Error) {
                  var e__4796__auto__ = e9682;
                  if (e__4796__auto__ === cljs.core.match.backtrack) {
                    throw cljs.core.match.backtrack;
                  } else {
                    throw e__4796__auto__;
                  }
                } else {
                  if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
                    throw e9682;
                  } else {
                    return null;
                  }
                }
              }
            } else {
              if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
                throw cljs.core.match.backtrack;
              } else {
                return null;
              }
            }
          } catch (e9674) {
            if (e9674 instanceof Error) {
              var e__4796__auto__ = e9674;
              if (e__4796__auto__ === cljs.core.match.backtrack) {
                try {
                  var ocr_9653_1__9663 = cljs.core.nth.call(null, ocr_9653, 1);
                  if (cljs.core.keyword_identical_QMARK_.call(null, ocr_9653_1__9663, new cljs.core.Keyword(null, "bang", "bang", 1016920490))) {
                    try {
                      var ocr_9653_2__9664 = cljs.core.nth.call(null, ocr_9653, 2);
                      if (cljs.core.vector_QMARK_.call(null, ocr_9653_2__9664) && cljs.core.count.call(null, ocr_9653_2__9664) === 2) {
                        try {
                          var ocr_9653_2__9664_0__9669 = cljs.core.nth.call(null, ocr_9653_2__9664, 0);
                          if (cljs.core.keyword_identical_QMARK_.call(null, ocr_9653_2__9664_0__9669, new cljs.core.Keyword(null, "block", "block", 1107736575))) {
                            try {
                              var ocr_9653_2__9664_1__9670 = cljs.core.nth.call(null, ocr_9653_2__9664, 1);
                              if (cljs.core.keyword_identical_QMARK_.call(null, ocr_9653_2__9664_1__9670, new cljs.core.Keyword(null, "bracket", "bracket", 1151311898))) {
                                try {
                                  var ocr_9653_3__9665 = cljs.core.nth.call(null, ocr_9653, 3);
                                  if (cljs.core.vector_QMARK_.call(null, ocr_9653_3__9665) && cljs.core.count.call(null, ocr_9653_3__9665) === 2) {
                                    try {
                                      var ocr_9653_3__9665_0__9671 = cljs.core.nth.call(null, ocr_9653_3__9665, 0);
                                      if (cljs.core.keyword_identical_QMARK_.call(null, ocr_9653_3__9665_0__9671, new cljs.core.Keyword(null, "block", "block", 1107736575))) {
                                        try {
                                          var ocr_9653_3__9665_1__9672 = cljs.core.nth.call(null, ocr_9653_3__9665, 1);
                                          if (cljs.core.keyword_identical_QMARK_.call(null, ocr_9653_3__9665_1__9672, new cljs.core.Keyword(null, "parenthesis", "parenthesis", 2036987848))) {
                                            return cljs.core.concat.call(null, new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [null], null), termcat.util.lambda.fun_call_seq.call(null, ":img", termcat.term.center.call(null, t2), termcat.term.center.call(null, t3)), new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [t4], null));
                                          } else {
                                            if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
                                              throw cljs.core.match.backtrack;
                                            } else {
                                              return null;
                                            }
                                          }
                                        } catch (e9681) {
                                          if (e9681 instanceof Error) {
                                            var e__4796__auto____$1 = e9681;
                                            if (e__4796__auto____$1 === cljs.core.match.backtrack) {
                                              throw cljs.core.match.backtrack;
                                            } else {
                                              throw e__4796__auto____$1;
                                            }
                                          } else {
                                            if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
                                              throw e9681;
                                            } else {
                                              return null;
                                            }
                                          }
                                        }
                                      } else {
                                        if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
                                          throw cljs.core.match.backtrack;
                                        } else {
                                          return null;
                                        }
                                      }
                                    } catch (e9680) {
                                      if (e9680 instanceof Error) {
                                        var e__4796__auto____$1 = e9680;
                                        if (e__4796__auto____$1 === cljs.core.match.backtrack) {
                                          throw cljs.core.match.backtrack;
                                        } else {
                                          throw e__4796__auto____$1;
                                        }
                                      } else {
                                        if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
                                          throw e9680;
                                        } else {
                                          return null;
                                        }
                                      }
                                    }
                                  } else {
                                    if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
                                      throw cljs.core.match.backtrack;
                                    } else {
                                      return null;
                                    }
                                  }
                                } catch (e9679) {
                                  if (e9679 instanceof Error) {
                                    var e__4796__auto____$1 = e9679;
                                    if (e__4796__auto____$1 === cljs.core.match.backtrack) {
                                      throw cljs.core.match.backtrack;
                                    } else {
                                      throw e__4796__auto____$1;
                                    }
                                  } else {
                                    if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
                                      throw e9679;
                                    } else {
                                      return null;
                                    }
                                  }
                                }
                              } else {
                                if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
                                  throw cljs.core.match.backtrack;
                                } else {
                                  return null;
                                }
                              }
                            } catch (e9678) {
                              if (e9678 instanceof Error) {
                                var e__4796__auto____$1 = e9678;
                                if (e__4796__auto____$1 === cljs.core.match.backtrack) {
                                  throw cljs.core.match.backtrack;
                                } else {
                                  throw e__4796__auto____$1;
                                }
                              } else {
                                if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
                                  throw e9678;
                                } else {
                                  return null;
                                }
                              }
                            }
                          } else {
                            if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
                              throw cljs.core.match.backtrack;
                            } else {
                              return null;
                            }
                          }
                        } catch (e9677) {
                          if (e9677 instanceof Error) {
                            var e__4796__auto____$1 = e9677;
                            if (e__4796__auto____$1 === cljs.core.match.backtrack) {
                              throw cljs.core.match.backtrack;
                            } else {
                              throw e__4796__auto____$1;
                            }
                          } else {
                            if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
                              throw e9677;
                            } else {
                              return null;
                            }
                          }
                        }
                      } else {
                        if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
                          throw cljs.core.match.backtrack;
                        } else {
                          return null;
                        }
                      }
                    } catch (e9676) {
                      if (e9676 instanceof Error) {
                        var e__4796__auto____$1 = e9676;
                        if (e__4796__auto____$1 === cljs.core.match.backtrack) {
                          throw cljs.core.match.backtrack;
                        } else {
                          throw e__4796__auto____$1;
                        }
                      } else {
                        if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
                          throw e9676;
                        } else {
                          return null;
                        }
                      }
                    }
                  } else {
                    if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
                      throw cljs.core.match.backtrack;
                    } else {
                      return null;
                    }
                  }
                } catch (e9675) {
                  if (e9675 instanceof Error) {
                    var e__4796__auto____$1 = e9675;
                    if (e__4796__auto____$1 === cljs.core.match.backtrack) {
                      throw cljs.core.match.backtrack;
                    } else {
                      throw e__4796__auto____$1;
                    }
                  } else {
                    if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
                      throw e9675;
                    } else {
                      return null;
                    }
                  }
                }
              } else {
                throw e__4796__auto__;
              }
            } else {
              if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
                throw e9674;
              } else {
                return null;
              }
            }
          }
        } else {
          if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
            throw cljs.core.match.backtrack;
          } else {
            return null;
          }
        }
      } catch (e9673) {
        if (e9673 instanceof Error) {
          var e__4796__auto__ = e9673;
          if (e__4796__auto__ === cljs.core.match.backtrack) {
            return null;
          } else {
            throw e__4796__auto__;
          }
        } else {
          if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
            throw e9673;
          } else {
            return null;
          }
        }
      }
    }();
    if (cljs.core.truth_(temp__4090__auto__)) {
      var r__6471__auto__ = temp__4090__auto__;
      return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [function() {
        var or__3403__auto__ = cljs.core.first.call(null, r__6471__auto__);
        if (cljs.core.truth_(or__3403__auto__)) {
          return or__3403__auto__;
        } else {
          return state__6468__auto__;
        }
      }(), cljs.core.concat.call(null, cljs.core.next.call(null, r__6471__auto__), cljs.core.drop.call(null, 4, input__6469__auto__))], null);
    } else {
      return null;
    }
  };
  G__9683 = function(state__6468__auto__, input__6469__auto__) {
    switch(arguments.length) {
      case 0:
        return G__9683__0.call(this);
      case 2:
        return G__9683__2.call(this, state__6468__auto__, input__6469__auto__);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  return G__9683;
}());
termcat.rules.markdown.introduce_link_calls = termcat.rewrite.abstraction.call(null, function() {
  var G__9729 = null;
  var G__9729__0 = function() {
    return null;
  };
  var G__9729__2 = function(state__6468__auto__, input__6469__auto__) {
    var padded_input__6470__auto__ = cljs.core.concat.call(null, input__6469__auto__, cljs.core.repeat.call(null, null));
    var vec__9684 = cljs.core.cons.call(null, state__6468__auto__, cljs.core.take.call(null, 4, padded_input__6470__auto__));
    var state = cljs.core.nth.call(null, vec__9684, 0, null);
    var t1 = cljs.core.nth.call(null, vec__9684, 1, null);
    var t2 = cljs.core.nth.call(null, vec__9684, 2, null);
    var t3 = cljs.core.nth.call(null, vec__9684, 3, null);
    var t4 = cljs.core.nth.call(null, vec__9684, 4, null);
    var temp__4090__auto__ = function() {
      var ocr_9685 = clojure.core.reducers.reduce.call(null, cljs.core.conj, new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [state__6468__auto__], null), clojure.core.reducers.take.call(null, 4, clojure.core.reducers.map.call(null, termcat.term.tt, padded_input__6470__auto__)));
      try {
        if (cljs.core.vector_QMARK_.call(null, ocr_9685) && cljs.core.count.call(null, ocr_9685) === 5) {
          try {
            var ocr_9685_1__9705 = cljs.core.nth.call(null, ocr_9685, 1);
            if (cljs.core.vector_QMARK_.call(null, ocr_9685_1__9705) && cljs.core.count.call(null, ocr_9685_1__9705) === 2) {
              try {
                var ocr_9685_1__9705_0__9709 = cljs.core.nth.call(null, ocr_9685_1__9705, 0);
                if (cljs.core.keyword_identical_QMARK_.call(null, ocr_9685_1__9705_0__9709, new cljs.core.Keyword(null, "block", "block", 1107736575))) {
                  return null;
                } else {
                  if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
                    throw cljs.core.match.backtrack;
                  } else {
                    return null;
                  }
                }
              } catch (e9728) {
                if (e9728 instanceof Error) {
                  var e__4796__auto__ = e9728;
                  if (e__4796__auto__ === cljs.core.match.backtrack) {
                    throw cljs.core.match.backtrack;
                  } else {
                    throw e__4796__auto__;
                  }
                } else {
                  if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
                    throw e9728;
                  } else {
                    return null;
                  }
                }
              }
            } else {
              if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
                throw cljs.core.match.backtrack;
              } else {
                return null;
              }
            }
          } catch (e9718) {
            if (e9718 instanceof Error) {
              var e__4796__auto__ = e9718;
              if (e__4796__auto__ === cljs.core.match.backtrack) {
                try {
                  var ocr_9685_1__9705 = cljs.core.nth.call(null, ocr_9685, 1);
                  if (cljs.core.keyword_identical_QMARK_.call(null, ocr_9685_1__9705, new cljs.core.Keyword(null, "bang", "bang", 1016920490))) {
                    return null;
                  } else {
                    if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
                      throw cljs.core.match.backtrack;
                    } else {
                      return null;
                    }
                  }
                } catch (e9719) {
                  if (e9719 instanceof Error) {
                    var e__4796__auto____$1 = e9719;
                    if (e__4796__auto____$1 === cljs.core.match.backtrack) {
                      try {
                        var ocr_9685_4__9708 = cljs.core.nth.call(null, ocr_9685, 4);
                        if (cljs.core.vector_QMARK_.call(null, ocr_9685_4__9708) && cljs.core.count.call(null, ocr_9685_4__9708) === 2) {
                          try {
                            var ocr_9685_4__9708_0__9711 = cljs.core.nth.call(null, ocr_9685_4__9708, 0);
                            if (cljs.core.keyword_identical_QMARK_.call(null, ocr_9685_4__9708_0__9711, new cljs.core.Keyword(null, "block", "block", 1107736575))) {
                              return null;
                            } else {
                              if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
                                throw cljs.core.match.backtrack;
                              } else {
                                return null;
                              }
                            }
                          } catch (e9727) {
                            if (e9727 instanceof Error) {
                              var e__4796__auto____$2 = e9727;
                              if (e__4796__auto____$2 === cljs.core.match.backtrack) {
                                throw cljs.core.match.backtrack;
                              } else {
                                throw e__4796__auto____$2;
                              }
                            } else {
                              if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
                                throw e9727;
                              } else {
                                return null;
                              }
                            }
                          }
                        } else {
                          if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
                            throw cljs.core.match.backtrack;
                          } else {
                            return null;
                          }
                        }
                      } catch (e9720) {
                        if (e9720 instanceof Error) {
                          var e__4796__auto____$2 = e9720;
                          if (e__4796__auto____$2 === cljs.core.match.backtrack) {
                            try {
                              var ocr_9685_2__9706 = cljs.core.nth.call(null, ocr_9685, 2);
                              if (cljs.core.vector_QMARK_.call(null, ocr_9685_2__9706) && cljs.core.count.call(null, ocr_9685_2__9706) === 2) {
                                try {
                                  var ocr_9685_2__9706_0__9713 = cljs.core.nth.call(null, ocr_9685_2__9706, 0);
                                  if (cljs.core.keyword_identical_QMARK_.call(null, ocr_9685_2__9706_0__9713, new cljs.core.Keyword(null, "block", "block", 1107736575))) {
                                    try {
                                      var ocr_9685_2__9706_1__9714 = cljs.core.nth.call(null, ocr_9685_2__9706, 1);
                                      if (cljs.core.keyword_identical_QMARK_.call(null, ocr_9685_2__9706_1__9714, new cljs.core.Keyword(null, "bracket", "bracket", 1151311898))) {
                                        try {
                                          var ocr_9685_3__9707 = cljs.core.nth.call(null, ocr_9685, 3);
                                          if (cljs.core.vector_QMARK_.call(null, ocr_9685_3__9707) && cljs.core.count.call(null, ocr_9685_3__9707) === 2) {
                                            try {
                                              var ocr_9685_3__9707_0__9715 = cljs.core.nth.call(null, ocr_9685_3__9707, 0);
                                              if (cljs.core.keyword_identical_QMARK_.call(null, ocr_9685_3__9707_0__9715, new cljs.core.Keyword(null, "block", "block", 1107736575))) {
                                                try {
                                                  var ocr_9685_3__9707_1__9716 = cljs.core.nth.call(null, ocr_9685_3__9707, 1);
                                                  if (cljs.core.keyword_identical_QMARK_.call(null, ocr_9685_3__9707_1__9716, new cljs.core.Keyword(null, "parenthesis", "parenthesis", 2036987848))) {
                                                    return cljs.core.concat.call(null, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [null, t1], null), termcat.util.lambda.fun_call_seq.call(null, ":link", termcat.term.center.call(null, t2), termcat.term.center.call(null, t3)), new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [t4], null));
                                                  } else {
                                                    if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
                                                      throw cljs.core.match.backtrack;
                                                    } else {
                                                      return null;
                                                    }
                                                  }
                                                } catch (e9726) {
                                                  if (e9726 instanceof Error) {
                                                    var e__4796__auto____$3 = e9726;
                                                    if (e__4796__auto____$3 === cljs.core.match.backtrack) {
                                                      throw cljs.core.match.backtrack;
                                                    } else {
                                                      throw e__4796__auto____$3;
                                                    }
                                                  } else {
                                                    if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
                                                      throw e9726;
                                                    } else {
                                                      return null;
                                                    }
                                                  }
                                                }
                                              } else {
                                                if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
                                                  throw cljs.core.match.backtrack;
                                                } else {
                                                  return null;
                                                }
                                              }
                                            } catch (e9725) {
                                              if (e9725 instanceof Error) {
                                                var e__4796__auto____$3 = e9725;
                                                if (e__4796__auto____$3 === cljs.core.match.backtrack) {
                                                  throw cljs.core.match.backtrack;
                                                } else {
                                                  throw e__4796__auto____$3;
                                                }
                                              } else {
                                                if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
                                                  throw e9725;
                                                } else {
                                                  return null;
                                                }
                                              }
                                            }
                                          } else {
                                            if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
                                              throw cljs.core.match.backtrack;
                                            } else {
                                              return null;
                                            }
                                          }
                                        } catch (e9724) {
                                          if (e9724 instanceof Error) {
                                            var e__4796__auto____$3 = e9724;
                                            if (e__4796__auto____$3 === cljs.core.match.backtrack) {
                                              throw cljs.core.match.backtrack;
                                            } else {
                                              throw e__4796__auto____$3;
                                            }
                                          } else {
                                            if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
                                              throw e9724;
                                            } else {
                                              return null;
                                            }
                                          }
                                        }
                                      } else {
                                        if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
                                          throw cljs.core.match.backtrack;
                                        } else {
                                          return null;
                                        }
                                      }
                                    } catch (e9723) {
                                      if (e9723 instanceof Error) {
                                        var e__4796__auto____$3 = e9723;
                                        if (e__4796__auto____$3 === cljs.core.match.backtrack) {
                                          throw cljs.core.match.backtrack;
                                        } else {
                                          throw e__4796__auto____$3;
                                        }
                                      } else {
                                        if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
                                          throw e9723;
                                        } else {
                                          return null;
                                        }
                                      }
                                    }
                                  } else {
                                    if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
                                      throw cljs.core.match.backtrack;
                                    } else {
                                      return null;
                                    }
                                  }
                                } catch (e9722) {
                                  if (e9722 instanceof Error) {
                                    var e__4796__auto____$3 = e9722;
                                    if (e__4796__auto____$3 === cljs.core.match.backtrack) {
                                      throw cljs.core.match.backtrack;
                                    } else {
                                      throw e__4796__auto____$3;
                                    }
                                  } else {
                                    if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
                                      throw e9722;
                                    } else {
                                      return null;
                                    }
                                  }
                                }
                              } else {
                                if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
                                  throw cljs.core.match.backtrack;
                                } else {
                                  return null;
                                }
                              }
                            } catch (e9721) {
                              if (e9721 instanceof Error) {
                                var e__4796__auto____$3 = e9721;
                                if (e__4796__auto____$3 === cljs.core.match.backtrack) {
                                  throw cljs.core.match.backtrack;
                                } else {
                                  throw e__4796__auto____$3;
                                }
                              } else {
                                if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
                                  throw e9721;
                                } else {
                                  return null;
                                }
                              }
                            }
                          } else {
                            throw e__4796__auto____$2;
                          }
                        } else {
                          if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
                            throw e9720;
                          } else {
                            return null;
                          }
                        }
                      }
                    } else {
                      throw e__4796__auto____$1;
                    }
                  } else {
                    if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
                      throw e9719;
                    } else {
                      return null;
                    }
                  }
                }
              } else {
                throw e__4796__auto__;
              }
            } else {
              if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
                throw e9718;
              } else {
                return null;
              }
            }
          }
        } else {
          if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
            throw cljs.core.match.backtrack;
          } else {
            return null;
          }
        }
      } catch (e9717) {
        if (e9717 instanceof Error) {
          var e__4796__auto__ = e9717;
          if (e__4796__auto__ === cljs.core.match.backtrack) {
            return null;
          } else {
            throw e__4796__auto__;
          }
        } else {
          if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
            throw e9717;
          } else {
            return null;
          }
        }
      }
    }();
    if (cljs.core.truth_(temp__4090__auto__)) {
      var r__6471__auto__ = temp__4090__auto__;
      return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [function() {
        var or__3403__auto__ = cljs.core.first.call(null, r__6471__auto__);
        if (cljs.core.truth_(or__3403__auto__)) {
          return or__3403__auto__;
        } else {
          return state__6468__auto__;
        }
      }(), cljs.core.concat.call(null, cljs.core.next.call(null, r__6471__auto__), cljs.core.drop.call(null, 4, input__6469__auto__))], null);
    } else {
      return null;
    }
  };
  G__9729 = function(state__6468__auto__, input__6469__auto__) {
    switch(arguments.length) {
      case 0:
        return G__9729__0.call(this);
      case 2:
        return G__9729__2.call(this, state__6468__auto__, input__6469__auto__);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  return G__9729;
}());
termcat.rules.markdown.wrap_term = function wrap_term(tag_name, t) {
  return cljs.core.concat.call(null, new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [termcat.term.token.call(null, new cljs.core.Keyword(null, "html", "html", 1017117469), [cljs.core.str("\x3c"), cljs.core.str(tag_name), cljs.core.str("\x3e")].join(""))], null), termcat.term.block_QMARK_.call(null, t) ? termcat.rewrite.unwrap.call(null, t) : new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [t], null), new cljs.core.PersistentVector(null, 
  1, 5, cljs.core.PersistentVector.EMPTY_NODE, [termcat.term.token.call(null, new cljs.core.Keyword(null, "html", "html", 1017117469), [cljs.core.str("\x3c/"), cljs.core.str(tag_name), cljs.core.str("\x3e")].join(""))], null));
};
termcat.rules.markdown.remove_decorators = termcat.rewrite.abstraction.call(null, function() {
  var G__9761 = null;
  var G__9761__0 = function() {
    return null;
  };
  var G__9761__2 = function(state__6468__auto__, input__6469__auto__) {
    var padded_input__6470__auto__ = cljs.core.concat.call(null, input__6469__auto__, cljs.core.repeat.call(null, null));
    var vec__9730 = cljs.core.cons.call(null, state__6468__auto__, cljs.core.take.call(null, 9, padded_input__6470__auto__));
    var state = cljs.core.nth.call(null, vec__9730, 0, null);
    var t1 = cljs.core.nth.call(null, vec__9730, 1, null);
    var t2 = cljs.core.nth.call(null, vec__9730, 2, null);
    var t3 = cljs.core.nth.call(null, vec__9730, 3, null);
    var t4 = cljs.core.nth.call(null, vec__9730, 4, null);
    var t5 = cljs.core.nth.call(null, vec__9730, 5, null);
    var t6 = cljs.core.nth.call(null, vec__9730, 6, null);
    var t7 = cljs.core.nth.call(null, vec__9730, 7, null);
    var t8 = cljs.core.nth.call(null, vec__9730, 8, null);
    var t9 = cljs.core.nth.call(null, vec__9730, 9, null);
    var temp__4090__auto__ = function() {
      var ocr_9731 = clojure.core.reducers.reduce.call(null, cljs.core.conj, new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [state__6468__auto__], null), clojure.core.reducers.take.call(null, 9, clojure.core.reducers.map.call(null, termcat.term.tt, padded_input__6470__auto__)));
      try {
        if (cljs.core.vector_QMARK_.call(null, ocr_9731) && cljs.core.count.call(null, ocr_9731) === 10) {
          try {
            var ocr_9731_3__9746 = cljs.core.nth.call(null, ocr_9731, 3);
            if (cljs.core.keyword_identical_QMARK_.call(null, ocr_9731_3__9746, new cljs.core.Keyword(null, "underscore", "underscore", 3544053292))) {
              try {
                var ocr_9731_5__9748 = cljs.core.nth.call(null, ocr_9731, 5);
                if (cljs.core.keyword_identical_QMARK_.call(null, ocr_9731_5__9748, new cljs.core.Keyword(null, "underscore", "underscore", 3544053292))) {
                  var x1 = cljs.core.nth.call(null, ocr_9731, 1);
                  var x2 = cljs.core.nth.call(null, ocr_9731, 2);
                  var y1 = cljs.core.nth.call(null, ocr_9731, 6);
                  var y2 = cljs.core.nth.call(null, ocr_9731, 7);
                  if (!cljs.core.contains_QMARK_.call(null, cljs.core.PersistentHashSet.fromArray.call(null, [x1, x2, y1, y2], true), new cljs.core.Keyword(null, "underscore", "underscore", 3544053292))) {
                    return cljs.core.concat.call(null, new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [null, t1, t2], null), termcat.rules.markdown.wrap_term.call(null, "u", t4), new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [t6, t7, t8, t9], null));
                  } else {
                    return null;
                  }
                } else {
                  if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
                    throw cljs.core.match.backtrack;
                  } else {
                    return null;
                  }
                }
              } catch (e9759) {
                if (e9759 instanceof Error) {
                  var e__4796__auto__ = e9759;
                  if (e__4796__auto__ === cljs.core.match.backtrack) {
                    throw cljs.core.match.backtrack;
                  } else {
                    throw e__4796__auto__;
                  }
                } else {
                  if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
                    throw e9759;
                  } else {
                    return null;
                  }
                }
              }
            } else {
              if (cljs.core.keyword_identical_QMARK_.call(null, ocr_9731_3__9746, new cljs.core.Keyword(null, "asterisk", "asterisk", 669280996))) {
                try {
                  var ocr_9731_5__9748 = cljs.core.nth.call(null, ocr_9731, 5);
                  if (cljs.core.keyword_identical_QMARK_.call(null, ocr_9731_5__9748, new cljs.core.Keyword(null, "asterisk", "asterisk", 669280996))) {
                    var x1 = cljs.core.nth.call(null, ocr_9731, 1);
                    var x2 = cljs.core.nth.call(null, ocr_9731, 2);
                    var y1 = cljs.core.nth.call(null, ocr_9731, 6);
                    var y2 = cljs.core.nth.call(null, ocr_9731, 7);
                    if (!cljs.core.contains_QMARK_.call(null, cljs.core.PersistentHashSet.fromArray.call(null, [x1, x2, y1, y2], true), new cljs.core.Keyword(null, "asterisk", "asterisk", 669280996))) {
                      return cljs.core.concat.call(null, new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [null, t1, t2], null), termcat.rules.markdown.wrap_term.call(null, "em", t4), new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [t6, t7, t8, t9], null));
                    } else {
                      return null;
                    }
                  } else {
                    if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
                      throw cljs.core.match.backtrack;
                    } else {
                      return null;
                    }
                  }
                } catch (e9760) {
                  if (e9760 instanceof Error) {
                    var e__4796__auto__ = e9760;
                    if (e__4796__auto__ === cljs.core.match.backtrack) {
                      throw cljs.core.match.backtrack;
                    } else {
                      throw e__4796__auto__;
                    }
                  } else {
                    if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
                      throw e9760;
                    } else {
                      return null;
                    }
                  }
                }
              } else {
                if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
                  throw cljs.core.match.backtrack;
                } else {
                  return null;
                }
              }
            }
          } catch (e9754) {
            if (e9754 instanceof Error) {
              var e__4796__auto__ = e9754;
              if (e__4796__auto__ === cljs.core.match.backtrack) {
                try {
                  var ocr_9731_3__9746 = cljs.core.nth.call(null, ocr_9731, 3);
                  if (cljs.core.keyword_identical_QMARK_.call(null, ocr_9731_3__9746, new cljs.core.Keyword(null, "asterisk", "asterisk", 669280996))) {
                    try {
                      var ocr_9731_4__9747 = cljs.core.nth.call(null, ocr_9731, 4);
                      if (cljs.core.keyword_identical_QMARK_.call(null, ocr_9731_4__9747, new cljs.core.Keyword(null, "asterisk", "asterisk", 669280996))) {
                        try {
                          var ocr_9731_6__9749 = cljs.core.nth.call(null, ocr_9731, 6);
                          if (cljs.core.keyword_identical_QMARK_.call(null, ocr_9731_6__9749, new cljs.core.Keyword(null, "asterisk", "asterisk", 669280996))) {
                            try {
                              var ocr_9731_7__9750 = cljs.core.nth.call(null, ocr_9731, 7);
                              if (cljs.core.keyword_identical_QMARK_.call(null, ocr_9731_7__9750, new cljs.core.Keyword(null, "asterisk", "asterisk", 669280996))) {
                                var x1 = cljs.core.nth.call(null, ocr_9731, 1);
                                var x2 = cljs.core.nth.call(null, ocr_9731, 2);
                                var y1 = cljs.core.nth.call(null, ocr_9731, 8);
                                var y2 = cljs.core.nth.call(null, ocr_9731, 9);
                                if (!cljs.core.contains_QMARK_.call(null, cljs.core.PersistentHashSet.fromArray.call(null, [x1, x2, y1, y2], true), new cljs.core.Keyword(null, "asterisk", "asterisk", 669280996))) {
                                  return cljs.core.concat.call(null, new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [null, t1, t2], null), termcat.rules.markdown.wrap_term.call(null, "strong", t5), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [t8, t9], null));
                                } else {
                                  return null;
                                }
                              } else {
                                if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
                                  throw cljs.core.match.backtrack;
                                } else {
                                  return null;
                                }
                              }
                            } catch (e9758) {
                              if (e9758 instanceof Error) {
                                var e__4796__auto____$1 = e9758;
                                if (e__4796__auto____$1 === cljs.core.match.backtrack) {
                                  throw cljs.core.match.backtrack;
                                } else {
                                  throw e__4796__auto____$1;
                                }
                              } else {
                                if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
                                  throw e9758;
                                } else {
                                  return null;
                                }
                              }
                            }
                          } else {
                            if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
                              throw cljs.core.match.backtrack;
                            } else {
                              return null;
                            }
                          }
                        } catch (e9757) {
                          if (e9757 instanceof Error) {
                            var e__4796__auto____$1 = e9757;
                            if (e__4796__auto____$1 === cljs.core.match.backtrack) {
                              throw cljs.core.match.backtrack;
                            } else {
                              throw e__4796__auto____$1;
                            }
                          } else {
                            if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
                              throw e9757;
                            } else {
                              return null;
                            }
                          }
                        }
                      } else {
                        if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
                          throw cljs.core.match.backtrack;
                        } else {
                          return null;
                        }
                      }
                    } catch (e9756) {
                      if (e9756 instanceof Error) {
                        var e__4796__auto____$1 = e9756;
                        if (e__4796__auto____$1 === cljs.core.match.backtrack) {
                          throw cljs.core.match.backtrack;
                        } else {
                          throw e__4796__auto____$1;
                        }
                      } else {
                        if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
                          throw e9756;
                        } else {
                          return null;
                        }
                      }
                    }
                  } else {
                    if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
                      throw cljs.core.match.backtrack;
                    } else {
                      return null;
                    }
                  }
                } catch (e9755) {
                  if (e9755 instanceof Error) {
                    var e__4796__auto____$1 = e9755;
                    if (e__4796__auto____$1 === cljs.core.match.backtrack) {
                      throw cljs.core.match.backtrack;
                    } else {
                      throw e__4796__auto____$1;
                    }
                  } else {
                    if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
                      throw e9755;
                    } else {
                      return null;
                    }
                  }
                }
              } else {
                throw e__4796__auto__;
              }
            } else {
              if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
                throw e9754;
              } else {
                return null;
              }
            }
          }
        } else {
          if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
            throw cljs.core.match.backtrack;
          } else {
            return null;
          }
        }
      } catch (e9753) {
        if (e9753 instanceof Error) {
          var e__4796__auto__ = e9753;
          if (e__4796__auto__ === cljs.core.match.backtrack) {
            return null;
          } else {
            throw e__4796__auto__;
          }
        } else {
          if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
            throw e9753;
          } else {
            return null;
          }
        }
      }
    }();
    if (cljs.core.truth_(temp__4090__auto__)) {
      var r__6471__auto__ = temp__4090__auto__;
      return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [function() {
        var or__3403__auto__ = cljs.core.first.call(null, r__6471__auto__);
        if (cljs.core.truth_(or__3403__auto__)) {
          return or__3403__auto__;
        } else {
          return state__6468__auto__;
        }
      }(), cljs.core.concat.call(null, cljs.core.next.call(null, r__6471__auto__), cljs.core.drop.call(null, 9, input__6469__auto__))], null);
    } else {
      return null;
    }
  };
  G__9761 = function(state__6468__auto__, input__6469__auto__) {
    switch(arguments.length) {
      case 0:
        return G__9761__0.call(this);
      case 2:
        return G__9761__2.call(this, state__6468__auto__, input__6469__auto__);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  return G__9761;
}());
goog.provide("termcat.rules.bind");
goog.require("cljs.core");
goog.require("termcat.util.lambda");
goog.require("termcat.util.lambda");
goog.require("termcat.term");
goog.require("termcat.term");
goog.require("termcat.rewrite");
goog.require("termcat.rewrite");
goog.require("cljs.core.match");
termcat.rules.bind.strongest_blank = function strongest_blank(t1, t2, default$) {
  var pred__8925 = function(p1__8921_SHARP_, p2__8920_SHARP_) {
    return cljs.core.contains_QMARK_.call(null, p2__8920_SHARP_, p1__8921_SHARP_);
  };
  var expr__8926 = cljs.core.PersistentHashSet.fromArray.call(null, [termcat.term.tt.call(null, t1), termcat.term.tt.call(null, t2)], true);
  if (pred__8925.call(null, null, expr__8926)) {
    return null;
  } else {
    if (pred__8925.call(null, new cljs.core.Keyword(null, "emptyline", "emptyline", 3889609267), expr__8926)) {
      return termcat.term.token.call(null, new cljs.core.Keyword(null, "emptyline", "emptyline", 3889609267));
    } else {
      if (pred__8925.call(null, new cljs.core.Keyword(null, "newline", "newline", 2859826438), expr__8926)) {
        return termcat.term.token.call(null, new cljs.core.Keyword(null, "newline", "newline", 2859826438));
      } else {
        if (pred__8925.call(null, new cljs.core.Keyword(null, "whitespace", "whitespace", 1290815983), expr__8926)) {
          return termcat.term.token.call(null, new cljs.core.Keyword(null, "whitespace", "whitespace", 1290815983));
        } else {
          return default$;
        }
      }
    }
  }
};
termcat.rules.bind.introduce_bindings = termcat.rewrite.abstraction.call(null, function() {
  var G__9043 = null;
  var G__9043__0 = function() {
    return null;
  };
  var G__9043__2 = function(state__6468__auto__, input__6469__auto__) {
    var padded_input__6470__auto__ = cljs.core.concat.call(null, input__6469__auto__, cljs.core.repeat.call(null, null));
    var vec__8928 = cljs.core.cons.call(null, state__6468__auto__, cljs.core.take.call(null, 6, padded_input__6470__auto__));
    var state = cljs.core.nth.call(null, vec__8928, 0, null);
    var t1 = cljs.core.nth.call(null, vec__8928, 1, null);
    var t2 = cljs.core.nth.call(null, vec__8928, 2, null);
    var t3 = cljs.core.nth.call(null, vec__8928, 3, null);
    var t4 = cljs.core.nth.call(null, vec__8928, 4, null);
    var t5 = cljs.core.nth.call(null, vec__8928, 5, null);
    var t6 = cljs.core.nth.call(null, vec__8928, 6, null);
    var temp__4090__auto__ = function() {
      var ocr_8929 = clojure.core.reducers.reduce.call(null, cljs.core.conj, new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [state__6468__auto__], null), clojure.core.reducers.take.call(null, 6, clojure.core.reducers.map.call(null, termcat.term.tt, padded_input__6470__auto__)));
      try {
        if (cljs.core.vector_QMARK_.call(null, ocr_8929) && cljs.core.count.call(null, ocr_8929) === 7) {
          try {
            var ocr_8929_2__8951 = cljs.core.nth.call(null, ocr_8929, 2);
            if (cljs.core.keyword_identical_QMARK_.call(null, ocr_8929_2__8951, new cljs.core.Keyword(null, "bang", "bang", 1016920490))) {
              try {
                var ocr_8929_1__8950 = cljs.core.nth.call(null, ocr_8929, 1);
                if (ocr_8929_1__8950 === null) {
                  try {
                    var ocr_8929_3__8952 = cljs.core.nth.call(null, ocr_8929, 3);
                    if (cljs.core.keyword_identical_QMARK_.call(null, ocr_8929_3__8952, new cljs.core.Keyword(null, "default", "default", 2558708147))) {
                      try {
                        var ocr_8929_4__8953 = cljs.core.nth.call(null, ocr_8929, 4);
                        if (cljs.core.vector_QMARK_.call(null, ocr_8929_4__8953) && cljs.core.count.call(null, ocr_8929_4__8953) === 2) {
                          try {
                            var ocr_8929_4__8953_0__8956 = cljs.core.nth.call(null, ocr_8929_4__8953, 0);
                            if (cljs.core.keyword_identical_QMARK_.call(null, ocr_8929_4__8953_0__8956, new cljs.core.Keyword(null, "block", "block", 1107736575))) {
                              try {
                                var ocr_8929_5__8954 = cljs.core.nth.call(null, ocr_8929, 5);
                                if (cljs.core.vector_QMARK_.call(null, ocr_8929_5__8954) && cljs.core.count.call(null, ocr_8929_5__8954) === 2) {
                                  try {
                                    var ocr_8929_5__8954_0__8958 = cljs.core.nth.call(null, ocr_8929_5__8954, 0);
                                    if (cljs.core.keyword_identical_QMARK_.call(null, ocr_8929_5__8954_0__8958, new cljs.core.Keyword(null, "block", "block", 1107736575))) {
                                      if (cljs.core._EQ_.call(null, termcat.term.payload.call(null, t3), "bind")) {
                                        var ts = termcat.rewrite.unwrap.call(null, t4);
                                        var name = function() {
                                          var $ = cljs.core.first.call(null, ts);
                                          var $__$1 = cljs.core.truth_($) ? termcat.term.payload.call(null, $) : null;
                                          return $__$1;
                                        }();
                                        if (cljs.core._EQ_.call(null, 1, cljs.core.count.call(null, ts)) && typeof name === "string") {
                                          return cljs.core.conj.call(null, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.assoc.call(null, state, name, termcat.rewrite.unwrap.call(null, t5)), termcat.rules.bind.strongest_blank.call(null, t1, t6, t1)], null), !cljs.core.contains_QMARK_.call(null, new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 4, [null, null, new cljs.core.Keyword(null, "emptyline", "emptyline", 3889609267), 
                                          null, new cljs.core.Keyword(null, "newline", "newline", 2859826438), null, new cljs.core.Keyword(null, "whitespace", "whitespace", 1290815983), null], null), null), termcat.term.tt.call(null, t6)) ? t6 : null);
                                        } else {
                                          return new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [state, t1, termcat.term.token.call(null, new cljs.core.Keyword(null, "error", "error", 1110689146), cljs.core.apply.call(null, cljs.core.str, "!bind: not a valid name \u2014 ", name, cljs.core.count.call(null, ts) > 1 ? [cljs.core.str(" (and "), cljs.core.str(cljs.core.count.call(null, ts) - 1), cljs.core.str(" more tokens)")].join("") : null)), t6], null);
                                        }
                                      } else {
                                        return null;
                                      }
                                    } else {
                                      if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
                                        throw cljs.core.match.backtrack;
                                      } else {
                                        return null;
                                      }
                                    }
                                  } catch (e9027) {
                                    if (e9027 instanceof Error) {
                                      var e__4796__auto__ = e9027;
                                      if (e__4796__auto__ === cljs.core.match.backtrack) {
                                        throw cljs.core.match.backtrack;
                                      } else {
                                        throw e__4796__auto__;
                                      }
                                    } else {
                                      if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
                                        throw e9027;
                                      } else {
                                        return null;
                                      }
                                    }
                                  }
                                } else {
                                  if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
                                    throw cljs.core.match.backtrack;
                                  } else {
                                    return null;
                                  }
                                }
                              } catch (e9026) {
                                if (e9026 instanceof Error) {
                                  var e__4796__auto__ = e9026;
                                  if (e__4796__auto__ === cljs.core.match.backtrack) {
                                    throw cljs.core.match.backtrack;
                                  } else {
                                    throw e__4796__auto__;
                                  }
                                } else {
                                  if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
                                    throw e9026;
                                  } else {
                                    return null;
                                  }
                                }
                              }
                            } else {
                              if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
                                throw cljs.core.match.backtrack;
                              } else {
                                return null;
                              }
                            }
                          } catch (e9025) {
                            if (e9025 instanceof Error) {
                              var e__4796__auto__ = e9025;
                              if (e__4796__auto__ === cljs.core.match.backtrack) {
                                throw cljs.core.match.backtrack;
                              } else {
                                throw e__4796__auto__;
                              }
                            } else {
                              if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
                                throw e9025;
                              } else {
                                return null;
                              }
                            }
                          }
                        } else {
                          if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
                            throw cljs.core.match.backtrack;
                          } else {
                            return null;
                          }
                        }
                      } catch (e9024) {
                        if (e9024 instanceof Error) {
                          var e__4796__auto__ = e9024;
                          if (e__4796__auto__ === cljs.core.match.backtrack) {
                            throw cljs.core.match.backtrack;
                          } else {
                            throw e__4796__auto__;
                          }
                        } else {
                          if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
                            throw e9024;
                          } else {
                            return null;
                          }
                        }
                      }
                    } else {
                      if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
                        throw cljs.core.match.backtrack;
                      } else {
                        return null;
                      }
                    }
                  } catch (e9023) {
                    if (e9023 instanceof Error) {
                      var e__4796__auto__ = e9023;
                      if (e__4796__auto__ === cljs.core.match.backtrack) {
                        throw cljs.core.match.backtrack;
                      } else {
                        throw e__4796__auto__;
                      }
                    } else {
                      if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
                        throw e9023;
                      } else {
                        return null;
                      }
                    }
                  }
                } else {
                  if (cljs.core.keyword_identical_QMARK_.call(null, ocr_8929_1__8950, new cljs.core.Keyword(null, "whitespace", "whitespace", 1290815983))) {
                    try {
                      var ocr_8929_3__8952 = cljs.core.nth.call(null, ocr_8929, 3);
                      if (cljs.core.keyword_identical_QMARK_.call(null, ocr_8929_3__8952, new cljs.core.Keyword(null, "default", "default", 2558708147))) {
                        try {
                          var ocr_8929_4__8953 = cljs.core.nth.call(null, ocr_8929, 4);
                          if (cljs.core.vector_QMARK_.call(null, ocr_8929_4__8953) && cljs.core.count.call(null, ocr_8929_4__8953) === 2) {
                            try {
                              var ocr_8929_4__8953_0__8960 = cljs.core.nth.call(null, ocr_8929_4__8953, 0);
                              if (cljs.core.keyword_identical_QMARK_.call(null, ocr_8929_4__8953_0__8960, new cljs.core.Keyword(null, "block", "block", 1107736575))) {
                                try {
                                  var ocr_8929_5__8954 = cljs.core.nth.call(null, ocr_8929, 5);
                                  if (cljs.core.vector_QMARK_.call(null, ocr_8929_5__8954) && cljs.core.count.call(null, ocr_8929_5__8954) === 2) {
                                    try {
                                      var ocr_8929_5__8954_0__8962 = cljs.core.nth.call(null, ocr_8929_5__8954, 0);
                                      if (cljs.core.keyword_identical_QMARK_.call(null, ocr_8929_5__8954_0__8962, new cljs.core.Keyword(null, "block", "block", 1107736575))) {
                                        if (cljs.core._EQ_.call(null, termcat.term.payload.call(null, t3), "bind")) {
                                          var ts = termcat.rewrite.unwrap.call(null, t4);
                                          var name = function() {
                                            var $ = cljs.core.first.call(null, ts);
                                            var $__$1 = cljs.core.truth_($) ? termcat.term.payload.call(null, $) : null;
                                            return $__$1;
                                          }();
                                          if (cljs.core._EQ_.call(null, 1, cljs.core.count.call(null, ts)) && typeof name === "string") {
                                            return cljs.core.conj.call(null, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.assoc.call(null, state, name, termcat.rewrite.unwrap.call(null, t5)), termcat.rules.bind.strongest_blank.call(null, t1, t6, t1)], null), !cljs.core.contains_QMARK_.call(null, new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 4, [null, null, new cljs.core.Keyword(null, "emptyline", "emptyline", 3889609267), 
                                            null, new cljs.core.Keyword(null, "newline", "newline", 2859826438), null, new cljs.core.Keyword(null, "whitespace", "whitespace", 1290815983), null], null), null), termcat.term.tt.call(null, t6)) ? t6 : null);
                                          } else {
                                            return new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [state, t1, termcat.term.token.call(null, new cljs.core.Keyword(null, "error", "error", 1110689146), cljs.core.apply.call(null, cljs.core.str, "!bind: not a valid name \u2014 ", name, cljs.core.count.call(null, ts) > 1 ? [cljs.core.str(" (and "), cljs.core.str(cljs.core.count.call(null, ts) - 1), cljs.core.str(" more tokens)")].join("") : null)), t6], null);
                                          }
                                        } else {
                                          return null;
                                        }
                                      } else {
                                        if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
                                          throw cljs.core.match.backtrack;
                                        } else {
                                          return null;
                                        }
                                      }
                                    } catch (e9032) {
                                      if (e9032 instanceof Error) {
                                        var e__4796__auto__ = e9032;
                                        if (e__4796__auto__ === cljs.core.match.backtrack) {
                                          throw cljs.core.match.backtrack;
                                        } else {
                                          throw e__4796__auto__;
                                        }
                                      } else {
                                        if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
                                          throw e9032;
                                        } else {
                                          return null;
                                        }
                                      }
                                    }
                                  } else {
                                    if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
                                      throw cljs.core.match.backtrack;
                                    } else {
                                      return null;
                                    }
                                  }
                                } catch (e9031) {
                                  if (e9031 instanceof Error) {
                                    var e__4796__auto__ = e9031;
                                    if (e__4796__auto__ === cljs.core.match.backtrack) {
                                      throw cljs.core.match.backtrack;
                                    } else {
                                      throw e__4796__auto__;
                                    }
                                  } else {
                                    if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
                                      throw e9031;
                                    } else {
                                      return null;
                                    }
                                  }
                                }
                              } else {
                                if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
                                  throw cljs.core.match.backtrack;
                                } else {
                                  return null;
                                }
                              }
                            } catch (e9030) {
                              if (e9030 instanceof Error) {
                                var e__4796__auto__ = e9030;
                                if (e__4796__auto__ === cljs.core.match.backtrack) {
                                  throw cljs.core.match.backtrack;
                                } else {
                                  throw e__4796__auto__;
                                }
                              } else {
                                if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
                                  throw e9030;
                                } else {
                                  return null;
                                }
                              }
                            }
                          } else {
                            if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
                              throw cljs.core.match.backtrack;
                            } else {
                              return null;
                            }
                          }
                        } catch (e9029) {
                          if (e9029 instanceof Error) {
                            var e__4796__auto__ = e9029;
                            if (e__4796__auto__ === cljs.core.match.backtrack) {
                              throw cljs.core.match.backtrack;
                            } else {
                              throw e__4796__auto__;
                            }
                          } else {
                            if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
                              throw e9029;
                            } else {
                              return null;
                            }
                          }
                        }
                      } else {
                        if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
                          throw cljs.core.match.backtrack;
                        } else {
                          return null;
                        }
                      }
                    } catch (e9028) {
                      if (e9028 instanceof Error) {
                        var e__4796__auto__ = e9028;
                        if (e__4796__auto__ === cljs.core.match.backtrack) {
                          throw cljs.core.match.backtrack;
                        } else {
                          throw e__4796__auto__;
                        }
                      } else {
                        if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
                          throw e9028;
                        } else {
                          return null;
                        }
                      }
                    }
                  } else {
                    if (cljs.core.keyword_identical_QMARK_.call(null, ocr_8929_1__8950, new cljs.core.Keyword(null, "newline", "newline", 2859826438))) {
                      try {
                        var ocr_8929_3__8952 = cljs.core.nth.call(null, ocr_8929, 3);
                        if (cljs.core.keyword_identical_QMARK_.call(null, ocr_8929_3__8952, new cljs.core.Keyword(null, "default", "default", 2558708147))) {
                          try {
                            var ocr_8929_4__8953 = cljs.core.nth.call(null, ocr_8929, 4);
                            if (cljs.core.vector_QMARK_.call(null, ocr_8929_4__8953) && cljs.core.count.call(null, ocr_8929_4__8953) === 2) {
                              try {
                                var ocr_8929_4__8953_0__8964 = cljs.core.nth.call(null, ocr_8929_4__8953, 0);
                                if (cljs.core.keyword_identical_QMARK_.call(null, ocr_8929_4__8953_0__8964, new cljs.core.Keyword(null, "block", "block", 1107736575))) {
                                  try {
                                    var ocr_8929_5__8954 = cljs.core.nth.call(null, ocr_8929, 5);
                                    if (cljs.core.vector_QMARK_.call(null, ocr_8929_5__8954) && cljs.core.count.call(null, ocr_8929_5__8954) === 2) {
                                      try {
                                        var ocr_8929_5__8954_0__8966 = cljs.core.nth.call(null, ocr_8929_5__8954, 0);
                                        if (cljs.core.keyword_identical_QMARK_.call(null, ocr_8929_5__8954_0__8966, new cljs.core.Keyword(null, "block", "block", 1107736575))) {
                                          if (cljs.core._EQ_.call(null, termcat.term.payload.call(null, t3), "bind")) {
                                            var ts = termcat.rewrite.unwrap.call(null, t4);
                                            var name = function() {
                                              var $ = cljs.core.first.call(null, ts);
                                              var $__$1 = cljs.core.truth_($) ? termcat.term.payload.call(null, $) : null;
                                              return $__$1;
                                            }();
                                            if (cljs.core._EQ_.call(null, 1, cljs.core.count.call(null, ts)) && typeof name === "string") {
                                              return cljs.core.conj.call(null, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.assoc.call(null, state, name, termcat.rewrite.unwrap.call(null, t5)), termcat.rules.bind.strongest_blank.call(null, t1, t6, t1)], null), !cljs.core.contains_QMARK_.call(null, new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 4, [null, null, new cljs.core.Keyword(null, "emptyline", "emptyline", 3889609267), 
                                              null, new cljs.core.Keyword(null, "newline", "newline", 2859826438), null, new cljs.core.Keyword(null, "whitespace", "whitespace", 1290815983), null], null), null), termcat.term.tt.call(null, t6)) ? t6 : null);
                                            } else {
                                              return new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [state, t1, termcat.term.token.call(null, new cljs.core.Keyword(null, "error", "error", 1110689146), cljs.core.apply.call(null, cljs.core.str, "!bind: not a valid name \u2014 ", name, cljs.core.count.call(null, ts) > 1 ? [cljs.core.str(" (and "), cljs.core.str(cljs.core.count.call(null, ts) - 1), cljs.core.str(" more tokens)")].join("") : null)), t6], null);
                                            }
                                          } else {
                                            return null;
                                          }
                                        } else {
                                          if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
                                            throw cljs.core.match.backtrack;
                                          } else {
                                            return null;
                                          }
                                        }
                                      } catch (e9037) {
                                        if (e9037 instanceof Error) {
                                          var e__4796__auto__ = e9037;
                                          if (e__4796__auto__ === cljs.core.match.backtrack) {
                                            throw cljs.core.match.backtrack;
                                          } else {
                                            throw e__4796__auto__;
                                          }
                                        } else {
                                          if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
                                            throw e9037;
                                          } else {
                                            return null;
                                          }
                                        }
                                      }
                                    } else {
                                      if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
                                        throw cljs.core.match.backtrack;
                                      } else {
                                        return null;
                                      }
                                    }
                                  } catch (e9036) {
                                    if (e9036 instanceof Error) {
                                      var e__4796__auto__ = e9036;
                                      if (e__4796__auto__ === cljs.core.match.backtrack) {
                                        throw cljs.core.match.backtrack;
                                      } else {
                                        throw e__4796__auto__;
                                      }
                                    } else {
                                      if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
                                        throw e9036;
                                      } else {
                                        return null;
                                      }
                                    }
                                  }
                                } else {
                                  if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
                                    throw cljs.core.match.backtrack;
                                  } else {
                                    return null;
                                  }
                                }
                              } catch (e9035) {
                                if (e9035 instanceof Error) {
                                  var e__4796__auto__ = e9035;
                                  if (e__4796__auto__ === cljs.core.match.backtrack) {
                                    throw cljs.core.match.backtrack;
                                  } else {
                                    throw e__4796__auto__;
                                  }
                                } else {
                                  if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
                                    throw e9035;
                                  } else {
                                    return null;
                                  }
                                }
                              }
                            } else {
                              if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
                                throw cljs.core.match.backtrack;
                              } else {
                                return null;
                              }
                            }
                          } catch (e9034) {
                            if (e9034 instanceof Error) {
                              var e__4796__auto__ = e9034;
                              if (e__4796__auto__ === cljs.core.match.backtrack) {
                                throw cljs.core.match.backtrack;
                              } else {
                                throw e__4796__auto__;
                              }
                            } else {
                              if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
                                throw e9034;
                              } else {
                                return null;
                              }
                            }
                          }
                        } else {
                          if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
                            throw cljs.core.match.backtrack;
                          } else {
                            return null;
                          }
                        }
                      } catch (e9033) {
                        if (e9033 instanceof Error) {
                          var e__4796__auto__ = e9033;
                          if (e__4796__auto__ === cljs.core.match.backtrack) {
                            throw cljs.core.match.backtrack;
                          } else {
                            throw e__4796__auto__;
                          }
                        } else {
                          if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
                            throw e9033;
                          } else {
                            return null;
                          }
                        }
                      }
                    } else {
                      if (cljs.core.keyword_identical_QMARK_.call(null, ocr_8929_1__8950, new cljs.core.Keyword(null, "emptyline", "emptyline", 3889609267))) {
                        try {
                          var ocr_8929_3__8952 = cljs.core.nth.call(null, ocr_8929, 3);
                          if (cljs.core.keyword_identical_QMARK_.call(null, ocr_8929_3__8952, new cljs.core.Keyword(null, "default", "default", 2558708147))) {
                            try {
                              var ocr_8929_4__8953 = cljs.core.nth.call(null, ocr_8929, 4);
                              if (cljs.core.vector_QMARK_.call(null, ocr_8929_4__8953) && cljs.core.count.call(null, ocr_8929_4__8953) === 2) {
                                try {
                                  var ocr_8929_4__8953_0__8968 = cljs.core.nth.call(null, ocr_8929_4__8953, 0);
                                  if (cljs.core.keyword_identical_QMARK_.call(null, ocr_8929_4__8953_0__8968, new cljs.core.Keyword(null, "block", "block", 1107736575))) {
                                    try {
                                      var ocr_8929_5__8954 = cljs.core.nth.call(null, ocr_8929, 5);
                                      if (cljs.core.vector_QMARK_.call(null, ocr_8929_5__8954) && cljs.core.count.call(null, ocr_8929_5__8954) === 2) {
                                        try {
                                          var ocr_8929_5__8954_0__8970 = cljs.core.nth.call(null, ocr_8929_5__8954, 0);
                                          if (cljs.core.keyword_identical_QMARK_.call(null, ocr_8929_5__8954_0__8970, new cljs.core.Keyword(null, "block", "block", 1107736575))) {
                                            if (cljs.core._EQ_.call(null, termcat.term.payload.call(null, t3), "bind")) {
                                              var ts = termcat.rewrite.unwrap.call(null, t4);
                                              var name = function() {
                                                var $ = cljs.core.first.call(null, ts);
                                                var $__$1 = cljs.core.truth_($) ? termcat.term.payload.call(null, $) : null;
                                                return $__$1;
                                              }();
                                              if (cljs.core._EQ_.call(null, 1, cljs.core.count.call(null, ts)) && typeof name === "string") {
                                                return cljs.core.conj.call(null, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.assoc.call(null, state, name, termcat.rewrite.unwrap.call(null, t5)), termcat.rules.bind.strongest_blank.call(null, t1, t6, t1)], null), !cljs.core.contains_QMARK_.call(null, new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 4, [null, null, new cljs.core.Keyword(null, "emptyline", "emptyline", 3889609267), 
                                                null, new cljs.core.Keyword(null, "newline", "newline", 2859826438), null, new cljs.core.Keyword(null, "whitespace", "whitespace", 1290815983), null], null), null), termcat.term.tt.call(null, t6)) ? t6 : null);
                                              } else {
                                                return new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [state, t1, termcat.term.token.call(null, new cljs.core.Keyword(null, "error", "error", 1110689146), cljs.core.apply.call(null, cljs.core.str, "!bind: not a valid name \u2014 ", name, cljs.core.count.call(null, ts) > 1 ? [cljs.core.str(" (and "), cljs.core.str(cljs.core.count.call(null, ts) - 1), cljs.core.str(" more tokens)")].join("") : null)), t6], null);
                                              }
                                            } else {
                                              return null;
                                            }
                                          } else {
                                            if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
                                              throw cljs.core.match.backtrack;
                                            } else {
                                              return null;
                                            }
                                          }
                                        } catch (e9042) {
                                          if (e9042 instanceof Error) {
                                            var e__4796__auto__ = e9042;
                                            if (e__4796__auto__ === cljs.core.match.backtrack) {
                                              throw cljs.core.match.backtrack;
                                            } else {
                                              throw e__4796__auto__;
                                            }
                                          } else {
                                            if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
                                              throw e9042;
                                            } else {
                                              return null;
                                            }
                                          }
                                        }
                                      } else {
                                        if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
                                          throw cljs.core.match.backtrack;
                                        } else {
                                          return null;
                                        }
                                      }
                                    } catch (e9041) {
                                      if (e9041 instanceof Error) {
                                        var e__4796__auto__ = e9041;
                                        if (e__4796__auto__ === cljs.core.match.backtrack) {
                                          throw cljs.core.match.backtrack;
                                        } else {
                                          throw e__4796__auto__;
                                        }
                                      } else {
                                        if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
                                          throw e9041;
                                        } else {
                                          return null;
                                        }
                                      }
                                    }
                                  } else {
                                    if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
                                      throw cljs.core.match.backtrack;
                                    } else {
                                      return null;
                                    }
                                  }
                                } catch (e9040) {
                                  if (e9040 instanceof Error) {
                                    var e__4796__auto__ = e9040;
                                    if (e__4796__auto__ === cljs.core.match.backtrack) {
                                      throw cljs.core.match.backtrack;
                                    } else {
                                      throw e__4796__auto__;
                                    }
                                  } else {
                                    if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
                                      throw e9040;
                                    } else {
                                      return null;
                                    }
                                  }
                                }
                              } else {
                                if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
                                  throw cljs.core.match.backtrack;
                                } else {
                                  return null;
                                }
                              }
                            } catch (e9039) {
                              if (e9039 instanceof Error) {
                                var e__4796__auto__ = e9039;
                                if (e__4796__auto__ === cljs.core.match.backtrack) {
                                  throw cljs.core.match.backtrack;
                                } else {
                                  throw e__4796__auto__;
                                }
                              } else {
                                if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
                                  throw e9039;
                                } else {
                                  return null;
                                }
                              }
                            }
                          } else {
                            if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
                              throw cljs.core.match.backtrack;
                            } else {
                              return null;
                            }
                          }
                        } catch (e9038) {
                          if (e9038 instanceof Error) {
                            var e__4796__auto__ = e9038;
                            if (e__4796__auto__ === cljs.core.match.backtrack) {
                              throw cljs.core.match.backtrack;
                            } else {
                              throw e__4796__auto__;
                            }
                          } else {
                            if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
                              throw e9038;
                            } else {
                              return null;
                            }
                          }
                        }
                      } else {
                        if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
                          throw cljs.core.match.backtrack;
                        } else {
                          return null;
                        }
                      }
                    }
                  }
                }
              } catch (e9015) {
                if (e9015 instanceof Error) {
                  var e__4796__auto__ = e9015;
                  if (e__4796__auto__ === cljs.core.match.backtrack) {
                    try {
                      var ocr_8929_1__8950 = cljs.core.nth.call(null, ocr_8929, 1);
                      if (cljs.core.vector_QMARK_.call(null, ocr_8929_1__8950) && cljs.core.count.call(null, ocr_8929_1__8950) === 2) {
                        try {
                          var ocr_8929_1__8950_0__8972 = cljs.core.nth.call(null, ocr_8929_1__8950, 0);
                          if (cljs.core.keyword_identical_QMARK_.call(null, ocr_8929_1__8950_0__8972, new cljs.core.Keyword(null, "block", "block", 1107736575))) {
                            try {
                              var ocr_8929_3__8952 = cljs.core.nth.call(null, ocr_8929, 3);
                              if (cljs.core.keyword_identical_QMARK_.call(null, ocr_8929_3__8952, new cljs.core.Keyword(null, "default", "default", 2558708147))) {
                                try {
                                  var ocr_8929_4__8953 = cljs.core.nth.call(null, ocr_8929, 4);
                                  if (cljs.core.vector_QMARK_.call(null, ocr_8929_4__8953) && cljs.core.count.call(null, ocr_8929_4__8953) === 2) {
                                    try {
                                      var ocr_8929_4__8953_0__8974 = cljs.core.nth.call(null, ocr_8929_4__8953, 0);
                                      if (cljs.core.keyword_identical_QMARK_.call(null, ocr_8929_4__8953_0__8974, new cljs.core.Keyword(null, "block", "block", 1107736575))) {
                                        try {
                                          var ocr_8929_5__8954 = cljs.core.nth.call(null, ocr_8929, 5);
                                          if (cljs.core.vector_QMARK_.call(null, ocr_8929_5__8954) && cljs.core.count.call(null, ocr_8929_5__8954) === 2) {
                                            try {
                                              var ocr_8929_5__8954_0__8976 = cljs.core.nth.call(null, ocr_8929_5__8954, 0);
                                              if (cljs.core.keyword_identical_QMARK_.call(null, ocr_8929_5__8954_0__8976, new cljs.core.Keyword(null, "block", "block", 1107736575))) {
                                                if (cljs.core._EQ_.call(null, termcat.term.payload.call(null, t3), "bind")) {
                                                  var ts = termcat.rewrite.unwrap.call(null, t4);
                                                  var name = function() {
                                                    var $ = cljs.core.first.call(null, ts);
                                                    var $__$1 = cljs.core.truth_($) ? termcat.term.payload.call(null, $) : null;
                                                    return $__$1;
                                                  }();
                                                  if (cljs.core._EQ_.call(null, 1, cljs.core.count.call(null, ts)) && typeof name === "string") {
                                                    return cljs.core.conj.call(null, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.assoc.call(null, state, name, termcat.rewrite.unwrap.call(null, t5)), termcat.rules.bind.strongest_blank.call(null, t1, t6, t1)], null), !cljs.core.contains_QMARK_.call(null, new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 4, [null, null, new cljs.core.Keyword(null, "emptyline", "emptyline", 3889609267), 
                                                    null, new cljs.core.Keyword(null, "newline", "newline", 2859826438), null, new cljs.core.Keyword(null, "whitespace", "whitespace", 1290815983), null], null), null), termcat.term.tt.call(null, t6)) ? t6 : null);
                                                  } else {
                                                    return new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [state, t1, termcat.term.token.call(null, new cljs.core.Keyword(null, "error", "error", 1110689146), cljs.core.apply.call(null, cljs.core.str, "!bind: not a valid name \u2014 ", name, cljs.core.count.call(null, ts) > 1 ? [cljs.core.str(" (and "), cljs.core.str(cljs.core.count.call(null, ts) - 1), cljs.core.str(" more tokens)")].join("") : null)), t6], null);
                                                  }
                                                } else {
                                                  return null;
                                                }
                                              } else {
                                                if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
                                                  throw cljs.core.match.backtrack;
                                                } else {
                                                  return null;
                                                }
                                              }
                                            } catch (e9022) {
                                              if (e9022 instanceof Error) {
                                                var e__4796__auto____$1 = e9022;
                                                if (e__4796__auto____$1 === cljs.core.match.backtrack) {
                                                  throw cljs.core.match.backtrack;
                                                } else {
                                                  throw e__4796__auto____$1;
                                                }
                                              } else {
                                                if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
                                                  throw e9022;
                                                } else {
                                                  return null;
                                                }
                                              }
                                            }
                                          } else {
                                            if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
                                              throw cljs.core.match.backtrack;
                                            } else {
                                              return null;
                                            }
                                          }
                                        } catch (e9021) {
                                          if (e9021 instanceof Error) {
                                            var e__4796__auto____$1 = e9021;
                                            if (e__4796__auto____$1 === cljs.core.match.backtrack) {
                                              throw cljs.core.match.backtrack;
                                            } else {
                                              throw e__4796__auto____$1;
                                            }
                                          } else {
                                            if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
                                              throw e9021;
                                            } else {
                                              return null;
                                            }
                                          }
                                        }
                                      } else {
                                        if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
                                          throw cljs.core.match.backtrack;
                                        } else {
                                          return null;
                                        }
                                      }
                                    } catch (e9020) {
                                      if (e9020 instanceof Error) {
                                        var e__4796__auto____$1 = e9020;
                                        if (e__4796__auto____$1 === cljs.core.match.backtrack) {
                                          throw cljs.core.match.backtrack;
                                        } else {
                                          throw e__4796__auto____$1;
                                        }
                                      } else {
                                        if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
                                          throw e9020;
                                        } else {
                                          return null;
                                        }
                                      }
                                    }
                                  } else {
                                    if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
                                      throw cljs.core.match.backtrack;
                                    } else {
                                      return null;
                                    }
                                  }
                                } catch (e9019) {
                                  if (e9019 instanceof Error) {
                                    var e__4796__auto____$1 = e9019;
                                    if (e__4796__auto____$1 === cljs.core.match.backtrack) {
                                      throw cljs.core.match.backtrack;
                                    } else {
                                      throw e__4796__auto____$1;
                                    }
                                  } else {
                                    if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
                                      throw e9019;
                                    } else {
                                      return null;
                                    }
                                  }
                                }
                              } else {
                                if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
                                  throw cljs.core.match.backtrack;
                                } else {
                                  return null;
                                }
                              }
                            } catch (e9018) {
                              if (e9018 instanceof Error) {
                                var e__4796__auto____$1 = e9018;
                                if (e__4796__auto____$1 === cljs.core.match.backtrack) {
                                  throw cljs.core.match.backtrack;
                                } else {
                                  throw e__4796__auto____$1;
                                }
                              } else {
                                if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
                                  throw e9018;
                                } else {
                                  return null;
                                }
                              }
                            }
                          } else {
                            if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
                              throw cljs.core.match.backtrack;
                            } else {
                              return null;
                            }
                          }
                        } catch (e9017) {
                          if (e9017 instanceof Error) {
                            var e__4796__auto____$1 = e9017;
                            if (e__4796__auto____$1 === cljs.core.match.backtrack) {
                              throw cljs.core.match.backtrack;
                            } else {
                              throw e__4796__auto____$1;
                            }
                          } else {
                            if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
                              throw e9017;
                            } else {
                              return null;
                            }
                          }
                        }
                      } else {
                        if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
                          throw cljs.core.match.backtrack;
                        } else {
                          return null;
                        }
                      }
                    } catch (e9016) {
                      if (e9016 instanceof Error) {
                        var e__4796__auto____$1 = e9016;
                        if (e__4796__auto____$1 === cljs.core.match.backtrack) {
                          throw cljs.core.match.backtrack;
                        } else {
                          throw e__4796__auto____$1;
                        }
                      } else {
                        if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
                          throw e9016;
                        } else {
                          return null;
                        }
                      }
                    }
                  } else {
                    throw e__4796__auto__;
                  }
                } else {
                  if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
                    throw e9015;
                  } else {
                    return null;
                  }
                }
              }
            } else {
              if (cljs.core.keyword_identical_QMARK_.call(null, ocr_8929_2__8951, new cljs.core.Keyword(null, "arg", "arg", 1014001096))) {
                return new cljs.core.PersistentVector(null, 7, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.dissoc.call(null, state, termcat.term.payload.call(null, t2)), t1, t2, t3, t4, t5, t6], null);
              } else {
                if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
                  throw cljs.core.match.backtrack;
                } else {
                  return null;
                }
              }
            }
          } catch (e8991) {
            if (e8991 instanceof Error) {
              var e__4796__auto__ = e8991;
              if (e__4796__auto__ === cljs.core.match.backtrack) {
                try {
                  var ocr_8929_1__8950 = cljs.core.nth.call(null, ocr_8929, 1);
                  if (ocr_8929_1__8950 === null) {
                    try {
                      var ocr_8929_3__8952 = cljs.core.nth.call(null, ocr_8929, 3);
                      if (ocr_8929_3__8952 === null) {
                        var temp__4090__auto__ = function() {
                          var and__3391__auto__ = termcat.term.token_QMARK_.call(null, t2);
                          if (and__3391__auto__) {
                            return cljs.core.get.call(null, state, termcat.term.payload.call(null, t2));
                          } else {
                            return and__3391__auto__;
                          }
                        }();
                        if (cljs.core.truth_(temp__4090__auto__)) {
                          var ts = temp__4090__auto__;
                          return new cljs.core.PersistentVector(null, 7, 5, cljs.core.PersistentVector.EMPTY_NODE, [state, t1, termcat.term.block.call(null, termcat.term.ldelim.call(null, new cljs.core.Keyword(null, "identifier", "identifier", 3690438683)), termcat.term.fragmentcat.call(null, ts), termcat.term.rdelim.call(null, new cljs.core.Keyword(null, "identifier", "identifier", 3690438683))), t3, t4, t5, t6], null);
                        } else {
                          return null;
                        }
                      } else {
                        if (cljs.core.keyword_identical_QMARK_.call(null, ocr_8929_3__8952, new cljs.core.Keyword(null, "whitespace", "whitespace", 1290815983))) {
                          var temp__4090__auto__ = function() {
                            var and__3391__auto__ = termcat.term.token_QMARK_.call(null, t2);
                            if (and__3391__auto__) {
                              return cljs.core.get.call(null, state, termcat.term.payload.call(null, t2));
                            } else {
                              return and__3391__auto__;
                            }
                          }();
                          if (cljs.core.truth_(temp__4090__auto__)) {
                            var ts = temp__4090__auto__;
                            return new cljs.core.PersistentVector(null, 7, 5, cljs.core.PersistentVector.EMPTY_NODE, [state, t1, termcat.term.block.call(null, termcat.term.ldelim.call(null, new cljs.core.Keyword(null, "identifier", "identifier", 3690438683)), termcat.term.fragmentcat.call(null, ts), termcat.term.rdelim.call(null, new cljs.core.Keyword(null, "identifier", "identifier", 3690438683))), t3, t4, t5, t6], null);
                          } else {
                            return null;
                          }
                        } else {
                          if (cljs.core.keyword_identical_QMARK_.call(null, ocr_8929_3__8952, new cljs.core.Keyword(null, "newline", "newline", 2859826438))) {
                            var temp__4090__auto__ = function() {
                              var and__3391__auto__ = termcat.term.token_QMARK_.call(null, t2);
                              if (and__3391__auto__) {
                                return cljs.core.get.call(null, state, termcat.term.payload.call(null, t2));
                              } else {
                                return and__3391__auto__;
                              }
                            }();
                            if (cljs.core.truth_(temp__4090__auto__)) {
                              var ts = temp__4090__auto__;
                              return new cljs.core.PersistentVector(null, 7, 5, cljs.core.PersistentVector.EMPTY_NODE, [state, t1, termcat.term.block.call(null, termcat.term.ldelim.call(null, new cljs.core.Keyword(null, "identifier", "identifier", 3690438683)), termcat.term.fragmentcat.call(null, ts), termcat.term.rdelim.call(null, new cljs.core.Keyword(null, "identifier", "identifier", 3690438683))), t3, t4, t5, t6], null);
                            } else {
                              return null;
                            }
                          } else {
                            if (cljs.core.keyword_identical_QMARK_.call(null, ocr_8929_3__8952, new cljs.core.Keyword(null, "emptyline", "emptyline", 3889609267))) {
                              var temp__4090__auto__ = function() {
                                var and__3391__auto__ = termcat.term.token_QMARK_.call(null, t2);
                                if (and__3391__auto__) {
                                  return cljs.core.get.call(null, state, termcat.term.payload.call(null, t2));
                                } else {
                                  return and__3391__auto__;
                                }
                              }();
                              if (cljs.core.truth_(temp__4090__auto__)) {
                                var ts = temp__4090__auto__;
                                return new cljs.core.PersistentVector(null, 7, 5, cljs.core.PersistentVector.EMPTY_NODE, [state, t1, termcat.term.block.call(null, termcat.term.ldelim.call(null, new cljs.core.Keyword(null, "identifier", "identifier", 3690438683)), termcat.term.fragmentcat.call(null, ts), termcat.term.rdelim.call(null, new cljs.core.Keyword(null, "identifier", "identifier", 3690438683))), t3, t4, t5, t6], null);
                              } else {
                                return null;
                              }
                            } else {
                              if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
                                throw cljs.core.match.backtrack;
                              } else {
                                return null;
                              }
                            }
                          }
                        }
                      }
                    } catch (e8999) {
                      if (e8999 instanceof Error) {
                        var e__4796__auto____$1 = e8999;
                        if (e__4796__auto____$1 === cljs.core.match.backtrack) {
                          try {
                            var ocr_8929_3__8952 = cljs.core.nth.call(null, ocr_8929, 3);
                            if (cljs.core.vector_QMARK_.call(null, ocr_8929_3__8952) && cljs.core.count.call(null, ocr_8929_3__8952) === 2) {
                              try {
                                var ocr_8929_3__8952_0__8978 = cljs.core.nth.call(null, ocr_8929_3__8952, 0);
                                if (cljs.core.keyword_identical_QMARK_.call(null, ocr_8929_3__8952_0__8978, new cljs.core.Keyword(null, "block", "block", 1107736575))) {
                                  var temp__4090__auto__ = function() {
                                    var and__3391__auto__ = termcat.term.token_QMARK_.call(null, t2);
                                    if (and__3391__auto__) {
                                      return cljs.core.get.call(null, state, termcat.term.payload.call(null, t2));
                                    } else {
                                      return and__3391__auto__;
                                    }
                                  }();
                                  if (cljs.core.truth_(temp__4090__auto__)) {
                                    var ts = temp__4090__auto__;
                                    return new cljs.core.PersistentVector(null, 7, 5, cljs.core.PersistentVector.EMPTY_NODE, [state, t1, termcat.term.block.call(null, termcat.term.ldelim.call(null, new cljs.core.Keyword(null, "identifier", "identifier", 3690438683)), termcat.term.fragmentcat.call(null, ts), termcat.term.rdelim.call(null, new cljs.core.Keyword(null, "identifier", "identifier", 3690438683))), t3, t4, t5, t6], null);
                                  } else {
                                    return null;
                                  }
                                } else {
                                  if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
                                    throw cljs.core.match.backtrack;
                                  } else {
                                    return null;
                                  }
                                }
                              } catch (e9002) {
                                if (e9002 instanceof Error) {
                                  var e__4796__auto____$2 = e9002;
                                  if (e__4796__auto____$2 === cljs.core.match.backtrack) {
                                    throw cljs.core.match.backtrack;
                                  } else {
                                    throw e__4796__auto____$2;
                                  }
                                } else {
                                  if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
                                    throw e9002;
                                  } else {
                                    return null;
                                  }
                                }
                              }
                            } else {
                              if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
                                throw cljs.core.match.backtrack;
                              } else {
                                return null;
                              }
                            }
                          } catch (e9000) {
                            if (e9000 instanceof Error) {
                              var e__4796__auto____$2 = e9000;
                              if (e__4796__auto____$2 === cljs.core.match.backtrack) {
                                try {
                                  var ocr_8929_3__8952 = cljs.core.nth.call(null, ocr_8929, 3);
                                  if (cljs.core.keyword_identical_QMARK_.call(null, ocr_8929_3__8952, new cljs.core.Keyword(null, "hash", "hash", 1017099392))) {
                                    var temp__4090__auto__ = function() {
                                      var and__3391__auto__ = termcat.term.token_QMARK_.call(null, t2);
                                      if (and__3391__auto__) {
                                        return cljs.core.get.call(null, state, termcat.term.payload.call(null, t2));
                                      } else {
                                        return and__3391__auto__;
                                      }
                                    }();
                                    if (cljs.core.truth_(temp__4090__auto__)) {
                                      var ts = temp__4090__auto__;
                                      return new cljs.core.PersistentVector(null, 7, 5, cljs.core.PersistentVector.EMPTY_NODE, [state, t1, termcat.term.block.call(null, termcat.term.ldelim.call(null, new cljs.core.Keyword(null, "identifier", "identifier", 3690438683)), termcat.term.fragmentcat.call(null, ts), termcat.term.rdelim.call(null, new cljs.core.Keyword(null, "identifier", "identifier", 3690438683))), t3, t4, t5, t6], null);
                                    } else {
                                      return null;
                                    }
                                  } else {
                                    if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
                                      throw cljs.core.match.backtrack;
                                    } else {
                                      return null;
                                    }
                                  }
                                } catch (e9001) {
                                  if (e9001 instanceof Error) {
                                    var e__4796__auto____$3 = e9001;
                                    if (e__4796__auto____$3 === cljs.core.match.backtrack) {
                                      throw cljs.core.match.backtrack;
                                    } else {
                                      throw e__4796__auto____$3;
                                    }
                                  } else {
                                    if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
                                      throw e9001;
                                    } else {
                                      return null;
                                    }
                                  }
                                }
                              } else {
                                throw e__4796__auto____$2;
                              }
                            } else {
                              if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
                                throw e9000;
                              } else {
                                return null;
                              }
                            }
                          }
                        } else {
                          throw e__4796__auto____$1;
                        }
                      } else {
                        if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
                          throw e8999;
                        } else {
                          return null;
                        }
                      }
                    }
                  } else {
                    if (cljs.core.keyword_identical_QMARK_.call(null, ocr_8929_1__8950, new cljs.core.Keyword(null, "whitespace", "whitespace", 1290815983))) {
                      try {
                        var ocr_8929_3__8952 = cljs.core.nth.call(null, ocr_8929, 3);
                        if (ocr_8929_3__8952 === null) {
                          var temp__4090__auto__ = function() {
                            var and__3391__auto__ = termcat.term.token_QMARK_.call(null, t2);
                            if (and__3391__auto__) {
                              return cljs.core.get.call(null, state, termcat.term.payload.call(null, t2));
                            } else {
                              return and__3391__auto__;
                            }
                          }();
                          if (cljs.core.truth_(temp__4090__auto__)) {
                            var ts = temp__4090__auto__;
                            return new cljs.core.PersistentVector(null, 7, 5, cljs.core.PersistentVector.EMPTY_NODE, [state, t1, termcat.term.block.call(null, termcat.term.ldelim.call(null, new cljs.core.Keyword(null, "identifier", "identifier", 3690438683)), termcat.term.fragmentcat.call(null, ts), termcat.term.rdelim.call(null, new cljs.core.Keyword(null, "identifier", "identifier", 3690438683))), t3, t4, t5, t6], null);
                          } else {
                            return null;
                          }
                        } else {
                          if (cljs.core.keyword_identical_QMARK_.call(null, ocr_8929_3__8952, new cljs.core.Keyword(null, "whitespace", "whitespace", 1290815983))) {
                            var temp__4090__auto__ = function() {
                              var and__3391__auto__ = termcat.term.token_QMARK_.call(null, t2);
                              if (and__3391__auto__) {
                                return cljs.core.get.call(null, state, termcat.term.payload.call(null, t2));
                              } else {
                                return and__3391__auto__;
                              }
                            }();
                            if (cljs.core.truth_(temp__4090__auto__)) {
                              var ts = temp__4090__auto__;
                              return new cljs.core.PersistentVector(null, 7, 5, cljs.core.PersistentVector.EMPTY_NODE, [state, t1, termcat.term.block.call(null, termcat.term.ldelim.call(null, new cljs.core.Keyword(null, "identifier", "identifier", 3690438683)), termcat.term.fragmentcat.call(null, ts), termcat.term.rdelim.call(null, new cljs.core.Keyword(null, "identifier", "identifier", 3690438683))), t3, t4, t5, t6], null);
                            } else {
                              return null;
                            }
                          } else {
                            if (cljs.core.keyword_identical_QMARK_.call(null, ocr_8929_3__8952, new cljs.core.Keyword(null, "newline", "newline", 2859826438))) {
                              var temp__4090__auto__ = function() {
                                var and__3391__auto__ = termcat.term.token_QMARK_.call(null, t2);
                                if (and__3391__auto__) {
                                  return cljs.core.get.call(null, state, termcat.term.payload.call(null, t2));
                                } else {
                                  return and__3391__auto__;
                                }
                              }();
                              if (cljs.core.truth_(temp__4090__auto__)) {
                                var ts = temp__4090__auto__;
                                return new cljs.core.PersistentVector(null, 7, 5, cljs.core.PersistentVector.EMPTY_NODE, [state, t1, termcat.term.block.call(null, termcat.term.ldelim.call(null, new cljs.core.Keyword(null, "identifier", "identifier", 3690438683)), termcat.term.fragmentcat.call(null, ts), termcat.term.rdelim.call(null, new cljs.core.Keyword(null, "identifier", "identifier", 3690438683))), t3, t4, t5, t6], null);
                              } else {
                                return null;
                              }
                            } else {
                              if (cljs.core.keyword_identical_QMARK_.call(null, ocr_8929_3__8952, new cljs.core.Keyword(null, "emptyline", "emptyline", 3889609267))) {
                                var temp__4090__auto__ = function() {
                                  var and__3391__auto__ = termcat.term.token_QMARK_.call(null, t2);
                                  if (and__3391__auto__) {
                                    return cljs.core.get.call(null, state, termcat.term.payload.call(null, t2));
                                  } else {
                                    return and__3391__auto__;
                                  }
                                }();
                                if (cljs.core.truth_(temp__4090__auto__)) {
                                  var ts = temp__4090__auto__;
                                  return new cljs.core.PersistentVector(null, 7, 5, cljs.core.PersistentVector.EMPTY_NODE, [state, t1, termcat.term.block.call(null, termcat.term.ldelim.call(null, new cljs.core.Keyword(null, "identifier", "identifier", 3690438683)), termcat.term.fragmentcat.call(null, ts), termcat.term.rdelim.call(null, new cljs.core.Keyword(null, "identifier", "identifier", 3690438683))), t3, t4, t5, t6], null);
                                } else {
                                  return null;
                                }
                              } else {
                                if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
                                  throw cljs.core.match.backtrack;
                                } else {
                                  return null;
                                }
                              }
                            }
                          }
                        }
                      } catch (e9003) {
                        if (e9003 instanceof Error) {
                          var e__4796__auto____$1 = e9003;
                          if (e__4796__auto____$1 === cljs.core.match.backtrack) {
                            try {
                              var ocr_8929_3__8952 = cljs.core.nth.call(null, ocr_8929, 3);
                              if (cljs.core.vector_QMARK_.call(null, ocr_8929_3__8952) && cljs.core.count.call(null, ocr_8929_3__8952) === 2) {
                                try {
                                  var ocr_8929_3__8952_0__8980 = cljs.core.nth.call(null, ocr_8929_3__8952, 0);
                                  if (cljs.core.keyword_identical_QMARK_.call(null, ocr_8929_3__8952_0__8980, new cljs.core.Keyword(null, "block", "block", 1107736575))) {
                                    var temp__4090__auto__ = function() {
                                      var and__3391__auto__ = termcat.term.token_QMARK_.call(null, t2);
                                      if (and__3391__auto__) {
                                        return cljs.core.get.call(null, state, termcat.term.payload.call(null, t2));
                                      } else {
                                        return and__3391__auto__;
                                      }
                                    }();
                                    if (cljs.core.truth_(temp__4090__auto__)) {
                                      var ts = temp__4090__auto__;
                                      return new cljs.core.PersistentVector(null, 7, 5, cljs.core.PersistentVector.EMPTY_NODE, [state, t1, termcat.term.block.call(null, termcat.term.ldelim.call(null, new cljs.core.Keyword(null, "identifier", "identifier", 3690438683)), termcat.term.fragmentcat.call(null, ts), termcat.term.rdelim.call(null, new cljs.core.Keyword(null, "identifier", "identifier", 3690438683))), t3, t4, t5, t6], null);
                                    } else {
                                      return null;
                                    }
                                  } else {
                                    if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
                                      throw cljs.core.match.backtrack;
                                    } else {
                                      return null;
                                    }
                                  }
                                } catch (e9006) {
                                  if (e9006 instanceof Error) {
                                    var e__4796__auto____$2 = e9006;
                                    if (e__4796__auto____$2 === cljs.core.match.backtrack) {
                                      throw cljs.core.match.backtrack;
                                    } else {
                                      throw e__4796__auto____$2;
                                    }
                                  } else {
                                    if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
                                      throw e9006;
                                    } else {
                                      return null;
                                    }
                                  }
                                }
                              } else {
                                if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
                                  throw cljs.core.match.backtrack;
                                } else {
                                  return null;
                                }
                              }
                            } catch (e9004) {
                              if (e9004 instanceof Error) {
                                var e__4796__auto____$2 = e9004;
                                if (e__4796__auto____$2 === cljs.core.match.backtrack) {
                                  try {
                                    var ocr_8929_3__8952 = cljs.core.nth.call(null, ocr_8929, 3);
                                    if (cljs.core.keyword_identical_QMARK_.call(null, ocr_8929_3__8952, new cljs.core.Keyword(null, "hash", "hash", 1017099392))) {
                                      var temp__4090__auto__ = function() {
                                        var and__3391__auto__ = termcat.term.token_QMARK_.call(null, t2);
                                        if (and__3391__auto__) {
                                          return cljs.core.get.call(null, state, termcat.term.payload.call(null, t2));
                                        } else {
                                          return and__3391__auto__;
                                        }
                                      }();
                                      if (cljs.core.truth_(temp__4090__auto__)) {
                                        var ts = temp__4090__auto__;
                                        return new cljs.core.PersistentVector(null, 7, 5, cljs.core.PersistentVector.EMPTY_NODE, [state, t1, termcat.term.block.call(null, termcat.term.ldelim.call(null, new cljs.core.Keyword(null, "identifier", "identifier", 3690438683)), termcat.term.fragmentcat.call(null, ts), termcat.term.rdelim.call(null, new cljs.core.Keyword(null, "identifier", "identifier", 3690438683))), t3, t4, t5, t6], null);
                                      } else {
                                        return null;
                                      }
                                    } else {
                                      if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
                                        throw cljs.core.match.backtrack;
                                      } else {
                                        return null;
                                      }
                                    }
                                  } catch (e9005) {
                                    if (e9005 instanceof Error) {
                                      var e__4796__auto____$3 = e9005;
                                      if (e__4796__auto____$3 === cljs.core.match.backtrack) {
                                        throw cljs.core.match.backtrack;
                                      } else {
                                        throw e__4796__auto____$3;
                                      }
                                    } else {
                                      if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
                                        throw e9005;
                                      } else {
                                        return null;
                                      }
                                    }
                                  }
                                } else {
                                  throw e__4796__auto____$2;
                                }
                              } else {
                                if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
                                  throw e9004;
                                } else {
                                  return null;
                                }
                              }
                            }
                          } else {
                            throw e__4796__auto____$1;
                          }
                        } else {
                          if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
                            throw e9003;
                          } else {
                            return null;
                          }
                        }
                      }
                    } else {
                      if (cljs.core.keyword_identical_QMARK_.call(null, ocr_8929_1__8950, new cljs.core.Keyword(null, "newline", "newline", 2859826438))) {
                        try {
                          var ocr_8929_3__8952 = cljs.core.nth.call(null, ocr_8929, 3);
                          if (ocr_8929_3__8952 === null) {
                            var temp__4090__auto__ = function() {
                              var and__3391__auto__ = termcat.term.token_QMARK_.call(null, t2);
                              if (and__3391__auto__) {
                                return cljs.core.get.call(null, state, termcat.term.payload.call(null, t2));
                              } else {
                                return and__3391__auto__;
                              }
                            }();
                            if (cljs.core.truth_(temp__4090__auto__)) {
                              var ts = temp__4090__auto__;
                              return new cljs.core.PersistentVector(null, 7, 5, cljs.core.PersistentVector.EMPTY_NODE, [state, t1, termcat.term.block.call(null, termcat.term.ldelim.call(null, new cljs.core.Keyword(null, "identifier", "identifier", 3690438683)), termcat.term.fragmentcat.call(null, ts), termcat.term.rdelim.call(null, new cljs.core.Keyword(null, "identifier", "identifier", 3690438683))), t3, t4, t5, t6], null);
                            } else {
                              return null;
                            }
                          } else {
                            if (cljs.core.keyword_identical_QMARK_.call(null, ocr_8929_3__8952, new cljs.core.Keyword(null, "whitespace", "whitespace", 1290815983))) {
                              var temp__4090__auto__ = function() {
                                var and__3391__auto__ = termcat.term.token_QMARK_.call(null, t2);
                                if (and__3391__auto__) {
                                  return cljs.core.get.call(null, state, termcat.term.payload.call(null, t2));
                                } else {
                                  return and__3391__auto__;
                                }
                              }();
                              if (cljs.core.truth_(temp__4090__auto__)) {
                                var ts = temp__4090__auto__;
                                return new cljs.core.PersistentVector(null, 7, 5, cljs.core.PersistentVector.EMPTY_NODE, [state, t1, termcat.term.block.call(null, termcat.term.ldelim.call(null, new cljs.core.Keyword(null, "identifier", "identifier", 3690438683)), termcat.term.fragmentcat.call(null, ts), termcat.term.rdelim.call(null, new cljs.core.Keyword(null, "identifier", "identifier", 3690438683))), t3, t4, t5, t6], null);
                              } else {
                                return null;
                              }
                            } else {
                              if (cljs.core.keyword_identical_QMARK_.call(null, ocr_8929_3__8952, new cljs.core.Keyword(null, "newline", "newline", 2859826438))) {
                                var temp__4090__auto__ = function() {
                                  var and__3391__auto__ = termcat.term.token_QMARK_.call(null, t2);
                                  if (and__3391__auto__) {
                                    return cljs.core.get.call(null, state, termcat.term.payload.call(null, t2));
                                  } else {
                                    return and__3391__auto__;
                                  }
                                }();
                                if (cljs.core.truth_(temp__4090__auto__)) {
                                  var ts = temp__4090__auto__;
                                  return new cljs.core.PersistentVector(null, 7, 5, cljs.core.PersistentVector.EMPTY_NODE, [state, t1, termcat.term.block.call(null, termcat.term.ldelim.call(null, new cljs.core.Keyword(null, "identifier", "identifier", 3690438683)), termcat.term.fragmentcat.call(null, ts), termcat.term.rdelim.call(null, new cljs.core.Keyword(null, "identifier", "identifier", 3690438683))), t3, t4, t5, t6], null);
                                } else {
                                  return null;
                                }
                              } else {
                                if (cljs.core.keyword_identical_QMARK_.call(null, ocr_8929_3__8952, new cljs.core.Keyword(null, "emptyline", "emptyline", 3889609267))) {
                                  var temp__4090__auto__ = function() {
                                    var and__3391__auto__ = termcat.term.token_QMARK_.call(null, t2);
                                    if (and__3391__auto__) {
                                      return cljs.core.get.call(null, state, termcat.term.payload.call(null, t2));
                                    } else {
                                      return and__3391__auto__;
                                    }
                                  }();
                                  if (cljs.core.truth_(temp__4090__auto__)) {
                                    var ts = temp__4090__auto__;
                                    return new cljs.core.PersistentVector(null, 7, 5, cljs.core.PersistentVector.EMPTY_NODE, [state, t1, termcat.term.block.call(null, termcat.term.ldelim.call(null, new cljs.core.Keyword(null, "identifier", "identifier", 3690438683)), termcat.term.fragmentcat.call(null, ts), termcat.term.rdelim.call(null, new cljs.core.Keyword(null, "identifier", "identifier", 3690438683))), t3, t4, t5, t6], null);
                                  } else {
                                    return null;
                                  }
                                } else {
                                  if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
                                    throw cljs.core.match.backtrack;
                                  } else {
                                    return null;
                                  }
                                }
                              }
                            }
                          }
                        } catch (e9007) {
                          if (e9007 instanceof Error) {
                            var e__4796__auto____$1 = e9007;
                            if (e__4796__auto____$1 === cljs.core.match.backtrack) {
                              try {
                                var ocr_8929_3__8952 = cljs.core.nth.call(null, ocr_8929, 3);
                                if (cljs.core.vector_QMARK_.call(null, ocr_8929_3__8952) && cljs.core.count.call(null, ocr_8929_3__8952) === 2) {
                                  try {
                                    var ocr_8929_3__8952_0__8982 = cljs.core.nth.call(null, ocr_8929_3__8952, 0);
                                    if (cljs.core.keyword_identical_QMARK_.call(null, ocr_8929_3__8952_0__8982, new cljs.core.Keyword(null, "block", "block", 1107736575))) {
                                      var temp__4090__auto__ = function() {
                                        var and__3391__auto__ = termcat.term.token_QMARK_.call(null, t2);
                                        if (and__3391__auto__) {
                                          return cljs.core.get.call(null, state, termcat.term.payload.call(null, t2));
                                        } else {
                                          return and__3391__auto__;
                                        }
                                      }();
                                      if (cljs.core.truth_(temp__4090__auto__)) {
                                        var ts = temp__4090__auto__;
                                        return new cljs.core.PersistentVector(null, 7, 5, cljs.core.PersistentVector.EMPTY_NODE, [state, t1, termcat.term.block.call(null, termcat.term.ldelim.call(null, new cljs.core.Keyword(null, "identifier", "identifier", 3690438683)), termcat.term.fragmentcat.call(null, ts), termcat.term.rdelim.call(null, new cljs.core.Keyword(null, "identifier", "identifier", 3690438683))), t3, t4, t5, t6], null);
                                      } else {
                                        return null;
                                      }
                                    } else {
                                      if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
                                        throw cljs.core.match.backtrack;
                                      } else {
                                        return null;
                                      }
                                    }
                                  } catch (e9010) {
                                    if (e9010 instanceof Error) {
                                      var e__4796__auto____$2 = e9010;
                                      if (e__4796__auto____$2 === cljs.core.match.backtrack) {
                                        throw cljs.core.match.backtrack;
                                      } else {
                                        throw e__4796__auto____$2;
                                      }
                                    } else {
                                      if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
                                        throw e9010;
                                      } else {
                                        return null;
                                      }
                                    }
                                  }
                                } else {
                                  if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
                                    throw cljs.core.match.backtrack;
                                  } else {
                                    return null;
                                  }
                                }
                              } catch (e9008) {
                                if (e9008 instanceof Error) {
                                  var e__4796__auto____$2 = e9008;
                                  if (e__4796__auto____$2 === cljs.core.match.backtrack) {
                                    try {
                                      var ocr_8929_3__8952 = cljs.core.nth.call(null, ocr_8929, 3);
                                      if (cljs.core.keyword_identical_QMARK_.call(null, ocr_8929_3__8952, new cljs.core.Keyword(null, "hash", "hash", 1017099392))) {
                                        var temp__4090__auto__ = function() {
                                          var and__3391__auto__ = termcat.term.token_QMARK_.call(null, t2);
                                          if (and__3391__auto__) {
                                            return cljs.core.get.call(null, state, termcat.term.payload.call(null, t2));
                                          } else {
                                            return and__3391__auto__;
                                          }
                                        }();
                                        if (cljs.core.truth_(temp__4090__auto__)) {
                                          var ts = temp__4090__auto__;
                                          return new cljs.core.PersistentVector(null, 7, 5, cljs.core.PersistentVector.EMPTY_NODE, [state, t1, termcat.term.block.call(null, termcat.term.ldelim.call(null, new cljs.core.Keyword(null, "identifier", "identifier", 3690438683)), termcat.term.fragmentcat.call(null, ts), termcat.term.rdelim.call(null, new cljs.core.Keyword(null, "identifier", "identifier", 3690438683))), t3, t4, t5, t6], null);
                                        } else {
                                          return null;
                                        }
                                      } else {
                                        if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
                                          throw cljs.core.match.backtrack;
                                        } else {
                                          return null;
                                        }
                                      }
                                    } catch (e9009) {
                                      if (e9009 instanceof Error) {
                                        var e__4796__auto____$3 = e9009;
                                        if (e__4796__auto____$3 === cljs.core.match.backtrack) {
                                          throw cljs.core.match.backtrack;
                                        } else {
                                          throw e__4796__auto____$3;
                                        }
                                      } else {
                                        if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
                                          throw e9009;
                                        } else {
                                          return null;
                                        }
                                      }
                                    }
                                  } else {
                                    throw e__4796__auto____$2;
                                  }
                                } else {
                                  if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
                                    throw e9008;
                                  } else {
                                    return null;
                                  }
                                }
                              }
                            } else {
                              throw e__4796__auto____$1;
                            }
                          } else {
                            if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
                              throw e9007;
                            } else {
                              return null;
                            }
                          }
                        }
                      } else {
                        if (cljs.core.keyword_identical_QMARK_.call(null, ocr_8929_1__8950, new cljs.core.Keyword(null, "emptyline", "emptyline", 3889609267))) {
                          try {
                            var ocr_8929_3__8952 = cljs.core.nth.call(null, ocr_8929, 3);
                            if (ocr_8929_3__8952 === null) {
                              var temp__4090__auto__ = function() {
                                var and__3391__auto__ = termcat.term.token_QMARK_.call(null, t2);
                                if (and__3391__auto__) {
                                  return cljs.core.get.call(null, state, termcat.term.payload.call(null, t2));
                                } else {
                                  return and__3391__auto__;
                                }
                              }();
                              if (cljs.core.truth_(temp__4090__auto__)) {
                                var ts = temp__4090__auto__;
                                return new cljs.core.PersistentVector(null, 7, 5, cljs.core.PersistentVector.EMPTY_NODE, [state, t1, termcat.term.block.call(null, termcat.term.ldelim.call(null, new cljs.core.Keyword(null, "identifier", "identifier", 3690438683)), termcat.term.fragmentcat.call(null, ts), termcat.term.rdelim.call(null, new cljs.core.Keyword(null, "identifier", "identifier", 3690438683))), t3, t4, t5, t6], null);
                              } else {
                                return null;
                              }
                            } else {
                              if (cljs.core.keyword_identical_QMARK_.call(null, ocr_8929_3__8952, new cljs.core.Keyword(null, "whitespace", "whitespace", 1290815983))) {
                                var temp__4090__auto__ = function() {
                                  var and__3391__auto__ = termcat.term.token_QMARK_.call(null, t2);
                                  if (and__3391__auto__) {
                                    return cljs.core.get.call(null, state, termcat.term.payload.call(null, t2));
                                  } else {
                                    return and__3391__auto__;
                                  }
                                }();
                                if (cljs.core.truth_(temp__4090__auto__)) {
                                  var ts = temp__4090__auto__;
                                  return new cljs.core.PersistentVector(null, 7, 5, cljs.core.PersistentVector.EMPTY_NODE, [state, t1, termcat.term.block.call(null, termcat.term.ldelim.call(null, new cljs.core.Keyword(null, "identifier", "identifier", 3690438683)), termcat.term.fragmentcat.call(null, ts), termcat.term.rdelim.call(null, new cljs.core.Keyword(null, "identifier", "identifier", 3690438683))), t3, t4, t5, t6], null);
                                } else {
                                  return null;
                                }
                              } else {
                                if (cljs.core.keyword_identical_QMARK_.call(null, ocr_8929_3__8952, new cljs.core.Keyword(null, "newline", "newline", 2859826438))) {
                                  var temp__4090__auto__ = function() {
                                    var and__3391__auto__ = termcat.term.token_QMARK_.call(null, t2);
                                    if (and__3391__auto__) {
                                      return cljs.core.get.call(null, state, termcat.term.payload.call(null, t2));
                                    } else {
                                      return and__3391__auto__;
                                    }
                                  }();
                                  if (cljs.core.truth_(temp__4090__auto__)) {
                                    var ts = temp__4090__auto__;
                                    return new cljs.core.PersistentVector(null, 7, 5, cljs.core.PersistentVector.EMPTY_NODE, [state, t1, termcat.term.block.call(null, termcat.term.ldelim.call(null, new cljs.core.Keyword(null, "identifier", "identifier", 3690438683)), termcat.term.fragmentcat.call(null, ts), termcat.term.rdelim.call(null, new cljs.core.Keyword(null, "identifier", "identifier", 3690438683))), t3, t4, t5, t6], null);
                                  } else {
                                    return null;
                                  }
                                } else {
                                  if (cljs.core.keyword_identical_QMARK_.call(null, ocr_8929_3__8952, new cljs.core.Keyword(null, "emptyline", "emptyline", 3889609267))) {
                                    var temp__4090__auto__ = function() {
                                      var and__3391__auto__ = termcat.term.token_QMARK_.call(null, t2);
                                      if (and__3391__auto__) {
                                        return cljs.core.get.call(null, state, termcat.term.payload.call(null, t2));
                                      } else {
                                        return and__3391__auto__;
                                      }
                                    }();
                                    if (cljs.core.truth_(temp__4090__auto__)) {
                                      var ts = temp__4090__auto__;
                                      return new cljs.core.PersistentVector(null, 7, 5, cljs.core.PersistentVector.EMPTY_NODE, [state, t1, termcat.term.block.call(null, termcat.term.ldelim.call(null, new cljs.core.Keyword(null, "identifier", "identifier", 3690438683)), termcat.term.fragmentcat.call(null, ts), termcat.term.rdelim.call(null, new cljs.core.Keyword(null, "identifier", "identifier", 3690438683))), t3, t4, t5, t6], null);
                                    } else {
                                      return null;
                                    }
                                  } else {
                                    if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
                                      throw cljs.core.match.backtrack;
                                    } else {
                                      return null;
                                    }
                                  }
                                }
                              }
                            }
                          } catch (e9011) {
                            if (e9011 instanceof Error) {
                              var e__4796__auto____$1 = e9011;
                              if (e__4796__auto____$1 === cljs.core.match.backtrack) {
                                try {
                                  var ocr_8929_3__8952 = cljs.core.nth.call(null, ocr_8929, 3);
                                  if (cljs.core.vector_QMARK_.call(null, ocr_8929_3__8952) && cljs.core.count.call(null, ocr_8929_3__8952) === 2) {
                                    try {
                                      var ocr_8929_3__8952_0__8984 = cljs.core.nth.call(null, ocr_8929_3__8952, 0);
                                      if (cljs.core.keyword_identical_QMARK_.call(null, ocr_8929_3__8952_0__8984, new cljs.core.Keyword(null, "block", "block", 1107736575))) {
                                        var temp__4090__auto__ = function() {
                                          var and__3391__auto__ = termcat.term.token_QMARK_.call(null, t2);
                                          if (and__3391__auto__) {
                                            return cljs.core.get.call(null, state, termcat.term.payload.call(null, t2));
                                          } else {
                                            return and__3391__auto__;
                                          }
                                        }();
                                        if (cljs.core.truth_(temp__4090__auto__)) {
                                          var ts = temp__4090__auto__;
                                          return new cljs.core.PersistentVector(null, 7, 5, cljs.core.PersistentVector.EMPTY_NODE, [state, t1, termcat.term.block.call(null, termcat.term.ldelim.call(null, new cljs.core.Keyword(null, "identifier", "identifier", 3690438683)), termcat.term.fragmentcat.call(null, ts), termcat.term.rdelim.call(null, new cljs.core.Keyword(null, "identifier", "identifier", 3690438683))), t3, t4, t5, t6], null);
                                        } else {
                                          return null;
                                        }
                                      } else {
                                        if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
                                          throw cljs.core.match.backtrack;
                                        } else {
                                          return null;
                                        }
                                      }
                                    } catch (e9014) {
                                      if (e9014 instanceof Error) {
                                        var e__4796__auto____$2 = e9014;
                                        if (e__4796__auto____$2 === cljs.core.match.backtrack) {
                                          throw cljs.core.match.backtrack;
                                        } else {
                                          throw e__4796__auto____$2;
                                        }
                                      } else {
                                        if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
                                          throw e9014;
                                        } else {
                                          return null;
                                        }
                                      }
                                    }
                                  } else {
                                    if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
                                      throw cljs.core.match.backtrack;
                                    } else {
                                      return null;
                                    }
                                  }
                                } catch (e9012) {
                                  if (e9012 instanceof Error) {
                                    var e__4796__auto____$2 = e9012;
                                    if (e__4796__auto____$2 === cljs.core.match.backtrack) {
                                      try {
                                        var ocr_8929_3__8952 = cljs.core.nth.call(null, ocr_8929, 3);
                                        if (cljs.core.keyword_identical_QMARK_.call(null, ocr_8929_3__8952, new cljs.core.Keyword(null, "hash", "hash", 1017099392))) {
                                          var temp__4090__auto__ = function() {
                                            var and__3391__auto__ = termcat.term.token_QMARK_.call(null, t2);
                                            if (and__3391__auto__) {
                                              return cljs.core.get.call(null, state, termcat.term.payload.call(null, t2));
                                            } else {
                                              return and__3391__auto__;
                                            }
                                          }();
                                          if (cljs.core.truth_(temp__4090__auto__)) {
                                            var ts = temp__4090__auto__;
                                            return new cljs.core.PersistentVector(null, 7, 5, cljs.core.PersistentVector.EMPTY_NODE, [state, t1, termcat.term.block.call(null, termcat.term.ldelim.call(null, new cljs.core.Keyword(null, "identifier", "identifier", 3690438683)), termcat.term.fragmentcat.call(null, ts), termcat.term.rdelim.call(null, new cljs.core.Keyword(null, "identifier", "identifier", 3690438683))), t3, t4, t5, t6], null);
                                          } else {
                                            return null;
                                          }
                                        } else {
                                          if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
                                            throw cljs.core.match.backtrack;
                                          } else {
                                            return null;
                                          }
                                        }
                                      } catch (e9013) {
                                        if (e9013 instanceof Error) {
                                          var e__4796__auto____$3 = e9013;
                                          if (e__4796__auto____$3 === cljs.core.match.backtrack) {
                                            throw cljs.core.match.backtrack;
                                          } else {
                                            throw e__4796__auto____$3;
                                          }
                                        } else {
                                          if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
                                            throw e9013;
                                          } else {
                                            return null;
                                          }
                                        }
                                      }
                                    } else {
                                      throw e__4796__auto____$2;
                                    }
                                  } else {
                                    if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
                                      throw e9012;
                                    } else {
                                      return null;
                                    }
                                  }
                                }
                              } else {
                                throw e__4796__auto____$1;
                              }
                            } else {
                              if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
                                throw e9011;
                              } else {
                                return null;
                              }
                            }
                          }
                        } else {
                          if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
                            throw cljs.core.match.backtrack;
                          } else {
                            return null;
                          }
                        }
                      }
                    }
                  }
                } catch (e8992) {
                  if (e8992 instanceof Error) {
                    var e__4796__auto____$1 = e8992;
                    if (e__4796__auto____$1 === cljs.core.match.backtrack) {
                      try {
                        var ocr_8929_1__8950 = cljs.core.nth.call(null, ocr_8929, 1);
                        if (cljs.core.vector_QMARK_.call(null, ocr_8929_1__8950) && cljs.core.count.call(null, ocr_8929_1__8950) === 2) {
                          try {
                            var ocr_8929_1__8950_0__8986 = cljs.core.nth.call(null, ocr_8929_1__8950, 0);
                            if (cljs.core.keyword_identical_QMARK_.call(null, ocr_8929_1__8950_0__8986, new cljs.core.Keyword(null, "block", "block", 1107736575))) {
                              try {
                                var ocr_8929_3__8952 = cljs.core.nth.call(null, ocr_8929, 3);
                                if (ocr_8929_3__8952 === null) {
                                  var temp__4090__auto__ = function() {
                                    var and__3391__auto__ = termcat.term.token_QMARK_.call(null, t2);
                                    if (and__3391__auto__) {
                                      return cljs.core.get.call(null, state, termcat.term.payload.call(null, t2));
                                    } else {
                                      return and__3391__auto__;
                                    }
                                  }();
                                  if (cljs.core.truth_(temp__4090__auto__)) {
                                    var ts = temp__4090__auto__;
                                    return new cljs.core.PersistentVector(null, 7, 5, cljs.core.PersistentVector.EMPTY_NODE, [state, t1, termcat.term.block.call(null, termcat.term.ldelim.call(null, new cljs.core.Keyword(null, "identifier", "identifier", 3690438683)), termcat.term.fragmentcat.call(null, ts), termcat.term.rdelim.call(null, new cljs.core.Keyword(null, "identifier", "identifier", 3690438683))), t3, t4, t5, t6], null);
                                  } else {
                                    return null;
                                  }
                                } else {
                                  if (cljs.core.keyword_identical_QMARK_.call(null, ocr_8929_3__8952, new cljs.core.Keyword(null, "whitespace", "whitespace", 1290815983))) {
                                    var temp__4090__auto__ = function() {
                                      var and__3391__auto__ = termcat.term.token_QMARK_.call(null, t2);
                                      if (and__3391__auto__) {
                                        return cljs.core.get.call(null, state, termcat.term.payload.call(null, t2));
                                      } else {
                                        return and__3391__auto__;
                                      }
                                    }();
                                    if (cljs.core.truth_(temp__4090__auto__)) {
                                      var ts = temp__4090__auto__;
                                      return new cljs.core.PersistentVector(null, 7, 5, cljs.core.PersistentVector.EMPTY_NODE, [state, t1, termcat.term.block.call(null, termcat.term.ldelim.call(null, new cljs.core.Keyword(null, "identifier", "identifier", 3690438683)), termcat.term.fragmentcat.call(null, ts), termcat.term.rdelim.call(null, new cljs.core.Keyword(null, "identifier", "identifier", 3690438683))), t3, t4, t5, t6], null);
                                    } else {
                                      return null;
                                    }
                                  } else {
                                    if (cljs.core.keyword_identical_QMARK_.call(null, ocr_8929_3__8952, new cljs.core.Keyword(null, "newline", "newline", 2859826438))) {
                                      var temp__4090__auto__ = function() {
                                        var and__3391__auto__ = termcat.term.token_QMARK_.call(null, t2);
                                        if (and__3391__auto__) {
                                          return cljs.core.get.call(null, state, termcat.term.payload.call(null, t2));
                                        } else {
                                          return and__3391__auto__;
                                        }
                                      }();
                                      if (cljs.core.truth_(temp__4090__auto__)) {
                                        var ts = temp__4090__auto__;
                                        return new cljs.core.PersistentVector(null, 7, 5, cljs.core.PersistentVector.EMPTY_NODE, [state, t1, termcat.term.block.call(null, termcat.term.ldelim.call(null, new cljs.core.Keyword(null, "identifier", "identifier", 3690438683)), termcat.term.fragmentcat.call(null, ts), termcat.term.rdelim.call(null, new cljs.core.Keyword(null, "identifier", "identifier", 3690438683))), t3, t4, t5, t6], null);
                                      } else {
                                        return null;
                                      }
                                    } else {
                                      if (cljs.core.keyword_identical_QMARK_.call(null, ocr_8929_3__8952, new cljs.core.Keyword(null, "emptyline", "emptyline", 3889609267))) {
                                        var temp__4090__auto__ = function() {
                                          var and__3391__auto__ = termcat.term.token_QMARK_.call(null, t2);
                                          if (and__3391__auto__) {
                                            return cljs.core.get.call(null, state, termcat.term.payload.call(null, t2));
                                          } else {
                                            return and__3391__auto__;
                                          }
                                        }();
                                        if (cljs.core.truth_(temp__4090__auto__)) {
                                          var ts = temp__4090__auto__;
                                          return new cljs.core.PersistentVector(null, 7, 5, cljs.core.PersistentVector.EMPTY_NODE, [state, t1, termcat.term.block.call(null, termcat.term.ldelim.call(null, new cljs.core.Keyword(null, "identifier", "identifier", 3690438683)), termcat.term.fragmentcat.call(null, ts), termcat.term.rdelim.call(null, new cljs.core.Keyword(null, "identifier", "identifier", 3690438683))), t3, t4, t5, t6], null);
                                        } else {
                                          return null;
                                        }
                                      } else {
                                        if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
                                          throw cljs.core.match.backtrack;
                                        } else {
                                          return null;
                                        }
                                      }
                                    }
                                  }
                                }
                              } catch (e8995) {
                                if (e8995 instanceof Error) {
                                  var e__4796__auto____$2 = e8995;
                                  if (e__4796__auto____$2 === cljs.core.match.backtrack) {
                                    try {
                                      var ocr_8929_3__8952 = cljs.core.nth.call(null, ocr_8929, 3);
                                      if (cljs.core.vector_QMARK_.call(null, ocr_8929_3__8952) && cljs.core.count.call(null, ocr_8929_3__8952) === 2) {
                                        try {
                                          var ocr_8929_3__8952_0__8988 = cljs.core.nth.call(null, ocr_8929_3__8952, 0);
                                          if (cljs.core.keyword_identical_QMARK_.call(null, ocr_8929_3__8952_0__8988, new cljs.core.Keyword(null, "block", "block", 1107736575))) {
                                            var temp__4090__auto__ = function() {
                                              var and__3391__auto__ = termcat.term.token_QMARK_.call(null, t2);
                                              if (and__3391__auto__) {
                                                return cljs.core.get.call(null, state, termcat.term.payload.call(null, t2));
                                              } else {
                                                return and__3391__auto__;
                                              }
                                            }();
                                            if (cljs.core.truth_(temp__4090__auto__)) {
                                              var ts = temp__4090__auto__;
                                              return new cljs.core.PersistentVector(null, 7, 5, cljs.core.PersistentVector.EMPTY_NODE, [state, t1, termcat.term.block.call(null, termcat.term.ldelim.call(null, new cljs.core.Keyword(null, "identifier", "identifier", 3690438683)), termcat.term.fragmentcat.call(null, ts), termcat.term.rdelim.call(null, new cljs.core.Keyword(null, "identifier", "identifier", 3690438683))), t3, t4, t5, t6], null);
                                            } else {
                                              return null;
                                            }
                                          } else {
                                            if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
                                              throw cljs.core.match.backtrack;
                                            } else {
                                              return null;
                                            }
                                          }
                                        } catch (e8998) {
                                          if (e8998 instanceof Error) {
                                            var e__4796__auto____$3 = e8998;
                                            if (e__4796__auto____$3 === cljs.core.match.backtrack) {
                                              throw cljs.core.match.backtrack;
                                            } else {
                                              throw e__4796__auto____$3;
                                            }
                                          } else {
                                            if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
                                              throw e8998;
                                            } else {
                                              return null;
                                            }
                                          }
                                        }
                                      } else {
                                        if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
                                          throw cljs.core.match.backtrack;
                                        } else {
                                          return null;
                                        }
                                      }
                                    } catch (e8996) {
                                      if (e8996 instanceof Error) {
                                        var e__4796__auto____$3 = e8996;
                                        if (e__4796__auto____$3 === cljs.core.match.backtrack) {
                                          try {
                                            var ocr_8929_3__8952 = cljs.core.nth.call(null, ocr_8929, 3);
                                            if (cljs.core.keyword_identical_QMARK_.call(null, ocr_8929_3__8952, new cljs.core.Keyword(null, "hash", "hash", 1017099392))) {
                                              var temp__4090__auto__ = function() {
                                                var and__3391__auto__ = termcat.term.token_QMARK_.call(null, t2);
                                                if (and__3391__auto__) {
                                                  return cljs.core.get.call(null, state, termcat.term.payload.call(null, t2));
                                                } else {
                                                  return and__3391__auto__;
                                                }
                                              }();
                                              if (cljs.core.truth_(temp__4090__auto__)) {
                                                var ts = temp__4090__auto__;
                                                return new cljs.core.PersistentVector(null, 7, 5, cljs.core.PersistentVector.EMPTY_NODE, [state, t1, termcat.term.block.call(null, termcat.term.ldelim.call(null, new cljs.core.Keyword(null, "identifier", "identifier", 3690438683)), termcat.term.fragmentcat.call(null, ts), termcat.term.rdelim.call(null, new cljs.core.Keyword(null, "identifier", "identifier", 3690438683))), t3, t4, t5, t6], null);
                                              } else {
                                                return null;
                                              }
                                            } else {
                                              if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
                                                throw cljs.core.match.backtrack;
                                              } else {
                                                return null;
                                              }
                                            }
                                          } catch (e8997) {
                                            if (e8997 instanceof Error) {
                                              var e__4796__auto____$4 = e8997;
                                              if (e__4796__auto____$4 === cljs.core.match.backtrack) {
                                                throw cljs.core.match.backtrack;
                                              } else {
                                                throw e__4796__auto____$4;
                                              }
                                            } else {
                                              if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
                                                throw e8997;
                                              } else {
                                                return null;
                                              }
                                            }
                                          }
                                        } else {
                                          throw e__4796__auto____$3;
                                        }
                                      } else {
                                        if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
                                          throw e8996;
                                        } else {
                                          return null;
                                        }
                                      }
                                    }
                                  } else {
                                    throw e__4796__auto____$2;
                                  }
                                } else {
                                  if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
                                    throw e8995;
                                  } else {
                                    return null;
                                  }
                                }
                              }
                            } else {
                              if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
                                throw cljs.core.match.backtrack;
                              } else {
                                return null;
                              }
                            }
                          } catch (e8994) {
                            if (e8994 instanceof Error) {
                              var e__4796__auto____$2 = e8994;
                              if (e__4796__auto____$2 === cljs.core.match.backtrack) {
                                throw cljs.core.match.backtrack;
                              } else {
                                throw e__4796__auto____$2;
                              }
                            } else {
                              if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
                                throw e8994;
                              } else {
                                return null;
                              }
                            }
                          }
                        } else {
                          if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
                            throw cljs.core.match.backtrack;
                          } else {
                            return null;
                          }
                        }
                      } catch (e8993) {
                        if (e8993 instanceof Error) {
                          var e__4796__auto____$2 = e8993;
                          if (e__4796__auto____$2 === cljs.core.match.backtrack) {
                            throw cljs.core.match.backtrack;
                          } else {
                            throw e__4796__auto____$2;
                          }
                        } else {
                          if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
                            throw e8993;
                          } else {
                            return null;
                          }
                        }
                      }
                    } else {
                      throw e__4796__auto____$1;
                    }
                  } else {
                    if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
                      throw e8992;
                    } else {
                      return null;
                    }
                  }
                }
              } else {
                throw e__4796__auto__;
              }
            } else {
              if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
                throw e8991;
              } else {
                return null;
              }
            }
          }
        } else {
          if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
            throw cljs.core.match.backtrack;
          } else {
            return null;
          }
        }
      } catch (e8990) {
        if (e8990 instanceof Error) {
          var e__4796__auto__ = e8990;
          if (e__4796__auto__ === cljs.core.match.backtrack) {
            return null;
          } else {
            throw e__4796__auto__;
          }
        } else {
          if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
            throw e8990;
          } else {
            return null;
          }
        }
      }
    }();
    if (cljs.core.truth_(temp__4090__auto__)) {
      var r__6471__auto__ = temp__4090__auto__;
      return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [function() {
        var or__3403__auto__ = cljs.core.first.call(null, r__6471__auto__);
        if (cljs.core.truth_(or__3403__auto__)) {
          return or__3403__auto__;
        } else {
          return state__6468__auto__;
        }
      }(), cljs.core.concat.call(null, cljs.core.next.call(null, r__6471__auto__), cljs.core.drop.call(null, 6, input__6469__auto__))], null);
    } else {
      return null;
    }
  };
  G__9043 = function(state__6468__auto__, input__6469__auto__) {
    switch(arguments.length) {
      case 0:
        return G__9043__0.call(this);
      case 2:
        return G__9043__2.call(this, state__6468__auto__, input__6469__auto__);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  return G__9043;
}());
termcat.rules.bind.expand_bindings = termcat.rewrite.abstraction.call(null, function() {
  var G__9056 = null;
  var G__9056__0 = function() {
    return null;
  };
  var G__9056__2 = function(state__6468__auto__, input__6469__auto__) {
    var padded_input__6470__auto__ = cljs.core.concat.call(null, input__6469__auto__, cljs.core.repeat.call(null, null));
    var vec__9044 = cljs.core.cons.call(null, state__6468__auto__, cljs.core.take.call(null, 1, padded_input__6470__auto__));
    var state = cljs.core.nth.call(null, vec__9044, 0, null);
    var t1 = cljs.core.nth.call(null, vec__9044, 1, null);
    var temp__4090__auto__ = function() {
      var ocr_9045 = clojure.core.reducers.reduce.call(null, cljs.core.conj, new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [state__6468__auto__], null), clojure.core.reducers.take.call(null, 1, clojure.core.reducers.map.call(null, termcat.term.tt, padded_input__6470__auto__)));
      try {
        if (cljs.core.vector_QMARK_.call(null, ocr_9045) && cljs.core.count.call(null, ocr_9045) === 2) {
          try {
            var ocr_9045_1__9049 = cljs.core.nth.call(null, ocr_9045, 1);
            if (cljs.core.vector_QMARK_.call(null, ocr_9045_1__9049) && cljs.core.count.call(null, ocr_9045_1__9049) === 2) {
              try {
                var ocr_9045_1__9049_0__9050 = cljs.core.nth.call(null, ocr_9045_1__9049, 0);
                if (cljs.core.keyword_identical_QMARK_.call(null, ocr_9045_1__9049_0__9050, new cljs.core.Keyword(null, "block", "block", 1107736575))) {
                  try {
                    var ocr_9045_1__9049_1__9051 = cljs.core.nth.call(null, ocr_9045_1__9049, 1);
                    if (cljs.core.keyword_identical_QMARK_.call(null, ocr_9045_1__9049_1__9051, new cljs.core.Keyword(null, "identifier", "identifier", 3690438683))) {
                      return cljs.core.cons.call(null, null, function() {
                        var $ = termcat.rewrite.unwrap.call(null, t1);
                        var $__$1 = cljs.core._EQ_.call(null, termcat.term.tt.call(null, cljs.core.last.call(null, $)), new cljs.core.Keyword(null, "hash", "hash", 1017099392)) ? cljs.core.butlast.call(null, $) : $;
                        return $__$1;
                      }());
                    } else {
                      if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
                        throw cljs.core.match.backtrack;
                      } else {
                        return null;
                      }
                    }
                  } catch (e9055) {
                    if (e9055 instanceof Error) {
                      var e__4796__auto__ = e9055;
                      if (e__4796__auto__ === cljs.core.match.backtrack) {
                        throw cljs.core.match.backtrack;
                      } else {
                        throw e__4796__auto__;
                      }
                    } else {
                      if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
                        throw e9055;
                      } else {
                        return null;
                      }
                    }
                  }
                } else {
                  if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
                    throw cljs.core.match.backtrack;
                  } else {
                    return null;
                  }
                }
              } catch (e9054) {
                if (e9054 instanceof Error) {
                  var e__4796__auto__ = e9054;
                  if (e__4796__auto__ === cljs.core.match.backtrack) {
                    throw cljs.core.match.backtrack;
                  } else {
                    throw e__4796__auto__;
                  }
                } else {
                  if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
                    throw e9054;
                  } else {
                    return null;
                  }
                }
              }
            } else {
              if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
                throw cljs.core.match.backtrack;
              } else {
                return null;
              }
            }
          } catch (e9053) {
            if (e9053 instanceof Error) {
              var e__4796__auto__ = e9053;
              if (e__4796__auto__ === cljs.core.match.backtrack) {
                throw cljs.core.match.backtrack;
              } else {
                throw e__4796__auto__;
              }
            } else {
              if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
                throw e9053;
              } else {
                return null;
              }
            }
          }
        } else {
          if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
            throw cljs.core.match.backtrack;
          } else {
            return null;
          }
        }
      } catch (e9052) {
        if (e9052 instanceof Error) {
          var e__4796__auto__ = e9052;
          if (e__4796__auto__ === cljs.core.match.backtrack) {
            return null;
          } else {
            throw e__4796__auto__;
          }
        } else {
          if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
            throw e9052;
          } else {
            return null;
          }
        }
      }
    }();
    if (cljs.core.truth_(temp__4090__auto__)) {
      var r__6471__auto__ = temp__4090__auto__;
      return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [function() {
        var or__3403__auto__ = cljs.core.first.call(null, r__6471__auto__);
        if (cljs.core.truth_(or__3403__auto__)) {
          return or__3403__auto__;
        } else {
          return state__6468__auto__;
        }
      }(), cljs.core.concat.call(null, cljs.core.next.call(null, r__6471__auto__), cljs.core.drop.call(null, 1, input__6469__auto__))], null);
    } else {
      return null;
    }
  };
  G__9056 = function(state__6468__auto__, input__6469__auto__) {
    switch(arguments.length) {
      case 0:
        return G__9056__0.call(this);
      case 2:
        return G__9056__2.call(this, state__6468__auto__, input__6469__auto__);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  return G__9056;
}());
termcat.rules.bind.non_dormant_block_QMARK_ = function non_dormant_block_QMARK_(x) {
  return termcat.term.block_QMARK_.call(null, x) && (cljs.core.not_EQ_.call(null, termcat.term.tt.call(null, x), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "block", "block", 1107736575), new cljs.core.Keyword(null, "lambda", "lambda", 4198778681)], null)) && cljs.core.not_EQ_.call(null, termcat.term.tt.call(null, x), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "block", 
  "block", 1107736575), new cljs.core.Keyword(null, "if-branch", "if-branch", 1784671172)], null)));
};
termcat.rules.bind.apply_fun = function apply_fun(fun_token, arg) {
  var f = termcat.term.payload.call(null, fun_token);
  var retval = f.call(null, fun_token, arg);
  if (typeof retval === "string") {
    return new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [termcat.term.token.call(null, new cljs.core.Keyword(null, "error", "error", 1110689146), [cljs.core.str(retval), cljs.core.str(" \u2013 "), cljs.core.str((new cljs.core.Keyword(null, "fun-name", "fun-name", 2344786315)).cljs$core$IFn$_invoke$arity$1(cljs.core.meta.call(null, f)))].join(""))], null);
  } else {
    return retval;
  }
};
termcat.rules.bind.apply_lambda = function apply_lambda(lambda_term, arg) {
  if (cljs.core.not_EQ_.call(null, termcat.term.tt.call(null, cljs.core.first.call(null, termcat.rewrite.unwrap.call(null, lambda_term))), new cljs.core.Keyword(null, "arg", "arg", 1014001096))) {
    return cljs.core.conj.call(null, termcat.rewrite.apply_rule.call(null, termcat.rewrite.recursion.call(null, termcat.rewrite.procedure.call(null, termcat.rewrite.fixpoint.call(null, termcat.rewrite.disjunction.call(null, termcat.rules.bind.expand_bindings, termcat.rules.bind.evaluate_fun_calls))), termcat.rules.bind.non_dormant_block_QMARK_), termcat.rewrite.unwrap.call(null, lambda_term)), arg);
  } else {
    if (cljs.core.not.call(null, arg)) {
      return new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [termcat.term.token.call(null, new cljs.core.Keyword(null, "error", "error", 1110689146), "Missing (user) function argument(s)")], null);
    } else {
      if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
        return new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [termcat.rewrite.apply_rule.call(null, termcat.rewrite.recursive_procedure.call(null, termcat.rewrite.fixpoint.call(null, termcat.rewrite.sequence.call(null, termcat.rules.bind.introduce_bindings, termcat.rules.bind.expand_bindings)), termcat.term.block_QMARK_, termcat.rewrite.lexical_scope), termcat.term.block.call(null, termcat.term.ldelim.call(null, new cljs.core.Keyword(null, "lambda", "lambda", 4198778681)), 
        termcat.term.fragmentcat.call(null, new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [termcat.term.token.call(null, new cljs.core.Keyword(null, "bang", "bang", 1016920490)), termcat.term.token.call(null, new cljs.core.Keyword(null, "default", "default", 2558708147), "bind"), termcat.term.block.call(null, termcat.term.ldelim.call(null, new cljs.core.Keyword(null, "arg-name", "arg-name", 3652721428)), termcat.term.fragment.call(null, cljs.core.first.call(null, 
        termcat.rewrite.unwrap.call(null, lambda_term))), termcat.term.rdelim.call(null, new cljs.core.Keyword(null, "arg-name", "arg-name", 3652721428))), arg], null), cljs.core.next.call(null, termcat.rewrite.unwrap.call(null, lambda_term))), termcat.term.rdelim.call(null, new cljs.core.Keyword(null, "lambda", "lambda", 4198778681))))], null);
      } else {
        return null;
      }
    }
  }
};
termcat.rules.bind.apply_function = function apply_function(fterm, arg) {
  var G__9058 = termcat.term.tt.call(null, fterm);
  if (cljs.core._EQ_.call(null, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "block", "block", 1107736575), new cljs.core.Keyword(null, "lambda", "lambda", 4198778681)], null), G__9058)) {
    return termcat.rules.bind.apply_lambda.call(null, fterm, arg);
  } else {
    if (cljs.core._EQ_.call(null, new cljs.core.Keyword(null, "fun", "fun", 1014006001), G__9058)) {
      var x = termcat.rules.bind.apply_fun.call(null, fterm, arg);
      return x;
    } else {
      if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
        throw new Error([cljs.core.str("No matching clause: "), cljs.core.str(termcat.term.tt.call(null, fterm))].join(""));
      } else {
        return null;
      }
    }
  }
};
termcat.rules.bind.evaluate_fun_calls = termcat.rewrite.abstraction.call(null, function() {
  var G__9099 = null;
  var G__9099__0 = function() {
    return null;
  };
  var G__9099__2 = function(state__6468__auto__, input__6469__auto__) {
    var padded_input__6470__auto__ = cljs.core.concat.call(null, input__6469__auto__, cljs.core.repeat.call(null, null));
    var vec__9059 = cljs.core.cons.call(null, state__6468__auto__, cljs.core.take.call(null, 2, padded_input__6470__auto__));
    var state = cljs.core.nth.call(null, vec__9059, 0, null);
    var t1 = cljs.core.nth.call(null, vec__9059, 1, null);
    var t2 = cljs.core.nth.call(null, vec__9059, 2, null);
    var temp__4090__auto__ = function() {
      var ocr_9060 = clojure.core.reducers.reduce.call(null, cljs.core.conj, new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [state__6468__auto__], null), clojure.core.reducers.take.call(null, 2, clojure.core.reducers.map.call(null, termcat.term.tt, padded_input__6470__auto__)));
      try {
        if (cljs.core.vector_QMARK_.call(null, ocr_9060) && cljs.core.count.call(null, ocr_9060) === 3) {
          try {
            var ocr_9060_1__9068 = cljs.core.nth.call(null, ocr_9060, 1);
            if (cljs.core.keyword_identical_QMARK_.call(null, ocr_9060_1__9068, new cljs.core.Keyword(null, "fun", "fun", 1014006001))) {
              try {
                var ocr_9060_2__9069 = cljs.core.nth.call(null, ocr_9060, 2);
                if (cljs.core.vector_QMARK_.call(null, ocr_9060_2__9069) && cljs.core.count.call(null, ocr_9060_2__9069) === 2) {
                  try {
                    var ocr_9060_2__9069_0__9070 = cljs.core.nth.call(null, ocr_9060_2__9069, 0);
                    if (cljs.core.keyword_identical_QMARK_.call(null, ocr_9060_2__9069_0__9070, new cljs.core.Keyword(null, "block", "block", 1107736575))) {
                      return cljs.core.cons.call(null, null, termcat.rules.bind.apply_function.call(null, t1, t2));
                    } else {
                      if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
                        throw cljs.core.match.backtrack;
                      } else {
                        return null;
                      }
                    }
                  } catch (e9098) {
                    if (e9098 instanceof Error) {
                      var e__4796__auto__ = e9098;
                      if (e__4796__auto__ === cljs.core.match.backtrack) {
                        throw cljs.core.match.backtrack;
                      } else {
                        throw e__4796__auto__;
                      }
                    } else {
                      if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
                        throw e9098;
                      } else {
                        return null;
                      }
                    }
                  }
                } else {
                  if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
                    throw cljs.core.match.backtrack;
                  } else {
                    return null;
                  }
                }
              } catch (e9097) {
                if (e9097 instanceof Error) {
                  var e__4796__auto__ = e9097;
                  if (e__4796__auto__ === cljs.core.match.backtrack) {
                    throw cljs.core.match.backtrack;
                  } else {
                    throw e__4796__auto__;
                  }
                } else {
                  if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
                    throw e9097;
                  } else {
                    return null;
                  }
                }
              }
            } else {
              if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
                throw cljs.core.match.backtrack;
              } else {
                return null;
              }
            }
          } catch (e9081) {
            if (e9081 instanceof Error) {
              var e__4796__auto__ = e9081;
              if (e__4796__auto__ === cljs.core.match.backtrack) {
                try {
                  var ocr_9060_1__9068 = cljs.core.nth.call(null, ocr_9060, 1);
                  if (cljs.core.vector_QMARK_.call(null, ocr_9060_1__9068) && cljs.core.count.call(null, ocr_9060_1__9068) === 2) {
                    try {
                      var ocr_9060_1__9068_0__9072 = cljs.core.nth.call(null, ocr_9060_1__9068, 0);
                      if (cljs.core.keyword_identical_QMARK_.call(null, ocr_9060_1__9068_0__9072, new cljs.core.Keyword(null, "block", "block", 1107736575))) {
                        try {
                          var ocr_9060_1__9068_1__9073 = cljs.core.nth.call(null, ocr_9060_1__9068, 1);
                          if (cljs.core.keyword_identical_QMARK_.call(null, ocr_9060_1__9068_1__9073, new cljs.core.Keyword(null, "lambda", "lambda", 4198778681))) {
                            try {
                              var ocr_9060_2__9069 = cljs.core.nth.call(null, ocr_9060, 2);
                              if (cljs.core.vector_QMARK_.call(null, ocr_9060_2__9069) && cljs.core.count.call(null, ocr_9060_2__9069) === 2) {
                                try {
                                  var ocr_9060_2__9069_0__9074 = cljs.core.nth.call(null, ocr_9060_2__9069, 0);
                                  if (cljs.core.keyword_identical_QMARK_.call(null, ocr_9060_2__9069_0__9074, new cljs.core.Keyword(null, "block", "block", 1107736575))) {
                                    return cljs.core.cons.call(null, null, termcat.rules.bind.apply_function.call(null, t1, t2));
                                  } else {
                                    if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
                                      throw cljs.core.match.backtrack;
                                    } else {
                                      return null;
                                    }
                                  }
                                } catch (e9096) {
                                  if (e9096 instanceof Error) {
                                    var e__4796__auto____$1 = e9096;
                                    if (e__4796__auto____$1 === cljs.core.match.backtrack) {
                                      throw cljs.core.match.backtrack;
                                    } else {
                                      throw e__4796__auto____$1;
                                    }
                                  } else {
                                    if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
                                      throw e9096;
                                    } else {
                                      return null;
                                    }
                                  }
                                }
                              } else {
                                if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
                                  throw cljs.core.match.backtrack;
                                } else {
                                  return null;
                                }
                              }
                            } catch (e9095) {
                              if (e9095 instanceof Error) {
                                var e__4796__auto____$1 = e9095;
                                if (e__4796__auto____$1 === cljs.core.match.backtrack) {
                                  throw cljs.core.match.backtrack;
                                } else {
                                  throw e__4796__auto____$1;
                                }
                              } else {
                                if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
                                  throw e9095;
                                } else {
                                  return null;
                                }
                              }
                            }
                          } else {
                            if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
                              throw cljs.core.match.backtrack;
                            } else {
                              return null;
                            }
                          }
                        } catch (e9094) {
                          if (e9094 instanceof Error) {
                            var e__4796__auto____$1 = e9094;
                            if (e__4796__auto____$1 === cljs.core.match.backtrack) {
                              throw cljs.core.match.backtrack;
                            } else {
                              throw e__4796__auto____$1;
                            }
                          } else {
                            if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
                              throw e9094;
                            } else {
                              return null;
                            }
                          }
                        }
                      } else {
                        if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
                          throw cljs.core.match.backtrack;
                        } else {
                          return null;
                        }
                      }
                    } catch (e9093) {
                      if (e9093 instanceof Error) {
                        var e__4796__auto____$1 = e9093;
                        if (e__4796__auto____$1 === cljs.core.match.backtrack) {
                          throw cljs.core.match.backtrack;
                        } else {
                          throw e__4796__auto____$1;
                        }
                      } else {
                        if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
                          throw e9093;
                        } else {
                          return null;
                        }
                      }
                    }
                  } else {
                    if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
                      throw cljs.core.match.backtrack;
                    } else {
                      return null;
                    }
                  }
                } catch (e9082) {
                  if (e9082 instanceof Error) {
                    var e__4796__auto____$1 = e9082;
                    if (e__4796__auto____$1 === cljs.core.match.backtrack) {
                      try {
                        var ocr_9060_1__9068 = cljs.core.nth.call(null, ocr_9060, 1);
                        if (cljs.core.keyword_identical_QMARK_.call(null, ocr_9060_1__9068, new cljs.core.Keyword(null, "fun", "fun", 1014006001))) {
                          try {
                            var ocr_9060_2__9069 = cljs.core.nth.call(null, ocr_9060, 2);
                            if (cljs.core.keyword_identical_QMARK_.call(null, ocr_9060_2__9069, new cljs.core.Keyword(null, "hash", "hash", 1017099392))) {
                              return null;
                            } else {
                              if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
                                throw cljs.core.match.backtrack;
                              } else {
                                return null;
                              }
                            }
                          } catch (e9092) {
                            if (e9092 instanceof Error) {
                              var e__4796__auto____$2 = e9092;
                              if (e__4796__auto____$2 === cljs.core.match.backtrack) {
                                throw cljs.core.match.backtrack;
                              } else {
                                throw e__4796__auto____$2;
                              }
                            } else {
                              if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
                                throw e9092;
                              } else {
                                return null;
                              }
                            }
                          }
                        } else {
                          if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
                            throw cljs.core.match.backtrack;
                          } else {
                            return null;
                          }
                        }
                      } catch (e9083) {
                        if (e9083 instanceof Error) {
                          var e__4796__auto____$2 = e9083;
                          if (e__4796__auto____$2 === cljs.core.match.backtrack) {
                            try {
                              var ocr_9060_1__9068 = cljs.core.nth.call(null, ocr_9060, 1);
                              if (cljs.core.vector_QMARK_.call(null, ocr_9060_1__9068) && cljs.core.count.call(null, ocr_9060_1__9068) === 2) {
                                try {
                                  var ocr_9060_1__9068_0__9076 = cljs.core.nth.call(null, ocr_9060_1__9068, 0);
                                  if (cljs.core.keyword_identical_QMARK_.call(null, ocr_9060_1__9068_0__9076, new cljs.core.Keyword(null, "block", "block", 1107736575))) {
                                    try {
                                      var ocr_9060_1__9068_1__9077 = cljs.core.nth.call(null, ocr_9060_1__9068, 1);
                                      if (cljs.core.keyword_identical_QMARK_.call(null, ocr_9060_1__9068_1__9077, new cljs.core.Keyword(null, "lambda", "lambda", 4198778681))) {
                                        try {
                                          var ocr_9060_2__9069 = cljs.core.nth.call(null, ocr_9060, 2);
                                          if (cljs.core.keyword_identical_QMARK_.call(null, ocr_9060_2__9069, new cljs.core.Keyword(null, "hash", "hash", 1017099392))) {
                                            return null;
                                          } else {
                                            if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
                                              throw cljs.core.match.backtrack;
                                            } else {
                                              return null;
                                            }
                                          }
                                        } catch (e9091) {
                                          if (e9091 instanceof Error) {
                                            var e__4796__auto____$3 = e9091;
                                            if (e__4796__auto____$3 === cljs.core.match.backtrack) {
                                              throw cljs.core.match.backtrack;
                                            } else {
                                              throw e__4796__auto____$3;
                                            }
                                          } else {
                                            if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
                                              throw e9091;
                                            } else {
                                              return null;
                                            }
                                          }
                                        }
                                      } else {
                                        if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
                                          throw cljs.core.match.backtrack;
                                        } else {
                                          return null;
                                        }
                                      }
                                    } catch (e9090) {
                                      if (e9090 instanceof Error) {
                                        var e__4796__auto____$3 = e9090;
                                        if (e__4796__auto____$3 === cljs.core.match.backtrack) {
                                          throw cljs.core.match.backtrack;
                                        } else {
                                          throw e__4796__auto____$3;
                                        }
                                      } else {
                                        if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
                                          throw e9090;
                                        } else {
                                          return null;
                                        }
                                      }
                                    }
                                  } else {
                                    if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
                                      throw cljs.core.match.backtrack;
                                    } else {
                                      return null;
                                    }
                                  }
                                } catch (e9089) {
                                  if (e9089 instanceof Error) {
                                    var e__4796__auto____$3 = e9089;
                                    if (e__4796__auto____$3 === cljs.core.match.backtrack) {
                                      throw cljs.core.match.backtrack;
                                    } else {
                                      throw e__4796__auto____$3;
                                    }
                                  } else {
                                    if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
                                      throw e9089;
                                    } else {
                                      return null;
                                    }
                                  }
                                }
                              } else {
                                if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
                                  throw cljs.core.match.backtrack;
                                } else {
                                  return null;
                                }
                              }
                            } catch (e9084) {
                              if (e9084 instanceof Error) {
                                var e__4796__auto____$3 = e9084;
                                if (e__4796__auto____$3 === cljs.core.match.backtrack) {
                                  try {
                                    var ocr_9060_1__9068 = cljs.core.nth.call(null, ocr_9060, 1);
                                    if (cljs.core.keyword_identical_QMARK_.call(null, ocr_9060_1__9068, new cljs.core.Keyword(null, "fun", "fun", 1014006001))) {
                                      return cljs.core.concat.call(null, new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [null], null), termcat.rules.bind.apply_function.call(null, t1, null), new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [t2], null));
                                    } else {
                                      if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
                                        throw cljs.core.match.backtrack;
                                      } else {
                                        return null;
                                      }
                                    }
                                  } catch (e9085) {
                                    if (e9085 instanceof Error) {
                                      var e__4796__auto____$4 = e9085;
                                      if (e__4796__auto____$4 === cljs.core.match.backtrack) {
                                        try {
                                          var ocr_9060_1__9068 = cljs.core.nth.call(null, ocr_9060, 1);
                                          if (cljs.core.vector_QMARK_.call(null, ocr_9060_1__9068) && cljs.core.count.call(null, ocr_9060_1__9068) === 2) {
                                            try {
                                              var ocr_9060_1__9068_0__9078 = cljs.core.nth.call(null, ocr_9060_1__9068, 0);
                                              if (cljs.core.keyword_identical_QMARK_.call(null, ocr_9060_1__9068_0__9078, new cljs.core.Keyword(null, "block", "block", 1107736575))) {
                                                try {
                                                  var ocr_9060_1__9068_1__9079 = cljs.core.nth.call(null, ocr_9060_1__9068, 1);
                                                  if (cljs.core.keyword_identical_QMARK_.call(null, ocr_9060_1__9068_1__9079, new cljs.core.Keyword(null, "lambda", "lambda", 4198778681))) {
                                                    return cljs.core.concat.call(null, new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [null], null), termcat.rules.bind.apply_function.call(null, t1, null), new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [t2], null));
                                                  } else {
                                                    if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
                                                      throw cljs.core.match.backtrack;
                                                    } else {
                                                      return null;
                                                    }
                                                  }
                                                } catch (e9088) {
                                                  if (e9088 instanceof Error) {
                                                    var e__4796__auto____$5 = e9088;
                                                    if (e__4796__auto____$5 === cljs.core.match.backtrack) {
                                                      throw cljs.core.match.backtrack;
                                                    } else {
                                                      throw e__4796__auto____$5;
                                                    }
                                                  } else {
                                                    if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
                                                      throw e9088;
                                                    } else {
                                                      return null;
                                                    }
                                                  }
                                                }
                                              } else {
                                                if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
                                                  throw cljs.core.match.backtrack;
                                                } else {
                                                  return null;
                                                }
                                              }
                                            } catch (e9087) {
                                              if (e9087 instanceof Error) {
                                                var e__4796__auto____$5 = e9087;
                                                if (e__4796__auto____$5 === cljs.core.match.backtrack) {
                                                  throw cljs.core.match.backtrack;
                                                } else {
                                                  throw e__4796__auto____$5;
                                                }
                                              } else {
                                                if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
                                                  throw e9087;
                                                } else {
                                                  return null;
                                                }
                                              }
                                            }
                                          } else {
                                            if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
                                              throw cljs.core.match.backtrack;
                                            } else {
                                              return null;
                                            }
                                          }
                                        } catch (e9086) {
                                          if (e9086 instanceof Error) {
                                            var e__4796__auto____$5 = e9086;
                                            if (e__4796__auto____$5 === cljs.core.match.backtrack) {
                                              throw cljs.core.match.backtrack;
                                            } else {
                                              throw e__4796__auto____$5;
                                            }
                                          } else {
                                            if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
                                              throw e9086;
                                            } else {
                                              return null;
                                            }
                                          }
                                        }
                                      } else {
                                        throw e__4796__auto____$4;
                                      }
                                    } else {
                                      if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
                                        throw e9085;
                                      } else {
                                        return null;
                                      }
                                    }
                                  }
                                } else {
                                  throw e__4796__auto____$3;
                                }
                              } else {
                                if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
                                  throw e9084;
                                } else {
                                  return null;
                                }
                              }
                            }
                          } else {
                            throw e__4796__auto____$2;
                          }
                        } else {
                          if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
                            throw e9083;
                          } else {
                            return null;
                          }
                        }
                      }
                    } else {
                      throw e__4796__auto____$1;
                    }
                  } else {
                    if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
                      throw e9082;
                    } else {
                      return null;
                    }
                  }
                }
              } else {
                throw e__4796__auto__;
              }
            } else {
              if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
                throw e9081;
              } else {
                return null;
              }
            }
          }
        } else {
          if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
            throw cljs.core.match.backtrack;
          } else {
            return null;
          }
        }
      } catch (e9080) {
        if (e9080 instanceof Error) {
          var e__4796__auto__ = e9080;
          if (e__4796__auto__ === cljs.core.match.backtrack) {
            return null;
          } else {
            throw e__4796__auto__;
          }
        } else {
          if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
            throw e9080;
          } else {
            return null;
          }
        }
      }
    }();
    if (cljs.core.truth_(temp__4090__auto__)) {
      var r__6471__auto__ = temp__4090__auto__;
      return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [function() {
        var or__3403__auto__ = cljs.core.first.call(null, r__6471__auto__);
        if (cljs.core.truth_(or__3403__auto__)) {
          return or__3403__auto__;
        } else {
          return state__6468__auto__;
        }
      }(), cljs.core.concat.call(null, cljs.core.next.call(null, r__6471__auto__), cljs.core.drop.call(null, 2, input__6469__auto__))], null);
    } else {
      return null;
    }
  };
  G__9099 = function(state__6468__auto__, input__6469__auto__) {
    switch(arguments.length) {
      case 0:
        return G__9099__0.call(this);
      case 2:
        return G__9099__2.call(this, state__6468__auto__, input__6469__auto__);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  return G__9099;
}());
termcat.rules.bind.make_lambda = function make_lambda(args, body) {
  return new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [termcat.term.block.call(null, termcat.term.ldelim.call(null, new cljs.core.Keyword(null, "lambda", "lambda", 4198778681)), termcat.term.fragmentcat.call(null, cljs.core.map.call(null, function(x) {
    return termcat.term.token.call(null, new cljs.core.Keyword(null, "arg", "arg", 1014001096), termcat.term.payload.call(null, x));
  }, cljs.core.filter.call(null, function(p1__9100_SHARP_) {
    return cljs.core.not_EQ_.call(null, termcat.term.tt.call(null, p1__9100_SHARP_), new cljs.core.Keyword(null, "whitespace", "whitespace", 1290815983));
  }, termcat.term.center.call(null, args).terms)), termcat.term.center.call(null, body).terms), termcat.term.rdelim.call(null, new cljs.core.Keyword(null, "lambda", "lambda", 4198778681)))], null);
};
termcat.rules.bind.introduce_lambdas = termcat.rewrite.abstraction.call(null, function() {
  var G__9155 = null;
  var G__9155__0 = function() {
    return null;
  };
  var G__9155__2 = function(state__6468__auto__, input__6469__auto__) {
    var padded_input__6470__auto__ = cljs.core.concat.call(null, input__6469__auto__, cljs.core.repeat.call(null, null));
    var vec__9101 = cljs.core.cons.call(null, state__6468__auto__, cljs.core.take.call(null, 5, padded_input__6470__auto__));
    var state = cljs.core.nth.call(null, vec__9101, 0, null);
    var t1 = cljs.core.nth.call(null, vec__9101, 1, null);
    var t2 = cljs.core.nth.call(null, vec__9101, 2, null);
    var t3 = cljs.core.nth.call(null, vec__9101, 3, null);
    var t4 = cljs.core.nth.call(null, vec__9101, 4, null);
    var t5 = cljs.core.nth.call(null, vec__9101, 5, null);
    var temp__4090__auto__ = function() {
      var ocr_9102 = clojure.core.reducers.reduce.call(null, cljs.core.conj, new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [state__6468__auto__], null), clojure.core.reducers.take.call(null, 5, clojure.core.reducers.map.call(null, termcat.term.tt, padded_input__6470__auto__)));
      try {
        if (cljs.core.vector_QMARK_.call(null, ocr_9102) && cljs.core.count.call(null, ocr_9102) === 6) {
          try {
            var ocr_9102_1__9108 = cljs.core.nth.call(null, ocr_9102, 1);
            if (ocr_9102_1__9108 === null) {
              try {
                var ocr_9102_2__9109 = cljs.core.nth.call(null, ocr_9102, 2);
                if (cljs.core.keyword_identical_QMARK_.call(null, ocr_9102_2__9109, new cljs.core.Keyword(null, "period", "period", 4317145395))) {
                  try {
                    var ocr_9102_3__9110 = cljs.core.nth.call(null, ocr_9102, 3);
                    if (cljs.core.keyword_identical_QMARK_.call(null, ocr_9102_3__9110, new cljs.core.Keyword(null, "default", "default", 2558708147))) {
                      try {
                        var ocr_9102_4__9111 = cljs.core.nth.call(null, ocr_9102, 4);
                        if (cljs.core.vector_QMARK_.call(null, ocr_9102_4__9111) && cljs.core.count.call(null, ocr_9102_4__9111) === 2) {
                          try {
                            var ocr_9102_4__9111_0__9113 = cljs.core.nth.call(null, ocr_9102_4__9111, 0);
                            if (cljs.core.keyword_identical_QMARK_.call(null, ocr_9102_4__9111_0__9113, new cljs.core.Keyword(null, "block", "block", 1107736575))) {
                              try {
                                var ocr_9102_5__9112 = cljs.core.nth.call(null, ocr_9102, 5);
                                if (cljs.core.vector_QMARK_.call(null, ocr_9102_5__9112) && cljs.core.count.call(null, ocr_9102_5__9112) === 2) {
                                  try {
                                    var ocr_9102_5__9112_0__9115 = cljs.core.nth.call(null, ocr_9102_5__9112, 0);
                                    if (cljs.core.keyword_identical_QMARK_.call(null, ocr_9102_5__9112_0__9115, new cljs.core.Keyword(null, "block", "block", 1107736575))) {
                                      if (cljs.core.contains_QMARK_.call(null, new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 2, ["fn", null, "recfn", null], null), null), termcat.term.payload.call(null, t3))) {
                                        return cljs.core.concat.call(null, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [null, cljs.core.truth_(function() {
                                          var or__3403__auto__ = cljs.core._EQ_.call(null, termcat.term.tt.call(null, t1), new cljs.core.Keyword(null, "emptyline", "emptyline", 3889609267));
                                          if (or__3403__auto__) {
                                            return or__3403__auto__;
                                          } else {
                                            return termcat.term.payload.call(null, t1);
                                          }
                                        }()) ? t1 : null], null), termcat.rules.bind.make_lambda.call(null, t4, t5));
                                      } else {
                                        return null;
                                      }
                                    } else {
                                      if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
                                        throw cljs.core.match.backtrack;
                                      } else {
                                        return null;
                                      }
                                    }
                                  } catch (e9136) {
                                    if (e9136 instanceof Error) {
                                      var e__4796__auto__ = e9136;
                                      if (e__4796__auto__ === cljs.core.match.backtrack) {
                                        throw cljs.core.match.backtrack;
                                      } else {
                                        throw e__4796__auto__;
                                      }
                                    } else {
                                      if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
                                        throw e9136;
                                      } else {
                                        return null;
                                      }
                                    }
                                  }
                                } else {
                                  if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
                                    throw cljs.core.match.backtrack;
                                  } else {
                                    return null;
                                  }
                                }
                              } catch (e9135) {
                                if (e9135 instanceof Error) {
                                  var e__4796__auto__ = e9135;
                                  if (e__4796__auto__ === cljs.core.match.backtrack) {
                                    throw cljs.core.match.backtrack;
                                  } else {
                                    throw e__4796__auto__;
                                  }
                                } else {
                                  if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
                                    throw e9135;
                                  } else {
                                    return null;
                                  }
                                }
                              }
                            } else {
                              if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
                                throw cljs.core.match.backtrack;
                              } else {
                                return null;
                              }
                            }
                          } catch (e9134) {
                            if (e9134 instanceof Error) {
                              var e__4796__auto__ = e9134;
                              if (e__4796__auto__ === cljs.core.match.backtrack) {
                                throw cljs.core.match.backtrack;
                              } else {
                                throw e__4796__auto__;
                              }
                            } else {
                              if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
                                throw e9134;
                              } else {
                                return null;
                              }
                            }
                          }
                        } else {
                          if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
                            throw cljs.core.match.backtrack;
                          } else {
                            return null;
                          }
                        }
                      } catch (e9133) {
                        if (e9133 instanceof Error) {
                          var e__4796__auto__ = e9133;
                          if (e__4796__auto__ === cljs.core.match.backtrack) {
                            throw cljs.core.match.backtrack;
                          } else {
                            throw e__4796__auto__;
                          }
                        } else {
                          if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
                            throw e9133;
                          } else {
                            return null;
                          }
                        }
                      }
                    } else {
                      if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
                        throw cljs.core.match.backtrack;
                      } else {
                        return null;
                      }
                    }
                  } catch (e9132) {
                    if (e9132 instanceof Error) {
                      var e__4796__auto__ = e9132;
                      if (e__4796__auto__ === cljs.core.match.backtrack) {
                        throw cljs.core.match.backtrack;
                      } else {
                        throw e__4796__auto__;
                      }
                    } else {
                      if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
                        throw e9132;
                      } else {
                        return null;
                      }
                    }
                  }
                } else {
                  if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
                    throw cljs.core.match.backtrack;
                  } else {
                    return null;
                  }
                }
              } catch (e9131) {
                if (e9131 instanceof Error) {
                  var e__4796__auto__ = e9131;
                  if (e__4796__auto__ === cljs.core.match.backtrack) {
                    throw cljs.core.match.backtrack;
                  } else {
                    throw e__4796__auto__;
                  }
                } else {
                  if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
                    throw e9131;
                  } else {
                    return null;
                  }
                }
              }
            } else {
              if (cljs.core.keyword_identical_QMARK_.call(null, ocr_9102_1__9108, new cljs.core.Keyword(null, "whitespace", "whitespace", 1290815983))) {
                try {
                  var ocr_9102_2__9109 = cljs.core.nth.call(null, ocr_9102, 2);
                  if (cljs.core.keyword_identical_QMARK_.call(null, ocr_9102_2__9109, new cljs.core.Keyword(null, "period", "period", 4317145395))) {
                    try {
                      var ocr_9102_3__9110 = cljs.core.nth.call(null, ocr_9102, 3);
                      if (cljs.core.keyword_identical_QMARK_.call(null, ocr_9102_3__9110, new cljs.core.Keyword(null, "default", "default", 2558708147))) {
                        try {
                          var ocr_9102_4__9111 = cljs.core.nth.call(null, ocr_9102, 4);
                          if (cljs.core.vector_QMARK_.call(null, ocr_9102_4__9111) && cljs.core.count.call(null, ocr_9102_4__9111) === 2) {
                            try {
                              var ocr_9102_4__9111_0__9117 = cljs.core.nth.call(null, ocr_9102_4__9111, 0);
                              if (cljs.core.keyword_identical_QMARK_.call(null, ocr_9102_4__9111_0__9117, new cljs.core.Keyword(null, "block", "block", 1107736575))) {
                                try {
                                  var ocr_9102_5__9112 = cljs.core.nth.call(null, ocr_9102, 5);
                                  if (cljs.core.vector_QMARK_.call(null, ocr_9102_5__9112) && cljs.core.count.call(null, ocr_9102_5__9112) === 2) {
                                    try {
                                      var ocr_9102_5__9112_0__9119 = cljs.core.nth.call(null, ocr_9102_5__9112, 0);
                                      if (cljs.core.keyword_identical_QMARK_.call(null, ocr_9102_5__9112_0__9119, new cljs.core.Keyword(null, "block", "block", 1107736575))) {
                                        if (cljs.core.contains_QMARK_.call(null, new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 2, ["fn", null, "recfn", null], null), null), termcat.term.payload.call(null, t3))) {
                                          return cljs.core.concat.call(null, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [null, cljs.core.truth_(function() {
                                            var or__3403__auto__ = cljs.core._EQ_.call(null, termcat.term.tt.call(null, t1), new cljs.core.Keyword(null, "emptyline", "emptyline", 3889609267));
                                            if (or__3403__auto__) {
                                              return or__3403__auto__;
                                            } else {
                                              return termcat.term.payload.call(null, t1);
                                            }
                                          }()) ? t1 : null], null), termcat.rules.bind.make_lambda.call(null, t4, t5));
                                        } else {
                                          return null;
                                        }
                                      } else {
                                        if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
                                          throw cljs.core.match.backtrack;
                                        } else {
                                          return null;
                                        }
                                      }
                                    } catch (e9142) {
                                      if (e9142 instanceof Error) {
                                        var e__4796__auto__ = e9142;
                                        if (e__4796__auto__ === cljs.core.match.backtrack) {
                                          throw cljs.core.match.backtrack;
                                        } else {
                                          throw e__4796__auto__;
                                        }
                                      } else {
                                        if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
                                          throw e9142;
                                        } else {
                                          return null;
                                        }
                                      }
                                    }
                                  } else {
                                    if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
                                      throw cljs.core.match.backtrack;
                                    } else {
                                      return null;
                                    }
                                  }
                                } catch (e9141) {
                                  if (e9141 instanceof Error) {
                                    var e__4796__auto__ = e9141;
                                    if (e__4796__auto__ === cljs.core.match.backtrack) {
                                      throw cljs.core.match.backtrack;
                                    } else {
                                      throw e__4796__auto__;
                                    }
                                  } else {
                                    if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
                                      throw e9141;
                                    } else {
                                      return null;
                                    }
                                  }
                                }
                              } else {
                                if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
                                  throw cljs.core.match.backtrack;
                                } else {
                                  return null;
                                }
                              }
                            } catch (e9140) {
                              if (e9140 instanceof Error) {
                                var e__4796__auto__ = e9140;
                                if (e__4796__auto__ === cljs.core.match.backtrack) {
                                  throw cljs.core.match.backtrack;
                                } else {
                                  throw e__4796__auto__;
                                }
                              } else {
                                if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
                                  throw e9140;
                                } else {
                                  return null;
                                }
                              }
                            }
                          } else {
                            if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
                              throw cljs.core.match.backtrack;
                            } else {
                              return null;
                            }
                          }
                        } catch (e9139) {
                          if (e9139 instanceof Error) {
                            var e__4796__auto__ = e9139;
                            if (e__4796__auto__ === cljs.core.match.backtrack) {
                              throw cljs.core.match.backtrack;
                            } else {
                              throw e__4796__auto__;
                            }
                          } else {
                            if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
                              throw e9139;
                            } else {
                              return null;
                            }
                          }
                        }
                      } else {
                        if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
                          throw cljs.core.match.backtrack;
                        } else {
                          return null;
                        }
                      }
                    } catch (e9138) {
                      if (e9138 instanceof Error) {
                        var e__4796__auto__ = e9138;
                        if (e__4796__auto__ === cljs.core.match.backtrack) {
                          throw cljs.core.match.backtrack;
                        } else {
                          throw e__4796__auto__;
                        }
                      } else {
                        if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
                          throw e9138;
                        } else {
                          return null;
                        }
                      }
                    }
                  } else {
                    if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
                      throw cljs.core.match.backtrack;
                    } else {
                      return null;
                    }
                  }
                } catch (e9137) {
                  if (e9137 instanceof Error) {
                    var e__4796__auto__ = e9137;
                    if (e__4796__auto__ === cljs.core.match.backtrack) {
                      throw cljs.core.match.backtrack;
                    } else {
                      throw e__4796__auto__;
                    }
                  } else {
                    if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
                      throw e9137;
                    } else {
                      return null;
                    }
                  }
                }
              } else {
                if (cljs.core.keyword_identical_QMARK_.call(null, ocr_9102_1__9108, new cljs.core.Keyword(null, "emptyline", "emptyline", 3889609267))) {
                  try {
                    var ocr_9102_2__9109 = cljs.core.nth.call(null, ocr_9102, 2);
                    if (cljs.core.keyword_identical_QMARK_.call(null, ocr_9102_2__9109, new cljs.core.Keyword(null, "period", "period", 4317145395))) {
                      try {
                        var ocr_9102_3__9110 = cljs.core.nth.call(null, ocr_9102, 3);
                        if (cljs.core.keyword_identical_QMARK_.call(null, ocr_9102_3__9110, new cljs.core.Keyword(null, "default", "default", 2558708147))) {
                          try {
                            var ocr_9102_4__9111 = cljs.core.nth.call(null, ocr_9102, 4);
                            if (cljs.core.vector_QMARK_.call(null, ocr_9102_4__9111) && cljs.core.count.call(null, ocr_9102_4__9111) === 2) {
                              try {
                                var ocr_9102_4__9111_0__9121 = cljs.core.nth.call(null, ocr_9102_4__9111, 0);
                                if (cljs.core.keyword_identical_QMARK_.call(null, ocr_9102_4__9111_0__9121, new cljs.core.Keyword(null, "block", "block", 1107736575))) {
                                  try {
                                    var ocr_9102_5__9112 = cljs.core.nth.call(null, ocr_9102, 5);
                                    if (cljs.core.vector_QMARK_.call(null, ocr_9102_5__9112) && cljs.core.count.call(null, ocr_9102_5__9112) === 2) {
                                      try {
                                        var ocr_9102_5__9112_0__9123 = cljs.core.nth.call(null, ocr_9102_5__9112, 0);
                                        if (cljs.core.keyword_identical_QMARK_.call(null, ocr_9102_5__9112_0__9123, new cljs.core.Keyword(null, "block", "block", 1107736575))) {
                                          if (cljs.core.contains_QMARK_.call(null, new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 2, ["fn", null, "recfn", null], null), null), termcat.term.payload.call(null, t3))) {
                                            return cljs.core.concat.call(null, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [null, cljs.core.truth_(function() {
                                              var or__3403__auto__ = cljs.core._EQ_.call(null, termcat.term.tt.call(null, t1), new cljs.core.Keyword(null, "emptyline", "emptyline", 3889609267));
                                              if (or__3403__auto__) {
                                                return or__3403__auto__;
                                              } else {
                                                return termcat.term.payload.call(null, t1);
                                              }
                                            }()) ? t1 : null], null), termcat.rules.bind.make_lambda.call(null, t4, t5));
                                          } else {
                                            return null;
                                          }
                                        } else {
                                          if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
                                            throw cljs.core.match.backtrack;
                                          } else {
                                            return null;
                                          }
                                        }
                                      } catch (e9148) {
                                        if (e9148 instanceof Error) {
                                          var e__4796__auto__ = e9148;
                                          if (e__4796__auto__ === cljs.core.match.backtrack) {
                                            throw cljs.core.match.backtrack;
                                          } else {
                                            throw e__4796__auto__;
                                          }
                                        } else {
                                          if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
                                            throw e9148;
                                          } else {
                                            return null;
                                          }
                                        }
                                      }
                                    } else {
                                      if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
                                        throw cljs.core.match.backtrack;
                                      } else {
                                        return null;
                                      }
                                    }
                                  } catch (e9147) {
                                    if (e9147 instanceof Error) {
                                      var e__4796__auto__ = e9147;
                                      if (e__4796__auto__ === cljs.core.match.backtrack) {
                                        throw cljs.core.match.backtrack;
                                      } else {
                                        throw e__4796__auto__;
                                      }
                                    } else {
                                      if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
                                        throw e9147;
                                      } else {
                                        return null;
                                      }
                                    }
                                  }
                                } else {
                                  if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
                                    throw cljs.core.match.backtrack;
                                  } else {
                                    return null;
                                  }
                                }
                              } catch (e9146) {
                                if (e9146 instanceof Error) {
                                  var e__4796__auto__ = e9146;
                                  if (e__4796__auto__ === cljs.core.match.backtrack) {
                                    throw cljs.core.match.backtrack;
                                  } else {
                                    throw e__4796__auto__;
                                  }
                                } else {
                                  if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
                                    throw e9146;
                                  } else {
                                    return null;
                                  }
                                }
                              }
                            } else {
                              if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
                                throw cljs.core.match.backtrack;
                              } else {
                                return null;
                              }
                            }
                          } catch (e9145) {
                            if (e9145 instanceof Error) {
                              var e__4796__auto__ = e9145;
                              if (e__4796__auto__ === cljs.core.match.backtrack) {
                                throw cljs.core.match.backtrack;
                              } else {
                                throw e__4796__auto__;
                              }
                            } else {
                              if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
                                throw e9145;
                              } else {
                                return null;
                              }
                            }
                          }
                        } else {
                          if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
                            throw cljs.core.match.backtrack;
                          } else {
                            return null;
                          }
                        }
                      } catch (e9144) {
                        if (e9144 instanceof Error) {
                          var e__4796__auto__ = e9144;
                          if (e__4796__auto__ === cljs.core.match.backtrack) {
                            throw cljs.core.match.backtrack;
                          } else {
                            throw e__4796__auto__;
                          }
                        } else {
                          if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
                            throw e9144;
                          } else {
                            return null;
                          }
                        }
                      }
                    } else {
                      if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
                        throw cljs.core.match.backtrack;
                      } else {
                        return null;
                      }
                    }
                  } catch (e9143) {
                    if (e9143 instanceof Error) {
                      var e__4796__auto__ = e9143;
                      if (e__4796__auto__ === cljs.core.match.backtrack) {
                        throw cljs.core.match.backtrack;
                      } else {
                        throw e__4796__auto__;
                      }
                    } else {
                      if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
                        throw e9143;
                      } else {
                        return null;
                      }
                    }
                  }
                } else {
                  if (cljs.core.keyword_identical_QMARK_.call(null, ocr_9102_1__9108, new cljs.core.Keyword(null, "newline", "newline", 2859826438))) {
                    try {
                      var ocr_9102_2__9109 = cljs.core.nth.call(null, ocr_9102, 2);
                      if (cljs.core.keyword_identical_QMARK_.call(null, ocr_9102_2__9109, new cljs.core.Keyword(null, "period", "period", 4317145395))) {
                        try {
                          var ocr_9102_3__9110 = cljs.core.nth.call(null, ocr_9102, 3);
                          if (cljs.core.keyword_identical_QMARK_.call(null, ocr_9102_3__9110, new cljs.core.Keyword(null, "default", "default", 2558708147))) {
                            try {
                              var ocr_9102_4__9111 = cljs.core.nth.call(null, ocr_9102, 4);
                              if (cljs.core.vector_QMARK_.call(null, ocr_9102_4__9111) && cljs.core.count.call(null, ocr_9102_4__9111) === 2) {
                                try {
                                  var ocr_9102_4__9111_0__9125 = cljs.core.nth.call(null, ocr_9102_4__9111, 0);
                                  if (cljs.core.keyword_identical_QMARK_.call(null, ocr_9102_4__9111_0__9125, new cljs.core.Keyword(null, "block", "block", 1107736575))) {
                                    try {
                                      var ocr_9102_5__9112 = cljs.core.nth.call(null, ocr_9102, 5);
                                      if (cljs.core.vector_QMARK_.call(null, ocr_9102_5__9112) && cljs.core.count.call(null, ocr_9102_5__9112) === 2) {
                                        try {
                                          var ocr_9102_5__9112_0__9127 = cljs.core.nth.call(null, ocr_9102_5__9112, 0);
                                          if (cljs.core.keyword_identical_QMARK_.call(null, ocr_9102_5__9112_0__9127, new cljs.core.Keyword(null, "block", "block", 1107736575))) {
                                            if (cljs.core.contains_QMARK_.call(null, new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 2, ["fn", null, "recfn", null], null), null), termcat.term.payload.call(null, t3))) {
                                              return cljs.core.concat.call(null, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [null, cljs.core.truth_(function() {
                                                var or__3403__auto__ = cljs.core._EQ_.call(null, termcat.term.tt.call(null, t1), new cljs.core.Keyword(null, "emptyline", "emptyline", 3889609267));
                                                if (or__3403__auto__) {
                                                  return or__3403__auto__;
                                                } else {
                                                  return termcat.term.payload.call(null, t1);
                                                }
                                              }()) ? t1 : null], null), termcat.rules.bind.make_lambda.call(null, t4, t5));
                                            } else {
                                              return null;
                                            }
                                          } else {
                                            if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
                                              throw cljs.core.match.backtrack;
                                            } else {
                                              return null;
                                            }
                                          }
                                        } catch (e9154) {
                                          if (e9154 instanceof Error) {
                                            var e__4796__auto__ = e9154;
                                            if (e__4796__auto__ === cljs.core.match.backtrack) {
                                              throw cljs.core.match.backtrack;
                                            } else {
                                              throw e__4796__auto__;
                                            }
                                          } else {
                                            if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
                                              throw e9154;
                                            } else {
                                              return null;
                                            }
                                          }
                                        }
                                      } else {
                                        if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
                                          throw cljs.core.match.backtrack;
                                        } else {
                                          return null;
                                        }
                                      }
                                    } catch (e9153) {
                                      if (e9153 instanceof Error) {
                                        var e__4796__auto__ = e9153;
                                        if (e__4796__auto__ === cljs.core.match.backtrack) {
                                          throw cljs.core.match.backtrack;
                                        } else {
                                          throw e__4796__auto__;
                                        }
                                      } else {
                                        if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
                                          throw e9153;
                                        } else {
                                          return null;
                                        }
                                      }
                                    }
                                  } else {
                                    if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
                                      throw cljs.core.match.backtrack;
                                    } else {
                                      return null;
                                    }
                                  }
                                } catch (e9152) {
                                  if (e9152 instanceof Error) {
                                    var e__4796__auto__ = e9152;
                                    if (e__4796__auto__ === cljs.core.match.backtrack) {
                                      throw cljs.core.match.backtrack;
                                    } else {
                                      throw e__4796__auto__;
                                    }
                                  } else {
                                    if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
                                      throw e9152;
                                    } else {
                                      return null;
                                    }
                                  }
                                }
                              } else {
                                if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
                                  throw cljs.core.match.backtrack;
                                } else {
                                  return null;
                                }
                              }
                            } catch (e9151) {
                              if (e9151 instanceof Error) {
                                var e__4796__auto__ = e9151;
                                if (e__4796__auto__ === cljs.core.match.backtrack) {
                                  throw cljs.core.match.backtrack;
                                } else {
                                  throw e__4796__auto__;
                                }
                              } else {
                                if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
                                  throw e9151;
                                } else {
                                  return null;
                                }
                              }
                            }
                          } else {
                            if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
                              throw cljs.core.match.backtrack;
                            } else {
                              return null;
                            }
                          }
                        } catch (e9150) {
                          if (e9150 instanceof Error) {
                            var e__4796__auto__ = e9150;
                            if (e__4796__auto__ === cljs.core.match.backtrack) {
                              throw cljs.core.match.backtrack;
                            } else {
                              throw e__4796__auto__;
                            }
                          } else {
                            if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
                              throw e9150;
                            } else {
                              return null;
                            }
                          }
                        }
                      } else {
                        if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
                          throw cljs.core.match.backtrack;
                        } else {
                          return null;
                        }
                      }
                    } catch (e9149) {
                      if (e9149 instanceof Error) {
                        var e__4796__auto__ = e9149;
                        if (e__4796__auto__ === cljs.core.match.backtrack) {
                          throw cljs.core.match.backtrack;
                        } else {
                          throw e__4796__auto__;
                        }
                      } else {
                        if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
                          throw e9149;
                        } else {
                          return null;
                        }
                      }
                    }
                  } else {
                    if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
                      throw cljs.core.match.backtrack;
                    } else {
                      return null;
                    }
                  }
                }
              }
            }
          } catch (e9130) {
            if (e9130 instanceof Error) {
              var e__4796__auto__ = e9130;
              if (e__4796__auto__ === cljs.core.match.backtrack) {
                throw cljs.core.match.backtrack;
              } else {
                throw e__4796__auto__;
              }
            } else {
              if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
                throw e9130;
              } else {
                return null;
              }
            }
          }
        } else {
          if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
            throw cljs.core.match.backtrack;
          } else {
            return null;
          }
        }
      } catch (e9129) {
        if (e9129 instanceof Error) {
          var e__4796__auto__ = e9129;
          if (e__4796__auto__ === cljs.core.match.backtrack) {
            return null;
          } else {
            throw e__4796__auto__;
          }
        } else {
          if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
            throw e9129;
          } else {
            return null;
          }
        }
      }
    }();
    if (cljs.core.truth_(temp__4090__auto__)) {
      var r__6471__auto__ = temp__4090__auto__;
      return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [function() {
        var or__3403__auto__ = cljs.core.first.call(null, r__6471__auto__);
        if (cljs.core.truth_(or__3403__auto__)) {
          return or__3403__auto__;
        } else {
          return state__6468__auto__;
        }
      }(), cljs.core.concat.call(null, cljs.core.next.call(null, r__6471__auto__), cljs.core.drop.call(null, 5, input__6469__auto__))], null);
    } else {
      return null;
    }
  };
  G__9155 = function(state__6468__auto__, input__6469__auto__) {
    switch(arguments.length) {
      case 0:
        return G__9155__0.call(this);
      case 2:
        return G__9155__2.call(this, state__6468__auto__, input__6469__auto__);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  return G__9155;
}());
termcat.rules.bind.if_fn = function if_fn(t1, t2, t3) {
  return termcat.rewrite.apply_rule.call(null, termcat.rewrite.recursion.call(null, termcat.rewrite.procedure.call(null, termcat.rewrite.fixpoint.call(null, termcat.rewrite.disjunction.call(null, termcat.rules.bind.expand_bindings, termcat.rules.bind.evaluate_fun_calls))), termcat.rules.bind.non_dormant_block_QMARK_), termcat.rewrite.unwrap.call(null, cljs.core.truth_(termcat.util.lambda.tval.call(null, t1, function(p1__9156_SHARP_) {
    return cljs.core._EQ_.call(null, p1__9156_SHARP_, true) || cljs.core._EQ_.call(null, p1__9156_SHARP_, false);
  })) ? t2 : t3));
};
termcat.rules.bind.introduce_fun_calls = termcat.rewrite.abstraction.call(null, function() {
  var G__9188 = null;
  var G__9188__0 = function() {
    return null;
  };
  var G__9188__2 = function(state__6468__auto__, input__6469__auto__) {
    var padded_input__6470__auto__ = cljs.core.concat.call(null, input__6469__auto__, cljs.core.repeat.call(null, null));
    var vec__9157 = cljs.core.cons.call(null, state__6468__auto__, cljs.core.take.call(null, 6, padded_input__6470__auto__));
    var state = cljs.core.nth.call(null, vec__9157, 0, null);
    var t1 = cljs.core.nth.call(null, vec__9157, 1, null);
    var t2 = cljs.core.nth.call(null, vec__9157, 2, null);
    var t3 = cljs.core.nth.call(null, vec__9157, 3, null);
    var t4 = cljs.core.nth.call(null, vec__9157, 4, null);
    var t5 = cljs.core.nth.call(null, vec__9157, 5, null);
    var t6 = cljs.core.nth.call(null, vec__9157, 6, null);
    var temp__4090__auto__ = function() {
      var ocr_9158 = clojure.core.reducers.reduce.call(null, cljs.core.conj, new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [state__6468__auto__], null), clojure.core.reducers.take.call(null, 6, clojure.core.reducers.map.call(null, termcat.term.tt, padded_input__6470__auto__)));
      try {
        if (cljs.core.vector_QMARK_.call(null, ocr_9158) && cljs.core.count.call(null, ocr_9158) === 7) {
          try {
            var ocr_9158_1__9165 = cljs.core.nth.call(null, ocr_9158, 1);
            if (ocr_9158_1__9165 === null) {
              try {
                var ocr_9158_2__9166 = cljs.core.nth.call(null, ocr_9158, 2);
                if (cljs.core.keyword_identical_QMARK_.call(null, ocr_9158_2__9166, new cljs.core.Keyword(null, "period", "period", 4317145395))) {
                  try {
                    var ocr_9158_3__9167 = cljs.core.nth.call(null, ocr_9158, 3);
                    if (cljs.core.keyword_identical_QMARK_.call(null, ocr_9158_3__9167, new cljs.core.Keyword(null, "default", "default", 2558708147))) {
                      if (cljs.core._EQ_.call(null, termcat.term.tt.call(null, t2), new cljs.core.Keyword(null, "period", "period", 4317145395)) && cljs.core._EQ_.call(null, termcat.term.payload.call(null, t3), "if")) {
                        return new cljs.core.PersistentVector(null, 5, 5, cljs.core.PersistentVector.EMPTY_NODE, [t1, termcat.term.token.call(null, new cljs.core.Keyword(null, "fun", "fun", 1014006001), termcat.util.lambda.curry_fun.call(null, termcat.rules.bind.if_fn, 3)), t4, termcat.term.block_QMARK_.call(null, t5) ? termcat.term.block.call(null, termcat.term.ldelim.call(null, new cljs.core.Keyword(null, "if-branch", "if-branch", 1784671172)), termcat.term.fragmentcat.call(null, termcat.rewrite.unwrap.call(null, 
                        t5)), termcat.term.rdelim.call(null, new cljs.core.Keyword(null, "if-branch", "if-branch", 1784671172))) : t5, termcat.term.block_QMARK_.call(null, t6) ? termcat.term.block.call(null, termcat.term.ldelim.call(null, new cljs.core.Keyword(null, "if-branch", "if-branch", 1784671172)), termcat.term.fragmentcat.call(null, termcat.rewrite.unwrap.call(null, t6)), termcat.term.rdelim.call(null, new cljs.core.Keyword(null, "if-branch", "if-branch", 1784671172))) : t6], null);
                      } else {
                        return new cljs.core.PersistentVector(null, 6, 5, cljs.core.PersistentVector.EMPTY_NODE, [null, t1, termcat.util.lambda.fun_call_head.call(null, [cljs.core.str(termcat.term.payload.call(null, t2)), cljs.core.str(termcat.term.payload.call(null, t3))].join("")), t4, t5, t6], null);
                      }
                    } else {
                      if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
                        throw cljs.core.match.backtrack;
                      } else {
                        return null;
                      }
                    }
                  } catch (e9174) {
                    if (e9174 instanceof Error) {
                      var e__4796__auto__ = e9174;
                      if (e__4796__auto__ === cljs.core.match.backtrack) {
                        throw cljs.core.match.backtrack;
                      } else {
                        throw e__4796__auto__;
                      }
                    } else {
                      if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
                        throw e9174;
                      } else {
                        return null;
                      }
                    }
                  }
                } else {
                  if (cljs.core.keyword_identical_QMARK_.call(null, ocr_9158_2__9166, new cljs.core.Keyword(null, "colon", "colon", 1108746961))) {
                    try {
                      var ocr_9158_3__9167 = cljs.core.nth.call(null, ocr_9158, 3);
                      if (cljs.core.keyword_identical_QMARK_.call(null, ocr_9158_3__9167, new cljs.core.Keyword(null, "default", "default", 2558708147))) {
                        if (cljs.core._EQ_.call(null, termcat.term.tt.call(null, t2), new cljs.core.Keyword(null, "period", "period", 4317145395)) && cljs.core._EQ_.call(null, termcat.term.payload.call(null, t3), "if")) {
                          return new cljs.core.PersistentVector(null, 5, 5, cljs.core.PersistentVector.EMPTY_NODE, [t1, termcat.term.token.call(null, new cljs.core.Keyword(null, "fun", "fun", 1014006001), termcat.util.lambda.curry_fun.call(null, termcat.rules.bind.if_fn, 3)), t4, termcat.term.block_QMARK_.call(null, t5) ? termcat.term.block.call(null, termcat.term.ldelim.call(null, new cljs.core.Keyword(null, "if-branch", "if-branch", 1784671172)), termcat.term.fragmentcat.call(null, termcat.rewrite.unwrap.call(null, 
                          t5)), termcat.term.rdelim.call(null, new cljs.core.Keyword(null, "if-branch", "if-branch", 1784671172))) : t5, termcat.term.block_QMARK_.call(null, t6) ? termcat.term.block.call(null, termcat.term.ldelim.call(null, new cljs.core.Keyword(null, "if-branch", "if-branch", 1784671172)), termcat.term.fragmentcat.call(null, termcat.rewrite.unwrap.call(null, t6)), termcat.term.rdelim.call(null, new cljs.core.Keyword(null, "if-branch", "if-branch", 1784671172))) : t6], null);
                        } else {
                          return new cljs.core.PersistentVector(null, 6, 5, cljs.core.PersistentVector.EMPTY_NODE, [null, t1, termcat.util.lambda.fun_call_head.call(null, [cljs.core.str(termcat.term.payload.call(null, t2)), cljs.core.str(termcat.term.payload.call(null, t3))].join("")), t4, t5, t6], null);
                        }
                      } else {
                        if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
                          throw cljs.core.match.backtrack;
                        } else {
                          return null;
                        }
                      }
                    } catch (e9175) {
                      if (e9175 instanceof Error) {
                        var e__4796__auto__ = e9175;
                        if (e__4796__auto__ === cljs.core.match.backtrack) {
                          throw cljs.core.match.backtrack;
                        } else {
                          throw e__4796__auto__;
                        }
                      } else {
                        if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
                          throw e9175;
                        } else {
                          return null;
                        }
                      }
                    }
                  } else {
                    if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
                      throw cljs.core.match.backtrack;
                    } else {
                      return null;
                    }
                  }
                }
              } catch (e9173) {
                if (e9173 instanceof Error) {
                  var e__4796__auto__ = e9173;
                  if (e__4796__auto__ === cljs.core.match.backtrack) {
                    throw cljs.core.match.backtrack;
                  } else {
                    throw e__4796__auto__;
                  }
                } else {
                  if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
                    throw e9173;
                  } else {
                    return null;
                  }
                }
              }
            } else {
              if (cljs.core.keyword_identical_QMARK_.call(null, ocr_9158_1__9165, new cljs.core.Keyword(null, "whitespace", "whitespace", 1290815983))) {
                try {
                  var ocr_9158_2__9166 = cljs.core.nth.call(null, ocr_9158, 2);
                  if (cljs.core.keyword_identical_QMARK_.call(null, ocr_9158_2__9166, new cljs.core.Keyword(null, "period", "period", 4317145395))) {
                    try {
                      var ocr_9158_3__9167 = cljs.core.nth.call(null, ocr_9158, 3);
                      if (cljs.core.keyword_identical_QMARK_.call(null, ocr_9158_3__9167, new cljs.core.Keyword(null, "default", "default", 2558708147))) {
                        if (cljs.core._EQ_.call(null, termcat.term.tt.call(null, t2), new cljs.core.Keyword(null, "period", "period", 4317145395)) && cljs.core._EQ_.call(null, termcat.term.payload.call(null, t3), "if")) {
                          return new cljs.core.PersistentVector(null, 5, 5, cljs.core.PersistentVector.EMPTY_NODE, [t1, termcat.term.token.call(null, new cljs.core.Keyword(null, "fun", "fun", 1014006001), termcat.util.lambda.curry_fun.call(null, termcat.rules.bind.if_fn, 3)), t4, termcat.term.block_QMARK_.call(null, t5) ? termcat.term.block.call(null, termcat.term.ldelim.call(null, new cljs.core.Keyword(null, "if-branch", "if-branch", 1784671172)), termcat.term.fragmentcat.call(null, termcat.rewrite.unwrap.call(null, 
                          t5)), termcat.term.rdelim.call(null, new cljs.core.Keyword(null, "if-branch", "if-branch", 1784671172))) : t5, termcat.term.block_QMARK_.call(null, t6) ? termcat.term.block.call(null, termcat.term.ldelim.call(null, new cljs.core.Keyword(null, "if-branch", "if-branch", 1784671172)), termcat.term.fragmentcat.call(null, termcat.rewrite.unwrap.call(null, t6)), termcat.term.rdelim.call(null, new cljs.core.Keyword(null, "if-branch", "if-branch", 1784671172))) : t6], null);
                        } else {
                          return new cljs.core.PersistentVector(null, 6, 5, cljs.core.PersistentVector.EMPTY_NODE, [null, t1, termcat.util.lambda.fun_call_head.call(null, [cljs.core.str(termcat.term.payload.call(null, t2)), cljs.core.str(termcat.term.payload.call(null, t3))].join("")), t4, t5, t6], null);
                        }
                      } else {
                        if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
                          throw cljs.core.match.backtrack;
                        } else {
                          return null;
                        }
                      }
                    } catch (e9177) {
                      if (e9177 instanceof Error) {
                        var e__4796__auto__ = e9177;
                        if (e__4796__auto__ === cljs.core.match.backtrack) {
                          throw cljs.core.match.backtrack;
                        } else {
                          throw e__4796__auto__;
                        }
                      } else {
                        if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
                          throw e9177;
                        } else {
                          return null;
                        }
                      }
                    }
                  } else {
                    if (cljs.core.keyword_identical_QMARK_.call(null, ocr_9158_2__9166, new cljs.core.Keyword(null, "colon", "colon", 1108746961))) {
                      try {
                        var ocr_9158_3__9167 = cljs.core.nth.call(null, ocr_9158, 3);
                        if (cljs.core.keyword_identical_QMARK_.call(null, ocr_9158_3__9167, new cljs.core.Keyword(null, "default", "default", 2558708147))) {
                          if (cljs.core._EQ_.call(null, termcat.term.tt.call(null, t2), new cljs.core.Keyword(null, "period", "period", 4317145395)) && cljs.core._EQ_.call(null, termcat.term.payload.call(null, t3), "if")) {
                            return new cljs.core.PersistentVector(null, 5, 5, cljs.core.PersistentVector.EMPTY_NODE, [t1, termcat.term.token.call(null, new cljs.core.Keyword(null, "fun", "fun", 1014006001), termcat.util.lambda.curry_fun.call(null, termcat.rules.bind.if_fn, 3)), t4, termcat.term.block_QMARK_.call(null, t5) ? termcat.term.block.call(null, termcat.term.ldelim.call(null, new cljs.core.Keyword(null, "if-branch", "if-branch", 1784671172)), termcat.term.fragmentcat.call(null, termcat.rewrite.unwrap.call(null, 
                            t5)), termcat.term.rdelim.call(null, new cljs.core.Keyword(null, "if-branch", "if-branch", 1784671172))) : t5, termcat.term.block_QMARK_.call(null, t6) ? termcat.term.block.call(null, termcat.term.ldelim.call(null, new cljs.core.Keyword(null, "if-branch", "if-branch", 1784671172)), termcat.term.fragmentcat.call(null, termcat.rewrite.unwrap.call(null, t6)), termcat.term.rdelim.call(null, new cljs.core.Keyword(null, "if-branch", "if-branch", 1784671172))) : t6], null);
                          } else {
                            return new cljs.core.PersistentVector(null, 6, 5, cljs.core.PersistentVector.EMPTY_NODE, [null, t1, termcat.util.lambda.fun_call_head.call(null, [cljs.core.str(termcat.term.payload.call(null, t2)), cljs.core.str(termcat.term.payload.call(null, t3))].join("")), t4, t5, t6], null);
                          }
                        } else {
                          if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
                            throw cljs.core.match.backtrack;
                          } else {
                            return null;
                          }
                        }
                      } catch (e9178) {
                        if (e9178 instanceof Error) {
                          var e__4796__auto__ = e9178;
                          if (e__4796__auto__ === cljs.core.match.backtrack) {
                            throw cljs.core.match.backtrack;
                          } else {
                            throw e__4796__auto__;
                          }
                        } else {
                          if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
                            throw e9178;
                          } else {
                            return null;
                          }
                        }
                      }
                    } else {
                      if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
                        throw cljs.core.match.backtrack;
                      } else {
                        return null;
                      }
                    }
                  }
                } catch (e9176) {
                  if (e9176 instanceof Error) {
                    var e__4796__auto__ = e9176;
                    if (e__4796__auto__ === cljs.core.match.backtrack) {
                      throw cljs.core.match.backtrack;
                    } else {
                      throw e__4796__auto__;
                    }
                  } else {
                    if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
                      throw e9176;
                    } else {
                      return null;
                    }
                  }
                }
              } else {
                if (cljs.core.keyword_identical_QMARK_.call(null, ocr_9158_1__9165, new cljs.core.Keyword(null, "newline", "newline", 2859826438))) {
                  try {
                    var ocr_9158_2__9166 = cljs.core.nth.call(null, ocr_9158, 2);
                    if (cljs.core.keyword_identical_QMARK_.call(null, ocr_9158_2__9166, new cljs.core.Keyword(null, "period", "period", 4317145395))) {
                      try {
                        var ocr_9158_3__9167 = cljs.core.nth.call(null, ocr_9158, 3);
                        if (cljs.core.keyword_identical_QMARK_.call(null, ocr_9158_3__9167, new cljs.core.Keyword(null, "default", "default", 2558708147))) {
                          if (cljs.core._EQ_.call(null, termcat.term.tt.call(null, t2), new cljs.core.Keyword(null, "period", "period", 4317145395)) && cljs.core._EQ_.call(null, termcat.term.payload.call(null, t3), "if")) {
                            return new cljs.core.PersistentVector(null, 5, 5, cljs.core.PersistentVector.EMPTY_NODE, [t1, termcat.term.token.call(null, new cljs.core.Keyword(null, "fun", "fun", 1014006001), termcat.util.lambda.curry_fun.call(null, termcat.rules.bind.if_fn, 3)), t4, termcat.term.block_QMARK_.call(null, t5) ? termcat.term.block.call(null, termcat.term.ldelim.call(null, new cljs.core.Keyword(null, "if-branch", "if-branch", 1784671172)), termcat.term.fragmentcat.call(null, termcat.rewrite.unwrap.call(null, 
                            t5)), termcat.term.rdelim.call(null, new cljs.core.Keyword(null, "if-branch", "if-branch", 1784671172))) : t5, termcat.term.block_QMARK_.call(null, t6) ? termcat.term.block.call(null, termcat.term.ldelim.call(null, new cljs.core.Keyword(null, "if-branch", "if-branch", 1784671172)), termcat.term.fragmentcat.call(null, termcat.rewrite.unwrap.call(null, t6)), termcat.term.rdelim.call(null, new cljs.core.Keyword(null, "if-branch", "if-branch", 1784671172))) : t6], null);
                          } else {
                            return new cljs.core.PersistentVector(null, 6, 5, cljs.core.PersistentVector.EMPTY_NODE, [null, t1, termcat.util.lambda.fun_call_head.call(null, [cljs.core.str(termcat.term.payload.call(null, t2)), cljs.core.str(termcat.term.payload.call(null, t3))].join("")), t4, t5, t6], null);
                          }
                        } else {
                          if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
                            throw cljs.core.match.backtrack;
                          } else {
                            return null;
                          }
                        }
                      } catch (e9180) {
                        if (e9180 instanceof Error) {
                          var e__4796__auto__ = e9180;
                          if (e__4796__auto__ === cljs.core.match.backtrack) {
                            throw cljs.core.match.backtrack;
                          } else {
                            throw e__4796__auto__;
                          }
                        } else {
                          if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
                            throw e9180;
                          } else {
                            return null;
                          }
                        }
                      }
                    } else {
                      if (cljs.core.keyword_identical_QMARK_.call(null, ocr_9158_2__9166, new cljs.core.Keyword(null, "colon", "colon", 1108746961))) {
                        try {
                          var ocr_9158_3__9167 = cljs.core.nth.call(null, ocr_9158, 3);
                          if (cljs.core.keyword_identical_QMARK_.call(null, ocr_9158_3__9167, new cljs.core.Keyword(null, "default", "default", 2558708147))) {
                            if (cljs.core._EQ_.call(null, termcat.term.tt.call(null, t2), new cljs.core.Keyword(null, "period", "period", 4317145395)) && cljs.core._EQ_.call(null, termcat.term.payload.call(null, t3), "if")) {
                              return new cljs.core.PersistentVector(null, 5, 5, cljs.core.PersistentVector.EMPTY_NODE, [t1, termcat.term.token.call(null, new cljs.core.Keyword(null, "fun", "fun", 1014006001), termcat.util.lambda.curry_fun.call(null, termcat.rules.bind.if_fn, 3)), t4, termcat.term.block_QMARK_.call(null, t5) ? termcat.term.block.call(null, termcat.term.ldelim.call(null, new cljs.core.Keyword(null, "if-branch", "if-branch", 1784671172)), termcat.term.fragmentcat.call(null, termcat.rewrite.unwrap.call(null, 
                              t5)), termcat.term.rdelim.call(null, new cljs.core.Keyword(null, "if-branch", "if-branch", 1784671172))) : t5, termcat.term.block_QMARK_.call(null, t6) ? termcat.term.block.call(null, termcat.term.ldelim.call(null, new cljs.core.Keyword(null, "if-branch", "if-branch", 1784671172)), termcat.term.fragmentcat.call(null, termcat.rewrite.unwrap.call(null, t6)), termcat.term.rdelim.call(null, new cljs.core.Keyword(null, "if-branch", "if-branch", 1784671172))) : t6], null);
                            } else {
                              return new cljs.core.PersistentVector(null, 6, 5, cljs.core.PersistentVector.EMPTY_NODE, [null, t1, termcat.util.lambda.fun_call_head.call(null, [cljs.core.str(termcat.term.payload.call(null, t2)), cljs.core.str(termcat.term.payload.call(null, t3))].join("")), t4, t5, t6], null);
                            }
                          } else {
                            if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
                              throw cljs.core.match.backtrack;
                            } else {
                              return null;
                            }
                          }
                        } catch (e9181) {
                          if (e9181 instanceof Error) {
                            var e__4796__auto__ = e9181;
                            if (e__4796__auto__ === cljs.core.match.backtrack) {
                              throw cljs.core.match.backtrack;
                            } else {
                              throw e__4796__auto__;
                            }
                          } else {
                            if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
                              throw e9181;
                            } else {
                              return null;
                            }
                          }
                        }
                      } else {
                        if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
                          throw cljs.core.match.backtrack;
                        } else {
                          return null;
                        }
                      }
                    }
                  } catch (e9179) {
                    if (e9179 instanceof Error) {
                      var e__4796__auto__ = e9179;
                      if (e__4796__auto__ === cljs.core.match.backtrack) {
                        throw cljs.core.match.backtrack;
                      } else {
                        throw e__4796__auto__;
                      }
                    } else {
                      if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
                        throw e9179;
                      } else {
                        return null;
                      }
                    }
                  }
                } else {
                  if (cljs.core.keyword_identical_QMARK_.call(null, ocr_9158_1__9165, new cljs.core.Keyword(null, "emptyline", "emptyline", 3889609267))) {
                    try {
                      var ocr_9158_2__9166 = cljs.core.nth.call(null, ocr_9158, 2);
                      if (cljs.core.keyword_identical_QMARK_.call(null, ocr_9158_2__9166, new cljs.core.Keyword(null, "period", "period", 4317145395))) {
                        try {
                          var ocr_9158_3__9167 = cljs.core.nth.call(null, ocr_9158, 3);
                          if (cljs.core.keyword_identical_QMARK_.call(null, ocr_9158_3__9167, new cljs.core.Keyword(null, "default", "default", 2558708147))) {
                            if (cljs.core._EQ_.call(null, termcat.term.tt.call(null, t2), new cljs.core.Keyword(null, "period", "period", 4317145395)) && cljs.core._EQ_.call(null, termcat.term.payload.call(null, t3), "if")) {
                              return new cljs.core.PersistentVector(null, 5, 5, cljs.core.PersistentVector.EMPTY_NODE, [t1, termcat.term.token.call(null, new cljs.core.Keyword(null, "fun", "fun", 1014006001), termcat.util.lambda.curry_fun.call(null, termcat.rules.bind.if_fn, 3)), t4, termcat.term.block_QMARK_.call(null, t5) ? termcat.term.block.call(null, termcat.term.ldelim.call(null, new cljs.core.Keyword(null, "if-branch", "if-branch", 1784671172)), termcat.term.fragmentcat.call(null, termcat.rewrite.unwrap.call(null, 
                              t5)), termcat.term.rdelim.call(null, new cljs.core.Keyword(null, "if-branch", "if-branch", 1784671172))) : t5, termcat.term.block_QMARK_.call(null, t6) ? termcat.term.block.call(null, termcat.term.ldelim.call(null, new cljs.core.Keyword(null, "if-branch", "if-branch", 1784671172)), termcat.term.fragmentcat.call(null, termcat.rewrite.unwrap.call(null, t6)), termcat.term.rdelim.call(null, new cljs.core.Keyword(null, "if-branch", "if-branch", 1784671172))) : t6], null);
                            } else {
                              return new cljs.core.PersistentVector(null, 6, 5, cljs.core.PersistentVector.EMPTY_NODE, [null, t1, termcat.util.lambda.fun_call_head.call(null, [cljs.core.str(termcat.term.payload.call(null, t2)), cljs.core.str(termcat.term.payload.call(null, t3))].join("")), t4, t5, t6], null);
                            }
                          } else {
                            if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
                              throw cljs.core.match.backtrack;
                            } else {
                              return null;
                            }
                          }
                        } catch (e9183) {
                          if (e9183 instanceof Error) {
                            var e__4796__auto__ = e9183;
                            if (e__4796__auto__ === cljs.core.match.backtrack) {
                              throw cljs.core.match.backtrack;
                            } else {
                              throw e__4796__auto__;
                            }
                          } else {
                            if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
                              throw e9183;
                            } else {
                              return null;
                            }
                          }
                        }
                      } else {
                        if (cljs.core.keyword_identical_QMARK_.call(null, ocr_9158_2__9166, new cljs.core.Keyword(null, "colon", "colon", 1108746961))) {
                          try {
                            var ocr_9158_3__9167 = cljs.core.nth.call(null, ocr_9158, 3);
                            if (cljs.core.keyword_identical_QMARK_.call(null, ocr_9158_3__9167, new cljs.core.Keyword(null, "default", "default", 2558708147))) {
                              if (cljs.core._EQ_.call(null, termcat.term.tt.call(null, t2), new cljs.core.Keyword(null, "period", "period", 4317145395)) && cljs.core._EQ_.call(null, termcat.term.payload.call(null, t3), "if")) {
                                return new cljs.core.PersistentVector(null, 5, 5, cljs.core.PersistentVector.EMPTY_NODE, [t1, termcat.term.token.call(null, new cljs.core.Keyword(null, "fun", "fun", 1014006001), termcat.util.lambda.curry_fun.call(null, termcat.rules.bind.if_fn, 3)), t4, termcat.term.block_QMARK_.call(null, t5) ? termcat.term.block.call(null, termcat.term.ldelim.call(null, new cljs.core.Keyword(null, "if-branch", "if-branch", 1784671172)), termcat.term.fragmentcat.call(null, termcat.rewrite.unwrap.call(null, 
                                t5)), termcat.term.rdelim.call(null, new cljs.core.Keyword(null, "if-branch", "if-branch", 1784671172))) : t5, termcat.term.block_QMARK_.call(null, t6) ? termcat.term.block.call(null, termcat.term.ldelim.call(null, new cljs.core.Keyword(null, "if-branch", "if-branch", 1784671172)), termcat.term.fragmentcat.call(null, termcat.rewrite.unwrap.call(null, t6)), termcat.term.rdelim.call(null, new cljs.core.Keyword(null, "if-branch", "if-branch", 1784671172))) : t6], null)
                                ;
                              } else {
                                return new cljs.core.PersistentVector(null, 6, 5, cljs.core.PersistentVector.EMPTY_NODE, [null, t1, termcat.util.lambda.fun_call_head.call(null, [cljs.core.str(termcat.term.payload.call(null, t2)), cljs.core.str(termcat.term.payload.call(null, t3))].join("")), t4, t5, t6], null);
                              }
                            } else {
                              if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
                                throw cljs.core.match.backtrack;
                              } else {
                                return null;
                              }
                            }
                          } catch (e9184) {
                            if (e9184 instanceof Error) {
                              var e__4796__auto__ = e9184;
                              if (e__4796__auto__ === cljs.core.match.backtrack) {
                                throw cljs.core.match.backtrack;
                              } else {
                                throw e__4796__auto__;
                              }
                            } else {
                              if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
                                throw e9184;
                              } else {
                                return null;
                              }
                            }
                          }
                        } else {
                          if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
                            throw cljs.core.match.backtrack;
                          } else {
                            return null;
                          }
                        }
                      }
                    } catch (e9182) {
                      if (e9182 instanceof Error) {
                        var e__4796__auto__ = e9182;
                        if (e__4796__auto__ === cljs.core.match.backtrack) {
                          throw cljs.core.match.backtrack;
                        } else {
                          throw e__4796__auto__;
                        }
                      } else {
                        if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
                          throw e9182;
                        } else {
                          return null;
                        }
                      }
                    }
                  } else {
                    if (cljs.core.keyword_identical_QMARK_.call(null, ocr_9158_1__9165, new cljs.core.Keyword(null, "arg", "arg", 1014001096))) {
                      try {
                        var ocr_9158_2__9166 = cljs.core.nth.call(null, ocr_9158, 2);
                        if (cljs.core.keyword_identical_QMARK_.call(null, ocr_9158_2__9166, new cljs.core.Keyword(null, "period", "period", 4317145395))) {
                          try {
                            var ocr_9158_3__9167 = cljs.core.nth.call(null, ocr_9158, 3);
                            if (cljs.core.keyword_identical_QMARK_.call(null, ocr_9158_3__9167, new cljs.core.Keyword(null, "default", "default", 2558708147))) {
                              if (cljs.core._EQ_.call(null, termcat.term.tt.call(null, t2), new cljs.core.Keyword(null, "period", "period", 4317145395)) && cljs.core._EQ_.call(null, termcat.term.payload.call(null, t3), "if")) {
                                return new cljs.core.PersistentVector(null, 5, 5, cljs.core.PersistentVector.EMPTY_NODE, [t1, termcat.term.token.call(null, new cljs.core.Keyword(null, "fun", "fun", 1014006001), termcat.util.lambda.curry_fun.call(null, termcat.rules.bind.if_fn, 3)), t4, termcat.term.block_QMARK_.call(null, t5) ? termcat.term.block.call(null, termcat.term.ldelim.call(null, new cljs.core.Keyword(null, "if-branch", "if-branch", 1784671172)), termcat.term.fragmentcat.call(null, termcat.rewrite.unwrap.call(null, 
                                t5)), termcat.term.rdelim.call(null, new cljs.core.Keyword(null, "if-branch", "if-branch", 1784671172))) : t5, termcat.term.block_QMARK_.call(null, t6) ? termcat.term.block.call(null, termcat.term.ldelim.call(null, new cljs.core.Keyword(null, "if-branch", "if-branch", 1784671172)), termcat.term.fragmentcat.call(null, termcat.rewrite.unwrap.call(null, t6)), termcat.term.rdelim.call(null, new cljs.core.Keyword(null, "if-branch", "if-branch", 1784671172))) : t6], null)
                                ;
                              } else {
                                return new cljs.core.PersistentVector(null, 6, 5, cljs.core.PersistentVector.EMPTY_NODE, [null, t1, termcat.util.lambda.fun_call_head.call(null, [cljs.core.str(termcat.term.payload.call(null, t2)), cljs.core.str(termcat.term.payload.call(null, t3))].join("")), t4, t5, t6], null);
                              }
                            } else {
                              if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
                                throw cljs.core.match.backtrack;
                              } else {
                                return null;
                              }
                            }
                          } catch (e9186) {
                            if (e9186 instanceof Error) {
                              var e__4796__auto__ = e9186;
                              if (e__4796__auto__ === cljs.core.match.backtrack) {
                                throw cljs.core.match.backtrack;
                              } else {
                                throw e__4796__auto__;
                              }
                            } else {
                              if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
                                throw e9186;
                              } else {
                                return null;
                              }
                            }
                          }
                        } else {
                          if (cljs.core.keyword_identical_QMARK_.call(null, ocr_9158_2__9166, new cljs.core.Keyword(null, "colon", "colon", 1108746961))) {
                            try {
                              var ocr_9158_3__9167 = cljs.core.nth.call(null, ocr_9158, 3);
                              if (cljs.core.keyword_identical_QMARK_.call(null, ocr_9158_3__9167, new cljs.core.Keyword(null, "default", "default", 2558708147))) {
                                if (cljs.core._EQ_.call(null, termcat.term.tt.call(null, t2), new cljs.core.Keyword(null, "period", "period", 4317145395)) && cljs.core._EQ_.call(null, termcat.term.payload.call(null, t3), "if")) {
                                  return new cljs.core.PersistentVector(null, 5, 5, cljs.core.PersistentVector.EMPTY_NODE, [t1, termcat.term.token.call(null, new cljs.core.Keyword(null, "fun", "fun", 1014006001), termcat.util.lambda.curry_fun.call(null, termcat.rules.bind.if_fn, 3)), t4, termcat.term.block_QMARK_.call(null, t5) ? termcat.term.block.call(null, termcat.term.ldelim.call(null, new cljs.core.Keyword(null, "if-branch", "if-branch", 1784671172)), termcat.term.fragmentcat.call(null, termcat.rewrite.unwrap.call(null, 
                                  t5)), termcat.term.rdelim.call(null, new cljs.core.Keyword(null, "if-branch", "if-branch", 1784671172))) : t5, termcat.term.block_QMARK_.call(null, t6) ? termcat.term.block.call(null, termcat.term.ldelim.call(null, new cljs.core.Keyword(null, "if-branch", "if-branch", 1784671172)), termcat.term.fragmentcat.call(null, termcat.rewrite.unwrap.call(null, t6)), termcat.term.rdelim.call(null, new cljs.core.Keyword(null, "if-branch", "if-branch", 1784671172))) : t6], null)
                                  ;
                                } else {
                                  return new cljs.core.PersistentVector(null, 6, 5, cljs.core.PersistentVector.EMPTY_NODE, [null, t1, termcat.util.lambda.fun_call_head.call(null, [cljs.core.str(termcat.term.payload.call(null, t2)), cljs.core.str(termcat.term.payload.call(null, t3))].join("")), t4, t5, t6], null);
                                }
                              } else {
                                if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
                                  throw cljs.core.match.backtrack;
                                } else {
                                  return null;
                                }
                              }
                            } catch (e9187) {
                              if (e9187 instanceof Error) {
                                var e__4796__auto__ = e9187;
                                if (e__4796__auto__ === cljs.core.match.backtrack) {
                                  throw cljs.core.match.backtrack;
                                } else {
                                  throw e__4796__auto__;
                                }
                              } else {
                                if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
                                  throw e9187;
                                } else {
                                  return null;
                                }
                              }
                            }
                          } else {
                            if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
                              throw cljs.core.match.backtrack;
                            } else {
                              return null;
                            }
                          }
                        }
                      } catch (e9185) {
                        if (e9185 instanceof Error) {
                          var e__4796__auto__ = e9185;
                          if (e__4796__auto__ === cljs.core.match.backtrack) {
                            throw cljs.core.match.backtrack;
                          } else {
                            throw e__4796__auto__;
                          }
                        } else {
                          if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
                            throw e9185;
                          } else {
                            return null;
                          }
                        }
                      }
                    } else {
                      if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
                        throw cljs.core.match.backtrack;
                      } else {
                        return null;
                      }
                    }
                  }
                }
              }
            }
          } catch (e9172) {
            if (e9172 instanceof Error) {
              var e__4796__auto__ = e9172;
              if (e__4796__auto__ === cljs.core.match.backtrack) {
                throw cljs.core.match.backtrack;
              } else {
                throw e__4796__auto__;
              }
            } else {
              if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
                throw e9172;
              } else {
                return null;
              }
            }
          }
        } else {
          if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
            throw cljs.core.match.backtrack;
          } else {
            return null;
          }
        }
      } catch (e9171) {
        if (e9171 instanceof Error) {
          var e__4796__auto__ = e9171;
          if (e__4796__auto__ === cljs.core.match.backtrack) {
            return null;
          } else {
            throw e__4796__auto__;
          }
        } else {
          if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
            throw e9171;
          } else {
            return null;
          }
        }
      }
    }();
    if (cljs.core.truth_(temp__4090__auto__)) {
      var r__6471__auto__ = temp__4090__auto__;
      return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [function() {
        var or__3403__auto__ = cljs.core.first.call(null, r__6471__auto__);
        if (cljs.core.truth_(or__3403__auto__)) {
          return or__3403__auto__;
        } else {
          return state__6468__auto__;
        }
      }(), cljs.core.concat.call(null, cljs.core.next.call(null, r__6471__auto__), cljs.core.drop.call(null, 6, input__6469__auto__))], null);
    } else {
      return null;
    }
  };
  G__9188 = function(state__6468__auto__, input__6469__auto__) {
    switch(arguments.length) {
      case 0:
        return G__9188__0.call(this);
      case 2:
        return G__9188__2.call(this, state__6468__auto__, input__6469__auto__);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  return G__9188;
}());
goog.provide("termcat.rules.tokenize");
goog.require("cljs.core");
goog.require("termcat.term");
goog.require("termcat.term");
goog.require("cljs.core.match");
termcat.rules.tokenize.letters = new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 52, ["A", null, "a", null, "B", null, "b", null, "C", null, "c", null, "D", null, "d", null, "E", null, "e", null, "F", null, "f", null, "G", null, "g", null, "H", null, "h", null, "I", null, "i", null, "J", null, "j", null, "K", null, "k", null, "L", null, "l", null, "M", null, "m", null, "N", null, "n", null, "O", null, "o", null, "P", null, "p", null, "Q", null, "q", null, "R", null, "r", 
null, "S", null, "s", null, "T", null, "t", null, "U", null, "u", null, "V", null, "v", null, "W", null, "w", null, "X", null, "x", null, "Y", null, "y", null, "Z", null, "z", null], null), null);
termcat.rules.tokenize.letter_QMARK_ = function letter_QMARK_(x) {
  return cljs.core.contains_QMARK_.call(null, termcat.rules.tokenize.letters, x);
};
termcat.rules.tokenize.digit_QMARK_ = function digit_QMARK_(x) {
  return cljs.core.contains_QMARK_.call(null, new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 10, ["0", null, "1", null, "2", null, "3", null, "4", null, "5", null, "6", null, "7", null, "8", null, "9", null], null), null), x);
};
termcat.rules.tokenize.hexdigit_QMARK_ = function hexdigit_QMARK_(x) {
  return cljs.core.contains_QMARK_.call(null, new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 20, ["A", null, "a", null, "B", null, "b", null, "C", null, "c", null, "D", null, "d", null, "E", null, "e", null, "0", null, "1", null, "2", null, "3", null, "4", null, "5", null, "6", null, "7", null, "8", null, "9", null], null), null), x);
};
termcat.rules.tokenize.escape_html = function() {
  var escape_html = null;
  var escape_html__0 = function() {
    return new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "acc", "acc", 1014000627), cljs.core.PersistentVector.EMPTY], null);
  };
  var escape_html__2 = function(p__10042, tok) {
    var vec__10105 = p__10042;
    var state = cljs.core.nth.call(null, vec__10105, 0, null);
    var result = cljs.core.nth.call(null, vec__10105, 1, null);
    var segue = function segue(new_stage) {
      return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "stage", "stage", 1123661424), new_stage, new cljs.core.Keyword(null, "acc", "acc", 1014000627), cljs.core.conj.call(null, (new cljs.core.Keyword(null, "acc", "acc", 1014000627)).cljs$core$IFn$_invoke$arity$1(state), tok)], null), result], null);
    };
    var accept = function accept(whitespace_QMARK_) {
      return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "acc", "acc", 1014000627), cljs.core.PersistentVector.EMPTY], null), function() {
        var r = cljs.core.map.call(null, cljs.core.partial.call(null, termcat.term.token, new cljs.core.Keyword(null, "html", "html", 1017117469)), cljs.core.reduce.call(null, cljs.core.str, cljs.core.map.call(null, termcat.term.payload, cljs.core.conj.call(null, (new cljs.core.Keyword(null, "acc", "acc", 1014000627)).cljs$core$IFn$_invoke$arity$1(state), tok))));
        if (cljs.core.truth_(whitespace_QMARK_)) {
          return cljs.core.conj.call(null, cljs.core.into.call(null, cljs.core.conj.call(null, result, termcat.term.token.call(null, new cljs.core.Keyword(null, "whitespace", "whitespace", 1290815983))), r), termcat.term.token.call(null, new cljs.core.Keyword(null, "whitespace", "whitespace", 1290815983)));
        } else {
          return cljs.core.into.call(null, result, r);
        }
      }()], null);
    };
    var reject = function reject() {
      return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "acc", "acc", 1014000627), cljs.core.PersistentVector.EMPTY], null), cljs.core.conj.call(null, cljs.core.into.call(null, result, (new cljs.core.Keyword(null, "acc", "acc", 1014000627)).cljs$core$IFn$_invoke$arity$1(state)), tok)], null);
    };
    var ocr_10106 = (new cljs.core.Keyword(null, "stage", "stage", 1123661424)).cljs$core$IFn$_invoke$arity$1(state);
    var ocr_10107 = termcat.term.payload.call(null, tok);
    try {
      if (ocr_10106 === null) {
        try {
          if (cljs.core._EQ_.call(null, ocr_10107, "\\")) {
            return segue.call(null, new cljs.core.Keyword(null, "escape", "escape", 4014699507));
          } else {
            if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
              throw cljs.core.match.backtrack;
            } else {
              return null;
            }
          }
        } catch (e10166) {
          if (e10166 instanceof Error) {
            var e__4796__auto__ = e10166;
            if (e__4796__auto__ === cljs.core.match.backtrack) {
              throw cljs.core.match.backtrack;
            } else {
              throw e__4796__auto__;
            }
          } else {
            if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
              throw e10166;
            } else {
              return null;
            }
          }
        }
      } else {
        if (cljs.core.keyword_identical_QMARK_.call(null, ocr_10106, new cljs.core.Keyword(null, "escape", "escape", 4014699507))) {
          return reject.call(null);
        } else {
          if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
            throw cljs.core.match.backtrack;
          } else {
            return null;
          }
        }
      }
    } catch (e10118) {
      if (e10118 instanceof Error) {
        var e__4796__auto__ = e10118;
        if (e__4796__auto__ === cljs.core.match.backtrack) {
          try {
            if (ocr_10106 === null) {
              try {
                if (cljs.core._EQ_.call(null, ocr_10107, "\x26")) {
                  return segue.call(null, new cljs.core.Keyword(null, "entity", "entity", 4010596181));
                } else {
                  if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
                    throw cljs.core.match.backtrack;
                  } else {
                    return null;
                  }
                }
              } catch (e10163) {
                if (e10163 instanceof Error) {
                  var e__4796__auto____$1 = e10163;
                  if (e__4796__auto____$1 === cljs.core.match.backtrack) {
                    throw cljs.core.match.backtrack;
                  } else {
                    throw e__4796__auto____$1;
                  }
                } else {
                  if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
                    throw e10163;
                  } else {
                    return null;
                  }
                }
              }
            } else {
              if (cljs.core.keyword_identical_QMARK_.call(null, ocr_10106, new cljs.core.Keyword(null, "entity", "entity", 4010596181))) {
                try {
                  if (termcat.rules.tokenize.letter_QMARK_.call(null, ocr_10107)) {
                    return segue.call(null, new cljs.core.Keyword(null, "named-entity", "named-entity", 4475095145));
                  } else {
                    if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
                      throw cljs.core.match.backtrack;
                    } else {
                      return null;
                    }
                  }
                } catch (e10164) {
                  if (e10164 instanceof Error) {
                    var e__4796__auto____$1 = e10164;
                    if (e__4796__auto____$1 === cljs.core.match.backtrack) {
                      throw cljs.core.match.backtrack;
                    } else {
                      throw e__4796__auto____$1;
                    }
                  } else {
                    if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
                      throw e10164;
                    } else {
                      return null;
                    }
                  }
                }
              } else {
                if (cljs.core.keyword_identical_QMARK_.call(null, ocr_10106, new cljs.core.Keyword(null, "named-entity", "named-entity", 4475095145))) {
                  try {
                    if (termcat.rules.tokenize.letter_QMARK_.call(null, ocr_10107)) {
                      return segue.call(null, new cljs.core.Keyword(null, "named-entity", "named-entity", 4475095145));
                    } else {
                      if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
                        throw cljs.core.match.backtrack;
                      } else {
                        return null;
                      }
                    }
                  } catch (e10165) {
                    if (e10165 instanceof Error) {
                      var e__4796__auto____$1 = e10165;
                      if (e__4796__auto____$1 === cljs.core.match.backtrack) {
                        throw cljs.core.match.backtrack;
                      } else {
                        throw e__4796__auto____$1;
                      }
                    } else {
                      if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
                        throw e10165;
                      } else {
                        return null;
                      }
                    }
                  }
                } else {
                  if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
                    throw cljs.core.match.backtrack;
                  } else {
                    return null;
                  }
                }
              }
            }
          } catch (e10119) {
            if (e10119 instanceof Error) {
              var e__4796__auto____$1 = e10119;
              if (e__4796__auto____$1 === cljs.core.match.backtrack) {
                try {
                  if (cljs.core.keyword_identical_QMARK_.call(null, ocr_10106, new cljs.core.Keyword(null, "entity", "entity", 4010596181))) {
                    try {
                      if (cljs.core._EQ_.call(null, ocr_10107, "#")) {
                        return segue.call(null, new cljs.core.Keyword(null, "maybe-num-entity", "maybe-num-entity", 2378162689));
                      } else {
                        if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
                          throw cljs.core.match.backtrack;
                        } else {
                          return null;
                        }
                      }
                    } catch (e10161) {
                      if (e10161 instanceof Error) {
                        var e__4796__auto____$2 = e10161;
                        if (e__4796__auto____$2 === cljs.core.match.backtrack) {
                          throw cljs.core.match.backtrack;
                        } else {
                          throw e__4796__auto____$2;
                        }
                      } else {
                        if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
                          throw e10161;
                        } else {
                          return null;
                        }
                      }
                    }
                  } else {
                    if (cljs.core.keyword_identical_QMARK_.call(null, ocr_10106, new cljs.core.Keyword(null, "maybe-num-entity", "maybe-num-entity", 2378162689))) {
                      try {
                        if (cljs.core._EQ_.call(null, ocr_10107, "x")) {
                          return segue.call(null, new cljs.core.Keyword(null, "maybe-hex-num-entity", "maybe-hex-num-entity", 4128211315));
                        } else {
                          if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
                            throw cljs.core.match.backtrack;
                          } else {
                            return null;
                          }
                        }
                      } catch (e10162) {
                        if (e10162 instanceof Error) {
                          var e__4796__auto____$2 = e10162;
                          if (e__4796__auto____$2 === cljs.core.match.backtrack) {
                            throw cljs.core.match.backtrack;
                          } else {
                            throw e__4796__auto____$2;
                          }
                        } else {
                          if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
                            throw e10162;
                          } else {
                            return null;
                          }
                        }
                      }
                    } else {
                      if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
                        throw cljs.core.match.backtrack;
                      } else {
                        return null;
                      }
                    }
                  }
                } catch (e10120) {
                  if (e10120 instanceof Error) {
                    var e__4796__auto____$2 = e10120;
                    if (e__4796__auto____$2 === cljs.core.match.backtrack) {
                      try {
                        if (cljs.core.keyword_identical_QMARK_.call(null, ocr_10106, new cljs.core.Keyword(null, "maybe-num-entity", "maybe-num-entity", 2378162689))) {
                          try {
                            if (termcat.rules.tokenize.digit_QMARK_.call(null, ocr_10107)) {
                              return segue.call(null, new cljs.core.Keyword(null, "dec-num-entity", "dec-num-entity", 2876597799));
                            } else {
                              if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
                                throw cljs.core.match.backtrack;
                              } else {
                                return null;
                              }
                            }
                          } catch (e10156) {
                            if (e10156 instanceof Error) {
                              var e__4796__auto____$3 = e10156;
                              if (e__4796__auto____$3 === cljs.core.match.backtrack) {
                                throw cljs.core.match.backtrack;
                              } else {
                                throw e__4796__auto____$3;
                              }
                            } else {
                              if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
                                throw e10156;
                              } else {
                                return null;
                              }
                            }
                          }
                        } else {
                          if (cljs.core.keyword_identical_QMARK_.call(null, ocr_10106, new cljs.core.Keyword(null, "dec-num-entity", "dec-num-entity", 2876597799))) {
                            try {
                              if (termcat.rules.tokenize.digit_QMARK_.call(null, ocr_10107)) {
                                return segue.call(null, new cljs.core.Keyword(null, "dec-num-entity", "dec-num-entity", 2876597799));
                              } else {
                                if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
                                  throw cljs.core.match.backtrack;
                                } else {
                                  return null;
                                }
                              }
                            } catch (e10157) {
                              if (e10157 instanceof Error) {
                                var e__4796__auto____$3 = e10157;
                                if (e__4796__auto____$3 === cljs.core.match.backtrack) {
                                  throw cljs.core.match.backtrack;
                                } else {
                                  throw e__4796__auto____$3;
                                }
                              } else {
                                if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
                                  throw e10157;
                                } else {
                                  return null;
                                }
                              }
                            }
                          } else {
                            if (cljs.core.keyword_identical_QMARK_.call(null, ocr_10106, new cljs.core.Keyword(null, "maybe-hex-num-entity", "maybe-hex-num-entity", 4128211315))) {
                              try {
                                if (termcat.rules.tokenize.hexdigit_QMARK_.call(null, ocr_10107)) {
                                  return segue.call(null, new cljs.core.Keyword(null, "hex-num-entity", "hex-num-entity", 3565100398));
                                } else {
                                  if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
                                    throw cljs.core.match.backtrack;
                                  } else {
                                    return null;
                                  }
                                }
                              } catch (e10158) {
                                if (e10158 instanceof Error) {
                                  var e__4796__auto____$3 = e10158;
                                  if (e__4796__auto____$3 === cljs.core.match.backtrack) {
                                    throw cljs.core.match.backtrack;
                                  } else {
                                    throw e__4796__auto____$3;
                                  }
                                } else {
                                  if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
                                    throw e10158;
                                  } else {
                                    return null;
                                  }
                                }
                              }
                            } else {
                              if (cljs.core.keyword_identical_QMARK_.call(null, ocr_10106, new cljs.core.Keyword(null, "hex-num-entity", "hex-num-entity", 3565100398))) {
                                try {
                                  if (termcat.rules.tokenize.hexdigit_QMARK_.call(null, ocr_10107)) {
                                    return segue.call(null, new cljs.core.Keyword(null, "hex-num-entity", "hex-num-entity", 3565100398));
                                  } else {
                                    if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
                                      throw cljs.core.match.backtrack;
                                    } else {
                                      return null;
                                    }
                                  }
                                } catch (e10159) {
                                  if (e10159 instanceof Error) {
                                    var e__4796__auto____$3 = e10159;
                                    if (e__4796__auto____$3 === cljs.core.match.backtrack) {
                                      throw cljs.core.match.backtrack;
                                    } else {
                                      throw e__4796__auto____$3;
                                    }
                                  } else {
                                    if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
                                      throw e10159;
                                    } else {
                                      return null;
                                    }
                                  }
                                }
                              } else {
                                if (cljs.core.keyword_identical_QMARK_.call(null, ocr_10106, new cljs.core.Keyword(null, "named-entity", "named-entity", 4475095145))) {
                                  try {
                                    if (cljs.core._EQ_.call(null, ocr_10107, ";")) {
                                      return accept.call(null, false);
                                    } else {
                                      if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
                                        throw cljs.core.match.backtrack;
                                      } else {
                                        return null;
                                      }
                                    }
                                  } catch (e10160) {
                                    if (e10160 instanceof Error) {
                                      var e__4796__auto____$3 = e10160;
                                      if (e__4796__auto____$3 === cljs.core.match.backtrack) {
                                        throw cljs.core.match.backtrack;
                                      } else {
                                        throw e__4796__auto____$3;
                                      }
                                    } else {
                                      if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
                                        throw e10160;
                                      } else {
                                        return null;
                                      }
                                    }
                                  }
                                } else {
                                  if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
                                    throw cljs.core.match.backtrack;
                                  } else {
                                    return null;
                                  }
                                }
                              }
                            }
                          }
                        }
                      } catch (e10121) {
                        if (e10121 instanceof Error) {
                          var e__4796__auto____$3 = e10121;
                          if (e__4796__auto____$3 === cljs.core.match.backtrack) {
                            try {
                              if (cljs.core.keyword_identical_QMARK_.call(null, ocr_10106, new cljs.core.Keyword(null, "dec-num-entity", "dec-num-entity", 2876597799))) {
                                try {
                                  if (cljs.core._EQ_.call(null, ocr_10107, ";")) {
                                    return accept.call(null, false);
                                  } else {
                                    if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
                                      throw cljs.core.match.backtrack;
                                    } else {
                                      return null;
                                    }
                                  }
                                } catch (e10152) {
                                  if (e10152 instanceof Error) {
                                    var e__4796__auto____$4 = e10152;
                                    if (e__4796__auto____$4 === cljs.core.match.backtrack) {
                                      throw cljs.core.match.backtrack;
                                    } else {
                                      throw e__4796__auto____$4;
                                    }
                                  } else {
                                    if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
                                      throw e10152;
                                    } else {
                                      return null;
                                    }
                                  }
                                }
                              } else {
                                if (cljs.core.keyword_identical_QMARK_.call(null, ocr_10106, new cljs.core.Keyword(null, "hex-num-entity", "hex-num-entity", 3565100398))) {
                                  try {
                                    if (cljs.core._EQ_.call(null, ocr_10107, ";")) {
                                      return accept.call(null, false);
                                    } else {
                                      if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
                                        throw cljs.core.match.backtrack;
                                      } else {
                                        return null;
                                      }
                                    }
                                  } catch (e10153) {
                                    if (e10153 instanceof Error) {
                                      var e__4796__auto____$4 = e10153;
                                      if (e__4796__auto____$4 === cljs.core.match.backtrack) {
                                        throw cljs.core.match.backtrack;
                                      } else {
                                        throw e__4796__auto____$4;
                                      }
                                    } else {
                                      if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
                                        throw e10153;
                                      } else {
                                        return null;
                                      }
                                    }
                                  }
                                } else {
                                  if (ocr_10106 === null) {
                                    try {
                                      if (cljs.core._EQ_.call(null, ocr_10107, "\x3c")) {
                                        return segue.call(null, new cljs.core.Keyword(null, "before-tag-name", "before-tag-name", 2880946910));
                                      } else {
                                        if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
                                          throw cljs.core.match.backtrack;
                                        } else {
                                          return null;
                                        }
                                      }
                                    } catch (e10154) {
                                      if (e10154 instanceof Error) {
                                        var e__4796__auto____$4 = e10154;
                                        if (e__4796__auto____$4 === cljs.core.match.backtrack) {
                                          throw cljs.core.match.backtrack;
                                        } else {
                                          throw e__4796__auto____$4;
                                        }
                                      } else {
                                        if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
                                          throw e10154;
                                        } else {
                                          return null;
                                        }
                                      }
                                    }
                                  } else {
                                    if (cljs.core.keyword_identical_QMARK_.call(null, ocr_10106, new cljs.core.Keyword(null, "before-tag-name", "before-tag-name", 2880946910))) {
                                      try {
                                        if (cljs.core._EQ_.call(null, ocr_10107, "/")) {
                                          return segue.call(null, new cljs.core.Keyword(null, "maybe-in-tag-name", "maybe-in-tag-name", 1504219667));
                                        } else {
                                          if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
                                            throw cljs.core.match.backtrack;
                                          } else {
                                            return null;
                                          }
                                        }
                                      } catch (e10155) {
                                        if (e10155 instanceof Error) {
                                          var e__4796__auto____$4 = e10155;
                                          if (e__4796__auto____$4 === cljs.core.match.backtrack) {
                                            throw cljs.core.match.backtrack;
                                          } else {
                                            throw e__4796__auto____$4;
                                          }
                                        } else {
                                          if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
                                            throw e10155;
                                          } else {
                                            return null;
                                          }
                                        }
                                      }
                                    } else {
                                      if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
                                        throw cljs.core.match.backtrack;
                                      } else {
                                        return null;
                                      }
                                    }
                                  }
                                }
                              }
                            } catch (e10122) {
                              if (e10122 instanceof Error) {
                                var e__4796__auto____$4 = e10122;
                                if (e__4796__auto____$4 === cljs.core.match.backtrack) {
                                  try {
                                    if (cljs.core.keyword_identical_QMARK_.call(null, ocr_10106, new cljs.core.Keyword(null, "before-tag-name", "before-tag-name", 2880946910))) {
                                      try {
                                        if (termcat.rules.tokenize.letter_QMARK_.call(null, ocr_10107)) {
                                          return segue.call(null, new cljs.core.Keyword(null, "in-tag-name", "in-tag-name", 629665784));
                                        } else {
                                          if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
                                            throw cljs.core.match.backtrack;
                                          } else {
                                            return null;
                                          }
                                        }
                                      } catch (e10149) {
                                        if (e10149 instanceof Error) {
                                          var e__4796__auto____$5 = e10149;
                                          if (e__4796__auto____$5 === cljs.core.match.backtrack) {
                                            throw cljs.core.match.backtrack;
                                          } else {
                                            throw e__4796__auto____$5;
                                          }
                                        } else {
                                          if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
                                            throw e10149;
                                          } else {
                                            return null;
                                          }
                                        }
                                      }
                                    } else {
                                      if (cljs.core.keyword_identical_QMARK_.call(null, ocr_10106, new cljs.core.Keyword(null, "maybe-in-tag-name", "maybe-in-tag-name", 1504219667))) {
                                        try {
                                          if (termcat.rules.tokenize.letter_QMARK_.call(null, ocr_10107)) {
                                            return segue.call(null, new cljs.core.Keyword(null, "in-tag-name", "in-tag-name", 629665784));
                                          } else {
                                            if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
                                              throw cljs.core.match.backtrack;
                                            } else {
                                              return null;
                                            }
                                          }
                                        } catch (e10150) {
                                          if (e10150 instanceof Error) {
                                            var e__4796__auto____$5 = e10150;
                                            if (e__4796__auto____$5 === cljs.core.match.backtrack) {
                                              throw cljs.core.match.backtrack;
                                            } else {
                                              throw e__4796__auto____$5;
                                            }
                                          } else {
                                            if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
                                              throw e10150;
                                            } else {
                                              return null;
                                            }
                                          }
                                        }
                                      } else {
                                        if (cljs.core.keyword_identical_QMARK_.call(null, ocr_10106, new cljs.core.Keyword(null, "in-tag-name", "in-tag-name", 629665784))) {
                                          try {
                                            if (termcat.rules.tokenize.letter_QMARK_.call(null, ocr_10107)) {
                                              return segue.call(null, new cljs.core.Keyword(null, "in-tag-name", "in-tag-name", 629665784));
                                            } else {
                                              if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
                                                throw cljs.core.match.backtrack;
                                              } else {
                                                return null;
                                              }
                                            }
                                          } catch (e10151) {
                                            if (e10151 instanceof Error) {
                                              var e__4796__auto____$5 = e10151;
                                              if (e__4796__auto____$5 === cljs.core.match.backtrack) {
                                                throw cljs.core.match.backtrack;
                                              } else {
                                                throw e__4796__auto____$5;
                                              }
                                            } else {
                                              if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
                                                throw e10151;
                                              } else {
                                                return null;
                                              }
                                            }
                                          }
                                        } else {
                                          if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
                                            throw cljs.core.match.backtrack;
                                          } else {
                                            return null;
                                          }
                                        }
                                      }
                                    }
                                  } catch (e10123) {
                                    if (e10123 instanceof Error) {
                                      var e__4796__auto____$5 = e10123;
                                      if (e__4796__auto____$5 === cljs.core.match.backtrack) {
                                        try {
                                          if (cljs.core.keyword_identical_QMARK_.call(null, ocr_10106, new cljs.core.Keyword(null, "in-tag-name", "in-tag-name", 629665784))) {
                                            try {
                                              if (cljs.core._EQ_.call(null, ocr_10107, "-")) {
                                                return segue.call(null, new cljs.core.Keyword(null, "maybe-in-tag-name", "maybe-in-tag-name", 1504219667));
                                              } else {
                                                if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
                                                  throw cljs.core.match.backtrack;
                                                } else {
                                                  return null;
                                                }
                                              }
                                            } catch (e10148) {
                                              if (e10148 instanceof Error) {
                                                var e__4796__auto____$6 = e10148;
                                                if (e__4796__auto____$6 === cljs.core.match.backtrack) {
                                                  throw cljs.core.match.backtrack;
                                                } else {
                                                  throw e__4796__auto____$6;
                                                }
                                              } else {
                                                if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
                                                  throw e10148;
                                                } else {
                                                  return null;
                                                }
                                              }
                                            }
                                          } else {
                                            if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
                                              throw cljs.core.match.backtrack;
                                            } else {
                                              return null;
                                            }
                                          }
                                        } catch (e10124) {
                                          if (e10124 instanceof Error) {
                                            var e__4796__auto____$6 = e10124;
                                            if (e__4796__auto____$6 === cljs.core.match.backtrack) {
                                              try {
                                                if (cljs.core.keyword_identical_QMARK_.call(null, ocr_10106, new cljs.core.Keyword(null, "in-tag-name", "in-tag-name", 629665784))) {
                                                  try {
                                                    if (cljs.core._EQ_.call(null, ocr_10107, " ")) {
                                                      return segue.call(null, new cljs.core.Keyword(null, "after-tag-name", "after-tag-name", 3168261409));
                                                    } else {
                                                      if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
                                                        throw cljs.core.match.backtrack;
                                                      } else {
                                                        return null;
                                                      }
                                                    }
                                                  } catch (e10145) {
                                                    if (e10145 instanceof Error) {
                                                      var e__4796__auto____$7 = e10145;
                                                      if (e__4796__auto____$7 === cljs.core.match.backtrack) {
                                                        throw cljs.core.match.backtrack;
                                                      } else {
                                                        throw e__4796__auto____$7;
                                                      }
                                                    } else {
                                                      if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
                                                        throw e10145;
                                                      } else {
                                                        return null;
                                                      }
                                                    }
                                                  }
                                                } else {
                                                  if (cljs.core.keyword_identical_QMARK_.call(null, ocr_10106, new cljs.core.Keyword(null, "after-tag-name", "after-tag-name", 3168261409))) {
                                                    try {
                                                      if (cljs.core._EQ_.call(null, ocr_10107, " ")) {
                                                        return segue.call(null, new cljs.core.Keyword(null, "after-tag-name", "after-tag-name", 3168261409));
                                                      } else {
                                                        if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
                                                          throw cljs.core.match.backtrack;
                                                        } else {
                                                          return null;
                                                        }
                                                      }
                                                    } catch (e10146) {
                                                      if (e10146 instanceof Error) {
                                                        var e__4796__auto____$7 = e10146;
                                                        if (e__4796__auto____$7 === cljs.core.match.backtrack) {
                                                          throw cljs.core.match.backtrack;
                                                        } else {
                                                          throw e__4796__auto____$7;
                                                        }
                                                      } else {
                                                        if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
                                                          throw e10146;
                                                        } else {
                                                          return null;
                                                        }
                                                      }
                                                    }
                                                  } else {
                                                    if (cljs.core.keyword_identical_QMARK_.call(null, ocr_10106, new cljs.core.Keyword(null, "after-val", "after-val", 2032002850))) {
                                                      try {
                                                        if (cljs.core._EQ_.call(null, ocr_10107, " ")) {
                                                          return segue.call(null, new cljs.core.Keyword(null, "after-tag-name", "after-tag-name", 3168261409));
                                                        } else {
                                                          if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
                                                            throw cljs.core.match.backtrack;
                                                          } else {
                                                            return null;
                                                          }
                                                        }
                                                      } catch (e10147) {
                                                        if (e10147 instanceof Error) {
                                                          var e__4796__auto____$7 = e10147;
                                                          if (e__4796__auto____$7 === cljs.core.match.backtrack) {
                                                            throw cljs.core.match.backtrack;
                                                          } else {
                                                            throw e__4796__auto____$7;
                                                          }
                                                        } else {
                                                          if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
                                                            throw e10147;
                                                          } else {
                                                            return null;
                                                          }
                                                        }
                                                      }
                                                    } else {
                                                      if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
                                                        throw cljs.core.match.backtrack;
                                                      } else {
                                                        return null;
                                                      }
                                                    }
                                                  }
                                                }
                                              } catch (e10125) {
                                                if (e10125 instanceof Error) {
                                                  var e__4796__auto____$7 = e10125;
                                                  if (e__4796__auto____$7 === cljs.core.match.backtrack) {
                                                    try {
                                                      if (cljs.core.keyword_identical_QMARK_.call(null, ocr_10106, new cljs.core.Keyword(null, "after-tag-name", "after-tag-name", 3168261409))) {
                                                        try {
                                                          if (termcat.rules.tokenize.letter_QMARK_.call(null, ocr_10107)) {
                                                            return segue.call(null, new cljs.core.Keyword(null, "in-attr-name", "in-attr-name", 1291372977));
                                                          } else {
                                                            if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
                                                              throw cljs.core.match.backtrack;
                                                            } else {
                                                              return null;
                                                            }
                                                          }
                                                        } catch (e10142) {
                                                          if (e10142 instanceof Error) {
                                                            var e__4796__auto____$8 = e10142;
                                                            if (e__4796__auto____$8 === cljs.core.match.backtrack) {
                                                              throw cljs.core.match.backtrack;
                                                            } else {
                                                              throw e__4796__auto____$8;
                                                            }
                                                          } else {
                                                            if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
                                                              throw e10142;
                                                            } else {
                                                              return null;
                                                            }
                                                          }
                                                        }
                                                      } else {
                                                        if (cljs.core.keyword_identical_QMARK_.call(null, ocr_10106, new cljs.core.Keyword(null, "maybe-in-attr-name", "maybe-in-attr-name", 2632739574))) {
                                                          try {
                                                            if (termcat.rules.tokenize.letter_QMARK_.call(null, ocr_10107)) {
                                                              return segue.call(null, new cljs.core.Keyword(null, "in-attr-name", "in-attr-name", 1291372977));
                                                            } else {
                                                              if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
                                                                throw cljs.core.match.backtrack;
                                                              } else {
                                                                return null;
                                                              }
                                                            }
                                                          } catch (e10143) {
                                                            if (e10143 instanceof Error) {
                                                              var e__4796__auto____$8 = e10143;
                                                              if (e__4796__auto____$8 === cljs.core.match.backtrack) {
                                                                throw cljs.core.match.backtrack;
                                                              } else {
                                                                throw e__4796__auto____$8;
                                                              }
                                                            } else {
                                                              if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
                                                                throw e10143;
                                                              } else {
                                                                return null;
                                                              }
                                                            }
                                                          }
                                                        } else {
                                                          if (cljs.core.keyword_identical_QMARK_.call(null, ocr_10106, new cljs.core.Keyword(null, "in-attr-name", "in-attr-name", 1291372977))) {
                                                            try {
                                                              if (termcat.rules.tokenize.letter_QMARK_.call(null, ocr_10107)) {
                                                                return segue.call(null, new cljs.core.Keyword(null, "in-attr-name", "in-attr-name", 1291372977));
                                                              } else {
                                                                if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
                                                                  throw cljs.core.match.backtrack;
                                                                } else {
                                                                  return null;
                                                                }
                                                              }
                                                            } catch (e10144) {
                                                              if (e10144 instanceof Error) {
                                                                var e__4796__auto____$8 = e10144;
                                                                if (e__4796__auto____$8 === cljs.core.match.backtrack) {
                                                                  throw cljs.core.match.backtrack;
                                                                } else {
                                                                  throw e__4796__auto____$8;
                                                                }
                                                              } else {
                                                                if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
                                                                  throw e10144;
                                                                } else {
                                                                  return null;
                                                                }
                                                              }
                                                            }
                                                          } else {
                                                            if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
                                                              throw cljs.core.match.backtrack;
                                                            } else {
                                                              return null;
                                                            }
                                                          }
                                                        }
                                                      }
                                                    } catch (e10126) {
                                                      if (e10126 instanceof Error) {
                                                        var e__4796__auto____$8 = e10126;
                                                        if (e__4796__auto____$8 === cljs.core.match.backtrack) {
                                                          try {
                                                            if (cljs.core.keyword_identical_QMARK_.call(null, ocr_10106, new cljs.core.Keyword(null, "in-attr-name", "in-attr-name", 1291372977))) {
                                                              try {
                                                                if (cljs.core._EQ_.call(null, ocr_10107, "-")) {
                                                                  return segue.call(null, new cljs.core.Keyword(null, "maybe-in-attr-name", "maybe-in-attr-name", 2632739574));
                                                                } else {
                                                                  if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
                                                                    throw cljs.core.match.backtrack;
                                                                  } else {
                                                                    return null;
                                                                  }
                                                                }
                                                              } catch (e10141) {
                                                                if (e10141 instanceof Error) {
                                                                  var e__4796__auto____$9 = e10141;
                                                                  if (e__4796__auto____$9 === cljs.core.match.backtrack) {
                                                                    throw cljs.core.match.backtrack;
                                                                  } else {
                                                                    throw e__4796__auto____$9;
                                                                  }
                                                                } else {
                                                                  if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
                                                                    throw e10141;
                                                                  } else {
                                                                    return null;
                                                                  }
                                                                }
                                                              }
                                                            } else {
                                                              if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
                                                                throw cljs.core.match.backtrack;
                                                              } else {
                                                                return null;
                                                              }
                                                            }
                                                          } catch (e10127) {
                                                            if (e10127 instanceof Error) {
                                                              var e__4796__auto____$9 = e10127;
                                                              if (e__4796__auto____$9 === cljs.core.match.backtrack) {
                                                                try {
                                                                  if (cljs.core.keyword_identical_QMARK_.call(null, ocr_10106, new cljs.core.Keyword(null, "in-attr-name", "in-attr-name", 1291372977))) {
                                                                    try {
                                                                      if (cljs.core._EQ_.call(null, ocr_10107, "\x3d")) {
                                                                        return segue.call(null, new cljs.core.Keyword(null, "before-val", "before-val", 1531287365));
                                                                      } else {
                                                                        if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
                                                                          throw cljs.core.match.backtrack;
                                                                        } else {
                                                                          return null;
                                                                        }
                                                                      }
                                                                    } catch (e10137) {
                                                                      if (e10137 instanceof Error) {
                                                                        var e__4796__auto____$10 = e10137;
                                                                        if (e__4796__auto____$10 === cljs.core.match.backtrack) {
                                                                          throw cljs.core.match.backtrack;
                                                                        } else {
                                                                          throw e__4796__auto____$10;
                                                                        }
                                                                      } else {
                                                                        if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
                                                                          throw e10137;
                                                                        } else {
                                                                          return null;
                                                                        }
                                                                      }
                                                                    }
                                                                  } else {
                                                                    if (cljs.core.keyword_identical_QMARK_.call(null, ocr_10106, new cljs.core.Keyword(null, "before-val", "before-val", 1531287365))) {
                                                                      try {
                                                                        if (termcat.rules.tokenize.letter_QMARK_.call(null, ocr_10107)) {
                                                                          return segue.call(null, new cljs.core.Keyword(null, "in-val", "in-val", 4123009515));
                                                                        } else {
                                                                          if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
                                                                            throw cljs.core.match.backtrack;
                                                                          } else {
                                                                            return null;
                                                                          }
                                                                        }
                                                                      } catch (e10138) {
                                                                        if (e10138 instanceof Error) {
                                                                          var e__4796__auto____$10 = e10138;
                                                                          if (e__4796__auto____$10 === cljs.core.match.backtrack) {
                                                                            throw cljs.core.match.backtrack;
                                                                          } else {
                                                                            throw e__4796__auto____$10;
                                                                          }
                                                                        } else {
                                                                          if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
                                                                            throw e10138;
                                                                          } else {
                                                                            return null;
                                                                          }
                                                                        }
                                                                      }
                                                                    } else {
                                                                      if (cljs.core.keyword_identical_QMARK_.call(null, ocr_10106, new cljs.core.Keyword(null, "maybe-in-val", "maybe-in-val", 675502832))) {
                                                                        try {
                                                                          if (termcat.rules.tokenize.letter_QMARK_.call(null, ocr_10107)) {
                                                                            return segue.call(null, new cljs.core.Keyword(null, "in-val", "in-val", 4123009515));
                                                                          } else {
                                                                            if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
                                                                              throw cljs.core.match.backtrack;
                                                                            } else {
                                                                              return null;
                                                                            }
                                                                          }
                                                                        } catch (e10139) {
                                                                          if (e10139 instanceof Error) {
                                                                            var e__4796__auto____$10 = e10139;
                                                                            if (e__4796__auto____$10 === cljs.core.match.backtrack) {
                                                                              throw cljs.core.match.backtrack;
                                                                            } else {
                                                                              throw e__4796__auto____$10;
                                                                            }
                                                                          } else {
                                                                            if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
                                                                              throw e10139;
                                                                            } else {
                                                                              return null;
                                                                            }
                                                                          }
                                                                        }
                                                                      } else {
                                                                        if (cljs.core.keyword_identical_QMARK_.call(null, ocr_10106, new cljs.core.Keyword(null, "in-val", "in-val", 4123009515))) {
                                                                          try {
                                                                            if (termcat.rules.tokenize.letter_QMARK_.call(null, ocr_10107)) {
                                                                              return segue.call(null, new cljs.core.Keyword(null, "in-val", "in-val", 4123009515));
                                                                            } else {
                                                                              if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
                                                                                throw cljs.core.match.backtrack;
                                                                              } else {
                                                                                return null;
                                                                              }
                                                                            }
                                                                          } catch (e10140) {
                                                                            if (e10140 instanceof Error) {
                                                                              var e__4796__auto____$10 = e10140;
                                                                              if (e__4796__auto____$10 === cljs.core.match.backtrack) {
                                                                                throw cljs.core.match.backtrack;
                                                                              } else {
                                                                                throw e__4796__auto____$10;
                                                                              }
                                                                            } else {
                                                                              if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
                                                                                throw e10140;
                                                                              } else {
                                                                                return null;
                                                                              }
                                                                            }
                                                                          }
                                                                        } else {
                                                                          if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
                                                                            throw cljs.core.match.backtrack;
                                                                          } else {
                                                                            return null;
                                                                          }
                                                                        }
                                                                      }
                                                                    }
                                                                  }
                                                                } catch (e10128) {
                                                                  if (e10128 instanceof Error) {
                                                                    var e__4796__auto____$10 = e10128;
                                                                    if (e__4796__auto____$10 === cljs.core.match.backtrack) {
                                                                      try {
                                                                        if (cljs.core.keyword_identical_QMARK_.call(null, ocr_10106, new cljs.core.Keyword(null, "in-val", "in-val", 4123009515))) {
                                                                          try {
                                                                            if (cljs.core._EQ_.call(null, ocr_10107, "-")) {
                                                                              return segue.call(null, new cljs.core.Keyword(null, "maybe-in-val", "maybe-in-val", 675502832));
                                                                            } else {
                                                                              if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
                                                                                throw cljs.core.match.backtrack;
                                                                              } else {
                                                                                return null;
                                                                              }
                                                                            }
                                                                          } catch (e10134) {
                                                                            if (e10134 instanceof Error) {
                                                                              var e__4796__auto____$11 = e10134;
                                                                              if (e__4796__auto____$11 === cljs.core.match.backtrack) {
                                                                                throw cljs.core.match.backtrack;
                                                                              } else {
                                                                                throw e__4796__auto____$11;
                                                                              }
                                                                            } else {
                                                                              if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
                                                                                throw e10134;
                                                                              } else {
                                                                                return null;
                                                                              }
                                                                            }
                                                                          }
                                                                        } else {
                                                                          if (cljs.core.keyword_identical_QMARK_.call(null, ocr_10106, new cljs.core.Keyword(null, "before-val", "before-val", 1531287365))) {
                                                                            try {
                                                                              if (cljs.core._EQ_.call(null, ocr_10107, '"')) {
                                                                                return segue.call(null, new cljs.core.Keyword(null, "in-double-quotes", "in-double-quotes", 3221606333));
                                                                              } else {
                                                                                if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
                                                                                  throw cljs.core.match.backtrack;
                                                                                } else {
                                                                                  return null;
                                                                                }
                                                                              }
                                                                            } catch (e10135) {
                                                                              if (e10135 instanceof Error) {
                                                                                var e__4796__auto____$11 = e10135;
                                                                                if (e__4796__auto____$11 === cljs.core.match.backtrack) {
                                                                                  throw cljs.core.match.backtrack;
                                                                                } else {
                                                                                  throw e__4796__auto____$11;
                                                                                }
                                                                              } else {
                                                                                if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
                                                                                  throw e10135;
                                                                                } else {
                                                                                  return null;
                                                                                }
                                                                              }
                                                                            }
                                                                          } else {
                                                                            if (cljs.core.keyword_identical_QMARK_.call(null, ocr_10106, new cljs.core.Keyword(null, "in-double-quotes", "in-double-quotes", 3221606333))) {
                                                                              try {
                                                                                if (cljs.core._EQ_.call(null, ocr_10107, '"')) {
                                                                                  return segue.call(null, new cljs.core.Keyword(null, "after-val", "after-val", 2032002850));
                                                                                } else {
                                                                                  if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
                                                                                    throw cljs.core.match.backtrack;
                                                                                  } else {
                                                                                    return null;
                                                                                  }
                                                                                }
                                                                              } catch (e10136) {
                                                                                if (e10136 instanceof Error) {
                                                                                  var e__4796__auto____$11 = e10136;
                                                                                  if (e__4796__auto____$11 === cljs.core.match.backtrack) {
                                                                                    throw cljs.core.match.backtrack;
                                                                                  } else {
                                                                                    throw e__4796__auto____$11;
                                                                                  }
                                                                                } else {
                                                                                  if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
                                                                                    throw e10136;
                                                                                  } else {
                                                                                    return null;
                                                                                  }
                                                                                }
                                                                              }
                                                                            } else {
                                                                              if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
                                                                                throw cljs.core.match.backtrack;
                                                                              } else {
                                                                                return null;
                                                                              }
                                                                            }
                                                                          }
                                                                        }
                                                                      } catch (e10129) {
                                                                        if (e10129 instanceof Error) {
                                                                          var e__4796__auto____$11 = e10129;
                                                                          if (e__4796__auto____$11 === cljs.core.match.backtrack) {
                                                                            try {
                                                                              if (cljs.core.keyword_identical_QMARK_.call(null, ocr_10106, new cljs.core.Keyword(null, "in-double-quotes", "in-double-quotes", 3221606333))) {
                                                                                return segue.call(null, new cljs.core.Keyword(null, "in-double-quotes", "in-double-quotes", 3221606333));
                                                                              } else {
                                                                                if (cljs.core.keyword_identical_QMARK_.call(null, ocr_10106, new cljs.core.Keyword(null, "in-tag-name", "in-tag-name", 629665784))) {
                                                                                  try {
                                                                                    if (cljs.core._EQ_.call(null, ocr_10107, "\x3e")) {
                                                                                      return accept.call(null, true);
                                                                                    } else {
                                                                                      if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
                                                                                        throw cljs.core.match.backtrack;
                                                                                      } else {
                                                                                        return null;
                                                                                      }
                                                                                    }
                                                                                  } catch (e10131) {
                                                                                    if (e10131 instanceof Error) {
                                                                                      var e__4796__auto____$12 = e10131;
                                                                                      if (e__4796__auto____$12 === cljs.core.match.backtrack) {
                                                                                        throw cljs.core.match.backtrack;
                                                                                      } else {
                                                                                        throw e__4796__auto____$12;
                                                                                      }
                                                                                    } else {
                                                                                      if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
                                                                                        throw e10131;
                                                                                      } else {
                                                                                        return null;
                                                                                      }
                                                                                    }
                                                                                  }
                                                                                } else {
                                                                                  if (cljs.core.keyword_identical_QMARK_.call(null, ocr_10106, new cljs.core.Keyword(null, "in-val", "in-val", 4123009515))) {
                                                                                    try {
                                                                                      if (cljs.core._EQ_.call(null, ocr_10107, "\x3e")) {
                                                                                        return accept.call(null, true);
                                                                                      } else {
                                                                                        if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
                                                                                          throw cljs.core.match.backtrack;
                                                                                        } else {
                                                                                          return null;
                                                                                        }
                                                                                      }
                                                                                    } catch (e10132) {
                                                                                      if (e10132 instanceof Error) {
                                                                                        var e__4796__auto____$12 = e10132;
                                                                                        if (e__4796__auto____$12 === cljs.core.match.backtrack) {
                                                                                          throw cljs.core.match.backtrack;
                                                                                        } else {
                                                                                          throw e__4796__auto____$12;
                                                                                        }
                                                                                      } else {
                                                                                        if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
                                                                                          throw e10132;
                                                                                        } else {
                                                                                          return null;
                                                                                        }
                                                                                      }
                                                                                    }
                                                                                  } else {
                                                                                    if (cljs.core.keyword_identical_QMARK_.call(null, ocr_10106, new cljs.core.Keyword(null, "after-val", "after-val", 2032002850))) {
                                                                                      try {
                                                                                        if (cljs.core._EQ_.call(null, ocr_10107, "\x3e")) {
                                                                                          return accept.call(null, true);
                                                                                        } else {
                                                                                          if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
                                                                                            throw cljs.core.match.backtrack;
                                                                                          } else {
                                                                                            return null;
                                                                                          }
                                                                                        }
                                                                                      } catch (e10133) {
                                                                                        if (e10133 instanceof Error) {
                                                                                          var e__4796__auto____$12 = e10133;
                                                                                          if (e__4796__auto____$12 === cljs.core.match.backtrack) {
                                                                                            throw cljs.core.match.backtrack;
                                                                                          } else {
                                                                                            throw e__4796__auto____$12;
                                                                                          }
                                                                                        } else {
                                                                                          if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
                                                                                            throw e10133;
                                                                                          } else {
                                                                                            return null;
                                                                                          }
                                                                                        }
                                                                                      }
                                                                                    } else {
                                                                                      if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
                                                                                        throw cljs.core.match.backtrack;
                                                                                      } else {
                                                                                        return null;
                                                                                      }
                                                                                    }
                                                                                  }
                                                                                }
                                                                              }
                                                                            } catch (e10130) {
                                                                              if (e10130 instanceof Error) {
                                                                                var e__4796__auto____$12 = e10130;
                                                                                if (e__4796__auto____$12 === cljs.core.match.backtrack) {
                                                                                  return reject.call(null);
                                                                                } else {
                                                                                  throw e__4796__auto____$12;
                                                                                }
                                                                              } else {
                                                                                if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
                                                                                  throw e10130;
                                                                                } else {
                                                                                  return null;
                                                                                }
                                                                              }
                                                                            }
                                                                          } else {
                                                                            throw e__4796__auto____$11;
                                                                          }
                                                                        } else {
                                                                          if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
                                                                            throw e10129;
                                                                          } else {
                                                                            return null;
                                                                          }
                                                                        }
                                                                      }
                                                                    } else {
                                                                      throw e__4796__auto____$10;
                                                                    }
                                                                  } else {
                                                                    if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
                                                                      throw e10128;
                                                                    } else {
                                                                      return null;
                                                                    }
                                                                  }
                                                                }
                                                              } else {
                                                                throw e__4796__auto____$9;
                                                              }
                                                            } else {
                                                              if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
                                                                throw e10127;
                                                              } else {
                                                                return null;
                                                              }
                                                            }
                                                          }
                                                        } else {
                                                          throw e__4796__auto____$8;
                                                        }
                                                      } else {
                                                        if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
                                                          throw e10126;
                                                        } else {
                                                          return null;
                                                        }
                                                      }
                                                    }
                                                  } else {
                                                    throw e__4796__auto____$7;
                                                  }
                                                } else {
                                                  if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
                                                    throw e10125;
                                                  } else {
                                                    return null;
                                                  }
                                                }
                                              }
                                            } else {
                                              throw e__4796__auto____$6;
                                            }
                                          } else {
                                            if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
                                              throw e10124;
                                            } else {
                                              return null;
                                            }
                                          }
                                        }
                                      } else {
                                        throw e__4796__auto____$5;
                                      }
                                    } else {
                                      if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
                                        throw e10123;
                                      } else {
                                        return null;
                                      }
                                    }
                                  }
                                } else {
                                  throw e__4796__auto____$4;
                                }
                              } else {
                                if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
                                  throw e10122;
                                } else {
                                  return null;
                                }
                              }
                            }
                          } else {
                            throw e__4796__auto____$3;
                          }
                        } else {
                          if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
                            throw e10121;
                          } else {
                            return null;
                          }
                        }
                      }
                    } else {
                      throw e__4796__auto____$2;
                    }
                  } else {
                    if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
                      throw e10120;
                    } else {
                      return null;
                    }
                  }
                }
              } else {
                throw e__4796__auto____$1;
              }
            } else {
              if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
                throw e10119;
              } else {
                return null;
              }
            }
          }
        } else {
          throw e__4796__auto__;
        }
      } else {
        if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
          throw e10118;
        } else {
          return null;
        }
      }
    }
  };
  escape_html = function(p__10042, tok) {
    switch(arguments.length) {
      case 0:
        return escape_html__0.call(this);
      case 2:
        return escape_html__2.call(this, p__10042, tok);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  escape_html.cljs$core$IFn$_invoke$arity$0 = escape_html__0;
  escape_html.cljs$core$IFn$_invoke$arity$2 = escape_html__2;
  return escape_html;
}();
termcat.rules.tokenize.remove_escape_tokens = termcat.rewrite.abstraction.call(null, function() {
  var G__10177 = null;
  var G__10177__0 = function() {
    return null;
  };
  var G__10177__2 = function(state__6468__auto__, input__6469__auto__) {
    var padded_input__6470__auto__ = cljs.core.concat.call(null, input__6469__auto__, cljs.core.repeat.call(null, null));
    var vec__10167 = cljs.core.cons.call(null, state__6468__auto__, cljs.core.take.call(null, 2, padded_input__6470__auto__));
    var state = cljs.core.nth.call(null, vec__10167, 0, null);
    var t1 = cljs.core.nth.call(null, vec__10167, 1, null);
    var t2 = cljs.core.nth.call(null, vec__10167, 2, null);
    var temp__4090__auto__ = function() {
      var ocr_10168 = clojure.core.reducers.reduce.call(null, cljs.core.conj, new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [state__6468__auto__], null), clojure.core.reducers.take.call(null, 2, clojure.core.reducers.map.call(null, termcat.term.tt, padded_input__6470__auto__)));
      try {
        if (cljs.core.vector_QMARK_.call(null, ocr_10168) && cljs.core.count.call(null, ocr_10168) === 3) {
          try {
            var ocr_10168_1__10173 = cljs.core.nth.call(null, ocr_10168, 1);
            if (cljs.core.keyword_identical_QMARK_.call(null, ocr_10168_1__10173, new cljs.core.Keyword(null, "escape", "escape", 4014699507))) {
              return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [null, termcat.term.token.call(null, new cljs.core.Keyword(null, "default", "default", 2558708147), termcat.term.payload.call(null, t2))], null);
            } else {
              if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
                throw cljs.core.match.backtrack;
              } else {
                return null;
              }
            }
          } catch (e10176) {
            if (e10176 instanceof Error) {
              var e__4796__auto__ = e10176;
              if (e__4796__auto__ === cljs.core.match.backtrack) {
                throw cljs.core.match.backtrack;
              } else {
                throw e__4796__auto__;
              }
            } else {
              if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
                throw e10176;
              } else {
                return null;
              }
            }
          }
        } else {
          if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
            throw cljs.core.match.backtrack;
          } else {
            return null;
          }
        }
      } catch (e10175) {
        if (e10175 instanceof Error) {
          var e__4796__auto__ = e10175;
          if (e__4796__auto__ === cljs.core.match.backtrack) {
            return null;
          } else {
            throw e__4796__auto__;
          }
        } else {
          if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
            throw e10175;
          } else {
            return null;
          }
        }
      }
    }();
    if (cljs.core.truth_(temp__4090__auto__)) {
      var r__6471__auto__ = temp__4090__auto__;
      return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [function() {
        var or__3403__auto__ = cljs.core.first.call(null, r__6471__auto__);
        if (cljs.core.truth_(or__3403__auto__)) {
          return or__3403__auto__;
        } else {
          return state__6468__auto__;
        }
      }(), cljs.core.concat.call(null, cljs.core.next.call(null, r__6471__auto__), cljs.core.drop.call(null, 2, input__6469__auto__))], null);
    } else {
      return null;
    }
  };
  G__10177 = function(state__6468__auto__, input__6469__auto__) {
    switch(arguments.length) {
      case 0:
        return G__10177__0.call(this);
      case 2:
        return G__10177__2.call(this, state__6468__auto__, input__6469__auto__);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  return G__10177;
}());
termcat.rules.tokenize.remove_annotated_tokens = termcat.rewrite.abstraction.call(null, function() {
  var G__10206 = null;
  var G__10206__0 = function() {
    return null;
  };
  var G__10206__2 = function(state__6468__auto__, input__6469__auto__) {
    var padded_input__6470__auto__ = cljs.core.concat.call(null, input__6469__auto__, cljs.core.repeat.call(null, null));
    var vec__10178 = cljs.core.cons.call(null, state__6468__auto__, cljs.core.take.call(null, 2, padded_input__6470__auto__));
    var state = cljs.core.nth.call(null, vec__10178, 0, null);
    var t1 = cljs.core.nth.call(null, vec__10178, 1, null);
    var t2 = cljs.core.nth.call(null, vec__10178, 2, null);
    var temp__4090__auto__ = function() {
      var ocr_10179 = clojure.core.reducers.reduce.call(null, cljs.core.conj, new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [state__6468__auto__], null), clojure.core.reducers.take.call(null, 2, clojure.core.reducers.map.call(null, termcat.term.tt, padded_input__6470__auto__)));
      try {
        if (cljs.core.vector_QMARK_.call(null, ocr_10179) && cljs.core.count.call(null, ocr_10179) === 3) {
          try {
            var ocr_10179_1__10191 = cljs.core.nth.call(null, ocr_10179, 1);
            if (cljs.core.keyword_identical_QMARK_.call(null, ocr_10179_1__10191, new cljs.core.Keyword(null, "tilde", "tilde", 1124267722))) {
              try {
                var ocr_10179_2__10192 = cljs.core.nth.call(null, ocr_10179, 2);
                if (cljs.core.keyword_identical_QMARK_.call(null, ocr_10179_2__10192, new cljs.core.Keyword(null, "tilde", "tilde", 1124267722))) {
                  return null;
                } else {
                  if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
                    throw cljs.core.match.backtrack;
                  } else {
                    return null;
                  }
                }
              } catch (e10205) {
                if (e10205 instanceof Error) {
                  var e__4796__auto__ = e10205;
                  if (e__4796__auto__ === cljs.core.match.backtrack) {
                    throw cljs.core.match.backtrack;
                  } else {
                    throw e__4796__auto__;
                  }
                } else {
                  if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
                    throw e10205;
                  } else {
                    return null;
                  }
                }
              }
            } else {
              if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
                throw cljs.core.match.backtrack;
              } else {
                return null;
              }
            }
          } catch (e10194) {
            if (e10194 instanceof Error) {
              var e__4796__auto__ = e10194;
              if (e__4796__auto__ === cljs.core.match.backtrack) {
                try {
                  var ocr_10179_1__10191 = cljs.core.nth.call(null, ocr_10179, 1);
                  if (cljs.core.keyword_identical_QMARK_.call(null, ocr_10179_1__10191, new cljs.core.Keyword(null, "tilde", "tilde", 1124267722))) {
                    try {
                      var ocr_10179_2__10192 = cljs.core.nth.call(null, ocr_10179, 2);
                      if (cljs.core.keyword_identical_QMARK_.call(null, ocr_10179_2__10192, new cljs.core.Keyword(null, "whitespace", "whitespace", 1290815983))) {
                        return null;
                      } else {
                        if (cljs.core.keyword_identical_QMARK_.call(null, ocr_10179_2__10192, new cljs.core.Keyword(null, "newline", "newline", 2859826438))) {
                          return null;
                        } else {
                          if (ocr_10179_2__10192 === null) {
                            return null;
                          } else {
                            if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
                              throw cljs.core.match.backtrack;
                            } else {
                              return null;
                            }
                          }
                        }
                      }
                    } catch (e10201) {
                      if (e10201 instanceof Error) {
                        var e__4796__auto____$1 = e10201;
                        if (e__4796__auto____$1 === cljs.core.match.backtrack) {
                          throw cljs.core.match.backtrack;
                        } else {
                          throw e__4796__auto____$1;
                        }
                      } else {
                        if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
                          throw e10201;
                        } else {
                          return null;
                        }
                      }
                    }
                  } else {
                    if (cljs.core.keyword_identical_QMARK_.call(null, ocr_10179_1__10191, new cljs.core.Keyword(null, "whitespace", "whitespace", 1290815983))) {
                      try {
                        var ocr_10179_2__10192 = cljs.core.nth.call(null, ocr_10179, 2);
                        if (cljs.core.keyword_identical_QMARK_.call(null, ocr_10179_2__10192, new cljs.core.Keyword(null, "tilde", "tilde", 1124267722))) {
                          return null;
                        } else {
                          if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
                            throw cljs.core.match.backtrack;
                          } else {
                            return null;
                          }
                        }
                      } catch (e10202) {
                        if (e10202 instanceof Error) {
                          var e__4796__auto____$1 = e10202;
                          if (e__4796__auto____$1 === cljs.core.match.backtrack) {
                            throw cljs.core.match.backtrack;
                          } else {
                            throw e__4796__auto____$1;
                          }
                        } else {
                          if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
                            throw e10202;
                          } else {
                            return null;
                          }
                        }
                      }
                    } else {
                      if (cljs.core.keyword_identical_QMARK_.call(null, ocr_10179_1__10191, new cljs.core.Keyword(null, "newline", "newline", 2859826438))) {
                        try {
                          var ocr_10179_2__10192 = cljs.core.nth.call(null, ocr_10179, 2);
                          if (cljs.core.keyword_identical_QMARK_.call(null, ocr_10179_2__10192, new cljs.core.Keyword(null, "tilde", "tilde", 1124267722))) {
                            return null;
                          } else {
                            if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
                              throw cljs.core.match.backtrack;
                            } else {
                              return null;
                            }
                          }
                        } catch (e10203) {
                          if (e10203 instanceof Error) {
                            var e__4796__auto____$1 = e10203;
                            if (e__4796__auto____$1 === cljs.core.match.backtrack) {
                              throw cljs.core.match.backtrack;
                            } else {
                              throw e__4796__auto____$1;
                            }
                          } else {
                            if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
                              throw e10203;
                            } else {
                              return null;
                            }
                          }
                        }
                      } else {
                        if (ocr_10179_1__10191 === null) {
                          try {
                            var ocr_10179_2__10192 = cljs.core.nth.call(null, ocr_10179, 2);
                            if (cljs.core.keyword_identical_QMARK_.call(null, ocr_10179_2__10192, new cljs.core.Keyword(null, "tilde", "tilde", 1124267722))) {
                              return null;
                            } else {
                              if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
                                throw cljs.core.match.backtrack;
                              } else {
                                return null;
                              }
                            }
                          } catch (e10204) {
                            if (e10204 instanceof Error) {
                              var e__4796__auto____$1 = e10204;
                              if (e__4796__auto____$1 === cljs.core.match.backtrack) {
                                throw cljs.core.match.backtrack;
                              } else {
                                throw e__4796__auto____$1;
                              }
                            } else {
                              if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
                                throw e10204;
                              } else {
                                return null;
                              }
                            }
                          }
                        } else {
                          if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
                            throw cljs.core.match.backtrack;
                          } else {
                            return null;
                          }
                        }
                      }
                    }
                  }
                } catch (e10195) {
                  if (e10195 instanceof Error) {
                    var e__4796__auto____$1 = e10195;
                    if (e__4796__auto____$1 === cljs.core.match.backtrack) {
                      try {
                        var ocr_10179_1__10191 = cljs.core.nth.call(null, ocr_10179, 1);
                        if (cljs.core.keyword_identical_QMARK_.call(null, ocr_10179_1__10191, new cljs.core.Keyword(null, "tilde", "tilde", 1124267722))) {
                          try {
                            var ocr_10179_2__10192 = cljs.core.nth.call(null, ocr_10179, 2);
                            if (cljs.core.keyword_identical_QMARK_.call(null, ocr_10179_2__10192, new cljs.core.Keyword(null, "greater-than", "greater-than", 3888014086))) {
                              return new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [null, t1, termcat.term.token.call(null, new cljs.core.Keyword(null, "default", "default", 2558708147), "\u27e9")], null);
                            } else {
                              if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
                                throw cljs.core.match.backtrack;
                              } else {
                                return null;
                              }
                            }
                          } catch (e10199) {
                            if (e10199 instanceof Error) {
                              var e__4796__auto____$2 = e10199;
                              if (e__4796__auto____$2 === cljs.core.match.backtrack) {
                                throw cljs.core.match.backtrack;
                              } else {
                                throw e__4796__auto____$2;
                              }
                            } else {
                              if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
                                throw e10199;
                              } else {
                                return null;
                              }
                            }
                          }
                        } else {
                          if (cljs.core.keyword_identical_QMARK_.call(null, ocr_10179_1__10191, new cljs.core.Keyword(null, "less-than", "less-than", 1333713095))) {
                            try {
                              var ocr_10179_2__10192 = cljs.core.nth.call(null, ocr_10179, 2);
                              if (cljs.core.keyword_identical_QMARK_.call(null, ocr_10179_2__10192, new cljs.core.Keyword(null, "tilde", "tilde", 1124267722))) {
                                return new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [null, termcat.term.token.call(null, new cljs.core.Keyword(null, "default", "default", 2558708147), "\u27e8"), t2], null);
                              } else {
                                if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
                                  throw cljs.core.match.backtrack;
                                } else {
                                  return null;
                                }
                              }
                            } catch (e10200) {
                              if (e10200 instanceof Error) {
                                var e__4796__auto____$2 = e10200;
                                if (e__4796__auto____$2 === cljs.core.match.backtrack) {
                                  throw cljs.core.match.backtrack;
                                } else {
                                  throw e__4796__auto____$2;
                                }
                              } else {
                                if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
                                  throw e10200;
                                } else {
                                  return null;
                                }
                              }
                            }
                          } else {
                            if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
                              throw cljs.core.match.backtrack;
                            } else {
                              return null;
                            }
                          }
                        }
                      } catch (e10196) {
                        if (e10196 instanceof Error) {
                          var e__4796__auto____$2 = e10196;
                          if (e__4796__auto____$2 === cljs.core.match.backtrack) {
                            try {
                              var ocr_10179_1__10191 = cljs.core.nth.call(null, ocr_10179, 1);
                              if (cljs.core.keyword_identical_QMARK_.call(null, ocr_10179_1__10191, new cljs.core.Keyword(null, "tilde", "tilde", 1124267722))) {
                                return new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [null, t1, termcat.term.token.call(null, new cljs.core.Keyword(null, "default", "default", 2558708147), termcat.term.payload.call(null, t2))], null);
                              } else {
                                if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
                                  throw cljs.core.match.backtrack;
                                } else {
                                  return null;
                                }
                              }
                            } catch (e10197) {
                              if (e10197 instanceof Error) {
                                var e__4796__auto____$3 = e10197;
                                if (e__4796__auto____$3 === cljs.core.match.backtrack) {
                                  try {
                                    var ocr_10179_2__10192 = cljs.core.nth.call(null, ocr_10179, 2);
                                    if (cljs.core.keyword_identical_QMARK_.call(null, ocr_10179_2__10192, new cljs.core.Keyword(null, "tilde", "tilde", 1124267722))) {
                                      return new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [null, termcat.term.token.call(null, new cljs.core.Keyword(null, "default", "default", 2558708147), termcat.term.payload.call(null, t1)), t2], null);
                                    } else {
                                      if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
                                        throw cljs.core.match.backtrack;
                                      } else {
                                        return null;
                                      }
                                    }
                                  } catch (e10198) {
                                    if (e10198 instanceof Error) {
                                      var e__4796__auto____$4 = e10198;
                                      if (e__4796__auto____$4 === cljs.core.match.backtrack) {
                                        throw cljs.core.match.backtrack;
                                      } else {
                                        throw e__4796__auto____$4;
                                      }
                                    } else {
                                      if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
                                        throw e10198;
                                      } else {
                                        return null;
                                      }
                                    }
                                  }
                                } else {
                                  throw e__4796__auto____$3;
                                }
                              } else {
                                if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
                                  throw e10197;
                                } else {
                                  return null;
                                }
                              }
                            }
                          } else {
                            throw e__4796__auto____$2;
                          }
                        } else {
                          if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
                            throw e10196;
                          } else {
                            return null;
                          }
                        }
                      }
                    } else {
                      throw e__4796__auto____$1;
                    }
                  } else {
                    if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
                      throw e10195;
                    } else {
                      return null;
                    }
                  }
                }
              } else {
                throw e__4796__auto__;
              }
            } else {
              if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
                throw e10194;
              } else {
                return null;
              }
            }
          }
        } else {
          if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
            throw cljs.core.match.backtrack;
          } else {
            return null;
          }
        }
      } catch (e10193) {
        if (e10193 instanceof Error) {
          var e__4796__auto__ = e10193;
          if (e__4796__auto__ === cljs.core.match.backtrack) {
            return null;
          } else {
            throw e__4796__auto__;
          }
        } else {
          if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
            throw e10193;
          } else {
            return null;
          }
        }
      }
    }();
    if (cljs.core.truth_(temp__4090__auto__)) {
      var r__6471__auto__ = temp__4090__auto__;
      return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [function() {
        var or__3403__auto__ = cljs.core.first.call(null, r__6471__auto__);
        if (cljs.core.truth_(or__3403__auto__)) {
          return or__3403__auto__;
        } else {
          return state__6468__auto__;
        }
      }(), cljs.core.concat.call(null, cljs.core.next.call(null, r__6471__auto__), cljs.core.drop.call(null, 2, input__6469__auto__))], null);
    } else {
      return null;
    }
  };
  G__10206 = function(state__6468__auto__, input__6469__auto__) {
    switch(arguments.length) {
      case 0:
        return G__10206__0.call(this);
      case 2:
        return G__10206__2.call(this, state__6468__auto__, input__6469__auto__);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  return G__10206;
}());
termcat.rules.tokenize.merge_tokens = termcat.rewrite.abstraction.call(null, function() {
  var G__10217 = null;
  var G__10217__0 = function() {
    return null;
  };
  var G__10217__2 = function(state__6468__auto__, input__6469__auto__) {
    var padded_input__6470__auto__ = cljs.core.concat.call(null, input__6469__auto__, cljs.core.repeat.call(null, null));
    var vec__10207 = cljs.core.cons.call(null, state__6468__auto__, cljs.core.take.call(null, 2, padded_input__6470__auto__));
    var state = cljs.core.nth.call(null, vec__10207, 0, null);
    var t1 = cljs.core.nth.call(null, vec__10207, 1, null);
    var t2 = cljs.core.nth.call(null, vec__10207, 2, null);
    var temp__4090__auto__ = function() {
      var ocr_10208 = clojure.core.reducers.reduce.call(null, cljs.core.conj, new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [state__6468__auto__], null), clojure.core.reducers.take.call(null, 2, clojure.core.reducers.map.call(null, termcat.term.tt, padded_input__6470__auto__)));
      try {
        if (cljs.core.vector_QMARK_.call(null, ocr_10208) && cljs.core.count.call(null, ocr_10208) === 3) {
          try {
            var ocr_10208_2__10214 = cljs.core.nth.call(null, ocr_10208, 2);
            if (cljs.core.keyword_identical_QMARK_.call(null, ocr_10208_2__10214, new cljs.core.Keyword(null, "default", "default", 2558708147))) {
              if (cljs.core._EQ_.call(null, termcat.term.tt.call(null, t1), termcat.term.tt.call(null, t2))) {
                return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [null, cljs.core.with_meta.call(null, termcat.term.token.call(null, termcat.term.tt.call(null, t1), cljs.core.not.call(null, termcat.term.payload.call(null, t1)) ? termcat.term.payload.call(null, t2) : cljs.core.not.call(null, termcat.term.payload.call(null, t2)) ? termcat.term.payload.call(null, t1) : new cljs.core.Keyword(null, "else", "else", 1017020587) ? [cljs.core.str(termcat.term.payload.call(null, 
                t1)), cljs.core.str(termcat.term.payload.call(null, t2))].join("") : null), cljs.core.assoc.call(null, cljs.core.meta.call(null, t1), new cljs.core.Keyword(null, "rpos", "rpos", 1017411604), (new cljs.core.Keyword(null, "rpos", "rpos", 1017411604)).cljs$core$IFn$_invoke$arity$1(cljs.core.meta.call(null, t2))))], null);
              } else {
                return null;
              }
            } else {
              if (cljs.core.keyword_identical_QMARK_.call(null, ocr_10208_2__10214, new cljs.core.Keyword(null, "whitespace", "whitespace", 1290815983))) {
                if (cljs.core._EQ_.call(null, termcat.term.tt.call(null, t1), termcat.term.tt.call(null, t2))) {
                  return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [null, cljs.core.with_meta.call(null, termcat.term.token.call(null, termcat.term.tt.call(null, t1), cljs.core.not.call(null, termcat.term.payload.call(null, t1)) ? termcat.term.payload.call(null, t2) : cljs.core.not.call(null, termcat.term.payload.call(null, t2)) ? termcat.term.payload.call(null, t1) : new cljs.core.Keyword(null, "else", "else", 1017020587) ? [cljs.core.str(termcat.term.payload.call(null, 
                  t1)), cljs.core.str(termcat.term.payload.call(null, t2))].join("") : null), cljs.core.assoc.call(null, cljs.core.meta.call(null, t1), new cljs.core.Keyword(null, "rpos", "rpos", 1017411604), (new cljs.core.Keyword(null, "rpos", "rpos", 1017411604)).cljs$core$IFn$_invoke$arity$1(cljs.core.meta.call(null, t2))))], null);
                } else {
                  return null;
                }
              } else {
                if (cljs.core.keyword_identical_QMARK_.call(null, ocr_10208_2__10214, new cljs.core.Keyword(null, "tilde", "tilde", 1124267722))) {
                  if (cljs.core._EQ_.call(null, termcat.term.tt.call(null, t1), termcat.term.tt.call(null, t2))) {
                    return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [null, cljs.core.with_meta.call(null, termcat.term.token.call(null, termcat.term.tt.call(null, t1), cljs.core.not.call(null, termcat.term.payload.call(null, t1)) ? termcat.term.payload.call(null, t2) : cljs.core.not.call(null, termcat.term.payload.call(null, t2)) ? termcat.term.payload.call(null, t1) : new cljs.core.Keyword(null, "else", "else", 1017020587) ? [cljs.core.str(termcat.term.payload.call(null, 
                    t1)), cljs.core.str(termcat.term.payload.call(null, t2))].join("") : null), cljs.core.assoc.call(null, cljs.core.meta.call(null, t1), new cljs.core.Keyword(null, "rpos", "rpos", 1017411604), (new cljs.core.Keyword(null, "rpos", "rpos", 1017411604)).cljs$core$IFn$_invoke$arity$1(cljs.core.meta.call(null, t2))))], null);
                  } else {
                    return null;
                  }
                } else {
                  if (cljs.core.keyword_identical_QMARK_.call(null, ocr_10208_2__10214, new cljs.core.Keyword(null, "dash", "dash", 1016980228))) {
                    if (cljs.core._EQ_.call(null, termcat.term.tt.call(null, t1), termcat.term.tt.call(null, t2))) {
                      return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [null, cljs.core.with_meta.call(null, termcat.term.token.call(null, termcat.term.tt.call(null, t1), cljs.core.not.call(null, termcat.term.payload.call(null, t1)) ? termcat.term.payload.call(null, t2) : cljs.core.not.call(null, termcat.term.payload.call(null, t2)) ? termcat.term.payload.call(null, t1) : new cljs.core.Keyword(null, "else", "else", 1017020587) ? [cljs.core.str(termcat.term.payload.call(null, 
                      t1)), cljs.core.str(termcat.term.payload.call(null, t2))].join("") : null), cljs.core.assoc.call(null, cljs.core.meta.call(null, t1), new cljs.core.Keyword(null, "rpos", "rpos", 1017411604), (new cljs.core.Keyword(null, "rpos", "rpos", 1017411604)).cljs$core$IFn$_invoke$arity$1(cljs.core.meta.call(null, t2))))], null);
                    } else {
                      return null;
                    }
                  } else {
                    if (cljs.core.keyword_identical_QMARK_.call(null, ocr_10208_2__10214, new cljs.core.Keyword(null, "left-quote", "left-quote", 2041480360))) {
                      if (cljs.core._EQ_.call(null, termcat.term.tt.call(null, t1), termcat.term.tt.call(null, t2))) {
                        return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [null, cljs.core.with_meta.call(null, termcat.term.token.call(null, termcat.term.tt.call(null, t1), cljs.core.not.call(null, termcat.term.payload.call(null, t1)) ? termcat.term.payload.call(null, t2) : cljs.core.not.call(null, termcat.term.payload.call(null, t2)) ? termcat.term.payload.call(null, t1) : new cljs.core.Keyword(null, "else", "else", 1017020587) ? [cljs.core.str(termcat.term.payload.call(null, 
                        t1)), cljs.core.str(termcat.term.payload.call(null, t2))].join("") : null), cljs.core.assoc.call(null, cljs.core.meta.call(null, t1), new cljs.core.Keyword(null, "rpos", "rpos", 1017411604), (new cljs.core.Keyword(null, "rpos", "rpos", 1017411604)).cljs$core$IFn$_invoke$arity$1(cljs.core.meta.call(null, t2))))], null);
                      } else {
                        return null;
                      }
                    } else {
                      if (cljs.core.keyword_identical_QMARK_.call(null, ocr_10208_2__10214, new cljs.core.Keyword(null, "right-quote", "right-quote", 3807707901))) {
                        if (cljs.core._EQ_.call(null, termcat.term.tt.call(null, t1), termcat.term.tt.call(null, t2))) {
                          return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [null, cljs.core.with_meta.call(null, termcat.term.token.call(null, termcat.term.tt.call(null, t1), cljs.core.not.call(null, termcat.term.payload.call(null, t1)) ? termcat.term.payload.call(null, t2) : cljs.core.not.call(null, termcat.term.payload.call(null, t2)) ? termcat.term.payload.call(null, t1) : new cljs.core.Keyword(null, "else", "else", 1017020587) ? [cljs.core.str(termcat.term.payload.call(null, 
                          t1)), cljs.core.str(termcat.term.payload.call(null, t2))].join("") : null), cljs.core.assoc.call(null, cljs.core.meta.call(null, t1), new cljs.core.Keyword(null, "rpos", "rpos", 1017411604), (new cljs.core.Keyword(null, "rpos", "rpos", 1017411604)).cljs$core$IFn$_invoke$arity$1(cljs.core.meta.call(null, t2))))], null);
                        } else {
                          return null;
                        }
                      } else {
                        if (cljs.core.keyword_identical_QMARK_.call(null, ocr_10208_2__10214, new cljs.core.Keyword(null, "hash", "hash", 1017099392))) {
                          if (cljs.core._EQ_.call(null, termcat.term.tt.call(null, t1), termcat.term.tt.call(null, t2))) {
                            return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [null, cljs.core.with_meta.call(null, termcat.term.token.call(null, termcat.term.tt.call(null, t1), cljs.core.not.call(null, termcat.term.payload.call(null, t1)) ? termcat.term.payload.call(null, t2) : cljs.core.not.call(null, termcat.term.payload.call(null, t2)) ? termcat.term.payload.call(null, t1) : new cljs.core.Keyword(null, "else", "else", 1017020587) ? [cljs.core.str(termcat.term.payload.call(null, 
                            t1)), cljs.core.str(termcat.term.payload.call(null, t2))].join("") : null), cljs.core.assoc.call(null, cljs.core.meta.call(null, t1), new cljs.core.Keyword(null, "rpos", "rpos", 1017411604), (new cljs.core.Keyword(null, "rpos", "rpos", 1017411604)).cljs$core$IFn$_invoke$arity$1(cljs.core.meta.call(null, t2))))], null);
                          } else {
                            return null;
                          }
                        } else {
                          if (cljs.core.keyword_identical_QMARK_.call(null, ocr_10208_2__10214, new cljs.core.Keyword(null, "html", "html", 1017117469))) {
                            if (cljs.core._EQ_.call(null, termcat.term.tt.call(null, t1), termcat.term.tt.call(null, t2))) {
                              return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [null, cljs.core.with_meta.call(null, termcat.term.token.call(null, termcat.term.tt.call(null, t1), cljs.core.not.call(null, termcat.term.payload.call(null, t1)) ? termcat.term.payload.call(null, t2) : cljs.core.not.call(null, termcat.term.payload.call(null, t2)) ? termcat.term.payload.call(null, t1) : new cljs.core.Keyword(null, "else", "else", 1017020587) ? [cljs.core.str(termcat.term.payload.call(null, 
                              t1)), cljs.core.str(termcat.term.payload.call(null, t2))].join("") : null), cljs.core.assoc.call(null, cljs.core.meta.call(null, t1), new cljs.core.Keyword(null, "rpos", "rpos", 1017411604), (new cljs.core.Keyword(null, "rpos", "rpos", 1017411604)).cljs$core$IFn$_invoke$arity$1(cljs.core.meta.call(null, t2))))], null);
                            } else {
                              return null;
                            }
                          } else {
                            if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
                              throw cljs.core.match.backtrack;
                            } else {
                              return null;
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          } catch (e10216) {
            if (e10216 instanceof Error) {
              var e__4796__auto__ = e10216;
              if (e__4796__auto__ === cljs.core.match.backtrack) {
                throw cljs.core.match.backtrack;
              } else {
                throw e__4796__auto__;
              }
            } else {
              if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
                throw e10216;
              } else {
                return null;
              }
            }
          }
        } else {
          if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
            throw cljs.core.match.backtrack;
          } else {
            return null;
          }
        }
      } catch (e10215) {
        if (e10215 instanceof Error) {
          var e__4796__auto__ = e10215;
          if (e__4796__auto__ === cljs.core.match.backtrack) {
            return null;
          } else {
            throw e__4796__auto__;
          }
        } else {
          if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
            throw e10215;
          } else {
            return null;
          }
        }
      }
    }();
    if (cljs.core.truth_(temp__4090__auto__)) {
      var r__6471__auto__ = temp__4090__auto__;
      return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [function() {
        var or__3403__auto__ = cljs.core.first.call(null, r__6471__auto__);
        if (cljs.core.truth_(or__3403__auto__)) {
          return or__3403__auto__;
        } else {
          return state__6468__auto__;
        }
      }(), cljs.core.concat.call(null, cljs.core.next.call(null, r__6471__auto__), cljs.core.drop.call(null, 2, input__6469__auto__))], null);
    } else {
      return null;
    }
  };
  G__10217 = function(state__6468__auto__, input__6469__auto__) {
    switch(arguments.length) {
      case 0:
        return G__10217__0.call(this);
      case 2:
        return G__10217__2.call(this, state__6468__auto__, input__6469__auto__);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  return G__10217;
}());
termcat.rules.tokenize.remove_magic_tokens = termcat.rewrite.abstraction.call(null, function() {
  var G__10242 = null;
  var G__10242__0 = function() {
    return null;
  };
  var G__10242__2 = function(state__6468__auto__, input__6469__auto__) {
    var padded_input__6470__auto__ = cljs.core.concat.call(null, input__6469__auto__, cljs.core.repeat.call(null, null));
    var vec__10218 = cljs.core.cons.call(null, state__6468__auto__, cljs.core.take.call(null, 3, padded_input__6470__auto__));
    var state = cljs.core.nth.call(null, vec__10218, 0, null);
    var t1 = cljs.core.nth.call(null, vec__10218, 1, null);
    var t2 = cljs.core.nth.call(null, vec__10218, 2, null);
    var t3 = cljs.core.nth.call(null, vec__10218, 3, null);
    var temp__4090__auto__ = function() {
      var ocr_10219 = clojure.core.reducers.reduce.call(null, cljs.core.conj, new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [state__6468__auto__], null), clojure.core.reducers.take.call(null, 3, clojure.core.reducers.map.call(null, termcat.term.tt, padded_input__6470__auto__)));
      try {
        if (cljs.core.vector_QMARK_.call(null, ocr_10219) && cljs.core.count.call(null, ocr_10219) === 4) {
          try {
            var ocr_10219_2__10231 = cljs.core.nth.call(null, ocr_10219, 2);
            if (cljs.core.keyword_identical_QMARK_.call(null, ocr_10219_2__10231, new cljs.core.Keyword(null, "whitespace", "whitespace", 1290815983))) {
              return null;
            } else {
              if (cljs.core.keyword_identical_QMARK_.call(null, ocr_10219_2__10231, new cljs.core.Keyword(null, "newline", "newline", 2859826438))) {
                return null;
              } else {
                if (cljs.core.keyword_identical_QMARK_.call(null, ocr_10219_2__10231, new cljs.core.Keyword(null, "emptyline", "emptyline", 3889609267))) {
                  return null;
                } else {
                  if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
                    throw cljs.core.match.backtrack;
                  } else {
                    return null;
                  }
                }
              }
            }
          } catch (e10236) {
            if (e10236 instanceof Error) {
              var e__4796__auto__ = e10236;
              if (e__4796__auto__ === cljs.core.match.backtrack) {
                try {
                  var ocr_10219_2__10231 = cljs.core.nth.call(null, ocr_10219, 2);
                  if (cljs.core.vector_QMARK_.call(null, ocr_10219_2__10231) && cljs.core.count.call(null, ocr_10219_2__10231) === 2) {
                    try {
                      var ocr_10219_2__10231_0__10233 = cljs.core.nth.call(null, ocr_10219_2__10231, 0);
                      if (cljs.core.keyword_identical_QMARK_.call(null, ocr_10219_2__10231_0__10233, new cljs.core.Keyword(null, "block", "block", 1107736575))) {
                        return null;
                      } else {
                        if (cljs.core.keyword_identical_QMARK_.call(null, ocr_10219_2__10231_0__10233, new cljs.core.Keyword(null, "ldelim", "ldelim", 4201320693))) {
                          return null;
                        } else {
                          if (cljs.core.keyword_identical_QMARK_.call(null, ocr_10219_2__10231_0__10233, new cljs.core.Keyword(null, "rdelim", "rdelim", 4373095599))) {
                            return null;
                          } else {
                            if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
                              throw cljs.core.match.backtrack;
                            } else {
                              return null;
                            }
                          }
                        }
                      }
                    } catch (e10241) {
                      if (e10241 instanceof Error) {
                        var e__4796__auto____$1 = e10241;
                        if (e__4796__auto____$1 === cljs.core.match.backtrack) {
                          throw cljs.core.match.backtrack;
                        } else {
                          throw e__4796__auto____$1;
                        }
                      } else {
                        if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
                          throw e10241;
                        } else {
                          return null;
                        }
                      }
                    }
                  } else {
                    if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
                      throw cljs.core.match.backtrack;
                    } else {
                      return null;
                    }
                  }
                } catch (e10237) {
                  if (e10237 instanceof Error) {
                    var e__4796__auto____$1 = e10237;
                    if (e__4796__auto____$1 === cljs.core.match.backtrack) {
                      try {
                        var ocr_10219_2__10231 = cljs.core.nth.call(null, ocr_10219, 2);
                        if (cljs.core.keyword_identical_QMARK_.call(null, ocr_10219_2__10231, new cljs.core.Keyword(null, "percent", "percent", 4629944247))) {
                          return null;
                        } else {
                          if (cljs.core.keyword_identical_QMARK_.call(null, ocr_10219_2__10231, new cljs.core.Keyword(null, "circumflex", "circumflex", 4463600090))) {
                            return null;
                          } else {
                            if (cljs.core.keyword_identical_QMARK_.call(null, ocr_10219_2__10231, new cljs.core.Keyword(null, "underscore", "underscore", 3544053292))) {
                              return null;
                            } else {
                              if (cljs.core.keyword_identical_QMARK_.call(null, ocr_10219_2__10231, new cljs.core.Keyword(null, "tilde", "tilde", 1124267722))) {
                                return null;
                              } else {
                                if (cljs.core.keyword_identical_QMARK_.call(null, ocr_10219_2__10231, new cljs.core.Keyword(null, "left-quote", "left-quote", 2041480360))) {
                                  return null;
                                } else {
                                  if (cljs.core.keyword_identical_QMARK_.call(null, ocr_10219_2__10231, new cljs.core.Keyword(null, "right-quote", "right-quote", 3807707901))) {
                                    return null;
                                  } else {
                                    if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
                                      throw cljs.core.match.backtrack;
                                    } else {
                                      return null;
                                    }
                                  }
                                }
                              }
                            }
                          }
                        }
                      } catch (e10238) {
                        if (e10238 instanceof Error) {
                          var e__4796__auto____$2 = e10238;
                          if (e__4796__auto____$2 === cljs.core.match.backtrack) {
                            try {
                              var ocr_10219_1__10230 = cljs.core.nth.call(null, ocr_10219, 1);
                              if (cljs.core.keyword_identical_QMARK_.call(null, ocr_10219_1__10230, new cljs.core.Keyword(null, "default", "default", 2558708147))) {
                                try {
                                  var ocr_10219_3__10232 = cljs.core.nth.call(null, ocr_10219, 3);
                                  if (cljs.core.keyword_identical_QMARK_.call(null, ocr_10219_3__10232, new cljs.core.Keyword(null, "default", "default", 2558708147))) {
                                    if (!(cljs.core._EQ_.call(null, termcat.term.tt.call(null, t2), new cljs.core.Keyword(null, "dash", "dash", 1016980228)) && (typeof termcat.term.payload.call(null, t2) === "string" && cljs.core.count.call(null, termcat.term.payload.call(null, t2)) > 1))) {
                                      return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [null, termcat.term.token.call(null, new cljs.core.Keyword(null, "default", "default", 2558708147), [cljs.core.str(termcat.term.payload.call(null, t1)), cljs.core.str(termcat.term.payload.call(null, t2)), cljs.core.str(termcat.term.payload.call(null, t3))].join(""))], null);
                                    } else {
                                      return null;
                                    }
                                  } else {
                                    if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
                                      throw cljs.core.match.backtrack;
                                    } else {
                                      return null;
                                    }
                                  }
                                } catch (e10240) {
                                  if (e10240 instanceof Error) {
                                    var e__4796__auto____$3 = e10240;
                                    if (e__4796__auto____$3 === cljs.core.match.backtrack) {
                                      throw cljs.core.match.backtrack;
                                    } else {
                                      throw e__4796__auto____$3;
                                    }
                                  } else {
                                    if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
                                      throw e10240;
                                    } else {
                                      return null;
                                    }
                                  }
                                }
                              } else {
                                if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
                                  throw cljs.core.match.backtrack;
                                } else {
                                  return null;
                                }
                              }
                            } catch (e10239) {
                              if (e10239 instanceof Error) {
                                var e__4796__auto____$3 = e10239;
                                if (e__4796__auto____$3 === cljs.core.match.backtrack) {
                                  throw cljs.core.match.backtrack;
                                } else {
                                  throw e__4796__auto____$3;
                                }
                              } else {
                                if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
                                  throw e10239;
                                } else {
                                  return null;
                                }
                              }
                            }
                          } else {
                            throw e__4796__auto____$2;
                          }
                        } else {
                          if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
                            throw e10238;
                          } else {
                            return null;
                          }
                        }
                      }
                    } else {
                      throw e__4796__auto____$1;
                    }
                  } else {
                    if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
                      throw e10237;
                    } else {
                      return null;
                    }
                  }
                }
              } else {
                throw e__4796__auto__;
              }
            } else {
              if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
                throw e10236;
              } else {
                return null;
              }
            }
          }
        } else {
          if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
            throw cljs.core.match.backtrack;
          } else {
            return null;
          }
        }
      } catch (e10235) {
        if (e10235 instanceof Error) {
          var e__4796__auto__ = e10235;
          if (e__4796__auto__ === cljs.core.match.backtrack) {
            return null;
          } else {
            throw e__4796__auto__;
          }
        } else {
          if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
            throw e10235;
          } else {
            return null;
          }
        }
      }
    }();
    if (cljs.core.truth_(temp__4090__auto__)) {
      var r__6471__auto__ = temp__4090__auto__;
      return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [function() {
        var or__3403__auto__ = cljs.core.first.call(null, r__6471__auto__);
        if (cljs.core.truth_(or__3403__auto__)) {
          return or__3403__auto__;
        } else {
          return state__6468__auto__;
        }
      }(), cljs.core.concat.call(null, cljs.core.next.call(null, r__6471__auto__), cljs.core.drop.call(null, 3, input__6469__auto__))], null);
    } else {
      return null;
    }
  };
  G__10242 = function(state__6468__auto__, input__6469__auto__) {
    switch(arguments.length) {
      case 0:
        return G__10242__0.call(this);
      case 2:
        return G__10242__2.call(this, state__6468__auto__, input__6469__auto__);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  return G__10242;
}());
termcat.rules.tokenize.css_length_QMARK_ = function css_length_QMARK_(s) {
  var and__3391__auto__ = typeof s === "string";
  if (and__3391__auto__) {
    return cljs.core.re_matches.call(null, /[0-9]*\.?[0-9]+(?:px|em|ex|pt)/, s);
  } else {
    return and__3391__auto__;
  }
};
termcat.rules.tokenize.introduce_emptyline_tokens = termcat.rewrite.abstraction.call(null, function() {
  var G__10255 = null;
  var G__10255__0 = function() {
    return null;
  };
  var G__10255__2 = function(state__6468__auto__, input__6469__auto__) {
    var padded_input__6470__auto__ = cljs.core.concat.call(null, input__6469__auto__, cljs.core.repeat.call(null, null));
    var vec__10243 = cljs.core.cons.call(null, state__6468__auto__, cljs.core.take.call(null, 2, padded_input__6470__auto__));
    var state = cljs.core.nth.call(null, vec__10243, 0, null);
    var t1 = cljs.core.nth.call(null, vec__10243, 1, null);
    var t2 = cljs.core.nth.call(null, vec__10243, 2, null);
    var temp__4090__auto__ = function() {
      var ocr_10244 = clojure.core.reducers.reduce.call(null, cljs.core.conj, new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [state__6468__auto__], null), clojure.core.reducers.take.call(null, 2, clojure.core.reducers.map.call(null, termcat.term.tt, padded_input__6470__auto__)));
      try {
        if (cljs.core.vector_QMARK_.call(null, ocr_10244) && cljs.core.count.call(null, ocr_10244) === 3) {
          try {
            var ocr_10244_1__10249 = cljs.core.nth.call(null, ocr_10244, 1);
            if (cljs.core.keyword_identical_QMARK_.call(null, ocr_10244_1__10249, new cljs.core.Keyword(null, "emptyline", "emptyline", 3889609267))) {
              try {
                var ocr_10244_2__10250 = cljs.core.nth.call(null, ocr_10244, 2);
                if (cljs.core.keyword_identical_QMARK_.call(null, ocr_10244_2__10250, new cljs.core.Keyword(null, "newline", "newline", 2859826438))) {
                  return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [null, t2], null);
                } else {
                  if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
                    throw cljs.core.match.backtrack;
                  } else {
                    return null;
                  }
                }
              } catch (e10253) {
                if (e10253 instanceof Error) {
                  var e__4796__auto__ = e10253;
                  if (e__4796__auto__ === cljs.core.match.backtrack) {
                    throw cljs.core.match.backtrack;
                  } else {
                    throw e__4796__auto__;
                  }
                } else {
                  if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
                    throw e10253;
                  } else {
                    return null;
                  }
                }
              }
            } else {
              if (cljs.core.keyword_identical_QMARK_.call(null, ocr_10244_1__10249, new cljs.core.Keyword(null, "newline", "newline", 2859826438))) {
                try {
                  var ocr_10244_2__10250 = cljs.core.nth.call(null, ocr_10244, 2);
                  if (cljs.core.keyword_identical_QMARK_.call(null, ocr_10244_2__10250, new cljs.core.Keyword(null, "newline", "newline", 2859826438))) {
                    return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [null, cljs.core.with_meta.call(null, termcat.term.token.call(null, new cljs.core.Keyword(null, "emptyline", "emptyline", 3889609267)), cljs.core.meta.call(null, t1))], null);
                  } else {
                    if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
                      throw cljs.core.match.backtrack;
                    } else {
                      return null;
                    }
                  }
                } catch (e10254) {
                  if (e10254 instanceof Error) {
                    var e__4796__auto__ = e10254;
                    if (e__4796__auto__ === cljs.core.match.backtrack) {
                      throw cljs.core.match.backtrack;
                    } else {
                      throw e__4796__auto__;
                    }
                  } else {
                    if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
                      throw e10254;
                    } else {
                      return null;
                    }
                  }
                }
              } else {
                if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
                  throw cljs.core.match.backtrack;
                } else {
                  return null;
                }
              }
            }
          } catch (e10252) {
            if (e10252 instanceof Error) {
              var e__4796__auto__ = e10252;
              if (e__4796__auto__ === cljs.core.match.backtrack) {
                throw cljs.core.match.backtrack;
              } else {
                throw e__4796__auto__;
              }
            } else {
              if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
                throw e10252;
              } else {
                return null;
              }
            }
          }
        } else {
          if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
            throw cljs.core.match.backtrack;
          } else {
            return null;
          }
        }
      } catch (e10251) {
        if (e10251 instanceof Error) {
          var e__4796__auto__ = e10251;
          if (e__4796__auto__ === cljs.core.match.backtrack) {
            return null;
          } else {
            throw e__4796__auto__;
          }
        } else {
          if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
            throw e10251;
          } else {
            return null;
          }
        }
      }
    }();
    if (cljs.core.truth_(temp__4090__auto__)) {
      var r__6471__auto__ = temp__4090__auto__;
      return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [function() {
        var or__3403__auto__ = cljs.core.first.call(null, r__6471__auto__);
        if (cljs.core.truth_(or__3403__auto__)) {
          return or__3403__auto__;
        } else {
          return state__6468__auto__;
        }
      }(), cljs.core.concat.call(null, cljs.core.next.call(null, r__6471__auto__), cljs.core.drop.call(null, 2, input__6469__auto__))], null);
    } else {
      return null;
    }
  };
  G__10255 = function(state__6468__auto__, input__6469__auto__) {
    switch(arguments.length) {
      case 0:
        return G__10255__0.call(this);
      case 2:
        return G__10255__2.call(this, state__6468__auto__, input__6469__auto__);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  return G__10255;
}());
termcat.rules.tokenize.introduce_indent_tokens = termcat.rewrite.abstraction.call(null, function() {
  var G__10290 = null;
  var G__10290__0 = function() {
    return new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "indent", "indent", 4124632094), 0], null);
  };
  var G__10290__2 = function(state__6468__auto__, input__6469__auto__) {
    var padded_input__6470__auto__ = cljs.core.concat.call(null, input__6469__auto__, cljs.core.repeat.call(null, null));
    var vec__10256 = cljs.core.cons.call(null, state__6468__auto__, cljs.core.take.call(null, 2, padded_input__6470__auto__));
    var state = cljs.core.nth.call(null, vec__10256, 0, null);
    var t1 = cljs.core.nth.call(null, vec__10256, 1, null);
    var t2 = cljs.core.nth.call(null, vec__10256, 2, null);
    var temp__4090__auto__ = function() {
      var ocr_10257 = clojure.core.reducers.reduce.call(null, cljs.core.conj, new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [state__6468__auto__], null), clojure.core.reducers.take.call(null, 2, clojure.core.reducers.map.call(null, termcat.term.tt, padded_input__6470__auto__)));
      try {
        if (cljs.core.vector_QMARK_.call(null, ocr_10257) && cljs.core.count.call(null, ocr_10257) === 3) {
          try {
            var ocr_10257_1__10262 = cljs.core.nth.call(null, ocr_10257, 1);
            if (ocr_10257_1__10262 === null) {
              var indent = cljs.core._EQ_.call(null, termcat.term.tt.call(null, t2), new cljs.core.Keyword(null, "whitespace", "whitespace", 1290815983)) && typeof termcat.term.payload.call(null, t2) === "string" ? cljs.core.count.call(null, termcat.term.payload.call(null, t2)) / 2 | 0 : 0;
              var diff = indent - (new cljs.core.Keyword(null, "indent", "indent", 4124632094)).cljs$core$IFn$_invoke$arity$1(state);
              return cljs.core.concat.call(null, new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "indent", "indent", 4124632094), indent], null)], null), function() {
                var iter__4120__auto__ = function(indent, diff, ocr_10257_1__10262, ocr_10257) {
                  return function iter__10266(s__10267) {
                    return new cljs.core.LazySeq(null, function(indent, diff, ocr_10257_1__10262, ocr_10257) {
                      return function() {
                        var s__10267__$1 = s__10267;
                        while (true) {
                          var temp__4092__auto__ = cljs.core.seq.call(null, s__10267__$1);
                          if (temp__4092__auto__) {
                            var s__10267__$2 = temp__4092__auto__;
                            if (cljs.core.chunked_seq_QMARK_.call(null, s__10267__$2)) {
                              var c__4118__auto__ = cljs.core.chunk_first.call(null, s__10267__$2);
                              var size__4119__auto__ = cljs.core.count.call(null, c__4118__auto__);
                              var b__10269 = cljs.core.chunk_buffer.call(null, size__4119__auto__);
                              if (function() {
                                var i__10268 = 0;
                                while (true) {
                                  if (i__10268 < size__4119__auto__) {
                                    var x = cljs.core._nth.call(null, c__4118__auto__, i__10268);
                                    cljs.core.chunk_append.call(null, b__10269, cljs.core.with_meta.call(null, termcat.term.rdelim.call(null, new cljs.core.Keyword(null, "indent", "indent", 4124632094)), cljs.core.meta.call(null, t1)));
                                    var G__10291 = i__10268 + 1;
                                    i__10268 = G__10291;
                                    continue;
                                  } else {
                                    return true;
                                  }
                                  break;
                                }
                              }()) {
                                return cljs.core.chunk_cons.call(null, cljs.core.chunk.call(null, b__10269), iter__10266.call(null, cljs.core.chunk_rest.call(null, s__10267__$2)));
                              } else {
                                return cljs.core.chunk_cons.call(null, cljs.core.chunk.call(null, b__10269), null);
                              }
                            } else {
                              var x = cljs.core.first.call(null, s__10267__$2);
                              return cljs.core.cons.call(null, cljs.core.with_meta.call(null, termcat.term.rdelim.call(null, new cljs.core.Keyword(null, "indent", "indent", 4124632094)), cljs.core.meta.call(null, t1)), iter__10266.call(null, cljs.core.rest.call(null, s__10267__$2)));
                            }
                          } else {
                            return null;
                          }
                          break;
                        }
                      };
                    }(indent, diff, ocr_10257_1__10262, ocr_10257), null, null);
                  };
                }(indent, diff, ocr_10257_1__10262, ocr_10257);
                return iter__4120__auto__.call(null, cljs.core.range.call(null, -diff));
              }(), cljs.core.truth_(t1) ? new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [t1], null) : null, function() {
                var iter__4120__auto__ = function(indent, diff, ocr_10257_1__10262, ocr_10257) {
                  return function iter__10270(s__10271) {
                    return new cljs.core.LazySeq(null, function(indent, diff, ocr_10257_1__10262, ocr_10257) {
                      return function() {
                        var s__10271__$1 = s__10271;
                        while (true) {
                          var temp__4092__auto__ = cljs.core.seq.call(null, s__10271__$1);
                          if (temp__4092__auto__) {
                            var s__10271__$2 = temp__4092__auto__;
                            if (cljs.core.chunked_seq_QMARK_.call(null, s__10271__$2)) {
                              var c__4118__auto__ = cljs.core.chunk_first.call(null, s__10271__$2);
                              var size__4119__auto__ = cljs.core.count.call(null, c__4118__auto__);
                              var b__10273 = cljs.core.chunk_buffer.call(null, size__4119__auto__);
                              if (function() {
                                var i__10272 = 0;
                                while (true) {
                                  if (i__10272 < size__4119__auto__) {
                                    var x = cljs.core._nth.call(null, c__4118__auto__, i__10272);
                                    cljs.core.chunk_append.call(null, b__10273, cljs.core.with_meta.call(null, termcat.term.ldelim.call(null, new cljs.core.Keyword(null, "indent", "indent", 4124632094)), cljs.core.meta.call(null, t1)));
                                    var G__10292 = i__10272 + 1;
                                    i__10272 = G__10292;
                                    continue;
                                  } else {
                                    return true;
                                  }
                                  break;
                                }
                              }()) {
                                return cljs.core.chunk_cons.call(null, cljs.core.chunk.call(null, b__10273), iter__10270.call(null, cljs.core.chunk_rest.call(null, s__10271__$2)));
                              } else {
                                return cljs.core.chunk_cons.call(null, cljs.core.chunk.call(null, b__10273), null);
                              }
                            } else {
                              var x = cljs.core.first.call(null, s__10271__$2);
                              return cljs.core.cons.call(null, cljs.core.with_meta.call(null, termcat.term.ldelim.call(null, new cljs.core.Keyword(null, "indent", "indent", 4124632094)), cljs.core.meta.call(null, t1)), iter__10270.call(null, cljs.core.rest.call(null, s__10271__$2)));
                            }
                          } else {
                            return null;
                          }
                          break;
                        }
                      };
                    }(indent, diff, ocr_10257_1__10262, ocr_10257), null, null);
                  };
                }(indent, diff, ocr_10257_1__10262, ocr_10257);
                return iter__4120__auto__.call(null, cljs.core.range.call(null, diff));
              }(), new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [t2], null));
            } else {
              if (cljs.core.keyword_identical_QMARK_.call(null, ocr_10257_1__10262, new cljs.core.Keyword(null, "newline", "newline", 2859826438))) {
                var indent = cljs.core._EQ_.call(null, termcat.term.tt.call(null, t2), new cljs.core.Keyword(null, "whitespace", "whitespace", 1290815983)) && typeof termcat.term.payload.call(null, t2) === "string" ? cljs.core.count.call(null, termcat.term.payload.call(null, t2)) / 2 | 0 : 0;
                var diff = indent - (new cljs.core.Keyword(null, "indent", "indent", 4124632094)).cljs$core$IFn$_invoke$arity$1(state);
                return cljs.core.concat.call(null, new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "indent", "indent", 4124632094), indent], null)], null), function() {
                  var iter__4120__auto__ = function(indent, diff, ocr_10257_1__10262, ocr_10257) {
                    return function iter__10274(s__10275) {
                      return new cljs.core.LazySeq(null, function(indent, diff, ocr_10257_1__10262, ocr_10257) {
                        return function() {
                          var s__10275__$1 = s__10275;
                          while (true) {
                            var temp__4092__auto__ = cljs.core.seq.call(null, s__10275__$1);
                            if (temp__4092__auto__) {
                              var s__10275__$2 = temp__4092__auto__;
                              if (cljs.core.chunked_seq_QMARK_.call(null, s__10275__$2)) {
                                var c__4118__auto__ = cljs.core.chunk_first.call(null, s__10275__$2);
                                var size__4119__auto__ = cljs.core.count.call(null, c__4118__auto__);
                                var b__10277 = cljs.core.chunk_buffer.call(null, size__4119__auto__);
                                if (function() {
                                  var i__10276 = 0;
                                  while (true) {
                                    if (i__10276 < size__4119__auto__) {
                                      var x = cljs.core._nth.call(null, c__4118__auto__, i__10276);
                                      cljs.core.chunk_append.call(null, b__10277, cljs.core.with_meta.call(null, termcat.term.rdelim.call(null, new cljs.core.Keyword(null, "indent", "indent", 4124632094)), cljs.core.meta.call(null, t1)));
                                      var G__10293 = i__10276 + 1;
                                      i__10276 = G__10293;
                                      continue;
                                    } else {
                                      return true;
                                    }
                                    break;
                                  }
                                }()) {
                                  return cljs.core.chunk_cons.call(null, cljs.core.chunk.call(null, b__10277), iter__10274.call(null, cljs.core.chunk_rest.call(null, s__10275__$2)));
                                } else {
                                  return cljs.core.chunk_cons.call(null, cljs.core.chunk.call(null, b__10277), null);
                                }
                              } else {
                                var x = cljs.core.first.call(null, s__10275__$2);
                                return cljs.core.cons.call(null, cljs.core.with_meta.call(null, termcat.term.rdelim.call(null, new cljs.core.Keyword(null, "indent", "indent", 4124632094)), cljs.core.meta.call(null, t1)), iter__10274.call(null, cljs.core.rest.call(null, s__10275__$2)));
                              }
                            } else {
                              return null;
                            }
                            break;
                          }
                        };
                      }(indent, diff, ocr_10257_1__10262, ocr_10257), null, null);
                    };
                  }(indent, diff, ocr_10257_1__10262, ocr_10257);
                  return iter__4120__auto__.call(null, cljs.core.range.call(null, -diff));
                }(), cljs.core.truth_(t1) ? new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [t1], null) : null, function() {
                  var iter__4120__auto__ = function(indent, diff, ocr_10257_1__10262, ocr_10257) {
                    return function iter__10278(s__10279) {
                      return new cljs.core.LazySeq(null, function(indent, diff, ocr_10257_1__10262, ocr_10257) {
                        return function() {
                          var s__10279__$1 = s__10279;
                          while (true) {
                            var temp__4092__auto__ = cljs.core.seq.call(null, s__10279__$1);
                            if (temp__4092__auto__) {
                              var s__10279__$2 = temp__4092__auto__;
                              if (cljs.core.chunked_seq_QMARK_.call(null, s__10279__$2)) {
                                var c__4118__auto__ = cljs.core.chunk_first.call(null, s__10279__$2);
                                var size__4119__auto__ = cljs.core.count.call(null, c__4118__auto__);
                                var b__10281 = cljs.core.chunk_buffer.call(null, size__4119__auto__);
                                if (function() {
                                  var i__10280 = 0;
                                  while (true) {
                                    if (i__10280 < size__4119__auto__) {
                                      var x = cljs.core._nth.call(null, c__4118__auto__, i__10280);
                                      cljs.core.chunk_append.call(null, b__10281, cljs.core.with_meta.call(null, termcat.term.ldelim.call(null, new cljs.core.Keyword(null, "indent", "indent", 4124632094)), cljs.core.meta.call(null, t1)));
                                      var G__10294 = i__10280 + 1;
                                      i__10280 = G__10294;
                                      continue;
                                    } else {
                                      return true;
                                    }
                                    break;
                                  }
                                }()) {
                                  return cljs.core.chunk_cons.call(null, cljs.core.chunk.call(null, b__10281), iter__10278.call(null, cljs.core.chunk_rest.call(null, s__10279__$2)));
                                } else {
                                  return cljs.core.chunk_cons.call(null, cljs.core.chunk.call(null, b__10281), null);
                                }
                              } else {
                                var x = cljs.core.first.call(null, s__10279__$2);
                                return cljs.core.cons.call(null, cljs.core.with_meta.call(null, termcat.term.ldelim.call(null, new cljs.core.Keyword(null, "indent", "indent", 4124632094)), cljs.core.meta.call(null, t1)), iter__10278.call(null, cljs.core.rest.call(null, s__10279__$2)));
                              }
                            } else {
                              return null;
                            }
                            break;
                          }
                        };
                      }(indent, diff, ocr_10257_1__10262, ocr_10257), null, null);
                    };
                  }(indent, diff, ocr_10257_1__10262, ocr_10257);
                  return iter__4120__auto__.call(null, cljs.core.range.call(null, diff));
                }(), new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [t2], null));
              } else {
                if (cljs.core.keyword_identical_QMARK_.call(null, ocr_10257_1__10262, new cljs.core.Keyword(null, "emptyline", "emptyline", 3889609267))) {
                  var indent = cljs.core._EQ_.call(null, termcat.term.tt.call(null, t2), new cljs.core.Keyword(null, "whitespace", "whitespace", 1290815983)) && typeof termcat.term.payload.call(null, t2) === "string" ? cljs.core.count.call(null, termcat.term.payload.call(null, t2)) / 2 | 0 : 0;
                  var diff = indent - (new cljs.core.Keyword(null, "indent", "indent", 4124632094)).cljs$core$IFn$_invoke$arity$1(state);
                  return cljs.core.concat.call(null, new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "indent", "indent", 4124632094), indent], null)], null), function() {
                    var iter__4120__auto__ = function(indent, diff, ocr_10257_1__10262, ocr_10257) {
                      return function iter__10282(s__10283) {
                        return new cljs.core.LazySeq(null, function(indent, diff, ocr_10257_1__10262, ocr_10257) {
                          return function() {
                            var s__10283__$1 = s__10283;
                            while (true) {
                              var temp__4092__auto__ = cljs.core.seq.call(null, s__10283__$1);
                              if (temp__4092__auto__) {
                                var s__10283__$2 = temp__4092__auto__;
                                if (cljs.core.chunked_seq_QMARK_.call(null, s__10283__$2)) {
                                  var c__4118__auto__ = cljs.core.chunk_first.call(null, s__10283__$2);
                                  var size__4119__auto__ = cljs.core.count.call(null, c__4118__auto__);
                                  var b__10285 = cljs.core.chunk_buffer.call(null, size__4119__auto__);
                                  if (function() {
                                    var i__10284 = 0;
                                    while (true) {
                                      if (i__10284 < size__4119__auto__) {
                                        var x = cljs.core._nth.call(null, c__4118__auto__, i__10284);
                                        cljs.core.chunk_append.call(null, b__10285, cljs.core.with_meta.call(null, termcat.term.rdelim.call(null, new cljs.core.Keyword(null, "indent", "indent", 4124632094)), cljs.core.meta.call(null, t1)));
                                        var G__10295 = i__10284 + 1;
                                        i__10284 = G__10295;
                                        continue;
                                      } else {
                                        return true;
                                      }
                                      break;
                                    }
                                  }()) {
                                    return cljs.core.chunk_cons.call(null, cljs.core.chunk.call(null, b__10285), iter__10282.call(null, cljs.core.chunk_rest.call(null, s__10283__$2)));
                                  } else {
                                    return cljs.core.chunk_cons.call(null, cljs.core.chunk.call(null, b__10285), null);
                                  }
                                } else {
                                  var x = cljs.core.first.call(null, s__10283__$2);
                                  return cljs.core.cons.call(null, cljs.core.with_meta.call(null, termcat.term.rdelim.call(null, new cljs.core.Keyword(null, "indent", "indent", 4124632094)), cljs.core.meta.call(null, t1)), iter__10282.call(null, cljs.core.rest.call(null, s__10283__$2)));
                                }
                              } else {
                                return null;
                              }
                              break;
                            }
                          };
                        }(indent, diff, ocr_10257_1__10262, ocr_10257), null, null);
                      };
                    }(indent, diff, ocr_10257_1__10262, ocr_10257);
                    return iter__4120__auto__.call(null, cljs.core.range.call(null, -diff));
                  }(), cljs.core.truth_(t1) ? new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [t1], null) : null, function() {
                    var iter__4120__auto__ = function(indent, diff, ocr_10257_1__10262, ocr_10257) {
                      return function iter__10286(s__10287) {
                        return new cljs.core.LazySeq(null, function(indent, diff, ocr_10257_1__10262, ocr_10257) {
                          return function() {
                            var s__10287__$1 = s__10287;
                            while (true) {
                              var temp__4092__auto__ = cljs.core.seq.call(null, s__10287__$1);
                              if (temp__4092__auto__) {
                                var s__10287__$2 = temp__4092__auto__;
                                if (cljs.core.chunked_seq_QMARK_.call(null, s__10287__$2)) {
                                  var c__4118__auto__ = cljs.core.chunk_first.call(null, s__10287__$2);
                                  var size__4119__auto__ = cljs.core.count.call(null, c__4118__auto__);
                                  var b__10289 = cljs.core.chunk_buffer.call(null, size__4119__auto__);
                                  if (function() {
                                    var i__10288 = 0;
                                    while (true) {
                                      if (i__10288 < size__4119__auto__) {
                                        var x = cljs.core._nth.call(null, c__4118__auto__, i__10288);
                                        cljs.core.chunk_append.call(null, b__10289, cljs.core.with_meta.call(null, termcat.term.ldelim.call(null, new cljs.core.Keyword(null, "indent", "indent", 4124632094)), cljs.core.meta.call(null, t1)));
                                        var G__10296 = i__10288 + 1;
                                        i__10288 = G__10296;
                                        continue;
                                      } else {
                                        return true;
                                      }
                                      break;
                                    }
                                  }()) {
                                    return cljs.core.chunk_cons.call(null, cljs.core.chunk.call(null, b__10289), iter__10286.call(null, cljs.core.chunk_rest.call(null, s__10287__$2)));
                                  } else {
                                    return cljs.core.chunk_cons.call(null, cljs.core.chunk.call(null, b__10289), null);
                                  }
                                } else {
                                  var x = cljs.core.first.call(null, s__10287__$2);
                                  return cljs.core.cons.call(null, cljs.core.with_meta.call(null, termcat.term.ldelim.call(null, new cljs.core.Keyword(null, "indent", "indent", 4124632094)), cljs.core.meta.call(null, t1)), iter__10286.call(null, cljs.core.rest.call(null, s__10287__$2)));
                                }
                              } else {
                                return null;
                              }
                              break;
                            }
                          };
                        }(indent, diff, ocr_10257_1__10262, ocr_10257), null, null);
                      };
                    }(indent, diff, ocr_10257_1__10262, ocr_10257);
                    return iter__4120__auto__.call(null, cljs.core.range.call(null, diff));
                  }(), new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [t2], null));
                } else {
                  if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
                    throw cljs.core.match.backtrack;
                  } else {
                    return null;
                  }
                }
              }
            }
          } catch (e10265) {
            if (e10265 instanceof Error) {
              var e__4796__auto__ = e10265;
              if (e__4796__auto__ === cljs.core.match.backtrack) {
                throw cljs.core.match.backtrack;
              } else {
                throw e__4796__auto__;
              }
            } else {
              if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
                throw e10265;
              } else {
                return null;
              }
            }
          }
        } else {
          if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
            throw cljs.core.match.backtrack;
          } else {
            return null;
          }
        }
      } catch (e10264) {
        if (e10264 instanceof Error) {
          var e__4796__auto__ = e10264;
          if (e__4796__auto__ === cljs.core.match.backtrack) {
            return null;
          } else {
            throw e__4796__auto__;
          }
        } else {
          if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
            throw e10264;
          } else {
            return null;
          }
        }
      }
    }();
    if (cljs.core.truth_(temp__4090__auto__)) {
      var r__6471__auto__ = temp__4090__auto__;
      return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [function() {
        var or__3403__auto__ = cljs.core.first.call(null, r__6471__auto__);
        if (cljs.core.truth_(or__3403__auto__)) {
          return or__3403__auto__;
        } else {
          return state__6468__auto__;
        }
      }(), cljs.core.concat.call(null, cljs.core.next.call(null, r__6471__auto__), cljs.core.drop.call(null, 2, input__6469__auto__))], null);
    } else {
      return null;
    }
  };
  G__10290 = function(state__6468__auto__, input__6469__auto__) {
    switch(arguments.length) {
      case 0:
        return G__10290__0.call(this);
      case 2:
        return G__10290__2.call(this, state__6468__auto__, input__6469__auto__);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  return G__10290;
}());
termcat.rules.tokenize.remove_superfluous_whitespace = termcat.rewrite.abstraction.call(null, function() {
  var G__10324 = null;
  var G__10324__0 = function() {
    return null;
  };
  var G__10324__2 = function(state__6468__auto__, input__6469__auto__) {
    var padded_input__6470__auto__ = cljs.core.concat.call(null, input__6469__auto__, cljs.core.repeat.call(null, null));
    var vec__10297 = cljs.core.cons.call(null, state__6468__auto__, cljs.core.take.call(null, 2, padded_input__6470__auto__));
    var state = cljs.core.nth.call(null, vec__10297, 0, null);
    var t1 = cljs.core.nth.call(null, vec__10297, 1, null);
    var t2 = cljs.core.nth.call(null, vec__10297, 2, null);
    var temp__4090__auto__ = function() {
      var ocr_10298 = clojure.core.reducers.reduce.call(null, cljs.core.conj, new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [state__6468__auto__], null), clojure.core.reducers.take.call(null, 2, clojure.core.reducers.map.call(null, termcat.term.tt, padded_input__6470__auto__)));
      try {
        if (cljs.core.vector_QMARK_.call(null, ocr_10298) && cljs.core.count.call(null, ocr_10298) === 3) {
          try {
            var ocr_10298_1__10303 = cljs.core.nth.call(null, ocr_10298, 1);
            if (cljs.core.vector_QMARK_.call(null, ocr_10298_1__10303) && cljs.core.count.call(null, ocr_10298_1__10303) === 2) {
              try {
                var ocr_10298_1__10303_0__10305 = cljs.core.nth.call(null, ocr_10298_1__10303, 0);
                if (cljs.core.keyword_identical_QMARK_.call(null, ocr_10298_1__10303_0__10305, new cljs.core.Keyword(null, "ldelim", "ldelim", 4201320693))) {
                  try {
                    var ocr_10298_1__10303_1__10306 = cljs.core.nth.call(null, ocr_10298_1__10303, 1);
                    if (cljs.core.keyword_identical_QMARK_.call(null, ocr_10298_1__10303_1__10306, new cljs.core.Keyword(null, "indent", "indent", 4124632094))) {
                      try {
                        var ocr_10298_2__10304 = cljs.core.nth.call(null, ocr_10298, 2);
                        if (cljs.core.keyword_identical_QMARK_.call(null, ocr_10298_2__10304, new cljs.core.Keyword(null, "whitespace", "whitespace", 1290815983))) {
                          return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [null, t1], null);
                        } else {
                          if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
                            throw cljs.core.match.backtrack;
                          } else {
                            return null;
                          }
                        }
                      } catch (e10321) {
                        if (e10321 instanceof Error) {
                          var e__4796__auto__ = e10321;
                          if (e__4796__auto__ === cljs.core.match.backtrack) {
                            throw cljs.core.match.backtrack;
                          } else {
                            throw e__4796__auto__;
                          }
                        } else {
                          if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
                            throw e10321;
                          } else {
                            return null;
                          }
                        }
                      }
                    } else {
                      if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
                        throw cljs.core.match.backtrack;
                      } else {
                        return null;
                      }
                    }
                  } catch (e10320) {
                    if (e10320 instanceof Error) {
                      var e__4796__auto__ = e10320;
                      if (e__4796__auto__ === cljs.core.match.backtrack) {
                        throw cljs.core.match.backtrack;
                      } else {
                        throw e__4796__auto__;
                      }
                    } else {
                      if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
                        throw e10320;
                      } else {
                        return null;
                      }
                    }
                  }
                } else {
                  if (cljs.core.keyword_identical_QMARK_.call(null, ocr_10298_1__10303_0__10305, new cljs.core.Keyword(null, "rdelim", "rdelim", 4373095599))) {
                    try {
                      var ocr_10298_1__10303_1__10306 = cljs.core.nth.call(null, ocr_10298_1__10303, 1);
                      if (cljs.core.keyword_identical_QMARK_.call(null, ocr_10298_1__10303_1__10306, new cljs.core.Keyword(null, "indent", "indent", 4124632094))) {
                        try {
                          var ocr_10298_2__10304 = cljs.core.nth.call(null, ocr_10298, 2);
                          if (cljs.core.keyword_identical_QMARK_.call(null, ocr_10298_2__10304, new cljs.core.Keyword(null, "whitespace", "whitespace", 1290815983))) {
                            return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [null, t1], null);
                          } else {
                            if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
                              throw cljs.core.match.backtrack;
                            } else {
                              return null;
                            }
                          }
                        } catch (e10323) {
                          if (e10323 instanceof Error) {
                            var e__4796__auto__ = e10323;
                            if (e__4796__auto__ === cljs.core.match.backtrack) {
                              throw cljs.core.match.backtrack;
                            } else {
                              throw e__4796__auto__;
                            }
                          } else {
                            if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
                              throw e10323;
                            } else {
                              return null;
                            }
                          }
                        }
                      } else {
                        if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
                          throw cljs.core.match.backtrack;
                        } else {
                          return null;
                        }
                      }
                    } catch (e10322) {
                      if (e10322 instanceof Error) {
                        var e__4796__auto__ = e10322;
                        if (e__4796__auto__ === cljs.core.match.backtrack) {
                          throw cljs.core.match.backtrack;
                        } else {
                          throw e__4796__auto__;
                        }
                      } else {
                        if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
                          throw e10322;
                        } else {
                          return null;
                        }
                      }
                    }
                  } else {
                    if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
                      throw cljs.core.match.backtrack;
                    } else {
                      return null;
                    }
                  }
                }
              } catch (e10319) {
                if (e10319 instanceof Error) {
                  var e__4796__auto__ = e10319;
                  if (e__4796__auto__ === cljs.core.match.backtrack) {
                    throw cljs.core.match.backtrack;
                  } else {
                    throw e__4796__auto__;
                  }
                } else {
                  if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
                    throw e10319;
                  } else {
                    return null;
                  }
                }
              }
            } else {
              if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
                throw cljs.core.match.backtrack;
              } else {
                return null;
              }
            }
          } catch (e10310) {
            if (e10310 instanceof Error) {
              var e__4796__auto__ = e10310;
              if (e__4796__auto__ === cljs.core.match.backtrack) {
                try {
                  var ocr_10298_1__10303 = cljs.core.nth.call(null, ocr_10298, 1);
                  if (cljs.core.keyword_identical_QMARK_.call(null, ocr_10298_1__10303, new cljs.core.Keyword(null, "newline", "newline", 2859826438))) {
                    try {
                      var ocr_10298_2__10304 = cljs.core.nth.call(null, ocr_10298, 2);
                      if (cljs.core.keyword_identical_QMARK_.call(null, ocr_10298_2__10304, new cljs.core.Keyword(null, "whitespace", "whitespace", 1290815983))) {
                        return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [null, t1], null);
                      } else {
                        if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
                          throw cljs.core.match.backtrack;
                        } else {
                          return null;
                        }
                      }
                    } catch (e10312) {
                      if (e10312 instanceof Error) {
                        var e__4796__auto____$1 = e10312;
                        if (e__4796__auto____$1 === cljs.core.match.backtrack) {
                          throw cljs.core.match.backtrack;
                        } else {
                          throw e__4796__auto____$1;
                        }
                      } else {
                        if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
                          throw e10312;
                        } else {
                          return null;
                        }
                      }
                    }
                  } else {
                    if (cljs.core.keyword_identical_QMARK_.call(null, ocr_10298_1__10303, new cljs.core.Keyword(null, "emptyline", "emptyline", 3889609267))) {
                      try {
                        var ocr_10298_2__10304 = cljs.core.nth.call(null, ocr_10298, 2);
                        if (cljs.core.keyword_identical_QMARK_.call(null, ocr_10298_2__10304, new cljs.core.Keyword(null, "whitespace", "whitespace", 1290815983))) {
                          return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [null, t1], null);
                        } else {
                          if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
                            throw cljs.core.match.backtrack;
                          } else {
                            return null;
                          }
                        }
                      } catch (e10313) {
                        if (e10313 instanceof Error) {
                          var e__4796__auto____$1 = e10313;
                          if (e__4796__auto____$1 === cljs.core.match.backtrack) {
                            throw cljs.core.match.backtrack;
                          } else {
                            throw e__4796__auto____$1;
                          }
                        } else {
                          if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
                            throw e10313;
                          } else {
                            return null;
                          }
                        }
                      }
                    } else {
                      if (cljs.core.keyword_identical_QMARK_.call(null, ocr_10298_1__10303, new cljs.core.Keyword(null, "whitespace", "whitespace", 1290815983))) {
                        try {
                          var ocr_10298_2__10304 = cljs.core.nth.call(null, ocr_10298, 2);
                          if (cljs.core.vector_QMARK_.call(null, ocr_10298_2__10304) && cljs.core.count.call(null, ocr_10298_2__10304) === 2) {
                            try {
                              var ocr_10298_2__10304_0__10307 = cljs.core.nth.call(null, ocr_10298_2__10304, 0);
                              if (cljs.core.keyword_identical_QMARK_.call(null, ocr_10298_2__10304_0__10307, new cljs.core.Keyword(null, "ldelim", "ldelim", 4201320693))) {
                                try {
                                  var ocr_10298_2__10304_1__10308 = cljs.core.nth.call(null, ocr_10298_2__10304, 1);
                                  if (cljs.core.keyword_identical_QMARK_.call(null, ocr_10298_2__10304_1__10308, new cljs.core.Keyword(null, "indent", "indent", 4124632094))) {
                                    return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [null, t2], null);
                                  } else {
                                    if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
                                      throw cljs.core.match.backtrack;
                                    } else {
                                      return null;
                                    }
                                  }
                                } catch (e10317) {
                                  if (e10317 instanceof Error) {
                                    var e__4796__auto____$1 = e10317;
                                    if (e__4796__auto____$1 === cljs.core.match.backtrack) {
                                      throw cljs.core.match.backtrack;
                                    } else {
                                      throw e__4796__auto____$1;
                                    }
                                  } else {
                                    if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
                                      throw e10317;
                                    } else {
                                      return null;
                                    }
                                  }
                                }
                              } else {
                                if (cljs.core.keyword_identical_QMARK_.call(null, ocr_10298_2__10304_0__10307, new cljs.core.Keyword(null, "rdelim", "rdelim", 4373095599))) {
                                  try {
                                    var ocr_10298_2__10304_1__10308 = cljs.core.nth.call(null, ocr_10298_2__10304, 1);
                                    if (cljs.core.keyword_identical_QMARK_.call(null, ocr_10298_2__10304_1__10308, new cljs.core.Keyword(null, "indent", "indent", 4124632094))) {
                                      return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [null, t2], null);
                                    } else {
                                      if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
                                        throw cljs.core.match.backtrack;
                                      } else {
                                        return null;
                                      }
                                    }
                                  } catch (e10318) {
                                    if (e10318 instanceof Error) {
                                      var e__4796__auto____$1 = e10318;
                                      if (e__4796__auto____$1 === cljs.core.match.backtrack) {
                                        throw cljs.core.match.backtrack;
                                      } else {
                                        throw e__4796__auto____$1;
                                      }
                                    } else {
                                      if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
                                        throw e10318;
                                      } else {
                                        return null;
                                      }
                                    }
                                  }
                                } else {
                                  if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
                                    throw cljs.core.match.backtrack;
                                  } else {
                                    return null;
                                  }
                                }
                              }
                            } catch (e10316) {
                              if (e10316 instanceof Error) {
                                var e__4796__auto____$1 = e10316;
                                if (e__4796__auto____$1 === cljs.core.match.backtrack) {
                                  throw cljs.core.match.backtrack;
                                } else {
                                  throw e__4796__auto____$1;
                                }
                              } else {
                                if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
                                  throw e10316;
                                } else {
                                  return null;
                                }
                              }
                            }
                          } else {
                            if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
                              throw cljs.core.match.backtrack;
                            } else {
                              return null;
                            }
                          }
                        } catch (e10314) {
                          if (e10314 instanceof Error) {
                            var e__4796__auto____$1 = e10314;
                            if (e__4796__auto____$1 === cljs.core.match.backtrack) {
                              try {
                                var ocr_10298_2__10304 = cljs.core.nth.call(null, ocr_10298, 2);
                                if (cljs.core.keyword_identical_QMARK_.call(null, ocr_10298_2__10304, new cljs.core.Keyword(null, "newline", "newline", 2859826438))) {
                                  return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [null, t2], null);
                                } else {
                                  if (cljs.core.keyword_identical_QMARK_.call(null, ocr_10298_2__10304, new cljs.core.Keyword(null, "emptyline", "emptyline", 3889609267))) {
                                    return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [null, t2], null);
                                  } else {
                                    if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
                                      throw cljs.core.match.backtrack;
                                    } else {
                                      return null;
                                    }
                                  }
                                }
                              } catch (e10315) {
                                if (e10315 instanceof Error) {
                                  var e__4796__auto____$2 = e10315;
                                  if (e__4796__auto____$2 === cljs.core.match.backtrack) {
                                    throw cljs.core.match.backtrack;
                                  } else {
                                    throw e__4796__auto____$2;
                                  }
                                } else {
                                  if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
                                    throw e10315;
                                  } else {
                                    return null;
                                  }
                                }
                              }
                            } else {
                              throw e__4796__auto____$1;
                            }
                          } else {
                            if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
                              throw e10314;
                            } else {
                              return null;
                            }
                          }
                        }
                      } else {
                        if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
                          throw cljs.core.match.backtrack;
                        } else {
                          return null;
                        }
                      }
                    }
                  }
                } catch (e10311) {
                  if (e10311 instanceof Error) {
                    var e__4796__auto____$1 = e10311;
                    if (e__4796__auto____$1 === cljs.core.match.backtrack) {
                      throw cljs.core.match.backtrack;
                    } else {
                      throw e__4796__auto____$1;
                    }
                  } else {
                    if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
                      throw e10311;
                    } else {
                      return null;
                    }
                  }
                }
              } else {
                throw e__4796__auto__;
              }
            } else {
              if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
                throw e10310;
              } else {
                return null;
              }
            }
          }
        } else {
          if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
            throw cljs.core.match.backtrack;
          } else {
            return null;
          }
        }
      } catch (e10309) {
        if (e10309 instanceof Error) {
          var e__4796__auto__ = e10309;
          if (e__4796__auto__ === cljs.core.match.backtrack) {
            return null;
          } else {
            throw e__4796__auto__;
          }
        } else {
          if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
            throw e10309;
          } else {
            return null;
          }
        }
      }
    }();
    if (cljs.core.truth_(temp__4090__auto__)) {
      var r__6471__auto__ = temp__4090__auto__;
      return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [function() {
        var or__3403__auto__ = cljs.core.first.call(null, r__6471__auto__);
        if (cljs.core.truth_(or__3403__auto__)) {
          return or__3403__auto__;
        } else {
          return state__6468__auto__;
        }
      }(), cljs.core.concat.call(null, cljs.core.next.call(null, r__6471__auto__), cljs.core.drop.call(null, 2, input__6469__auto__))], null);
    } else {
      return null;
    }
  };
  G__10324 = function(state__6468__auto__, input__6469__auto__) {
    switch(arguments.length) {
      case 0:
        return G__10324__0.call(this);
      case 2:
        return G__10324__2.call(this, state__6468__auto__, input__6469__auto__);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  return G__10324;
}());
termcat.rules.tokenize.item_type = function item_type(tok) {
  var G__10326 = termcat.term.payload.call(null, tok);
  if (cljs.core._EQ_.call(null, "######", G__10326)) {
    return new cljs.core.Keyword(null, "h6", "h6", 1013907520);
  } else {
    if (cljs.core._EQ_.call(null, "#####", G__10326)) {
      return new cljs.core.Keyword(null, "h5", "h5", 1013907519);
    } else {
      if (cljs.core._EQ_.call(null, "####", G__10326)) {
        return new cljs.core.Keyword(null, "h4", "h4", 1013907518);
      } else {
        if (cljs.core._EQ_.call(null, "###", G__10326)) {
          return new cljs.core.Keyword(null, "h3", "h3", 1013907517);
        } else {
          if (cljs.core._EQ_.call(null, "##", G__10326)) {
            return new cljs.core.Keyword(null, "h2", "h2", 1013907516);
          } else {
            if (cljs.core._EQ_.call(null, "#", G__10326)) {
              return new cljs.core.Keyword(null, "h1", "h1", 1013907515);
            } else {
              if (cljs.core._EQ_.call(null, "-", G__10326)) {
                return new cljs.core.Keyword(null, "bullet", "bullet", 3930937460);
              } else {
                if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
                  return null;
                } else {
                  return null;
                }
              }
            }
          }
        }
      }
    }
  }
};
termcat.rules.tokenize.introduce_item_tokens = termcat.rewrite.abstraction.call(null, function() {
  var G__10403 = null;
  var G__10403__0 = function() {
    return new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null, "in-bullet", "in-bullet", 2845348380), false, new cljs.core.Keyword(null, "item-type", "item-type", 3121552678), null, new cljs.core.Keyword(null, "prev-state", "prev-state", 3562322921), null], null);
  };
  var G__10403__2 = function(state__6468__auto__, input__6469__auto__) {
    var padded_input__6470__auto__ = cljs.core.concat.call(null, input__6469__auto__, cljs.core.repeat.call(null, null));
    var vec__10327 = cljs.core.cons.call(null, state__6468__auto__, cljs.core.take.call(null, 3, padded_input__6470__auto__));
    var state = cljs.core.nth.call(null, vec__10327, 0, null);
    var t1 = cljs.core.nth.call(null, vec__10327, 1, null);
    var t2 = cljs.core.nth.call(null, vec__10327, 2, null);
    var t3 = cljs.core.nth.call(null, vec__10327, 3, null);
    var temp__4090__auto__ = function() {
      var ocr_10328 = clojure.core.reducers.reduce.call(null, cljs.core.conj, new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [state__6468__auto__], null), clojure.core.reducers.take.call(null, 3, clojure.core.reducers.map.call(null, termcat.term.tt, padded_input__6470__auto__)));
      try {
        if (cljs.core.vector_QMARK_.call(null, ocr_10328) && cljs.core.count.call(null, ocr_10328) === 4) {
          try {
            var ocr_10328_1__10341 = cljs.core.nth.call(null, ocr_10328, 1);
            if (cljs.core.keyword_identical_QMARK_.call(null, ocr_10328_1__10341, new cljs.core.Keyword(null, "newline", "newline", 2859826438))) {
              try {
                var ocr_10328_0__10340 = cljs.core.nth.call(null, ocr_10328, 0);
                if (function() {
                  var G__10398 = ocr_10328_0__10340;
                  if (G__10398) {
                    var bit__4053__auto__ = G__10398.cljs$lang$protocol_mask$partition0$ & 256;
                    if (bit__4053__auto__ || G__10398.cljs$core$ILookup$) {
                      return true;
                    } else {
                      if (!G__10398.cljs$lang$protocol_mask$partition0$) {
                        return cljs.core.native_satisfies_QMARK_.call(null, cljs.core.ILookup, G__10398);
                      } else {
                        return false;
                      }
                    }
                  } else {
                    return cljs.core.native_satisfies_QMARK_.call(null, cljs.core.ILookup, G__10398);
                  }
                }()) {
                  try {
                    var ocr_10328_0__10340_in_bullet__10346 = cljs.core.get.call(null, ocr_10328_0__10340, new cljs.core.Keyword(null, "in-bullet", "in-bullet", 2845348380), new cljs.core.Keyword("clojure.core.match", "not-found", "clojure.core.match/not-found", 594371962));
                    if (ocr_10328_0__10340_in_bullet__10346 === true) {
                      try {
                        var ocr_10328_2__10342 = cljs.core.nth.call(null, ocr_10328, 2);
                        if (cljs.core.keyword_identical_QMARK_.call(null, ocr_10328_2__10342, new cljs.core.Keyword(null, "dash", "dash", 1016980228))) {
                          try {
                            var ocr_10328_3__10343 = cljs.core.nth.call(null, ocr_10328, 3);
                            if (cljs.core.keyword_identical_QMARK_.call(null, ocr_10328_3__10343, new cljs.core.Keyword(null, "whitespace", "whitespace", 1290815983))) {
                              if (cljs.core.truth_(termcat.rules.tokenize.item_type.call(null, t2))) {
                                return new cljs.core.PersistentVector(null, 5, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.assoc.call(null, state, new cljs.core.Keyword(null, "item-type", "item-type", 3121552678), termcat.rules.tokenize.item_type.call(null, t2)), t1, termcat.term.token.call(null, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "rdelim", "rdelim", 4373095599), (new cljs.core.Keyword(null, "item-type", "item-type", 
                                3121552678)).cljs$core$IFn$_invoke$arity$1(state)], null)), termcat.term.token.call(null, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "ldelim", "ldelim", 4201320693), termcat.rules.tokenize.item_type.call(null, t2)], null), termcat.term.payload.call(null, t2)), t3], null);
                              } else {
                                return null;
                              }
                            } else {
                              if (cljs.core.keyword_identical_QMARK_.call(null, ocr_10328_3__10343, new cljs.core.Keyword(null, "newline", "newline", 2859826438))) {
                                if (cljs.core.truth_(termcat.rules.tokenize.item_type.call(null, t2))) {
                                  return new cljs.core.PersistentVector(null, 5, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.assoc.call(null, state, new cljs.core.Keyword(null, "item-type", "item-type", 3121552678), termcat.rules.tokenize.item_type.call(null, t2)), t1, termcat.term.token.call(null, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "rdelim", "rdelim", 4373095599), (new cljs.core.Keyword(null, "item-type", "item-type", 
                                  3121552678)).cljs$core$IFn$_invoke$arity$1(state)], null)), termcat.term.token.call(null, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "ldelim", "ldelim", 4201320693), termcat.rules.tokenize.item_type.call(null, t2)], null), termcat.term.payload.call(null, t2)), t3], null);
                                } else {
                                  return null;
                                }
                              } else {
                                if (cljs.core.keyword_identical_QMARK_.call(null, ocr_10328_3__10343, new cljs.core.Keyword(null, "emptyline", "emptyline", 3889609267))) {
                                  if (cljs.core.truth_(termcat.rules.tokenize.item_type.call(null, t2))) {
                                    return new cljs.core.PersistentVector(null, 5, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.assoc.call(null, state, new cljs.core.Keyword(null, "item-type", "item-type", 3121552678), termcat.rules.tokenize.item_type.call(null, t2)), t1, termcat.term.token.call(null, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "rdelim", "rdelim", 4373095599), (new cljs.core.Keyword(null, "item-type", "item-type", 
                                    3121552678)).cljs$core$IFn$_invoke$arity$1(state)], null)), termcat.term.token.call(null, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "ldelim", "ldelim", 4201320693), termcat.rules.tokenize.item_type.call(null, t2)], null), termcat.term.payload.call(null, t2)), t3], null);
                                  } else {
                                    return null;
                                  }
                                } else {
                                  if (ocr_10328_3__10343 === null) {
                                    if (cljs.core.truth_(termcat.rules.tokenize.item_type.call(null, t2))) {
                                      return new cljs.core.PersistentVector(null, 5, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.assoc.call(null, state, new cljs.core.Keyword(null, "item-type", "item-type", 3121552678), termcat.rules.tokenize.item_type.call(null, t2)), t1, termcat.term.token.call(null, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "rdelim", "rdelim", 4373095599), (new cljs.core.Keyword(null, "item-type", "item-type", 
                                      3121552678)).cljs$core$IFn$_invoke$arity$1(state)], null)), termcat.term.token.call(null, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "ldelim", "ldelim", 4201320693), termcat.rules.tokenize.item_type.call(null, t2)], null), termcat.term.payload.call(null, t2)), t3], null);
                                    } else {
                                      return null;
                                    }
                                  } else {
                                    if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
                                      throw cljs.core.match.backtrack;
                                    } else {
                                      return null;
                                    }
                                  }
                                }
                              }
                            }
                          } catch (e10401) {
                            if (e10401 instanceof Error) {
                              var e__4796__auto__ = e10401;
                              if (e__4796__auto__ === cljs.core.match.backtrack) {
                                throw cljs.core.match.backtrack;
                              } else {
                                throw e__4796__auto__;
                              }
                            } else {
                              if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
                                throw e10401;
                              } else {
                                return null;
                              }
                            }
                          }
                        } else {
                          if (cljs.core.keyword_identical_QMARK_.call(null, ocr_10328_2__10342, new cljs.core.Keyword(null, "hash", "hash", 1017099392))) {
                            try {
                              var ocr_10328_3__10343 = cljs.core.nth.call(null, ocr_10328, 3);
                              if (cljs.core.keyword_identical_QMARK_.call(null, ocr_10328_3__10343, new cljs.core.Keyword(null, "whitespace", "whitespace", 1290815983))) {
                                if (cljs.core.truth_(termcat.rules.tokenize.item_type.call(null, t2))) {
                                  return new cljs.core.PersistentVector(null, 5, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.assoc.call(null, state, new cljs.core.Keyword(null, "item-type", "item-type", 3121552678), termcat.rules.tokenize.item_type.call(null, t2)), t1, termcat.term.token.call(null, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "rdelim", "rdelim", 4373095599), (new cljs.core.Keyword(null, "item-type", "item-type", 
                                  3121552678)).cljs$core$IFn$_invoke$arity$1(state)], null)), termcat.term.token.call(null, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "ldelim", "ldelim", 4201320693), termcat.rules.tokenize.item_type.call(null, t2)], null), termcat.term.payload.call(null, t2)), t3], null);
                                } else {
                                  return null;
                                }
                              } else {
                                if (cljs.core.keyword_identical_QMARK_.call(null, ocr_10328_3__10343, new cljs.core.Keyword(null, "newline", "newline", 2859826438))) {
                                  if (cljs.core.truth_(termcat.rules.tokenize.item_type.call(null, t2))) {
                                    return new cljs.core.PersistentVector(null, 5, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.assoc.call(null, state, new cljs.core.Keyword(null, "item-type", "item-type", 3121552678), termcat.rules.tokenize.item_type.call(null, t2)), t1, termcat.term.token.call(null, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "rdelim", "rdelim", 4373095599), (new cljs.core.Keyword(null, "item-type", "item-type", 
                                    3121552678)).cljs$core$IFn$_invoke$arity$1(state)], null)), termcat.term.token.call(null, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "ldelim", "ldelim", 4201320693), termcat.rules.tokenize.item_type.call(null, t2)], null), termcat.term.payload.call(null, t2)), t3], null);
                                  } else {
                                    return null;
                                  }
                                } else {
                                  if (cljs.core.keyword_identical_QMARK_.call(null, ocr_10328_3__10343, new cljs.core.Keyword(null, "emptyline", "emptyline", 3889609267))) {
                                    if (cljs.core.truth_(termcat.rules.tokenize.item_type.call(null, t2))) {
                                      return new cljs.core.PersistentVector(null, 5, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.assoc.call(null, state, new cljs.core.Keyword(null, "item-type", "item-type", 3121552678), termcat.rules.tokenize.item_type.call(null, t2)), t1, termcat.term.token.call(null, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "rdelim", "rdelim", 4373095599), (new cljs.core.Keyword(null, "item-type", "item-type", 
                                      3121552678)).cljs$core$IFn$_invoke$arity$1(state)], null)), termcat.term.token.call(null, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "ldelim", "ldelim", 4201320693), termcat.rules.tokenize.item_type.call(null, t2)], null), termcat.term.payload.call(null, t2)), t3], null);
                                    } else {
                                      return null;
                                    }
                                  } else {
                                    if (ocr_10328_3__10343 === null) {
                                      if (cljs.core.truth_(termcat.rules.tokenize.item_type.call(null, t2))) {
                                        return new cljs.core.PersistentVector(null, 5, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.assoc.call(null, state, new cljs.core.Keyword(null, "item-type", "item-type", 3121552678), termcat.rules.tokenize.item_type.call(null, t2)), t1, termcat.term.token.call(null, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "rdelim", "rdelim", 4373095599), (new cljs.core.Keyword(null, "item-type", 
                                        "item-type", 3121552678)).cljs$core$IFn$_invoke$arity$1(state)], null)), termcat.term.token.call(null, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "ldelim", "ldelim", 4201320693), termcat.rules.tokenize.item_type.call(null, t2)], null), termcat.term.payload.call(null, t2)), t3], null);
                                      } else {
                                        return null;
                                      }
                                    } else {
                                      if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
                                        throw cljs.core.match.backtrack;
                                      } else {
                                        return null;
                                      }
                                    }
                                  }
                                }
                              }
                            } catch (e10402) {
                              if (e10402 instanceof Error) {
                                var e__4796__auto__ = e10402;
                                if (e__4796__auto__ === cljs.core.match.backtrack) {
                                  throw cljs.core.match.backtrack;
                                } else {
                                  throw e__4796__auto__;
                                }
                              } else {
                                if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
                                  throw e10402;
                                } else {
                                  return null;
                                }
                              }
                            }
                          } else {
                            if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
                              throw cljs.core.match.backtrack;
                            } else {
                              return null;
                            }
                          }
                        }
                      } catch (e10400) {
                        if (e10400 instanceof Error) {
                          var e__4796__auto__ = e10400;
                          if (e__4796__auto__ === cljs.core.match.backtrack) {
                            throw cljs.core.match.backtrack;
                          } else {
                            throw e__4796__auto__;
                          }
                        } else {
                          if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
                            throw e10400;
                          } else {
                            return null;
                          }
                        }
                      }
                    } else {
                      if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
                        throw cljs.core.match.backtrack;
                      } else {
                        return null;
                      }
                    }
                  } catch (e10399) {
                    if (e10399 instanceof Error) {
                      var e__4796__auto__ = e10399;
                      if (e__4796__auto__ === cljs.core.match.backtrack) {
                        throw cljs.core.match.backtrack;
                      } else {
                        throw e__4796__auto__;
                      }
                    } else {
                      if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
                        throw e10399;
                      } else {
                        return null;
                      }
                    }
                  }
                } else {
                  if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
                    throw cljs.core.match.backtrack;
                  } else {
                    return null;
                  }
                }
              } catch (e10397) {
                if (e10397 instanceof Error) {
                  var e__4796__auto__ = e10397;
                  if (e__4796__auto__ === cljs.core.match.backtrack) {
                    throw cljs.core.match.backtrack;
                  } else {
                    throw e__4796__auto__;
                  }
                } else {
                  if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
                    throw e10397;
                  } else {
                    return null;
                  }
                }
              }
            } else {
              if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
                throw cljs.core.match.backtrack;
              } else {
                return null;
              }
            }
          } catch (e10361) {
            if (e10361 instanceof Error) {
              var e__4796__auto__ = e10361;
              if (e__4796__auto__ === cljs.core.match.backtrack) {
                try {
                  var ocr_10328_1__10341 = cljs.core.nth.call(null, ocr_10328, 1);
                  if (cljs.core.keyword_identical_QMARK_.call(null, ocr_10328_1__10341, new cljs.core.Keyword(null, "newline", "newline", 2859826438))) {
                    try {
                      var ocr_10328_0__10340 = cljs.core.nth.call(null, ocr_10328, 0);
                      if (function() {
                        var G__10392 = ocr_10328_0__10340;
                        if (G__10392) {
                          var bit__4053__auto__ = G__10392.cljs$lang$protocol_mask$partition0$ & 256;
                          if (bit__4053__auto__ || G__10392.cljs$core$ILookup$) {
                            return true;
                          } else {
                            if (!G__10392.cljs$lang$protocol_mask$partition0$) {
                              return cljs.core.native_satisfies_QMARK_.call(null, cljs.core.ILookup, G__10392);
                            } else {
                              return false;
                            }
                          }
                        } else {
                          return cljs.core.native_satisfies_QMARK_.call(null, cljs.core.ILookup, G__10392);
                        }
                      }()) {
                        try {
                          var ocr_10328_0__10340_in_bullet__10349 = cljs.core.get.call(null, ocr_10328_0__10340, new cljs.core.Keyword(null, "in-bullet", "in-bullet", 2845348380), new cljs.core.Keyword("clojure.core.match", "not-found", "clojure.core.match/not-found", 594371962));
                          if (ocr_10328_0__10340_in_bullet__10349 === true) {
                            if (!cljs.core._EQ_.call(null, termcat.term.tt.call(null, t2), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "ldelim", "ldelim", 4201320693), (new cljs.core.Keyword(null, "item-type", "item-type", 3121552678)).cljs$core$IFn$_invoke$arity$1(state)], null))) {
                              return new cljs.core.PersistentVector(null, 5, 5, cljs.core.PersistentVector.EMPTY_NODE, [(new cljs.core.Keyword(null, "prev-state", "prev-state", 3562322921)).cljs$core$IFn$_invoke$arity$1(state), termcat.term.token.call(null, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "rdelim", "rdelim", 4373095599), (new cljs.core.Keyword(null, "item-type", "item-type", 3121552678)).cljs$core$IFn$_invoke$arity$1(state)], 
                              null)), t1, t2, t3], null);
                            } else {
                              return null;
                            }
                          } else {
                            if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
                              throw cljs.core.match.backtrack;
                            } else {
                              return null;
                            }
                          }
                        } catch (e10393) {
                          if (e10393 instanceof Error) {
                            var e__4796__auto____$1 = e10393;
                            if (e__4796__auto____$1 === cljs.core.match.backtrack) {
                              throw cljs.core.match.backtrack;
                            } else {
                              throw e__4796__auto____$1;
                            }
                          } else {
                            if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
                              throw e10393;
                            } else {
                              return null;
                            }
                          }
                        }
                      } else {
                        if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
                          throw cljs.core.match.backtrack;
                        } else {
                          return null;
                        }
                      }
                    } catch (e10391) {
                      if (e10391 instanceof Error) {
                        var e__4796__auto____$1 = e10391;
                        if (e__4796__auto____$1 === cljs.core.match.backtrack) {
                          throw cljs.core.match.backtrack;
                        } else {
                          throw e__4796__auto____$1;
                        }
                      } else {
                        if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
                          throw e10391;
                        } else {
                          return null;
                        }
                      }
                    }
                  } else {
                    if (cljs.core.keyword_identical_QMARK_.call(null, ocr_10328_1__10341, new cljs.core.Keyword(null, "emptyline", "emptyline", 3889609267))) {
                      try {
                        var ocr_10328_0__10340 = cljs.core.nth.call(null, ocr_10328, 0);
                        if (function() {
                          var G__10395 = ocr_10328_0__10340;
                          if (G__10395) {
                            var bit__4053__auto__ = G__10395.cljs$lang$protocol_mask$partition0$ & 256;
                            if (bit__4053__auto__ || G__10395.cljs$core$ILookup$) {
                              return true;
                            } else {
                              if (!G__10395.cljs$lang$protocol_mask$partition0$) {
                                return cljs.core.native_satisfies_QMARK_.call(null, cljs.core.ILookup, G__10395);
                              } else {
                                return false;
                              }
                            }
                          } else {
                            return cljs.core.native_satisfies_QMARK_.call(null, cljs.core.ILookup, G__10395);
                          }
                        }()) {
                          try {
                            var ocr_10328_0__10340_in_bullet__10352 = cljs.core.get.call(null, ocr_10328_0__10340, new cljs.core.Keyword(null, "in-bullet", "in-bullet", 2845348380), new cljs.core.Keyword("clojure.core.match", "not-found", "clojure.core.match/not-found", 594371962));
                            if (ocr_10328_0__10340_in_bullet__10352 === true) {
                              if (!cljs.core._EQ_.call(null, termcat.term.tt.call(null, t2), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "ldelim", "ldelim", 4201320693), (new cljs.core.Keyword(null, "item-type", "item-type", 3121552678)).cljs$core$IFn$_invoke$arity$1(state)], null))) {
                                return new cljs.core.PersistentVector(null, 5, 5, cljs.core.PersistentVector.EMPTY_NODE, [(new cljs.core.Keyword(null, "prev-state", "prev-state", 3562322921)).cljs$core$IFn$_invoke$arity$1(state), termcat.term.token.call(null, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "rdelim", "rdelim", 4373095599), (new cljs.core.Keyword(null, "item-type", "item-type", 3121552678)).cljs$core$IFn$_invoke$arity$1(state)], 
                                null)), t1, t2, t3], null);
                              } else {
                                return null;
                              }
                            } else {
                              if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
                                throw cljs.core.match.backtrack;
                              } else {
                                return null;
                              }
                            }
                          } catch (e10396) {
                            if (e10396 instanceof Error) {
                              var e__4796__auto____$1 = e10396;
                              if (e__4796__auto____$1 === cljs.core.match.backtrack) {
                                throw cljs.core.match.backtrack;
                              } else {
                                throw e__4796__auto____$1;
                              }
                            } else {
                              if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
                                throw e10396;
                              } else {
                                return null;
                              }
                            }
                          }
                        } else {
                          if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
                            throw cljs.core.match.backtrack;
                          } else {
                            return null;
                          }
                        }
                      } catch (e10394) {
                        if (e10394 instanceof Error) {
                          var e__4796__auto____$1 = e10394;
                          if (e__4796__auto____$1 === cljs.core.match.backtrack) {
                            throw cljs.core.match.backtrack;
                          } else {
                            throw e__4796__auto____$1;
                          }
                        } else {
                          if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
                            throw e10394;
                          } else {
                            return null;
                          }
                        }
                      }
                    } else {
                      if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
                        throw cljs.core.match.backtrack;
                      } else {
                        return null;
                      }
                    }
                  }
                } catch (e10362) {
                  if (e10362 instanceof Error) {
                    var e__4796__auto____$1 = e10362;
                    if (e__4796__auto____$1 === cljs.core.match.backtrack) {
                      try {
                        var ocr_10328_1__10341 = cljs.core.nth.call(null, ocr_10328, 1);
                        if (cljs.core.vector_QMARK_.call(null, ocr_10328_1__10341) && cljs.core.count.call(null, ocr_10328_1__10341) === 2) {
                          try {
                            var ocr_10328_1__10341_0__10353 = cljs.core.nth.call(null, ocr_10328_1__10341, 0);
                            if (cljs.core.keyword_identical_QMARK_.call(null, ocr_10328_1__10341_0__10353, new cljs.core.Keyword(null, "rdelim", "rdelim", 4373095599))) {
                              try {
                                var ocr_10328_1__10341_1__10354 = cljs.core.nth.call(null, ocr_10328_1__10341, 1);
                                if (cljs.core.keyword_identical_QMARK_.call(null, ocr_10328_1__10341_1__10354, new cljs.core.Keyword(null, "indent", "indent", 4124632094))) {
                                  try {
                                    var ocr_10328_0__10340 = cljs.core.nth.call(null, ocr_10328, 0);
                                    if (function() {
                                      var G__10389 = ocr_10328_0__10340;
                                      if (G__10389) {
                                        var bit__4053__auto__ = G__10389.cljs$lang$protocol_mask$partition0$ & 256;
                                        if (bit__4053__auto__ || G__10389.cljs$core$ILookup$) {
                                          return true;
                                        } else {
                                          if (!G__10389.cljs$lang$protocol_mask$partition0$) {
                                            return cljs.core.native_satisfies_QMARK_.call(null, cljs.core.ILookup, G__10389);
                                          } else {
                                            return false;
                                          }
                                        }
                                      } else {
                                        return cljs.core.native_satisfies_QMARK_.call(null, cljs.core.ILookup, G__10389);
                                      }
                                    }()) {
                                      try {
                                        var ocr_10328_0__10340_in_bullet__10357 = cljs.core.get.call(null, ocr_10328_0__10340, new cljs.core.Keyword(null, "in-bullet", "in-bullet", 2845348380), new cljs.core.Keyword("clojure.core.match", "not-found", "clojure.core.match/not-found", 594371962));
                                        if (ocr_10328_0__10340_in_bullet__10357 === true) {
                                          if (!cljs.core._EQ_.call(null, termcat.term.tt.call(null, t2), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "ldelim", "ldelim", 4201320693), (new cljs.core.Keyword(null, "item-type", "item-type", 3121552678)).cljs$core$IFn$_invoke$arity$1(state)], null))) {
                                            return new cljs.core.PersistentVector(null, 5, 5, cljs.core.PersistentVector.EMPTY_NODE, [(new cljs.core.Keyword(null, "prev-state", "prev-state", 3562322921)).cljs$core$IFn$_invoke$arity$1(state), termcat.term.token.call(null, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "rdelim", "rdelim", 4373095599), (new cljs.core.Keyword(null, "item-type", "item-type", 3121552678)).cljs$core$IFn$_invoke$arity$1(state)], 
                                            null)), t1, t2, t3], null);
                                          } else {
                                            return null;
                                          }
                                        } else {
                                          if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
                                            throw cljs.core.match.backtrack;
                                          } else {
                                            return null;
                                          }
                                        }
                                      } catch (e10390) {
                                        if (e10390 instanceof Error) {
                                          var e__4796__auto____$2 = e10390;
                                          if (e__4796__auto____$2 === cljs.core.match.backtrack) {
                                            throw cljs.core.match.backtrack;
                                          } else {
                                            throw e__4796__auto____$2;
                                          }
                                        } else {
                                          if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
                                            throw e10390;
                                          } else {
                                            return null;
                                          }
                                        }
                                      }
                                    } else {
                                      if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
                                        throw cljs.core.match.backtrack;
                                      } else {
                                        return null;
                                      }
                                    }
                                  } catch (e10388) {
                                    if (e10388 instanceof Error) {
                                      var e__4796__auto____$2 = e10388;
                                      if (e__4796__auto____$2 === cljs.core.match.backtrack) {
                                        throw cljs.core.match.backtrack;
                                      } else {
                                        throw e__4796__auto____$2;
                                      }
                                    } else {
                                      if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
                                        throw e10388;
                                      } else {
                                        return null;
                                      }
                                    }
                                  }
                                } else {
                                  if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
                                    throw cljs.core.match.backtrack;
                                  } else {
                                    return null;
                                  }
                                }
                              } catch (e10387) {
                                if (e10387 instanceof Error) {
                                  var e__4796__auto____$2 = e10387;
                                  if (e__4796__auto____$2 === cljs.core.match.backtrack) {
                                    throw cljs.core.match.backtrack;
                                  } else {
                                    throw e__4796__auto____$2;
                                  }
                                } else {
                                  if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
                                    throw e10387;
                                  } else {
                                    return null;
                                  }
                                }
                              }
                            } else {
                              if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
                                throw cljs.core.match.backtrack;
                              } else {
                                return null;
                              }
                            }
                          } catch (e10386) {
                            if (e10386 instanceof Error) {
                              var e__4796__auto____$2 = e10386;
                              if (e__4796__auto____$2 === cljs.core.match.backtrack) {
                                throw cljs.core.match.backtrack;
                              } else {
                                throw e__4796__auto____$2;
                              }
                            } else {
                              if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
                                throw e10386;
                              } else {
                                return null;
                              }
                            }
                          }
                        } else {
                          if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
                            throw cljs.core.match.backtrack;
                          } else {
                            return null;
                          }
                        }
                      } catch (e10363) {
                        if (e10363 instanceof Error) {
                          var e__4796__auto____$2 = e10363;
                          if (e__4796__auto____$2 === cljs.core.match.backtrack) {
                            try {
                              var ocr_10328_1__10341 = cljs.core.nth.call(null, ocr_10328, 1);
                              if (ocr_10328_1__10341 === null) {
                                try {
                                  var ocr_10328_2__10342 = cljs.core.nth.call(null, ocr_10328, 2);
                                  if (cljs.core.keyword_identical_QMARK_.call(null, ocr_10328_2__10342, new cljs.core.Keyword(null, "hash", "hash", 1017099392))) {
                                    try {
                                      var ocr_10328_3__10343 = cljs.core.nth.call(null, ocr_10328, 3);
                                      if (cljs.core.keyword_identical_QMARK_.call(null, ocr_10328_3__10343, new cljs.core.Keyword(null, "whitespace", "whitespace", 1290815983))) {
                                        if (cljs.core.truth_(function() {
                                          var and__3391__auto__ = function() {
                                            var or__3403__auto__ = cljs.core.complement.call(null, termcat.term.rdelim_QMARK_).call(null, t1);
                                            if (cljs.core.truth_(or__3403__auto__)) {
                                              return or__3403__auto__;
                                            } else {
                                              return termcat.rules.tokenize.item_type.call(null, t1);
                                            }
                                          }();
                                          if (cljs.core.truth_(and__3391__auto__)) {
                                            var and__3391__auto____$1 = termcat.rules.tokenize.item_type.call(null, t2);
                                            if (cljs.core.truth_(and__3391__auto____$1)) {
                                              return cljs.core.not_EQ_.call(null, termcat.term.tt.call(null, t1), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "rdelim", "rdelim", 4373095599), termcat.rules.tokenize.item_type.call(null, t2)], null));
                                            } else {
                                              return and__3391__auto____$1;
                                            }
                                          } else {
                                            return and__3391__auto__;
                                          }
                                        }())) {
                                          return new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null, "in-bullet", "in-bullet", 2845348380), true, new cljs.core.Keyword(null, "item-type", "item-type", 3121552678), termcat.rules.tokenize.item_type.call(null, t2), new cljs.core.Keyword(null, "prev-state", "prev-state", 3562322921), state], null), t1, termcat.term.token.call(null, new cljs.core.PersistentVector(null, 
                                          2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "ldelim", "ldelim", 4201320693), termcat.rules.tokenize.item_type.call(null, t2)], null), termcat.term.payload.call(null, t2)), t3], null);
                                        } else {
                                          return null;
                                        }
                                      } else {
                                        if (cljs.core.keyword_identical_QMARK_.call(null, ocr_10328_3__10343, new cljs.core.Keyword(null, "newline", "newline", 2859826438))) {
                                          if (cljs.core.truth_(function() {
                                            var and__3391__auto__ = function() {
                                              var or__3403__auto__ = cljs.core.complement.call(null, termcat.term.rdelim_QMARK_).call(null, t1);
                                              if (cljs.core.truth_(or__3403__auto__)) {
                                                return or__3403__auto__;
                                              } else {
                                                return termcat.rules.tokenize.item_type.call(null, t1);
                                              }
                                            }();
                                            if (cljs.core.truth_(and__3391__auto__)) {
                                              var and__3391__auto____$1 = termcat.rules.tokenize.item_type.call(null, t2);
                                              if (cljs.core.truth_(and__3391__auto____$1)) {
                                                return cljs.core.not_EQ_.call(null, termcat.term.tt.call(null, t1), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "rdelim", "rdelim", 4373095599), termcat.rules.tokenize.item_type.call(null, t2)], null));
                                              } else {
                                                return and__3391__auto____$1;
                                              }
                                            } else {
                                              return and__3391__auto__;
                                            }
                                          }())) {
                                            return new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null, "in-bullet", "in-bullet", 2845348380), true, new cljs.core.Keyword(null, "item-type", "item-type", 3121552678), termcat.rules.tokenize.item_type.call(null, t2), new cljs.core.Keyword(null, "prev-state", "prev-state", 3562322921), state], null), t1, termcat.term.token.call(null, new cljs.core.PersistentVector(null, 
                                            2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "ldelim", "ldelim", 4201320693), termcat.rules.tokenize.item_type.call(null, t2)], null), termcat.term.payload.call(null, t2)), t3], null);
                                          } else {
                                            return null;
                                          }
                                        } else {
                                          if (cljs.core.keyword_identical_QMARK_.call(null, ocr_10328_3__10343, new cljs.core.Keyword(null, "emptyline", "emptyline", 3889609267))) {
                                            if (cljs.core.truth_(function() {
                                              var and__3391__auto__ = function() {
                                                var or__3403__auto__ = cljs.core.complement.call(null, termcat.term.rdelim_QMARK_).call(null, t1);
                                                if (cljs.core.truth_(or__3403__auto__)) {
                                                  return or__3403__auto__;
                                                } else {
                                                  return termcat.rules.tokenize.item_type.call(null, t1);
                                                }
                                              }();
                                              if (cljs.core.truth_(and__3391__auto__)) {
                                                var and__3391__auto____$1 = termcat.rules.tokenize.item_type.call(null, t2);
                                                if (cljs.core.truth_(and__3391__auto____$1)) {
                                                  return cljs.core.not_EQ_.call(null, termcat.term.tt.call(null, t1), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "rdelim", "rdelim", 4373095599), termcat.rules.tokenize.item_type.call(null, t2)], null));
                                                } else {
                                                  return and__3391__auto____$1;
                                                }
                                              } else {
                                                return and__3391__auto__;
                                              }
                                            }())) {
                                              return new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null, "in-bullet", "in-bullet", 2845348380), true, new cljs.core.Keyword(null, "item-type", "item-type", 3121552678), termcat.rules.tokenize.item_type.call(null, t2), new cljs.core.Keyword(null, "prev-state", "prev-state", 3562322921), state], null), t1, termcat.term.token.call(null, new cljs.core.PersistentVector(null, 
                                              2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "ldelim", "ldelim", 4201320693), termcat.rules.tokenize.item_type.call(null, t2)], null), termcat.term.payload.call(null, t2)), t3], null);
                                            } else {
                                              return null;
                                            }
                                          } else {
                                            if (ocr_10328_3__10343 === null) {
                                              if (cljs.core.truth_(function() {
                                                var and__3391__auto__ = function() {
                                                  var or__3403__auto__ = cljs.core.complement.call(null, termcat.term.rdelim_QMARK_).call(null, t1);
                                                  if (cljs.core.truth_(or__3403__auto__)) {
                                                    return or__3403__auto__;
                                                  } else {
                                                    return termcat.rules.tokenize.item_type.call(null, t1);
                                                  }
                                                }();
                                                if (cljs.core.truth_(and__3391__auto__)) {
                                                  var and__3391__auto____$1 = termcat.rules.tokenize.item_type.call(null, t2);
                                                  if (cljs.core.truth_(and__3391__auto____$1)) {
                                                    return cljs.core.not_EQ_.call(null, termcat.term.tt.call(null, t1), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "rdelim", "rdelim", 4373095599), termcat.rules.tokenize.item_type.call(null, t2)], null));
                                                  } else {
                                                    return and__3391__auto____$1;
                                                  }
                                                } else {
                                                  return and__3391__auto__;
                                                }
                                              }())) {
                                                return new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null, "in-bullet", "in-bullet", 2845348380), true, new cljs.core.Keyword(null, "item-type", "item-type", 3121552678), termcat.rules.tokenize.item_type.call(null, t2), new cljs.core.Keyword(null, "prev-state", "prev-state", 3562322921), state], null), t1, termcat.term.token.call(null, new cljs.core.PersistentVector(null, 
                                                2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "ldelim", "ldelim", 4201320693), termcat.rules.tokenize.item_type.call(null, t2)], null), termcat.term.payload.call(null, t2)), t3], null);
                                              } else {
                                                return null;
                                              }
                                            } else {
                                              if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
                                                throw cljs.core.match.backtrack;
                                              } else {
                                                return null;
                                              }
                                            }
                                          }
                                        }
                                      }
                                    } catch (e10378) {
                                      if (e10378 instanceof Error) {
                                        var e__4796__auto____$3 = e10378;
                                        if (e__4796__auto____$3 === cljs.core.match.backtrack) {
                                          throw cljs.core.match.backtrack;
                                        } else {
                                          throw e__4796__auto____$3;
                                        }
                                      } else {
                                        if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
                                          throw e10378;
                                        } else {
                                          return null;
                                        }
                                      }
                                    }
                                  } else {
                                    if (cljs.core.keyword_identical_QMARK_.call(null, ocr_10328_2__10342, new cljs.core.Keyword(null, "dash", "dash", 1016980228))) {
                                      try {
                                        var ocr_10328_3__10343 = cljs.core.nth.call(null, ocr_10328, 3);
                                        if (cljs.core.keyword_identical_QMARK_.call(null, ocr_10328_3__10343, new cljs.core.Keyword(null, "whitespace", "whitespace", 1290815983))) {
                                          if (cljs.core.truth_(function() {
                                            var and__3391__auto__ = function() {
                                              var or__3403__auto__ = cljs.core.complement.call(null, termcat.term.rdelim_QMARK_).call(null, t1);
                                              if (cljs.core.truth_(or__3403__auto__)) {
                                                return or__3403__auto__;
                                              } else {
                                                return termcat.rules.tokenize.item_type.call(null, t1);
                                              }
                                            }();
                                            if (cljs.core.truth_(and__3391__auto__)) {
                                              var and__3391__auto____$1 = termcat.rules.tokenize.item_type.call(null, t2);
                                              if (cljs.core.truth_(and__3391__auto____$1)) {
                                                return cljs.core.not_EQ_.call(null, termcat.term.tt.call(null, t1), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "rdelim", "rdelim", 4373095599), termcat.rules.tokenize.item_type.call(null, t2)], null));
                                              } else {
                                                return and__3391__auto____$1;
                                              }
                                            } else {
                                              return and__3391__auto__;
                                            }
                                          }())) {
                                            return new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null, "in-bullet", "in-bullet", 2845348380), true, new cljs.core.Keyword(null, "item-type", "item-type", 3121552678), termcat.rules.tokenize.item_type.call(null, t2), new cljs.core.Keyword(null, "prev-state", "prev-state", 3562322921), state], null), t1, termcat.term.token.call(null, new cljs.core.PersistentVector(null, 
                                            2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "ldelim", "ldelim", 4201320693), termcat.rules.tokenize.item_type.call(null, t2)], null), termcat.term.payload.call(null, t2)), t3], null);
                                          } else {
                                            return null;
                                          }
                                        } else {
                                          if (cljs.core.keyword_identical_QMARK_.call(null, ocr_10328_3__10343, new cljs.core.Keyword(null, "newline", "newline", 2859826438))) {
                                            if (cljs.core.truth_(function() {
                                              var and__3391__auto__ = function() {
                                                var or__3403__auto__ = cljs.core.complement.call(null, termcat.term.rdelim_QMARK_).call(null, t1);
                                                if (cljs.core.truth_(or__3403__auto__)) {
                                                  return or__3403__auto__;
                                                } else {
                                                  return termcat.rules.tokenize.item_type.call(null, t1);
                                                }
                                              }();
                                              if (cljs.core.truth_(and__3391__auto__)) {
                                                var and__3391__auto____$1 = termcat.rules.tokenize.item_type.call(null, t2);
                                                if (cljs.core.truth_(and__3391__auto____$1)) {
                                                  return cljs.core.not_EQ_.call(null, termcat.term.tt.call(null, t1), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "rdelim", "rdelim", 4373095599), termcat.rules.tokenize.item_type.call(null, t2)], null));
                                                } else {
                                                  return and__3391__auto____$1;
                                                }
                                              } else {
                                                return and__3391__auto__;
                                              }
                                            }())) {
                                              return new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null, "in-bullet", "in-bullet", 2845348380), true, new cljs.core.Keyword(null, "item-type", "item-type", 3121552678), termcat.rules.tokenize.item_type.call(null, t2), new cljs.core.Keyword(null, "prev-state", "prev-state", 3562322921), state], null), t1, termcat.term.token.call(null, new cljs.core.PersistentVector(null, 
                                              2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "ldelim", "ldelim", 4201320693), termcat.rules.tokenize.item_type.call(null, t2)], null), termcat.term.payload.call(null, t2)), t3], null);
                                            } else {
                                              return null;
                                            }
                                          } else {
                                            if (cljs.core.keyword_identical_QMARK_.call(null, ocr_10328_3__10343, new cljs.core.Keyword(null, "emptyline", "emptyline", 3889609267))) {
                                              if (cljs.core.truth_(function() {
                                                var and__3391__auto__ = function() {
                                                  var or__3403__auto__ = cljs.core.complement.call(null, termcat.term.rdelim_QMARK_).call(null, t1);
                                                  if (cljs.core.truth_(or__3403__auto__)) {
                                                    return or__3403__auto__;
                                                  } else {
                                                    return termcat.rules.tokenize.item_type.call(null, t1);
                                                  }
                                                }();
                                                if (cljs.core.truth_(and__3391__auto__)) {
                                                  var and__3391__auto____$1 = termcat.rules.tokenize.item_type.call(null, t2);
                                                  if (cljs.core.truth_(and__3391__auto____$1)) {
                                                    return cljs.core.not_EQ_.call(null, termcat.term.tt.call(null, t1), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "rdelim", "rdelim", 4373095599), termcat.rules.tokenize.item_type.call(null, t2)], null));
                                                  } else {
                                                    return and__3391__auto____$1;
                                                  }
                                                } else {
                                                  return and__3391__auto__;
                                                }
                                              }())) {
                                                return new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null, "in-bullet", "in-bullet", 2845348380), true, new cljs.core.Keyword(null, "item-type", "item-type", 3121552678), termcat.rules.tokenize.item_type.call(null, t2), new cljs.core.Keyword(null, "prev-state", "prev-state", 3562322921), state], null), t1, termcat.term.token.call(null, new cljs.core.PersistentVector(null, 
                                                2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "ldelim", "ldelim", 4201320693), termcat.rules.tokenize.item_type.call(null, t2)], null), termcat.term.payload.call(null, t2)), t3], null);
                                              } else {
                                                return null;
                                              }
                                            } else {
                                              if (ocr_10328_3__10343 === null) {
                                                if (cljs.core.truth_(function() {
                                                  var and__3391__auto__ = function() {
                                                    var or__3403__auto__ = cljs.core.complement.call(null, termcat.term.rdelim_QMARK_).call(null, t1);
                                                    if (cljs.core.truth_(or__3403__auto__)) {
                                                      return or__3403__auto__;
                                                    } else {
                                                      return termcat.rules.tokenize.item_type.call(null, t1);
                                                    }
                                                  }();
                                                  if (cljs.core.truth_(and__3391__auto__)) {
                                                    var and__3391__auto____$1 = termcat.rules.tokenize.item_type.call(null, t2);
                                                    if (cljs.core.truth_(and__3391__auto____$1)) {
                                                      return cljs.core.not_EQ_.call(null, termcat.term.tt.call(null, t1), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "rdelim", "rdelim", 4373095599), termcat.rules.tokenize.item_type.call(null, t2)], null));
                                                    } else {
                                                      return and__3391__auto____$1;
                                                    }
                                                  } else {
                                                    return and__3391__auto__;
                                                  }
                                                }())) {
                                                  return new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null, "in-bullet", "in-bullet", 2845348380), true, new cljs.core.Keyword(null, "item-type", "item-type", 3121552678), termcat.rules.tokenize.item_type.call(null, t2), new cljs.core.Keyword(null, "prev-state", "prev-state", 3562322921), state], null), t1, termcat.term.token.call(null, new cljs.core.PersistentVector(null, 
                                                  2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "ldelim", "ldelim", 4201320693), termcat.rules.tokenize.item_type.call(null, t2)], null), termcat.term.payload.call(null, t2)), t3], null);
                                                } else {
                                                  return null;
                                                }
                                              } else {
                                                if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
                                                  throw cljs.core.match.backtrack;
                                                } else {
                                                  return null;
                                                }
                                              }
                                            }
                                          }
                                        }
                                      } catch (e10379) {
                                        if (e10379 instanceof Error) {
                                          var e__4796__auto____$3 = e10379;
                                          if (e__4796__auto____$3 === cljs.core.match.backtrack) {
                                            throw cljs.core.match.backtrack;
                                          } else {
                                            throw e__4796__auto____$3;
                                          }
                                        } else {
                                          if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
                                            throw e10379;
                                          } else {
                                            return null;
                                          }
                                        }
                                      }
                                    } else {
                                      if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
                                        throw cljs.core.match.backtrack;
                                      } else {
                                        return null;
                                      }
                                    }
                                  }
                                } catch (e10377) {
                                  if (e10377 instanceof Error) {
                                    var e__4796__auto____$3 = e10377;
                                    if (e__4796__auto____$3 === cljs.core.match.backtrack) {
                                      throw cljs.core.match.backtrack;
                                    } else {
                                      throw e__4796__auto____$3;
                                    }
                                  } else {
                                    if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
                                      throw e10377;
                                    } else {
                                      return null;
                                    }
                                  }
                                }
                              } else {
                                if (cljs.core.keyword_identical_QMARK_.call(null, ocr_10328_1__10341, new cljs.core.Keyword(null, "newline", "newline", 2859826438))) {
                                  try {
                                    var ocr_10328_2__10342 = cljs.core.nth.call(null, ocr_10328, 2);
                                    if (cljs.core.keyword_identical_QMARK_.call(null, ocr_10328_2__10342, new cljs.core.Keyword(null, "hash", "hash", 1017099392))) {
                                      try {
                                        var ocr_10328_3__10343 = cljs.core.nth.call(null, ocr_10328, 3);
                                        if (cljs.core.keyword_identical_QMARK_.call(null, ocr_10328_3__10343, new cljs.core.Keyword(null, "whitespace", "whitespace", 1290815983))) {
                                          if (cljs.core.truth_(function() {
                                            var and__3391__auto__ = function() {
                                              var or__3403__auto__ = cljs.core.complement.call(null, termcat.term.rdelim_QMARK_).call(null, t1);
                                              if (cljs.core.truth_(or__3403__auto__)) {
                                                return or__3403__auto__;
                                              } else {
                                                return termcat.rules.tokenize.item_type.call(null, t1);
                                              }
                                            }();
                                            if (cljs.core.truth_(and__3391__auto__)) {
                                              var and__3391__auto____$1 = termcat.rules.tokenize.item_type.call(null, t2);
                                              if (cljs.core.truth_(and__3391__auto____$1)) {
                                                return cljs.core.not_EQ_.call(null, termcat.term.tt.call(null, t1), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "rdelim", "rdelim", 4373095599), termcat.rules.tokenize.item_type.call(null, t2)], null));
                                              } else {
                                                return and__3391__auto____$1;
                                              }
                                            } else {
                                              return and__3391__auto__;
                                            }
                                          }())) {
                                            return new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null, "in-bullet", "in-bullet", 2845348380), true, new cljs.core.Keyword(null, "item-type", "item-type", 3121552678), termcat.rules.tokenize.item_type.call(null, t2), new cljs.core.Keyword(null, "prev-state", "prev-state", 3562322921), state], null), t1, termcat.term.token.call(null, new cljs.core.PersistentVector(null, 
                                            2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "ldelim", "ldelim", 4201320693), termcat.rules.tokenize.item_type.call(null, t2)], null), termcat.term.payload.call(null, t2)), t3], null);
                                          } else {
                                            return null;
                                          }
                                        } else {
                                          if (cljs.core.keyword_identical_QMARK_.call(null, ocr_10328_3__10343, new cljs.core.Keyword(null, "newline", "newline", 2859826438))) {
                                            if (cljs.core.truth_(function() {
                                              var and__3391__auto__ = function() {
                                                var or__3403__auto__ = cljs.core.complement.call(null, termcat.term.rdelim_QMARK_).call(null, t1);
                                                if (cljs.core.truth_(or__3403__auto__)) {
                                                  return or__3403__auto__;
                                                } else {
                                                  return termcat.rules.tokenize.item_type.call(null, t1);
                                                }
                                              }();
                                              if (cljs.core.truth_(and__3391__auto__)) {
                                                var and__3391__auto____$1 = termcat.rules.tokenize.item_type.call(null, t2);
                                                if (cljs.core.truth_(and__3391__auto____$1)) {
                                                  return cljs.core.not_EQ_.call(null, termcat.term.tt.call(null, t1), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "rdelim", "rdelim", 4373095599), termcat.rules.tokenize.item_type.call(null, t2)], null));
                                                } else {
                                                  return and__3391__auto____$1;
                                                }
                                              } else {
                                                return and__3391__auto__;
                                              }
                                            }())) {
                                              return new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null, "in-bullet", "in-bullet", 2845348380), true, new cljs.core.Keyword(null, "item-type", "item-type", 3121552678), termcat.rules.tokenize.item_type.call(null, t2), new cljs.core.Keyword(null, "prev-state", "prev-state", 3562322921), state], null), t1, termcat.term.token.call(null, new cljs.core.PersistentVector(null, 
                                              2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "ldelim", "ldelim", 4201320693), termcat.rules.tokenize.item_type.call(null, t2)], null), termcat.term.payload.call(null, t2)), t3], null);
                                            } else {
                                              return null;
                                            }
                                          } else {
                                            if (cljs.core.keyword_identical_QMARK_.call(null, ocr_10328_3__10343, new cljs.core.Keyword(null, "emptyline", "emptyline", 3889609267))) {
                                              if (cljs.core.truth_(function() {
                                                var and__3391__auto__ = function() {
                                                  var or__3403__auto__ = cljs.core.complement.call(null, termcat.term.rdelim_QMARK_).call(null, t1);
                                                  if (cljs.core.truth_(or__3403__auto__)) {
                                                    return or__3403__auto__;
                                                  } else {
                                                    return termcat.rules.tokenize.item_type.call(null, t1);
                                                  }
                                                }();
                                                if (cljs.core.truth_(and__3391__auto__)) {
                                                  var and__3391__auto____$1 = termcat.rules.tokenize.item_type.call(null, t2);
                                                  if (cljs.core.truth_(and__3391__auto____$1)) {
                                                    return cljs.core.not_EQ_.call(null, termcat.term.tt.call(null, t1), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "rdelim", "rdelim", 4373095599), termcat.rules.tokenize.item_type.call(null, t2)], null));
                                                  } else {
                                                    return and__3391__auto____$1;
                                                  }
                                                } else {
                                                  return and__3391__auto__;
                                                }
                                              }())) {
                                                return new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null, "in-bullet", "in-bullet", 2845348380), true, new cljs.core.Keyword(null, "item-type", "item-type", 3121552678), termcat.rules.tokenize.item_type.call(null, t2), new cljs.core.Keyword(null, "prev-state", "prev-state", 3562322921), state], null), t1, termcat.term.token.call(null, new cljs.core.PersistentVector(null, 
                                                2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "ldelim", "ldelim", 4201320693), termcat.rules.tokenize.item_type.call(null, t2)], null), termcat.term.payload.call(null, t2)), t3], null);
                                              } else {
                                                return null;
                                              }
                                            } else {
                                              if (ocr_10328_3__10343 === null) {
                                                if (cljs.core.truth_(function() {
                                                  var and__3391__auto__ = function() {
                                                    var or__3403__auto__ = cljs.core.complement.call(null, termcat.term.rdelim_QMARK_).call(null, t1);
                                                    if (cljs.core.truth_(or__3403__auto__)) {
                                                      return or__3403__auto__;
                                                    } else {
                                                      return termcat.rules.tokenize.item_type.call(null, t1);
                                                    }
                                                  }();
                                                  if (cljs.core.truth_(and__3391__auto__)) {
                                                    var and__3391__auto____$1 = termcat.rules.tokenize.item_type.call(null, t2);
                                                    if (cljs.core.truth_(and__3391__auto____$1)) {
                                                      return cljs.core.not_EQ_.call(null, termcat.term.tt.call(null, t1), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "rdelim", "rdelim", 4373095599), termcat.rules.tokenize.item_type.call(null, t2)], null));
                                                    } else {
                                                      return and__3391__auto____$1;
                                                    }
                                                  } else {
                                                    return and__3391__auto__;
                                                  }
                                                }())) {
                                                  return new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null, "in-bullet", "in-bullet", 2845348380), true, new cljs.core.Keyword(null, "item-type", "item-type", 3121552678), termcat.rules.tokenize.item_type.call(null, t2), new cljs.core.Keyword(null, "prev-state", "prev-state", 3562322921), state], null), t1, termcat.term.token.call(null, new cljs.core.PersistentVector(null, 
                                                  2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "ldelim", "ldelim", 4201320693), termcat.rules.tokenize.item_type.call(null, t2)], null), termcat.term.payload.call(null, t2)), t3], null);
                                                } else {
                                                  return null;
                                                }
                                              } else {
                                                if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
                                                  throw cljs.core.match.backtrack;
                                                } else {
                                                  return null;
                                                }
                                              }
                                            }
                                          }
                                        }
                                      } catch (e10381) {
                                        if (e10381 instanceof Error) {
                                          var e__4796__auto____$3 = e10381;
                                          if (e__4796__auto____$3 === cljs.core.match.backtrack) {
                                            throw cljs.core.match.backtrack;
                                          } else {
                                            throw e__4796__auto____$3;
                                          }
                                        } else {
                                          if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
                                            throw e10381;
                                          } else {
                                            return null;
                                          }
                                        }
                                      }
                                    } else {
                                      if (cljs.core.keyword_identical_QMARK_.call(null, ocr_10328_2__10342, new cljs.core.Keyword(null, "dash", "dash", 1016980228))) {
                                        try {
                                          var ocr_10328_3__10343 = cljs.core.nth.call(null, ocr_10328, 3);
                                          if (cljs.core.keyword_identical_QMARK_.call(null, ocr_10328_3__10343, new cljs.core.Keyword(null, "whitespace", "whitespace", 1290815983))) {
                                            if (cljs.core.truth_(function() {
                                              var and__3391__auto__ = function() {
                                                var or__3403__auto__ = cljs.core.complement.call(null, termcat.term.rdelim_QMARK_).call(null, t1);
                                                if (cljs.core.truth_(or__3403__auto__)) {
                                                  return or__3403__auto__;
                                                } else {
                                                  return termcat.rules.tokenize.item_type.call(null, t1);
                                                }
                                              }();
                                              if (cljs.core.truth_(and__3391__auto__)) {
                                                var and__3391__auto____$1 = termcat.rules.tokenize.item_type.call(null, t2);
                                                if (cljs.core.truth_(and__3391__auto____$1)) {
                                                  return cljs.core.not_EQ_.call(null, termcat.term.tt.call(null, t1), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "rdelim", "rdelim", 4373095599), termcat.rules.tokenize.item_type.call(null, t2)], null));
                                                } else {
                                                  return and__3391__auto____$1;
                                                }
                                              } else {
                                                return and__3391__auto__;
                                              }
                                            }())) {
                                              return new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null, "in-bullet", "in-bullet", 2845348380), true, new cljs.core.Keyword(null, "item-type", "item-type", 3121552678), termcat.rules.tokenize.item_type.call(null, t2), new cljs.core.Keyword(null, "prev-state", "prev-state", 3562322921), state], null), t1, termcat.term.token.call(null, new cljs.core.PersistentVector(null, 
                                              2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "ldelim", "ldelim", 4201320693), termcat.rules.tokenize.item_type.call(null, t2)], null), termcat.term.payload.call(null, t2)), t3], null);
                                            } else {
                                              return null;
                                            }
                                          } else {
                                            if (cljs.core.keyword_identical_QMARK_.call(null, ocr_10328_3__10343, new cljs.core.Keyword(null, "newline", "newline", 2859826438))) {
                                              if (cljs.core.truth_(function() {
                                                var and__3391__auto__ = function() {
                                                  var or__3403__auto__ = cljs.core.complement.call(null, termcat.term.rdelim_QMARK_).call(null, t1);
                                                  if (cljs.core.truth_(or__3403__auto__)) {
                                                    return or__3403__auto__;
                                                  } else {
                                                    return termcat.rules.tokenize.item_type.call(null, t1);
                                                  }
                                                }();
                                                if (cljs.core.truth_(and__3391__auto__)) {
                                                  var and__3391__auto____$1 = termcat.rules.tokenize.item_type.call(null, t2);
                                                  if (cljs.core.truth_(and__3391__auto____$1)) {
                                                    return cljs.core.not_EQ_.call(null, termcat.term.tt.call(null, t1), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "rdelim", "rdelim", 4373095599), termcat.rules.tokenize.item_type.call(null, t2)], null));
                                                  } else {
                                                    return and__3391__auto____$1;
                                                  }
                                                } else {
                                                  return and__3391__auto__;
                                                }
                                              }())) {
                                                return new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null, "in-bullet", "in-bullet", 2845348380), true, new cljs.core.Keyword(null, "item-type", "item-type", 3121552678), termcat.rules.tokenize.item_type.call(null, t2), new cljs.core.Keyword(null, "prev-state", "prev-state", 3562322921), state], null), t1, termcat.term.token.call(null, new cljs.core.PersistentVector(null, 
                                                2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "ldelim", "ldelim", 4201320693), termcat.rules.tokenize.item_type.call(null, t2)], null), termcat.term.payload.call(null, t2)), t3], null);
                                              } else {
                                                return null;
                                              }
                                            } else {
                                              if (cljs.core.keyword_identical_QMARK_.call(null, ocr_10328_3__10343, new cljs.core.Keyword(null, "emptyline", "emptyline", 3889609267))) {
                                                if (cljs.core.truth_(function() {
                                                  var and__3391__auto__ = function() {
                                                    var or__3403__auto__ = cljs.core.complement.call(null, termcat.term.rdelim_QMARK_).call(null, t1);
                                                    if (cljs.core.truth_(or__3403__auto__)) {
                                                      return or__3403__auto__;
                                                    } else {
                                                      return termcat.rules.tokenize.item_type.call(null, t1);
                                                    }
                                                  }();
                                                  if (cljs.core.truth_(and__3391__auto__)) {
                                                    var and__3391__auto____$1 = termcat.rules.tokenize.item_type.call(null, t2);
                                                    if (cljs.core.truth_(and__3391__auto____$1)) {
                                                      return cljs.core.not_EQ_.call(null, termcat.term.tt.call(null, t1), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "rdelim", "rdelim", 4373095599), termcat.rules.tokenize.item_type.call(null, t2)], null));
                                                    } else {
                                                      return and__3391__auto____$1;
                                                    }
                                                  } else {
                                                    return and__3391__auto__;
                                                  }
                                                }())) {
                                                  return new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null, "in-bullet", "in-bullet", 2845348380), true, new cljs.core.Keyword(null, "item-type", "item-type", 3121552678), termcat.rules.tokenize.item_type.call(null, t2), new cljs.core.Keyword(null, "prev-state", "prev-state", 3562322921), state], null), t1, termcat.term.token.call(null, new cljs.core.PersistentVector(null, 
                                                  2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "ldelim", "ldelim", 4201320693), termcat.rules.tokenize.item_type.call(null, t2)], null), termcat.term.payload.call(null, t2)), t3], null);
                                                } else {
                                                  return null;
                                                }
                                              } else {
                                                if (ocr_10328_3__10343 === null) {
                                                  if (cljs.core.truth_(function() {
                                                    var and__3391__auto__ = function() {
                                                      var or__3403__auto__ = cljs.core.complement.call(null, termcat.term.rdelim_QMARK_).call(null, t1);
                                                      if (cljs.core.truth_(or__3403__auto__)) {
                                                        return or__3403__auto__;
                                                      } else {
                                                        return termcat.rules.tokenize.item_type.call(null, t1);
                                                      }
                                                    }();
                                                    if (cljs.core.truth_(and__3391__auto__)) {
                                                      var and__3391__auto____$1 = termcat.rules.tokenize.item_type.call(null, t2);
                                                      if (cljs.core.truth_(and__3391__auto____$1)) {
                                                        return cljs.core.not_EQ_.call(null, termcat.term.tt.call(null, t1), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "rdelim", "rdelim", 4373095599), termcat.rules.tokenize.item_type.call(null, t2)], null));
                                                      } else {
                                                        return and__3391__auto____$1;
                                                      }
                                                    } else {
                                                      return and__3391__auto__;
                                                    }
                                                  }())) {
                                                    return new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null, "in-bullet", "in-bullet", 2845348380), true, new cljs.core.Keyword(null, "item-type", "item-type", 3121552678), termcat.rules.tokenize.item_type.call(null, t2), new cljs.core.Keyword(null, "prev-state", "prev-state", 3562322921), state], null), t1, termcat.term.token.call(null, new cljs.core.PersistentVector(null, 
                                                    2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "ldelim", "ldelim", 4201320693), termcat.rules.tokenize.item_type.call(null, t2)], null), termcat.term.payload.call(null, t2)), t3], null);
                                                  } else {
                                                    return null;
                                                  }
                                                } else {
                                                  if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
                                                    throw cljs.core.match.backtrack;
                                                  } else {
                                                    return null;
                                                  }
                                                }
                                              }
                                            }
                                          }
                                        } catch (e10382) {
                                          if (e10382 instanceof Error) {
                                            var e__4796__auto____$3 = e10382;
                                            if (e__4796__auto____$3 === cljs.core.match.backtrack) {
                                              throw cljs.core.match.backtrack;
                                            } else {
                                              throw e__4796__auto____$3;
                                            }
                                          } else {
                                            if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
                                              throw e10382;
                                            } else {
                                              return null;
                                            }
                                          }
                                        }
                                      } else {
                                        if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
                                          throw cljs.core.match.backtrack;
                                        } else {
                                          return null;
                                        }
                                      }
                                    }
                                  } catch (e10380) {
                                    if (e10380 instanceof Error) {
                                      var e__4796__auto____$3 = e10380;
                                      if (e__4796__auto____$3 === cljs.core.match.backtrack) {
                                        throw cljs.core.match.backtrack;
                                      } else {
                                        throw e__4796__auto____$3;
                                      }
                                    } else {
                                      if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
                                        throw e10380;
                                      } else {
                                        return null;
                                      }
                                    }
                                  }
                                } else {
                                  if (cljs.core.keyword_identical_QMARK_.call(null, ocr_10328_1__10341, new cljs.core.Keyword(null, "emptyline", "emptyline", 3889609267))) {
                                    try {
                                      var ocr_10328_2__10342 = cljs.core.nth.call(null, ocr_10328, 2);
                                      if (cljs.core.keyword_identical_QMARK_.call(null, ocr_10328_2__10342, new cljs.core.Keyword(null, "hash", "hash", 1017099392))) {
                                        try {
                                          var ocr_10328_3__10343 = cljs.core.nth.call(null, ocr_10328, 3);
                                          if (cljs.core.keyword_identical_QMARK_.call(null, ocr_10328_3__10343, new cljs.core.Keyword(null, "whitespace", "whitespace", 1290815983))) {
                                            if (cljs.core.truth_(function() {
                                              var and__3391__auto__ = function() {
                                                var or__3403__auto__ = cljs.core.complement.call(null, termcat.term.rdelim_QMARK_).call(null, t1);
                                                if (cljs.core.truth_(or__3403__auto__)) {
                                                  return or__3403__auto__;
                                                } else {
                                                  return termcat.rules.tokenize.item_type.call(null, t1);
                                                }
                                              }();
                                              if (cljs.core.truth_(and__3391__auto__)) {
                                                var and__3391__auto____$1 = termcat.rules.tokenize.item_type.call(null, t2);
                                                if (cljs.core.truth_(and__3391__auto____$1)) {
                                                  return cljs.core.not_EQ_.call(null, termcat.term.tt.call(null, t1), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "rdelim", "rdelim", 4373095599), termcat.rules.tokenize.item_type.call(null, t2)], null));
                                                } else {
                                                  return and__3391__auto____$1;
                                                }
                                              } else {
                                                return and__3391__auto__;
                                              }
                                            }())) {
                                              return new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null, "in-bullet", "in-bullet", 2845348380), true, new cljs.core.Keyword(null, "item-type", "item-type", 3121552678), termcat.rules.tokenize.item_type.call(null, t2), new cljs.core.Keyword(null, "prev-state", "prev-state", 3562322921), state], null), t1, termcat.term.token.call(null, new cljs.core.PersistentVector(null, 
                                              2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "ldelim", "ldelim", 4201320693), termcat.rules.tokenize.item_type.call(null, t2)], null), termcat.term.payload.call(null, t2)), t3], null);
                                            } else {
                                              return null;
                                            }
                                          } else {
                                            if (cljs.core.keyword_identical_QMARK_.call(null, ocr_10328_3__10343, new cljs.core.Keyword(null, "newline", "newline", 2859826438))) {
                                              if (cljs.core.truth_(function() {
                                                var and__3391__auto__ = function() {
                                                  var or__3403__auto__ = cljs.core.complement.call(null, termcat.term.rdelim_QMARK_).call(null, t1);
                                                  if (cljs.core.truth_(or__3403__auto__)) {
                                                    return or__3403__auto__;
                                                  } else {
                                                    return termcat.rules.tokenize.item_type.call(null, t1);
                                                  }
                                                }();
                                                if (cljs.core.truth_(and__3391__auto__)) {
                                                  var and__3391__auto____$1 = termcat.rules.tokenize.item_type.call(null, t2);
                                                  if (cljs.core.truth_(and__3391__auto____$1)) {
                                                    return cljs.core.not_EQ_.call(null, termcat.term.tt.call(null, t1), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "rdelim", "rdelim", 4373095599), termcat.rules.tokenize.item_type.call(null, t2)], null));
                                                  } else {
                                                    return and__3391__auto____$1;
                                                  }
                                                } else {
                                                  return and__3391__auto__;
                                                }
                                              }())) {
                                                return new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null, "in-bullet", "in-bullet", 2845348380), true, new cljs.core.Keyword(null, "item-type", "item-type", 3121552678), termcat.rules.tokenize.item_type.call(null, t2), new cljs.core.Keyword(null, "prev-state", "prev-state", 3562322921), state], null), t1, termcat.term.token.call(null, new cljs.core.PersistentVector(null, 
                                                2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "ldelim", "ldelim", 4201320693), termcat.rules.tokenize.item_type.call(null, t2)], null), termcat.term.payload.call(null, t2)), t3], null);
                                              } else {
                                                return null;
                                              }
                                            } else {
                                              if (cljs.core.keyword_identical_QMARK_.call(null, ocr_10328_3__10343, new cljs.core.Keyword(null, "emptyline", "emptyline", 3889609267))) {
                                                if (cljs.core.truth_(function() {
                                                  var and__3391__auto__ = function() {
                                                    var or__3403__auto__ = cljs.core.complement.call(null, termcat.term.rdelim_QMARK_).call(null, t1);
                                                    if (cljs.core.truth_(or__3403__auto__)) {
                                                      return or__3403__auto__;
                                                    } else {
                                                      return termcat.rules.tokenize.item_type.call(null, t1);
                                                    }
                                                  }();
                                                  if (cljs.core.truth_(and__3391__auto__)) {
                                                    var and__3391__auto____$1 = termcat.rules.tokenize.item_type.call(null, t2);
                                                    if (cljs.core.truth_(and__3391__auto____$1)) {
                                                      return cljs.core.not_EQ_.call(null, termcat.term.tt.call(null, t1), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "rdelim", "rdelim", 4373095599), termcat.rules.tokenize.item_type.call(null, t2)], null));
                                                    } else {
                                                      return and__3391__auto____$1;
                                                    }
                                                  } else {
                                                    return and__3391__auto__;
                                                  }
                                                }())) {
                                                  return new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null, "in-bullet", "in-bullet", 2845348380), true, new cljs.core.Keyword(null, "item-type", "item-type", 3121552678), termcat.rules.tokenize.item_type.call(null, t2), new cljs.core.Keyword(null, "prev-state", "prev-state", 3562322921), state], null), t1, termcat.term.token.call(null, new cljs.core.PersistentVector(null, 
                                                  2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "ldelim", "ldelim", 4201320693), termcat.rules.tokenize.item_type.call(null, t2)], null), termcat.term.payload.call(null, t2)), t3], null);
                                                } else {
                                                  return null;
                                                }
                                              } else {
                                                if (ocr_10328_3__10343 === null) {
                                                  if (cljs.core.truth_(function() {
                                                    var and__3391__auto__ = function() {
                                                      var or__3403__auto__ = cljs.core.complement.call(null, termcat.term.rdelim_QMARK_).call(null, t1);
                                                      if (cljs.core.truth_(or__3403__auto__)) {
                                                        return or__3403__auto__;
                                                      } else {
                                                        return termcat.rules.tokenize.item_type.call(null, t1);
                                                      }
                                                    }();
                                                    if (cljs.core.truth_(and__3391__auto__)) {
                                                      var and__3391__auto____$1 = termcat.rules.tokenize.item_type.call(null, t2);
                                                      if (cljs.core.truth_(and__3391__auto____$1)) {
                                                        return cljs.core.not_EQ_.call(null, termcat.term.tt.call(null, t1), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "rdelim", "rdelim", 4373095599), termcat.rules.tokenize.item_type.call(null, t2)], null));
                                                      } else {
                                                        return and__3391__auto____$1;
                                                      }
                                                    } else {
                                                      return and__3391__auto__;
                                                    }
                                                  }())) {
                                                    return new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null, "in-bullet", "in-bullet", 2845348380), true, new cljs.core.Keyword(null, "item-type", "item-type", 3121552678), termcat.rules.tokenize.item_type.call(null, t2), new cljs.core.Keyword(null, "prev-state", "prev-state", 3562322921), state], null), t1, termcat.term.token.call(null, new cljs.core.PersistentVector(null, 
                                                    2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "ldelim", "ldelim", 4201320693), termcat.rules.tokenize.item_type.call(null, t2)], null), termcat.term.payload.call(null, t2)), t3], null);
                                                  } else {
                                                    return null;
                                                  }
                                                } else {
                                                  if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
                                                    throw cljs.core.match.backtrack;
                                                  } else {
                                                    return null;
                                                  }
                                                }
                                              }
                                            }
                                          }
                                        } catch (e10384) {
                                          if (e10384 instanceof Error) {
                                            var e__4796__auto____$3 = e10384;
                                            if (e__4796__auto____$3 === cljs.core.match.backtrack) {
                                              throw cljs.core.match.backtrack;
                                            } else {
                                              throw e__4796__auto____$3;
                                            }
                                          } else {
                                            if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
                                              throw e10384;
                                            } else {
                                              return null;
                                            }
                                          }
                                        }
                                      } else {
                                        if (cljs.core.keyword_identical_QMARK_.call(null, ocr_10328_2__10342, new cljs.core.Keyword(null, "dash", "dash", 1016980228))) {
                                          try {
                                            var ocr_10328_3__10343 = cljs.core.nth.call(null, ocr_10328, 3);
                                            if (cljs.core.keyword_identical_QMARK_.call(null, ocr_10328_3__10343, new cljs.core.Keyword(null, "whitespace", "whitespace", 1290815983))) {
                                              if (cljs.core.truth_(function() {
                                                var and__3391__auto__ = function() {
                                                  var or__3403__auto__ = cljs.core.complement.call(null, termcat.term.rdelim_QMARK_).call(null, t1);
                                                  if (cljs.core.truth_(or__3403__auto__)) {
                                                    return or__3403__auto__;
                                                  } else {
                                                    return termcat.rules.tokenize.item_type.call(null, t1);
                                                  }
                                                }();
                                                if (cljs.core.truth_(and__3391__auto__)) {
                                                  var and__3391__auto____$1 = termcat.rules.tokenize.item_type.call(null, t2);
                                                  if (cljs.core.truth_(and__3391__auto____$1)) {
                                                    return cljs.core.not_EQ_.call(null, termcat.term.tt.call(null, t1), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "rdelim", "rdelim", 4373095599), termcat.rules.tokenize.item_type.call(null, t2)], null));
                                                  } else {
                                                    return and__3391__auto____$1;
                                                  }
                                                } else {
                                                  return and__3391__auto__;
                                                }
                                              }())) {
                                                return new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null, "in-bullet", "in-bullet", 2845348380), true, new cljs.core.Keyword(null, "item-type", "item-type", 3121552678), termcat.rules.tokenize.item_type.call(null, t2), new cljs.core.Keyword(null, "prev-state", "prev-state", 3562322921), state], null), t1, termcat.term.token.call(null, new cljs.core.PersistentVector(null, 
                                                2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "ldelim", "ldelim", 4201320693), termcat.rules.tokenize.item_type.call(null, t2)], null), termcat.term.payload.call(null, t2)), t3], null);
                                              } else {
                                                return null;
                                              }
                                            } else {
                                              if (cljs.core.keyword_identical_QMARK_.call(null, ocr_10328_3__10343, new cljs.core.Keyword(null, "newline", "newline", 2859826438))) {
                                                if (cljs.core.truth_(function() {
                                                  var and__3391__auto__ = function() {
                                                    var or__3403__auto__ = cljs.core.complement.call(null, termcat.term.rdelim_QMARK_).call(null, t1);
                                                    if (cljs.core.truth_(or__3403__auto__)) {
                                                      return or__3403__auto__;
                                                    } else {
                                                      return termcat.rules.tokenize.item_type.call(null, t1);
                                                    }
                                                  }();
                                                  if (cljs.core.truth_(and__3391__auto__)) {
                                                    var and__3391__auto____$1 = termcat.rules.tokenize.item_type.call(null, t2);
                                                    if (cljs.core.truth_(and__3391__auto____$1)) {
                                                      return cljs.core.not_EQ_.call(null, termcat.term.tt.call(null, t1), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "rdelim", "rdelim", 4373095599), termcat.rules.tokenize.item_type.call(null, t2)], null));
                                                    } else {
                                                      return and__3391__auto____$1;
                                                    }
                                                  } else {
                                                    return and__3391__auto__;
                                                  }
                                                }())) {
                                                  return new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null, "in-bullet", "in-bullet", 2845348380), true, new cljs.core.Keyword(null, "item-type", "item-type", 3121552678), termcat.rules.tokenize.item_type.call(null, t2), new cljs.core.Keyword(null, "prev-state", "prev-state", 3562322921), state], null), t1, termcat.term.token.call(null, new cljs.core.PersistentVector(null, 
                                                  2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "ldelim", "ldelim", 4201320693), termcat.rules.tokenize.item_type.call(null, t2)], null), termcat.term.payload.call(null, t2)), t3], null);
                                                } else {
                                                  return null;
                                                }
                                              } else {
                                                if (cljs.core.keyword_identical_QMARK_.call(null, ocr_10328_3__10343, new cljs.core.Keyword(null, "emptyline", "emptyline", 3889609267))) {
                                                  if (cljs.core.truth_(function() {
                                                    var and__3391__auto__ = function() {
                                                      var or__3403__auto__ = cljs.core.complement.call(null, termcat.term.rdelim_QMARK_).call(null, t1);
                                                      if (cljs.core.truth_(or__3403__auto__)) {
                                                        return or__3403__auto__;
                                                      } else {
                                                        return termcat.rules.tokenize.item_type.call(null, t1);
                                                      }
                                                    }();
                                                    if (cljs.core.truth_(and__3391__auto__)) {
                                                      var and__3391__auto____$1 = termcat.rules.tokenize.item_type.call(null, t2);
                                                      if (cljs.core.truth_(and__3391__auto____$1)) {
                                                        return cljs.core.not_EQ_.call(null, termcat.term.tt.call(null, t1), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "rdelim", "rdelim", 4373095599), termcat.rules.tokenize.item_type.call(null, t2)], null));
                                                      } else {
                                                        return and__3391__auto____$1;
                                                      }
                                                    } else {
                                                      return and__3391__auto__;
                                                    }
                                                  }())) {
                                                    return new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null, "in-bullet", "in-bullet", 2845348380), true, new cljs.core.Keyword(null, "item-type", "item-type", 3121552678), termcat.rules.tokenize.item_type.call(null, t2), new cljs.core.Keyword(null, "prev-state", "prev-state", 3562322921), state], null), t1, termcat.term.token.call(null, new cljs.core.PersistentVector(null, 
                                                    2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "ldelim", "ldelim", 4201320693), termcat.rules.tokenize.item_type.call(null, t2)], null), termcat.term.payload.call(null, t2)), t3], null);
                                                  } else {
                                                    return null;
                                                  }
                                                } else {
                                                  if (ocr_10328_3__10343 === null) {
                                                    if (cljs.core.truth_(function() {
                                                      var and__3391__auto__ = function() {
                                                        var or__3403__auto__ = cljs.core.complement.call(null, termcat.term.rdelim_QMARK_).call(null, t1);
                                                        if (cljs.core.truth_(or__3403__auto__)) {
                                                          return or__3403__auto__;
                                                        } else {
                                                          return termcat.rules.tokenize.item_type.call(null, t1);
                                                        }
                                                      }();
                                                      if (cljs.core.truth_(and__3391__auto__)) {
                                                        var and__3391__auto____$1 = termcat.rules.tokenize.item_type.call(null, t2);
                                                        if (cljs.core.truth_(and__3391__auto____$1)) {
                                                          return cljs.core.not_EQ_.call(null, termcat.term.tt.call(null, t1), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "rdelim", "rdelim", 4373095599), termcat.rules.tokenize.item_type.call(null, t2)], null));
                                                        } else {
                                                          return and__3391__auto____$1;
                                                        }
                                                      } else {
                                                        return and__3391__auto__;
                                                      }
                                                    }())) {
                                                      return new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null, "in-bullet", "in-bullet", 2845348380), true, new cljs.core.Keyword(null, "item-type", "item-type", 3121552678), termcat.rules.tokenize.item_type.call(null, t2), new cljs.core.Keyword(null, "prev-state", "prev-state", 3562322921), state], null), t1, termcat.term.token.call(null, new cljs.core.PersistentVector(null, 
                                                      2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "ldelim", "ldelim", 4201320693), termcat.rules.tokenize.item_type.call(null, t2)], null), termcat.term.payload.call(null, t2)), t3], null);
                                                    } else {
                                                      return null;
                                                    }
                                                  } else {
                                                    if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
                                                      throw cljs.core.match.backtrack;
                                                    } else {
                                                      return null;
                                                    }
                                                  }
                                                }
                                              }
                                            }
                                          } catch (e10385) {
                                            if (e10385 instanceof Error) {
                                              var e__4796__auto____$3 = e10385;
                                              if (e__4796__auto____$3 === cljs.core.match.backtrack) {
                                                throw cljs.core.match.backtrack;
                                              } else {
                                                throw e__4796__auto____$3;
                                              }
                                            } else {
                                              if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
                                                throw e10385;
                                              } else {
                                                return null;
                                              }
                                            }
                                          }
                                        } else {
                                          if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
                                            throw cljs.core.match.backtrack;
                                          } else {
                                            return null;
                                          }
                                        }
                                      }
                                    } catch (e10383) {
                                      if (e10383 instanceof Error) {
                                        var e__4796__auto____$3 = e10383;
                                        if (e__4796__auto____$3 === cljs.core.match.backtrack) {
                                          throw cljs.core.match.backtrack;
                                        } else {
                                          throw e__4796__auto____$3;
                                        }
                                      } else {
                                        if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
                                          throw e10383;
                                        } else {
                                          return null;
                                        }
                                      }
                                    }
                                  } else {
                                    if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
                                      throw cljs.core.match.backtrack;
                                    } else {
                                      return null;
                                    }
                                  }
                                }
                              }
                            } catch (e10364) {
                              if (e10364 instanceof Error) {
                                var e__4796__auto____$3 = e10364;
                                if (e__4796__auto____$3 === cljs.core.match.backtrack) {
                                  try {
                                    var ocr_10328_1__10341 = cljs.core.nth.call(null, ocr_10328, 1);
                                    if (cljs.core.vector_QMARK_.call(null, ocr_10328_1__10341) && cljs.core.count.call(null, ocr_10328_1__10341) === 2) {
                                      try {
                                        var ocr_10328_1__10341_0__10358 = cljs.core.nth.call(null, ocr_10328_1__10341, 0);
                                        if (cljs.core.keyword_identical_QMARK_.call(null, ocr_10328_1__10341_0__10358, new cljs.core.Keyword(null, "ldelim", "ldelim", 4201320693))) {
                                          try {
                                            var ocr_10328_1__10341_1__10359 = cljs.core.nth.call(null, ocr_10328_1__10341, 1);
                                            if (cljs.core.keyword_identical_QMARK_.call(null, ocr_10328_1__10341_1__10359, new cljs.core.Keyword(null, "indent", "indent", 4124632094))) {
                                              try {
                                                var ocr_10328_2__10342 = cljs.core.nth.call(null, ocr_10328, 2);
                                                if (cljs.core.keyword_identical_QMARK_.call(null, ocr_10328_2__10342, new cljs.core.Keyword(null, "hash", "hash", 1017099392))) {
                                                  try {
                                                    var ocr_10328_3__10343 = cljs.core.nth.call(null, ocr_10328, 3);
                                                    if (cljs.core.keyword_identical_QMARK_.call(null, ocr_10328_3__10343, new cljs.core.Keyword(null, "whitespace", "whitespace", 1290815983))) {
                                                      if (cljs.core.truth_(function() {
                                                        var and__3391__auto__ = function() {
                                                          var or__3403__auto__ = cljs.core.complement.call(null, termcat.term.rdelim_QMARK_).call(null, t1);
                                                          if (cljs.core.truth_(or__3403__auto__)) {
                                                            return or__3403__auto__;
                                                          } else {
                                                            return termcat.rules.tokenize.item_type.call(null, t1);
                                                          }
                                                        }();
                                                        if (cljs.core.truth_(and__3391__auto__)) {
                                                          var and__3391__auto____$1 = termcat.rules.tokenize.item_type.call(null, t2);
                                                          if (cljs.core.truth_(and__3391__auto____$1)) {
                                                            return cljs.core.not_EQ_.call(null, termcat.term.tt.call(null, t1), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "rdelim", "rdelim", 4373095599), termcat.rules.tokenize.item_type.call(null, t2)], null));
                                                          } else {
                                                            return and__3391__auto____$1;
                                                          }
                                                        } else {
                                                          return and__3391__auto__;
                                                        }
                                                      }())) {
                                                        return new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null, "in-bullet", "in-bullet", 2845348380), true, new cljs.core.Keyword(null, "item-type", "item-type", 3121552678), termcat.rules.tokenize.item_type.call(null, t2), new cljs.core.Keyword(null, "prev-state", "prev-state", 3562322921), state], null), t1, termcat.term.token.call(null, new cljs.core.PersistentVector(null, 
                                                        2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "ldelim", "ldelim", 4201320693), termcat.rules.tokenize.item_type.call(null, t2)], null), termcat.term.payload.call(null, t2)), t3], null);
                                                      } else {
                                                        return null;
                                                      }
                                                    } else {
                                                      if (cljs.core.keyword_identical_QMARK_.call(null, ocr_10328_3__10343, new cljs.core.Keyword(null, "newline", "newline", 2859826438))) {
                                                        if (cljs.core.truth_(function() {
                                                          var and__3391__auto__ = function() {
                                                            var or__3403__auto__ = cljs.core.complement.call(null, termcat.term.rdelim_QMARK_).call(null, t1);
                                                            if (cljs.core.truth_(or__3403__auto__)) {
                                                              return or__3403__auto__;
                                                            } else {
                                                              return termcat.rules.tokenize.item_type.call(null, t1);
                                                            }
                                                          }();
                                                          if (cljs.core.truth_(and__3391__auto__)) {
                                                            var and__3391__auto____$1 = termcat.rules.tokenize.item_type.call(null, t2);
                                                            if (cljs.core.truth_(and__3391__auto____$1)) {
                                                              return cljs.core.not_EQ_.call(null, termcat.term.tt.call(null, t1), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "rdelim", "rdelim", 4373095599), termcat.rules.tokenize.item_type.call(null, t2)], null));
                                                            } else {
                                                              return and__3391__auto____$1;
                                                            }
                                                          } else {
                                                            return and__3391__auto__;
                                                          }
                                                        }())) {
                                                          return new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null, "in-bullet", "in-bullet", 2845348380), true, new cljs.core.Keyword(null, "item-type", "item-type", 3121552678), termcat.rules.tokenize.item_type.call(null, t2), new cljs.core.Keyword(null, "prev-state", "prev-state", 3562322921), state], null), t1, termcat.term.token.call(null, new cljs.core.PersistentVector(null, 
                                                          2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "ldelim", "ldelim", 4201320693), termcat.rules.tokenize.item_type.call(null, t2)], null), termcat.term.payload.call(null, t2)), t3], null);
                                                        } else {
                                                          return null;
                                                        }
                                                      } else {
                                                        if (cljs.core.keyword_identical_QMARK_.call(null, ocr_10328_3__10343, new cljs.core.Keyword(null, "emptyline", "emptyline", 3889609267))) {
                                                          if (cljs.core.truth_(function() {
                                                            var and__3391__auto__ = function() {
                                                              var or__3403__auto__ = cljs.core.complement.call(null, termcat.term.rdelim_QMARK_).call(null, t1);
                                                              if (cljs.core.truth_(or__3403__auto__)) {
                                                                return or__3403__auto__;
                                                              } else {
                                                                return termcat.rules.tokenize.item_type.call(null, t1);
                                                              }
                                                            }();
                                                            if (cljs.core.truth_(and__3391__auto__)) {
                                                              var and__3391__auto____$1 = termcat.rules.tokenize.item_type.call(null, t2);
                                                              if (cljs.core.truth_(and__3391__auto____$1)) {
                                                                return cljs.core.not_EQ_.call(null, termcat.term.tt.call(null, t1), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "rdelim", "rdelim", 4373095599), termcat.rules.tokenize.item_type.call(null, t2)], null));
                                                              } else {
                                                                return and__3391__auto____$1;
                                                              }
                                                            } else {
                                                              return and__3391__auto__;
                                                            }
                                                          }())) {
                                                            return new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null, "in-bullet", "in-bullet", 2845348380), true, new cljs.core.Keyword(null, "item-type", "item-type", 3121552678), termcat.rules.tokenize.item_type.call(null, t2), new cljs.core.Keyword(null, "prev-state", "prev-state", 3562322921), state], null), t1, termcat.term.token.call(null, new cljs.core.PersistentVector(null, 
                                                            2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "ldelim", "ldelim", 4201320693), termcat.rules.tokenize.item_type.call(null, t2)], null), termcat.term.payload.call(null, t2)), t3], null);
                                                          } else {
                                                            return null;
                                                          }
                                                        } else {
                                                          if (ocr_10328_3__10343 === null) {
                                                            if (cljs.core.truth_(function() {
                                                              var and__3391__auto__ = function() {
                                                                var or__3403__auto__ = cljs.core.complement.call(null, termcat.term.rdelim_QMARK_).call(null, t1);
                                                                if (cljs.core.truth_(or__3403__auto__)) {
                                                                  return or__3403__auto__;
                                                                } else {
                                                                  return termcat.rules.tokenize.item_type.call(null, t1);
                                                                }
                                                              }();
                                                              if (cljs.core.truth_(and__3391__auto__)) {
                                                                var and__3391__auto____$1 = termcat.rules.tokenize.item_type.call(null, t2);
                                                                if (cljs.core.truth_(and__3391__auto____$1)) {
                                                                  return cljs.core.not_EQ_.call(null, termcat.term.tt.call(null, t1), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "rdelim", "rdelim", 4373095599), termcat.rules.tokenize.item_type.call(null, t2)], null));
                                                                } else {
                                                                  return and__3391__auto____$1;
                                                                }
                                                              } else {
                                                                return and__3391__auto__;
                                                              }
                                                            }())) {
                                                              return new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null, "in-bullet", "in-bullet", 2845348380), true, new cljs.core.Keyword(null, "item-type", "item-type", 3121552678), termcat.rules.tokenize.item_type.call(null, t2), new cljs.core.Keyword(null, "prev-state", "prev-state", 3562322921), state], null), t1, termcat.term.token.call(null, 
                                                              new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "ldelim", "ldelim", 4201320693), termcat.rules.tokenize.item_type.call(null, t2)], null), termcat.term.payload.call(null, t2)), t3], null);
                                                            } else {
                                                              return null;
                                                            }
                                                          } else {
                                                            if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
                                                              throw cljs.core.match.backtrack;
                                                            } else {
                                                              return null;
                                                            }
                                                          }
                                                        }
                                                      }
                                                    }
                                                  } catch (e10372) {
                                                    if (e10372 instanceof Error) {
                                                      var e__4796__auto____$4 = e10372;
                                                      if (e__4796__auto____$4 === cljs.core.match.backtrack) {
                                                        throw cljs.core.match.backtrack;
                                                      } else {
                                                        throw e__4796__auto____$4;
                                                      }
                                                    } else {
                                                      if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
                                                        throw e10372;
                                                      } else {
                                                        return null;
                                                      }
                                                    }
                                                  }
                                                } else {
                                                  if (cljs.core.keyword_identical_QMARK_.call(null, ocr_10328_2__10342, new cljs.core.Keyword(null, "dash", "dash", 1016980228))) {
                                                    try {
                                                      var ocr_10328_3__10343 = cljs.core.nth.call(null, ocr_10328, 3);
                                                      if (cljs.core.keyword_identical_QMARK_.call(null, ocr_10328_3__10343, new cljs.core.Keyword(null, "whitespace", "whitespace", 1290815983))) {
                                                        if (cljs.core.truth_(function() {
                                                          var and__3391__auto__ = function() {
                                                            var or__3403__auto__ = cljs.core.complement.call(null, termcat.term.rdelim_QMARK_).call(null, t1);
                                                            if (cljs.core.truth_(or__3403__auto__)) {
                                                              return or__3403__auto__;
                                                            } else {
                                                              return termcat.rules.tokenize.item_type.call(null, t1);
                                                            }
                                                          }();
                                                          if (cljs.core.truth_(and__3391__auto__)) {
                                                            var and__3391__auto____$1 = termcat.rules.tokenize.item_type.call(null, t2);
                                                            if (cljs.core.truth_(and__3391__auto____$1)) {
                                                              return cljs.core.not_EQ_.call(null, termcat.term.tt.call(null, t1), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "rdelim", "rdelim", 4373095599), termcat.rules.tokenize.item_type.call(null, t2)], null));
                                                            } else {
                                                              return and__3391__auto____$1;
                                                            }
                                                          } else {
                                                            return and__3391__auto__;
                                                          }
                                                        }())) {
                                                          return new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null, "in-bullet", "in-bullet", 2845348380), true, new cljs.core.Keyword(null, "item-type", "item-type", 3121552678), termcat.rules.tokenize.item_type.call(null, t2), new cljs.core.Keyword(null, "prev-state", "prev-state", 3562322921), state], null), t1, termcat.term.token.call(null, new cljs.core.PersistentVector(null, 
                                                          2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "ldelim", "ldelim", 4201320693), termcat.rules.tokenize.item_type.call(null, t2)], null), termcat.term.payload.call(null, t2)), t3], null);
                                                        } else {
                                                          return null;
                                                        }
                                                      } else {
                                                        if (cljs.core.keyword_identical_QMARK_.call(null, ocr_10328_3__10343, new cljs.core.Keyword(null, "newline", "newline", 2859826438))) {
                                                          if (cljs.core.truth_(function() {
                                                            var and__3391__auto__ = function() {
                                                              var or__3403__auto__ = cljs.core.complement.call(null, termcat.term.rdelim_QMARK_).call(null, t1);
                                                              if (cljs.core.truth_(or__3403__auto__)) {
                                                                return or__3403__auto__;
                                                              } else {
                                                                return termcat.rules.tokenize.item_type.call(null, t1);
                                                              }
                                                            }();
                                                            if (cljs.core.truth_(and__3391__auto__)) {
                                                              var and__3391__auto____$1 = termcat.rules.tokenize.item_type.call(null, t2);
                                                              if (cljs.core.truth_(and__3391__auto____$1)) {
                                                                return cljs.core.not_EQ_.call(null, termcat.term.tt.call(null, t1), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "rdelim", "rdelim", 4373095599), termcat.rules.tokenize.item_type.call(null, t2)], null));
                                                              } else {
                                                                return and__3391__auto____$1;
                                                              }
                                                            } else {
                                                              return and__3391__auto__;
                                                            }
                                                          }())) {
                                                            return new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null, "in-bullet", "in-bullet", 2845348380), true, new cljs.core.Keyword(null, "item-type", "item-type", 3121552678), termcat.rules.tokenize.item_type.call(null, t2), new cljs.core.Keyword(null, "prev-state", "prev-state", 3562322921), state], null), t1, termcat.term.token.call(null, new cljs.core.PersistentVector(null, 
                                                            2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "ldelim", "ldelim", 4201320693), termcat.rules.tokenize.item_type.call(null, t2)], null), termcat.term.payload.call(null, t2)), t3], null);
                                                          } else {
                                                            return null;
                                                          }
                                                        } else {
                                                          if (cljs.core.keyword_identical_QMARK_.call(null, ocr_10328_3__10343, new cljs.core.Keyword(null, "emptyline", "emptyline", 3889609267))) {
                                                            if (cljs.core.truth_(function() {
                                                              var and__3391__auto__ = function() {
                                                                var or__3403__auto__ = cljs.core.complement.call(null, termcat.term.rdelim_QMARK_).call(null, t1);
                                                                if (cljs.core.truth_(or__3403__auto__)) {
                                                                  return or__3403__auto__;
                                                                } else {
                                                                  return termcat.rules.tokenize.item_type.call(null, t1);
                                                                }
                                                              }();
                                                              if (cljs.core.truth_(and__3391__auto__)) {
                                                                var and__3391__auto____$1 = termcat.rules.tokenize.item_type.call(null, t2);
                                                                if (cljs.core.truth_(and__3391__auto____$1)) {
                                                                  return cljs.core.not_EQ_.call(null, termcat.term.tt.call(null, t1), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "rdelim", "rdelim", 4373095599), termcat.rules.tokenize.item_type.call(null, t2)], null));
                                                                } else {
                                                                  return and__3391__auto____$1;
                                                                }
                                                              } else {
                                                                return and__3391__auto__;
                                                              }
                                                            }())) {
                                                              return new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null, "in-bullet", "in-bullet", 2845348380), true, new cljs.core.Keyword(null, "item-type", "item-type", 3121552678), termcat.rules.tokenize.item_type.call(null, t2), new cljs.core.Keyword(null, "prev-state", "prev-state", 3562322921), state], null), t1, termcat.term.token.call(null, 
                                                              new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "ldelim", "ldelim", 4201320693), termcat.rules.tokenize.item_type.call(null, t2)], null), termcat.term.payload.call(null, t2)), t3], null);
                                                            } else {
                                                              return null;
                                                            }
                                                          } else {
                                                            if (ocr_10328_3__10343 === null) {
                                                              if (cljs.core.truth_(function() {
                                                                var and__3391__auto__ = function() {
                                                                  var or__3403__auto__ = cljs.core.complement.call(null, termcat.term.rdelim_QMARK_).call(null, t1);
                                                                  if (cljs.core.truth_(or__3403__auto__)) {
                                                                    return or__3403__auto__;
                                                                  } else {
                                                                    return termcat.rules.tokenize.item_type.call(null, t1);
                                                                  }
                                                                }();
                                                                if (cljs.core.truth_(and__3391__auto__)) {
                                                                  var and__3391__auto____$1 = termcat.rules.tokenize.item_type.call(null, t2);
                                                                  if (cljs.core.truth_(and__3391__auto____$1)) {
                                                                    return cljs.core.not_EQ_.call(null, termcat.term.tt.call(null, t1), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "rdelim", "rdelim", 4373095599), termcat.rules.tokenize.item_type.call(null, t2)], null));
                                                                  } else {
                                                                    return and__3391__auto____$1;
                                                                  }
                                                                } else {
                                                                  return and__3391__auto__;
                                                                }
                                                              }())) {
                                                                return new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null, "in-bullet", "in-bullet", 2845348380), true, new cljs.core.Keyword(null, "item-type", "item-type", 3121552678), termcat.rules.tokenize.item_type.call(null, t2), new cljs.core.Keyword(null, "prev-state", "prev-state", 3562322921), state], null), t1, termcat.term.token.call(null, 
                                                                new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "ldelim", "ldelim", 4201320693), termcat.rules.tokenize.item_type.call(null, t2)], null), termcat.term.payload.call(null, t2)), t3], null);
                                                              } else {
                                                                return null;
                                                              }
                                                            } else {
                                                              if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
                                                                throw cljs.core.match.backtrack;
                                                              } else {
                                                                return null;
                                                              }
                                                            }
                                                          }
                                                        }
                                                      }
                                                    } catch (e10373) {
                                                      if (e10373 instanceof Error) {
                                                        var e__4796__auto____$4 = e10373;
                                                        if (e__4796__auto____$4 === cljs.core.match.backtrack) {
                                                          throw cljs.core.match.backtrack;
                                                        } else {
                                                          throw e__4796__auto____$4;
                                                        }
                                                      } else {
                                                        if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
                                                          throw e10373;
                                                        } else {
                                                          return null;
                                                        }
                                                      }
                                                    }
                                                  } else {
                                                    if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
                                                      throw cljs.core.match.backtrack;
                                                    } else {
                                                      return null;
                                                    }
                                                  }
                                                }
                                              } catch (e10371) {
                                                if (e10371 instanceof Error) {
                                                  var e__4796__auto____$4 = e10371;
                                                  if (e__4796__auto____$4 === cljs.core.match.backtrack) {
                                                    throw cljs.core.match.backtrack;
                                                  } else {
                                                    throw e__4796__auto____$4;
                                                  }
                                                } else {
                                                  if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
                                                    throw e10371;
                                                  } else {
                                                    return null;
                                                  }
                                                }
                                              }
                                            } else {
                                              if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
                                                throw cljs.core.match.backtrack;
                                              } else {
                                                return null;
                                              }
                                            }
                                          } catch (e10370) {
                                            if (e10370 instanceof Error) {
                                              var e__4796__auto____$4 = e10370;
                                              if (e__4796__auto____$4 === cljs.core.match.backtrack) {
                                                throw cljs.core.match.backtrack;
                                              } else {
                                                throw e__4796__auto____$4;
                                              }
                                            } else {
                                              if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
                                                throw e10370;
                                              } else {
                                                return null;
                                              }
                                            }
                                          }
                                        } else {
                                          if (cljs.core.keyword_identical_QMARK_.call(null, ocr_10328_1__10341_0__10358, new cljs.core.Keyword(null, "rdelim", "rdelim", 4373095599))) {
                                            try {
                                              var ocr_10328_2__10342 = cljs.core.nth.call(null, ocr_10328, 2);
                                              if (cljs.core.keyword_identical_QMARK_.call(null, ocr_10328_2__10342, new cljs.core.Keyword(null, "hash", "hash", 1017099392))) {
                                                try {
                                                  var ocr_10328_3__10343 = cljs.core.nth.call(null, ocr_10328, 3);
                                                  if (cljs.core.keyword_identical_QMARK_.call(null, ocr_10328_3__10343, new cljs.core.Keyword(null, "whitespace", "whitespace", 1290815983))) {
                                                    if (cljs.core.truth_(function() {
                                                      var and__3391__auto__ = function() {
                                                        var or__3403__auto__ = cljs.core.complement.call(null, termcat.term.rdelim_QMARK_).call(null, t1);
                                                        if (cljs.core.truth_(or__3403__auto__)) {
                                                          return or__3403__auto__;
                                                        } else {
                                                          return termcat.rules.tokenize.item_type.call(null, t1);
                                                        }
                                                      }();
                                                      if (cljs.core.truth_(and__3391__auto__)) {
                                                        var and__3391__auto____$1 = termcat.rules.tokenize.item_type.call(null, t2);
                                                        if (cljs.core.truth_(and__3391__auto____$1)) {
                                                          return cljs.core.not_EQ_.call(null, termcat.term.tt.call(null, t1), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "rdelim", "rdelim", 4373095599), termcat.rules.tokenize.item_type.call(null, t2)], null));
                                                        } else {
                                                          return and__3391__auto____$1;
                                                        }
                                                      } else {
                                                        return and__3391__auto__;
                                                      }
                                                    }())) {
                                                      return new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null, "in-bullet", "in-bullet", 2845348380), true, new cljs.core.Keyword(null, "item-type", "item-type", 3121552678), termcat.rules.tokenize.item_type.call(null, t2), new cljs.core.Keyword(null, "prev-state", "prev-state", 3562322921), state], null), t1, termcat.term.token.call(null, new cljs.core.PersistentVector(null, 
                                                      2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "ldelim", "ldelim", 4201320693), termcat.rules.tokenize.item_type.call(null, t2)], null), termcat.term.payload.call(null, t2)), t3], null);
                                                    } else {
                                                      return null;
                                                    }
                                                  } else {
                                                    if (cljs.core.keyword_identical_QMARK_.call(null, ocr_10328_3__10343, new cljs.core.Keyword(null, "newline", "newline", 2859826438))) {
                                                      if (cljs.core.truth_(function() {
                                                        var and__3391__auto__ = function() {
                                                          var or__3403__auto__ = cljs.core.complement.call(null, termcat.term.rdelim_QMARK_).call(null, t1);
                                                          if (cljs.core.truth_(or__3403__auto__)) {
                                                            return or__3403__auto__;
                                                          } else {
                                                            return termcat.rules.tokenize.item_type.call(null, t1);
                                                          }
                                                        }();
                                                        if (cljs.core.truth_(and__3391__auto__)) {
                                                          var and__3391__auto____$1 = termcat.rules.tokenize.item_type.call(null, t2);
                                                          if (cljs.core.truth_(and__3391__auto____$1)) {
                                                            return cljs.core.not_EQ_.call(null, termcat.term.tt.call(null, t1), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "rdelim", "rdelim", 4373095599), termcat.rules.tokenize.item_type.call(null, t2)], null));
                                                          } else {
                                                            return and__3391__auto____$1;
                                                          }
                                                        } else {
                                                          return and__3391__auto__;
                                                        }
                                                      }())) {
                                                        return new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null, "in-bullet", "in-bullet", 2845348380), true, new cljs.core.Keyword(null, "item-type", "item-type", 3121552678), termcat.rules.tokenize.item_type.call(null, t2), new cljs.core.Keyword(null, "prev-state", "prev-state", 3562322921), state], null), t1, termcat.term.token.call(null, new cljs.core.PersistentVector(null, 
                                                        2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "ldelim", "ldelim", 4201320693), termcat.rules.tokenize.item_type.call(null, t2)], null), termcat.term.payload.call(null, t2)), t3], null);
                                                      } else {
                                                        return null;
                                                      }
                                                    } else {
                                                      if (cljs.core.keyword_identical_QMARK_.call(null, ocr_10328_3__10343, new cljs.core.Keyword(null, "emptyline", "emptyline", 3889609267))) {
                                                        if (cljs.core.truth_(function() {
                                                          var and__3391__auto__ = function() {
                                                            var or__3403__auto__ = cljs.core.complement.call(null, termcat.term.rdelim_QMARK_).call(null, t1);
                                                            if (cljs.core.truth_(or__3403__auto__)) {
                                                              return or__3403__auto__;
                                                            } else {
                                                              return termcat.rules.tokenize.item_type.call(null, t1);
                                                            }
                                                          }();
                                                          if (cljs.core.truth_(and__3391__auto__)) {
                                                            var and__3391__auto____$1 = termcat.rules.tokenize.item_type.call(null, t2);
                                                            if (cljs.core.truth_(and__3391__auto____$1)) {
                                                              return cljs.core.not_EQ_.call(null, termcat.term.tt.call(null, t1), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "rdelim", "rdelim", 4373095599), termcat.rules.tokenize.item_type.call(null, t2)], null));
                                                            } else {
                                                              return and__3391__auto____$1;
                                                            }
                                                          } else {
                                                            return and__3391__auto__;
                                                          }
                                                        }())) {
                                                          return new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null, "in-bullet", "in-bullet", 2845348380), true, new cljs.core.Keyword(null, "item-type", "item-type", 3121552678), termcat.rules.tokenize.item_type.call(null, t2), new cljs.core.Keyword(null, "prev-state", "prev-state", 3562322921), state], null), t1, termcat.term.token.call(null, new cljs.core.PersistentVector(null, 
                                                          2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "ldelim", "ldelim", 4201320693), termcat.rules.tokenize.item_type.call(null, t2)], null), termcat.term.payload.call(null, t2)), t3], null);
                                                        } else {
                                                          return null;
                                                        }
                                                      } else {
                                                        if (ocr_10328_3__10343 === null) {
                                                          if (cljs.core.truth_(function() {
                                                            var and__3391__auto__ = function() {
                                                              var or__3403__auto__ = cljs.core.complement.call(null, termcat.term.rdelim_QMARK_).call(null, t1);
                                                              if (cljs.core.truth_(or__3403__auto__)) {
                                                                return or__3403__auto__;
                                                              } else {
                                                                return termcat.rules.tokenize.item_type.call(null, t1);
                                                              }
                                                            }();
                                                            if (cljs.core.truth_(and__3391__auto__)) {
                                                              var and__3391__auto____$1 = termcat.rules.tokenize.item_type.call(null, t2);
                                                              if (cljs.core.truth_(and__3391__auto____$1)) {
                                                                return cljs.core.not_EQ_.call(null, termcat.term.tt.call(null, t1), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "rdelim", "rdelim", 4373095599), termcat.rules.tokenize.item_type.call(null, t2)], null));
                                                              } else {
                                                                return and__3391__auto____$1;
                                                              }
                                                            } else {
                                                              return and__3391__auto__;
                                                            }
                                                          }())) {
                                                            return new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null, "in-bullet", "in-bullet", 2845348380), true, new cljs.core.Keyword(null, "item-type", "item-type", 3121552678), termcat.rules.tokenize.item_type.call(null, t2), new cljs.core.Keyword(null, "prev-state", "prev-state", 3562322921), state], null), t1, termcat.term.token.call(null, new cljs.core.PersistentVector(null, 
                                                            2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "ldelim", "ldelim", 4201320693), termcat.rules.tokenize.item_type.call(null, t2)], null), termcat.term.payload.call(null, t2)), t3], null);
                                                          } else {
                                                            return null;
                                                          }
                                                        } else {
                                                          if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
                                                            throw cljs.core.match.backtrack;
                                                          } else {
                                                            return null;
                                                          }
                                                        }
                                                      }
                                                    }
                                                  }
                                                } catch (e10375) {
                                                  if (e10375 instanceof Error) {
                                                    var e__4796__auto____$4 = e10375;
                                                    if (e__4796__auto____$4 === cljs.core.match.backtrack) {
                                                      throw cljs.core.match.backtrack;
                                                    } else {
                                                      throw e__4796__auto____$4;
                                                    }
                                                  } else {
                                                    if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
                                                      throw e10375;
                                                    } else {
                                                      return null;
                                                    }
                                                  }
                                                }
                                              } else {
                                                if (cljs.core.keyword_identical_QMARK_.call(null, ocr_10328_2__10342, new cljs.core.Keyword(null, "dash", "dash", 1016980228))) {
                                                  try {
                                                    var ocr_10328_3__10343 = cljs.core.nth.call(null, ocr_10328, 3);
                                                    if (cljs.core.keyword_identical_QMARK_.call(null, ocr_10328_3__10343, new cljs.core.Keyword(null, "whitespace", "whitespace", 1290815983))) {
                                                      if (cljs.core.truth_(function() {
                                                        var and__3391__auto__ = function() {
                                                          var or__3403__auto__ = cljs.core.complement.call(null, termcat.term.rdelim_QMARK_).call(null, t1);
                                                          if (cljs.core.truth_(or__3403__auto__)) {
                                                            return or__3403__auto__;
                                                          } else {
                                                            return termcat.rules.tokenize.item_type.call(null, t1);
                                                          }
                                                        }();
                                                        if (cljs.core.truth_(and__3391__auto__)) {
                                                          var and__3391__auto____$1 = termcat.rules.tokenize.item_type.call(null, t2);
                                                          if (cljs.core.truth_(and__3391__auto____$1)) {
                                                            return cljs.core.not_EQ_.call(null, termcat.term.tt.call(null, t1), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "rdelim", "rdelim", 4373095599), termcat.rules.tokenize.item_type.call(null, t2)], null));
                                                          } else {
                                                            return and__3391__auto____$1;
                                                          }
                                                        } else {
                                                          return and__3391__auto__;
                                                        }
                                                      }())) {
                                                        return new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null, "in-bullet", "in-bullet", 2845348380), true, new cljs.core.Keyword(null, "item-type", "item-type", 3121552678), termcat.rules.tokenize.item_type.call(null, t2), new cljs.core.Keyword(null, "prev-state", "prev-state", 3562322921), state], null), t1, termcat.term.token.call(null, new cljs.core.PersistentVector(null, 
                                                        2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "ldelim", "ldelim", 4201320693), termcat.rules.tokenize.item_type.call(null, t2)], null), termcat.term.payload.call(null, t2)), t3], null);
                                                      } else {
                                                        return null;
                                                      }
                                                    } else {
                                                      if (cljs.core.keyword_identical_QMARK_.call(null, ocr_10328_3__10343, new cljs.core.Keyword(null, "newline", "newline", 2859826438))) {
                                                        if (cljs.core.truth_(function() {
                                                          var and__3391__auto__ = function() {
                                                            var or__3403__auto__ = cljs.core.complement.call(null, termcat.term.rdelim_QMARK_).call(null, t1);
                                                            if (cljs.core.truth_(or__3403__auto__)) {
                                                              return or__3403__auto__;
                                                            } else {
                                                              return termcat.rules.tokenize.item_type.call(null, t1);
                                                            }
                                                          }();
                                                          if (cljs.core.truth_(and__3391__auto__)) {
                                                            var and__3391__auto____$1 = termcat.rules.tokenize.item_type.call(null, t2);
                                                            if (cljs.core.truth_(and__3391__auto____$1)) {
                                                              return cljs.core.not_EQ_.call(null, termcat.term.tt.call(null, t1), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "rdelim", "rdelim", 4373095599), termcat.rules.tokenize.item_type.call(null, t2)], null));
                                                            } else {
                                                              return and__3391__auto____$1;
                                                            }
                                                          } else {
                                                            return and__3391__auto__;
                                                          }
                                                        }())) {
                                                          return new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null, "in-bullet", "in-bullet", 2845348380), true, new cljs.core.Keyword(null, "item-type", "item-type", 3121552678), termcat.rules.tokenize.item_type.call(null, t2), new cljs.core.Keyword(null, "prev-state", "prev-state", 3562322921), state], null), t1, termcat.term.token.call(null, new cljs.core.PersistentVector(null, 
                                                          2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "ldelim", "ldelim", 4201320693), termcat.rules.tokenize.item_type.call(null, t2)], null), termcat.term.payload.call(null, t2)), t3], null);
                                                        } else {
                                                          return null;
                                                        }
                                                      } else {
                                                        if (cljs.core.keyword_identical_QMARK_.call(null, ocr_10328_3__10343, new cljs.core.Keyword(null, "emptyline", "emptyline", 3889609267))) {
                                                          if (cljs.core.truth_(function() {
                                                            var and__3391__auto__ = function() {
                                                              var or__3403__auto__ = cljs.core.complement.call(null, termcat.term.rdelim_QMARK_).call(null, t1);
                                                              if (cljs.core.truth_(or__3403__auto__)) {
                                                                return or__3403__auto__;
                                                              } else {
                                                                return termcat.rules.tokenize.item_type.call(null, t1);
                                                              }
                                                            }();
                                                            if (cljs.core.truth_(and__3391__auto__)) {
                                                              var and__3391__auto____$1 = termcat.rules.tokenize.item_type.call(null, t2);
                                                              if (cljs.core.truth_(and__3391__auto____$1)) {
                                                                return cljs.core.not_EQ_.call(null, termcat.term.tt.call(null, t1), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "rdelim", "rdelim", 4373095599), termcat.rules.tokenize.item_type.call(null, t2)], null));
                                                              } else {
                                                                return and__3391__auto____$1;
                                                              }
                                                            } else {
                                                              return and__3391__auto__;
                                                            }
                                                          }())) {
                                                            return new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null, "in-bullet", "in-bullet", 2845348380), true, new cljs.core.Keyword(null, "item-type", "item-type", 3121552678), termcat.rules.tokenize.item_type.call(null, t2), new cljs.core.Keyword(null, "prev-state", "prev-state", 3562322921), state], null), t1, termcat.term.token.call(null, new cljs.core.PersistentVector(null, 
                                                            2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "ldelim", "ldelim", 4201320693), termcat.rules.tokenize.item_type.call(null, t2)], null), termcat.term.payload.call(null, t2)), t3], null);
                                                          } else {
                                                            return null;
                                                          }
                                                        } else {
                                                          if (ocr_10328_3__10343 === null) {
                                                            if (cljs.core.truth_(function() {
                                                              var and__3391__auto__ = function() {
                                                                var or__3403__auto__ = cljs.core.complement.call(null, termcat.term.rdelim_QMARK_).call(null, t1);
                                                                if (cljs.core.truth_(or__3403__auto__)) {
                                                                  return or__3403__auto__;
                                                                } else {
                                                                  return termcat.rules.tokenize.item_type.call(null, t1);
                                                                }
                                                              }();
                                                              if (cljs.core.truth_(and__3391__auto__)) {
                                                                var and__3391__auto____$1 = termcat.rules.tokenize.item_type.call(null, t2);
                                                                if (cljs.core.truth_(and__3391__auto____$1)) {
                                                                  return cljs.core.not_EQ_.call(null, termcat.term.tt.call(null, t1), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "rdelim", "rdelim", 4373095599), termcat.rules.tokenize.item_type.call(null, t2)], null));
                                                                } else {
                                                                  return and__3391__auto____$1;
                                                                }
                                                              } else {
                                                                return and__3391__auto__;
                                                              }
                                                            }())) {
                                                              return new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null, "in-bullet", "in-bullet", 2845348380), true, new cljs.core.Keyword(null, "item-type", "item-type", 3121552678), termcat.rules.tokenize.item_type.call(null, t2), new cljs.core.Keyword(null, "prev-state", "prev-state", 3562322921), state], null), t1, termcat.term.token.call(null, 
                                                              new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "ldelim", "ldelim", 4201320693), termcat.rules.tokenize.item_type.call(null, t2)], null), termcat.term.payload.call(null, t2)), t3], null);
                                                            } else {
                                                              return null;
                                                            }
                                                          } else {
                                                            if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
                                                              throw cljs.core.match.backtrack;
                                                            } else {
                                                              return null;
                                                            }
                                                          }
                                                        }
                                                      }
                                                    }
                                                  } catch (e10376) {
                                                    if (e10376 instanceof Error) {
                                                      var e__4796__auto____$4 = e10376;
                                                      if (e__4796__auto____$4 === cljs.core.match.backtrack) {
                                                        throw cljs.core.match.backtrack;
                                                      } else {
                                                        throw e__4796__auto____$4;
                                                      }
                                                    } else {
                                                      if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
                                                        throw e10376;
                                                      } else {
                                                        return null;
                                                      }
                                                    }
                                                  }
                                                } else {
                                                  if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
                                                    throw cljs.core.match.backtrack;
                                                  } else {
                                                    return null;
                                                  }
                                                }
                                              }
                                            } catch (e10374) {
                                              if (e10374 instanceof Error) {
                                                var e__4796__auto____$4 = e10374;
                                                if (e__4796__auto____$4 === cljs.core.match.backtrack) {
                                                  throw cljs.core.match.backtrack;
                                                } else {
                                                  throw e__4796__auto____$4;
                                                }
                                              } else {
                                                if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
                                                  throw e10374;
                                                } else {
                                                  return null;
                                                }
                                              }
                                            }
                                          } else {
                                            if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
                                              throw cljs.core.match.backtrack;
                                            } else {
                                              return null;
                                            }
                                          }
                                        }
                                      } catch (e10366) {
                                        if (e10366 instanceof Error) {
                                          var e__4796__auto____$4 = e10366;
                                          if (e__4796__auto____$4 === cljs.core.match.backtrack) {
                                            try {
                                              var ocr_10328_1__10341_0__10358 = cljs.core.nth.call(null, ocr_10328_1__10341, 0);
                                              if (cljs.core.keyword_identical_QMARK_.call(null, ocr_10328_1__10341_0__10358, new cljs.core.Keyword(null, "ldelim", "ldelim", 4201320693))) {
                                                try {
                                                  var ocr_10328_1__10341_1__10359 = cljs.core.nth.call(null, ocr_10328_1__10341, 1);
                                                  if (cljs.core.keyword_identical_QMARK_.call(null, ocr_10328_1__10341_1__10359, new cljs.core.Keyword(null, "indent", "indent", 4124632094))) {
                                                    return new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "in-bullet", "in-bullet", 2845348380), false, new cljs.core.Keyword(null, "prev-state", "prev-state", 3562322921), state], null), t1, t2, t3], null);
                                                  } else {
                                                    if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
                                                      throw cljs.core.match.backtrack;
                                                    } else {
                                                      return null;
                                                    }
                                                  }
                                                } catch (e10368) {
                                                  if (e10368 instanceof Error) {
                                                    var e__4796__auto____$5 = e10368;
                                                    if (e__4796__auto____$5 === cljs.core.match.backtrack) {
                                                      throw cljs.core.match.backtrack;
                                                    } else {
                                                      throw e__4796__auto____$5;
                                                    }
                                                  } else {
                                                    if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
                                                      throw e10368;
                                                    } else {
                                                      return null;
                                                    }
                                                  }
                                                }
                                              } else {
                                                if (cljs.core.keyword_identical_QMARK_.call(null, ocr_10328_1__10341_0__10358, new cljs.core.Keyword(null, "rdelim", "rdelim", 4373095599))) {
                                                  try {
                                                    var ocr_10328_1__10341_1__10359 = cljs.core.nth.call(null, ocr_10328_1__10341, 1);
                                                    if (cljs.core.keyword_identical_QMARK_.call(null, ocr_10328_1__10341_1__10359, new cljs.core.Keyword(null, "indent", "indent", 4124632094))) {
                                                      return new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [(new cljs.core.Keyword(null, "prev-state", "prev-state", 3562322921)).cljs$core$IFn$_invoke$arity$1(state), t1, t2, t3], null);
                                                    } else {
                                                      if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
                                                        throw cljs.core.match.backtrack;
                                                      } else {
                                                        return null;
                                                      }
                                                    }
                                                  } catch (e10369) {
                                                    if (e10369 instanceof Error) {
                                                      var e__4796__auto____$5 = e10369;
                                                      if (e__4796__auto____$5 === cljs.core.match.backtrack) {
                                                        throw cljs.core.match.backtrack;
                                                      } else {
                                                        throw e__4796__auto____$5;
                                                      }
                                                    } else {
                                                      if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
                                                        throw e10369;
                                                      } else {
                                                        return null;
                                                      }
                                                    }
                                                  }
                                                } else {
                                                  if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
                                                    throw cljs.core.match.backtrack;
                                                  } else {
                                                    return null;
                                                  }
                                                }
                                              }
                                            } catch (e10367) {
                                              if (e10367 instanceof Error) {
                                                var e__4796__auto____$5 = e10367;
                                                if (e__4796__auto____$5 === cljs.core.match.backtrack) {
                                                  throw cljs.core.match.backtrack;
                                                } else {
                                                  throw e__4796__auto____$5;
                                                }
                                              } else {
                                                if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
                                                  throw e10367;
                                                } else {
                                                  return null;
                                                }
                                              }
                                            }
                                          } else {
                                            throw e__4796__auto____$4;
                                          }
                                        } else {
                                          if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
                                            throw e10366;
                                          } else {
                                            return null;
                                          }
                                        }
                                      }
                                    } else {
                                      if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
                                        throw cljs.core.match.backtrack;
                                      } else {
                                        return null;
                                      }
                                    }
                                  } catch (e10365) {
                                    if (e10365 instanceof Error) {
                                      var e__4796__auto____$4 = e10365;
                                      if (e__4796__auto____$4 === cljs.core.match.backtrack) {
                                        throw cljs.core.match.backtrack;
                                      } else {
                                        throw e__4796__auto____$4;
                                      }
                                    } else {
                                      if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
                                        throw e10365;
                                      } else {
                                        return null;
                                      }
                                    }
                                  }
                                } else {
                                  throw e__4796__auto____$3;
                                }
                              } else {
                                if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
                                  throw e10364;
                                } else {
                                  return null;
                                }
                              }
                            }
                          } else {
                            throw e__4796__auto____$2;
                          }
                        } else {
                          if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
                            throw e10363;
                          } else {
                            return null;
                          }
                        }
                      }
                    } else {
                      throw e__4796__auto____$1;
                    }
                  } else {
                    if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
                      throw e10362;
                    } else {
                      return null;
                    }
                  }
                }
              } else {
                throw e__4796__auto__;
              }
            } else {
              if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
                throw e10361;
              } else {
                return null;
              }
            }
          }
        } else {
          if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
            throw cljs.core.match.backtrack;
          } else {
            return null;
          }
        }
      } catch (e10360) {
        if (e10360 instanceof Error) {
          var e__4796__auto__ = e10360;
          if (e__4796__auto__ === cljs.core.match.backtrack) {
            return null;
          } else {
            throw e__4796__auto__;
          }
        } else {
          if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
            throw e10360;
          } else {
            return null;
          }
        }
      }
    }();
    if (cljs.core.truth_(temp__4090__auto__)) {
      var r__6471__auto__ = temp__4090__auto__;
      return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [function() {
        var or__3403__auto__ = cljs.core.first.call(null, r__6471__auto__);
        if (cljs.core.truth_(or__3403__auto__)) {
          return or__3403__auto__;
        } else {
          return state__6468__auto__;
        }
      }(), cljs.core.concat.call(null, cljs.core.next.call(null, r__6471__auto__), cljs.core.drop.call(null, 3, input__6469__auto__))], null);
    } else {
      return null;
    }
  };
  G__10403 = function(state__6468__auto__, input__6469__auto__) {
    switch(arguments.length) {
      case 0:
        return G__10403__0.call(this);
      case 2:
        return G__10403__2.call(this, state__6468__auto__, input__6469__auto__);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  return G__10403;
}());
termcat.rules.tokenize.remove_percent_tokens = termcat.rewrite.abstraction.call(null, function() {
  var G__10457 = null;
  var G__10457__0 = function() {
    return null;
  };
  var G__10457__2 = function(state__6468__auto__, input__6469__auto__) {
    var padded_input__6470__auto__ = cljs.core.concat.call(null, input__6469__auto__, cljs.core.repeat.call(null, null));
    var vec__10404 = cljs.core.cons.call(null, state__6468__auto__, cljs.core.take.call(null, 3, padded_input__6470__auto__));
    var state = cljs.core.nth.call(null, vec__10404, 0, null);
    var t1 = cljs.core.nth.call(null, vec__10404, 1, null);
    var t2 = cljs.core.nth.call(null, vec__10404, 2, null);
    var t3 = cljs.core.nth.call(null, vec__10404, 3, null);
    var temp__4090__auto__ = function() {
      var ocr_10405 = clojure.core.reducers.reduce.call(null, cljs.core.conj, new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [state__6468__auto__], null), clojure.core.reducers.take.call(null, 3, clojure.core.reducers.map.call(null, termcat.term.tt, padded_input__6470__auto__)));
      try {
        if (cljs.core.vector_QMARK_.call(null, ocr_10405) && cljs.core.count.call(null, ocr_10405) === 4) {
          try {
            var ocr_10405_1__10417 = cljs.core.nth.call(null, ocr_10405, 1);
            if (cljs.core.keyword_identical_QMARK_.call(null, ocr_10405_1__10417, new cljs.core.Keyword(null, "percent", "percent", 4629944247))) {
              try {
                var ocr_10405_2__10418 = cljs.core.nth.call(null, ocr_10405, 2);
                if (cljs.core.keyword_identical_QMARK_.call(null, ocr_10405_2__10418, new cljs.core.Keyword(null, "percent", "percent", 4629944247))) {
                  try {
                    var ocr_10405_3__10419 = cljs.core.nth.call(null, ocr_10405, 3);
                    if (cljs.core.keyword_identical_QMARK_.call(null, ocr_10405_3__10419, new cljs.core.Keyword(null, "newline", "newline", 2859826438))) {
                      return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [null, t3], null);
                    } else {
                      if (cljs.core.keyword_identical_QMARK_.call(null, ocr_10405_3__10419, new cljs.core.Keyword(null, "emptyline", "emptyline", 3889609267))) {
                        return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [null, t3], null);
                      } else {
                        if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
                          throw cljs.core.match.backtrack;
                        } else {
                          return null;
                        }
                      }
                    }
                  } catch (e10448) {
                    if (e10448 instanceof Error) {
                      var e__4796__auto__ = e10448;
                      if (e__4796__auto__ === cljs.core.match.backtrack) {
                        try {
                          var ocr_10405_3__10419 = cljs.core.nth.call(null, ocr_10405, 3);
                          if (cljs.core.vector_QMARK_.call(null, ocr_10405_3__10419) && cljs.core.count.call(null, ocr_10405_3__10419) === 2) {
                            try {
                              var ocr_10405_3__10419_0__10420 = cljs.core.nth.call(null, ocr_10405_3__10419, 0);
                              if (cljs.core.keyword_identical_QMARK_.call(null, ocr_10405_3__10419_0__10420, new cljs.core.Keyword(null, "ldelim", "ldelim", 4201320693))) {
                                try {
                                  var ocr_10405_3__10419_1__10421 = cljs.core.nth.call(null, ocr_10405_3__10419, 1);
                                  if (cljs.core.keyword_identical_QMARK_.call(null, ocr_10405_3__10419_1__10421, new cljs.core.Keyword(null, "indent", "indent", 4124632094))) {
                                    return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [null, t3], null);
                                  } else {
                                    if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
                                      throw cljs.core.match.backtrack;
                                    } else {
                                      return null;
                                    }
                                  }
                                } catch (e10455) {
                                  if (e10455 instanceof Error) {
                                    var e__4796__auto____$1 = e10455;
                                    if (e__4796__auto____$1 === cljs.core.match.backtrack) {
                                      throw cljs.core.match.backtrack;
                                    } else {
                                      throw e__4796__auto____$1;
                                    }
                                  } else {
                                    if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
                                      throw e10455;
                                    } else {
                                      return null;
                                    }
                                  }
                                }
                              } else {
                                if (cljs.core.keyword_identical_QMARK_.call(null, ocr_10405_3__10419_0__10420, new cljs.core.Keyword(null, "rdelim", "rdelim", 4373095599))) {
                                  try {
                                    var ocr_10405_3__10419_1__10421 = cljs.core.nth.call(null, ocr_10405_3__10419, 1);
                                    if (cljs.core.keyword_identical_QMARK_.call(null, ocr_10405_3__10419_1__10421, new cljs.core.Keyword(null, "indent", "indent", 4124632094))) {
                                      return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [null, t3], null);
                                    } else {
                                      if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
                                        throw cljs.core.match.backtrack;
                                      } else {
                                        return null;
                                      }
                                    }
                                  } catch (e10456) {
                                    if (e10456 instanceof Error) {
                                      var e__4796__auto____$1 = e10456;
                                      if (e__4796__auto____$1 === cljs.core.match.backtrack) {
                                        throw cljs.core.match.backtrack;
                                      } else {
                                        throw e__4796__auto____$1;
                                      }
                                    } else {
                                      if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
                                        throw e10456;
                                      } else {
                                        return null;
                                      }
                                    }
                                  }
                                } else {
                                  if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
                                    throw cljs.core.match.backtrack;
                                  } else {
                                    return null;
                                  }
                                }
                              }
                            } catch (e10451) {
                              if (e10451 instanceof Error) {
                                var e__4796__auto____$1 = e10451;
                                if (e__4796__auto____$1 === cljs.core.match.backtrack) {
                                  try {
                                    var ocr_10405_3__10419_0__10420 = cljs.core.nth.call(null, ocr_10405_3__10419, 0);
                                    if (cljs.core.keyword_identical_QMARK_.call(null, ocr_10405_3__10419_0__10420, new cljs.core.Keyword(null, "ldelim", "ldelim", 4201320693))) {
                                      try {
                                        var ocr_10405_3__10419_1__10421 = cljs.core.nth.call(null, ocr_10405_3__10419, 1);
                                        if (cljs.core.keyword_identical_QMARK_.call(null, ocr_10405_3__10419_1__10421, new cljs.core.Keyword(null, "bullet", "bullet", 3930937460))) {
                                          return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [null, t3], null);
                                        } else {
                                          if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
                                            throw cljs.core.match.backtrack;
                                          } else {
                                            return null;
                                          }
                                        }
                                      } catch (e10453) {
                                        if (e10453 instanceof Error) {
                                          var e__4796__auto____$2 = e10453;
                                          if (e__4796__auto____$2 === cljs.core.match.backtrack) {
                                            throw cljs.core.match.backtrack;
                                          } else {
                                            throw e__4796__auto____$2;
                                          }
                                        } else {
                                          if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
                                            throw e10453;
                                          } else {
                                            return null;
                                          }
                                        }
                                      }
                                    } else {
                                      if (cljs.core.keyword_identical_QMARK_.call(null, ocr_10405_3__10419_0__10420, new cljs.core.Keyword(null, "rdelim", "rdelim", 4373095599))) {
                                        try {
                                          var ocr_10405_3__10419_1__10421 = cljs.core.nth.call(null, ocr_10405_3__10419, 1);
                                          if (cljs.core.keyword_identical_QMARK_.call(null, ocr_10405_3__10419_1__10421, new cljs.core.Keyword(null, "bullet", "bullet", 3930937460))) {
                                            return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [null, t3], null);
                                          } else {
                                            if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
                                              throw cljs.core.match.backtrack;
                                            } else {
                                              return null;
                                            }
                                          }
                                        } catch (e10454) {
                                          if (e10454 instanceof Error) {
                                            var e__4796__auto____$2 = e10454;
                                            if (e__4796__auto____$2 === cljs.core.match.backtrack) {
                                              throw cljs.core.match.backtrack;
                                            } else {
                                              throw e__4796__auto____$2;
                                            }
                                          } else {
                                            if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
                                              throw e10454;
                                            } else {
                                              return null;
                                            }
                                          }
                                        }
                                      } else {
                                        if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
                                          throw cljs.core.match.backtrack;
                                        } else {
                                          return null;
                                        }
                                      }
                                    }
                                  } catch (e10452) {
                                    if (e10452 instanceof Error) {
                                      var e__4796__auto____$2 = e10452;
                                      if (e__4796__auto____$2 === cljs.core.match.backtrack) {
                                        throw cljs.core.match.backtrack;
                                      } else {
                                        throw e__4796__auto____$2;
                                      }
                                    } else {
                                      if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
                                        throw e10452;
                                      } else {
                                        return null;
                                      }
                                    }
                                  }
                                } else {
                                  throw e__4796__auto____$1;
                                }
                              } else {
                                if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
                                  throw e10451;
                                } else {
                                  return null;
                                }
                              }
                            }
                          } else {
                            if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
                              throw cljs.core.match.backtrack;
                            } else {
                              return null;
                            }
                          }
                        } catch (e10449) {
                          if (e10449 instanceof Error) {
                            var e__4796__auto____$1 = e10449;
                            if (e__4796__auto____$1 === cljs.core.match.backtrack) {
                              try {
                                var ocr_10405_3__10419 = cljs.core.nth.call(null, ocr_10405, 3);
                                if (ocr_10405_3__10419 === null) {
                                  return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [null, t3], null);
                                } else {
                                  if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
                                    throw cljs.core.match.backtrack;
                                  } else {
                                    return null;
                                  }
                                }
                              } catch (e10450) {
                                if (e10450 instanceof Error) {
                                  var e__4796__auto____$2 = e10450;
                                  if (e__4796__auto____$2 === cljs.core.match.backtrack) {
                                    throw cljs.core.match.backtrack;
                                  } else {
                                    throw e__4796__auto____$2;
                                  }
                                } else {
                                  if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
                                    throw e10450;
                                  } else {
                                    return null;
                                  }
                                }
                              }
                            } else {
                              throw e__4796__auto____$1;
                            }
                          } else {
                            if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
                              throw e10449;
                            } else {
                              return null;
                            }
                          }
                        }
                      } else {
                        throw e__4796__auto__;
                      }
                    } else {
                      if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
                        throw e10448;
                      } else {
                        return null;
                      }
                    }
                  }
                } else {
                  if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
                    throw cljs.core.match.backtrack;
                  } else {
                    return null;
                  }
                }
              } catch (e10447) {
                if (e10447 instanceof Error) {
                  var e__4796__auto__ = e10447;
                  if (e__4796__auto__ === cljs.core.match.backtrack) {
                    throw cljs.core.match.backtrack;
                  } else {
                    throw e__4796__auto__;
                  }
                } else {
                  if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
                    throw e10447;
                  } else {
                    return null;
                  }
                }
              }
            } else {
              if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
                throw cljs.core.match.backtrack;
              } else {
                return null;
              }
            }
          } catch (e10423) {
            if (e10423 instanceof Error) {
              var e__4796__auto__ = e10423;
              if (e__4796__auto__ === cljs.core.match.backtrack) {
                try {
                  var ocr_10405_1__10417 = cljs.core.nth.call(null, ocr_10405, 1);
                  if (cljs.core.keyword_identical_QMARK_.call(null, ocr_10405_1__10417, new cljs.core.Keyword(null, "percent", "percent", 4629944247))) {
                    try {
                      var ocr_10405_2__10418 = cljs.core.nth.call(null, ocr_10405, 2);
                      if (cljs.core.keyword_identical_QMARK_.call(null, ocr_10405_2__10418, new cljs.core.Keyword(null, "percent", "percent", 4629944247))) {
                        return new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [null, t1, t2], null);
                      } else {
                        if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
                          throw cljs.core.match.backtrack;
                        } else {
                          return null;
                        }
                      }
                    } catch (e10446) {
                      if (e10446 instanceof Error) {
                        var e__4796__auto____$1 = e10446;
                        if (e__4796__auto____$1 === cljs.core.match.backtrack) {
                          throw cljs.core.match.backtrack;
                        } else {
                          throw e__4796__auto____$1;
                        }
                      } else {
                        if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
                          throw e10446;
                        } else {
                          return null;
                        }
                      }
                    }
                  } else {
                    if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
                      throw cljs.core.match.backtrack;
                    } else {
                      return null;
                    }
                  }
                } catch (e10424) {
                  if (e10424 instanceof Error) {
                    var e__4796__auto____$1 = e10424;
                    if (e__4796__auto____$1 === cljs.core.match.backtrack) {
                      try {
                        var ocr_10405_1__10417 = cljs.core.nth.call(null, ocr_10405, 1);
                        if (cljs.core.keyword_identical_QMARK_.call(null, ocr_10405_1__10417, new cljs.core.Keyword(null, "percent", "percent", 4629944247))) {
                          try {
                            var ocr_10405_2__10418 = cljs.core.nth.call(null, ocr_10405, 2);
                            if (cljs.core.keyword_identical_QMARK_.call(null, ocr_10405_2__10418, new cljs.core.Keyword(null, "plus", "plus", 1017348364))) {
                              try {
                                var ocr_10405_3__10419 = cljs.core.nth.call(null, ocr_10405, 3);
                                if (cljs.core.keyword_identical_QMARK_.call(null, ocr_10405_3__10419, new cljs.core.Keyword(null, "default", "default", 2558708147))) {
                                  if (cljs.core.truth_(termcat.rules.tokenize.css_length_QMARK_.call(null, termcat.term.payload.call(null, t3)))) {
                                    return new cljs.core.PersistentVector(null, 5, 5, cljs.core.PersistentVector.EMPTY_NODE, [null, termcat.term.token.call(null, new cljs.core.Keyword(null, "html", "html", 1017117469), "\x3cspan style\x3d'"), termcat.term.token.call(null, new cljs.core.Keyword(null, "html", "html", 1017117469), function() {
                                      var G__10441 = termcat.term.payload.call(null, t2);
                                      if (cljs.core._EQ_.call(null, "_", G__10441)) {
                                        return "display: inline-block; width: ";
                                      } else {
                                        if (cljs.core._EQ_.call(null, "-", G__10441)) {
                                          return "margin-left: -";
                                        } else {
                                          if (cljs.core._EQ_.call(null, "+", G__10441)) {
                                            return "margin-left: ";
                                          } else {
                                            if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
                                              throw new Error([cljs.core.str("No matching clause: "), cljs.core.str(termcat.term.payload.call(null, t2))].join(""));
                                            } else {
                                              return null;
                                            }
                                          }
                                        }
                                      }
                                    }()), t3, cljs.core._EQ_.call(null, termcat.term.tt.call(null, t2), new cljs.core.Keyword(null, "underscore", "underscore", 3544053292)) ? termcat.term.token.call(null, new cljs.core.Keyword(null, "html", "html", 1017117469), "'\x3e \x3c/span\x3e") : termcat.term.token.call(null, new cljs.core.Keyword(null, "html", "html", 1017117469), "'\x3e\x3c/span\x3e")], null);
                                  } else {
                                    return new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [null, termcat.term.token.call(null, new cljs.core.Keyword(null, "whitespace", "whitespace", 1290815983)), t2, t3], null);
                                  }
                                } else {
                                  if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
                                    throw cljs.core.match.backtrack;
                                  } else {
                                    return null;
                                  }
                                }
                              } catch (e10440) {
                                if (e10440 instanceof Error) {
                                  var e__4796__auto____$2 = e10440;
                                  if (e__4796__auto____$2 === cljs.core.match.backtrack) {
                                    throw cljs.core.match.backtrack;
                                  } else {
                                    throw e__4796__auto____$2;
                                  }
                                } else {
                                  if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
                                    throw e10440;
                                  } else {
                                    return null;
                                  }
                                }
                              }
                            } else {
                              if (cljs.core.keyword_identical_QMARK_.call(null, ocr_10405_2__10418, new cljs.core.Keyword(null, "underscore", "underscore", 3544053292))) {
                                try {
                                  var ocr_10405_3__10419 = cljs.core.nth.call(null, ocr_10405, 3);
                                  if (cljs.core.keyword_identical_QMARK_.call(null, ocr_10405_3__10419, new cljs.core.Keyword(null, "default", "default", 2558708147))) {
                                    if (cljs.core.truth_(termcat.rules.tokenize.css_length_QMARK_.call(null, termcat.term.payload.call(null, t3)))) {
                                      return new cljs.core.PersistentVector(null, 5, 5, cljs.core.PersistentVector.EMPTY_NODE, [null, termcat.term.token.call(null, new cljs.core.Keyword(null, "html", "html", 1017117469), "\x3cspan style\x3d'"), termcat.term.token.call(null, new cljs.core.Keyword(null, "html", "html", 1017117469), function() {
                                        var G__10443 = termcat.term.payload.call(null, t2);
                                        if (cljs.core._EQ_.call(null, "_", G__10443)) {
                                          return "display: inline-block; width: ";
                                        } else {
                                          if (cljs.core._EQ_.call(null, "-", G__10443)) {
                                            return "margin-left: -";
                                          } else {
                                            if (cljs.core._EQ_.call(null, "+", G__10443)) {
                                              return "margin-left: ";
                                            } else {
                                              if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
                                                throw new Error([cljs.core.str("No matching clause: "), cljs.core.str(termcat.term.payload.call(null, t2))].join(""));
                                              } else {
                                                return null;
                                              }
                                            }
                                          }
                                        }
                                      }()), t3, cljs.core._EQ_.call(null, termcat.term.tt.call(null, t2), new cljs.core.Keyword(null, "underscore", "underscore", 3544053292)) ? termcat.term.token.call(null, new cljs.core.Keyword(null, "html", "html", 1017117469), "'\x3e \x3c/span\x3e") : termcat.term.token.call(null, new cljs.core.Keyword(null, "html", "html", 1017117469), "'\x3e\x3c/span\x3e")], null);
                                    } else {
                                      return new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [null, termcat.term.token.call(null, new cljs.core.Keyword(null, "whitespace", "whitespace", 1290815983)), t2, t3], null);
                                    }
                                  } else {
                                    if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
                                      throw cljs.core.match.backtrack;
                                    } else {
                                      return null;
                                    }
                                  }
                                } catch (e10442) {
                                  if (e10442 instanceof Error) {
                                    var e__4796__auto____$2 = e10442;
                                    if (e__4796__auto____$2 === cljs.core.match.backtrack) {
                                      throw cljs.core.match.backtrack;
                                    } else {
                                      throw e__4796__auto____$2;
                                    }
                                  } else {
                                    if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
                                      throw e10442;
                                    } else {
                                      return null;
                                    }
                                  }
                                }
                              } else {
                                if (cljs.core.keyword_identical_QMARK_.call(null, ocr_10405_2__10418, new cljs.core.Keyword(null, "dash", "dash", 1016980228))) {
                                  try {
                                    var ocr_10405_3__10419 = cljs.core.nth.call(null, ocr_10405, 3);
                                    if (cljs.core.keyword_identical_QMARK_.call(null, ocr_10405_3__10419, new cljs.core.Keyword(null, "default", "default", 2558708147))) {
                                      if (cljs.core.truth_(termcat.rules.tokenize.css_length_QMARK_.call(null, termcat.term.payload.call(null, t3)))) {
                                        return new cljs.core.PersistentVector(null, 5, 5, cljs.core.PersistentVector.EMPTY_NODE, [null, termcat.term.token.call(null, new cljs.core.Keyword(null, "html", "html", 1017117469), "\x3cspan style\x3d'"), termcat.term.token.call(null, new cljs.core.Keyword(null, "html", "html", 1017117469), function() {
                                          var G__10445 = termcat.term.payload.call(null, t2);
                                          if (cljs.core._EQ_.call(null, "_", G__10445)) {
                                            return "display: inline-block; width: ";
                                          } else {
                                            if (cljs.core._EQ_.call(null, "-", G__10445)) {
                                              return "margin-left: -";
                                            } else {
                                              if (cljs.core._EQ_.call(null, "+", G__10445)) {
                                                return "margin-left: ";
                                              } else {
                                                if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
                                                  throw new Error([cljs.core.str("No matching clause: "), cljs.core.str(termcat.term.payload.call(null, t2))].join(""));
                                                } else {
                                                  return null;
                                                }
                                              }
                                            }
                                          }
                                        }()), t3, cljs.core._EQ_.call(null, termcat.term.tt.call(null, t2), new cljs.core.Keyword(null, "underscore", "underscore", 3544053292)) ? termcat.term.token.call(null, new cljs.core.Keyword(null, "html", "html", 1017117469), "'\x3e \x3c/span\x3e") : termcat.term.token.call(null, new cljs.core.Keyword(null, "html", "html", 1017117469), "'\x3e\x3c/span\x3e")], null);
                                      } else {
                                        return new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [null, termcat.term.token.call(null, new cljs.core.Keyword(null, "whitespace", "whitespace", 1290815983)), t2, t3], null);
                                      }
                                    } else {
                                      if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
                                        throw cljs.core.match.backtrack;
                                      } else {
                                        return null;
                                      }
                                    }
                                  } catch (e10444) {
                                    if (e10444 instanceof Error) {
                                      var e__4796__auto____$2 = e10444;
                                      if (e__4796__auto____$2 === cljs.core.match.backtrack) {
                                        throw cljs.core.match.backtrack;
                                      } else {
                                        throw e__4796__auto____$2;
                                      }
                                    } else {
                                      if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
                                        throw e10444;
                                      } else {
                                        return null;
                                      }
                                    }
                                  }
                                } else {
                                  if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
                                    throw cljs.core.match.backtrack;
                                  } else {
                                    return null;
                                  }
                                }
                              }
                            }
                          } catch (e10439) {
                            if (e10439 instanceof Error) {
                              var e__4796__auto____$2 = e10439;
                              if (e__4796__auto____$2 === cljs.core.match.backtrack) {
                                throw cljs.core.match.backtrack;
                              } else {
                                throw e__4796__auto____$2;
                              }
                            } else {
                              if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
                                throw e10439;
                              } else {
                                return null;
                              }
                            }
                          }
                        } else {
                          if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
                            throw cljs.core.match.backtrack;
                          } else {
                            return null;
                          }
                        }
                      } catch (e10425) {
                        if (e10425 instanceof Error) {
                          var e__4796__auto____$2 = e10425;
                          if (e__4796__auto____$2 === cljs.core.match.backtrack) {
                            try {
                              var ocr_10405_1__10417 = cljs.core.nth.call(null, ocr_10405, 1);
                              if (cljs.core.keyword_identical_QMARK_.call(null, ocr_10405_1__10417, new cljs.core.Keyword(null, "percent", "percent", 4629944247))) {
                                try {
                                  var ocr_10405_2__10418 = cljs.core.nth.call(null, ocr_10405, 2);
                                  if (cljs.core.keyword_identical_QMARK_.call(null, ocr_10405_2__10418, new cljs.core.Keyword(null, "left-quote", "left-quote", 2041480360))) {
                                    var vec__10429 = cljs.core._EQ_.call(null, termcat.term.tt.call(null, t2), new cljs.core.Keyword(null, "default", "default", 2558708147)) && typeof termcat.term.payload.call(null, t2) === "string" ? new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.first.call(null, termcat.term.payload.call(null, t2)), cljs.core.subs.call(null, termcat.term.payload.call(null, t2), 1), t3], null) : new cljs.core.PersistentVector(null, 3, 
                                    5, cljs.core.PersistentVector.EMPTY_NODE, [termcat.term.payload.call(null, t2), [cljs.core.str(termcat.term.payload.call(null, t3))].join(""), null], null);
                                    var c = cljs.core.nth.call(null, vec__10429, 0, null);
                                    var r = cljs.core.nth.call(null, vec__10429, 1, null);
                                    var t = cljs.core.nth.call(null, vec__10429, 2, null);
                                    var temp__4090__auto__ = function() {
                                      var G__10430 = c;
                                      if (cljs.core._EQ_.call(null, "3", G__10430)) {
                                        return cljs.core.char$.call(null, 780);
                                      } else {
                                        if (cljs.core._EQ_.call(null, '"', G__10430)) {
                                          return cljs.core.char$.call(null, 776);
                                        } else {
                                          if (cljs.core._EQ_.call(null, "1", G__10430)) {
                                            return cljs.core.char$.call(null, 772);
                                          } else {
                                            if (cljs.core._EQ_.call(null, "^", G__10430)) {
                                              return cljs.core.char$.call(null, 770);
                                            } else {
                                              if (cljs.core._EQ_.call(null, "2", G__10430)) {
                                                return cljs.core.char$.call(null, 769);
                                              } else {
                                                if (cljs.core._EQ_.call(null, "'", G__10430)) {
                                                  return cljs.core.char$.call(null, 769);
                                                } else {
                                                  if (cljs.core._EQ_.call(null, "4", G__10430)) {
                                                    return cljs.core.char$.call(null, 768);
                                                  } else {
                                                    if (cljs.core._EQ_.call(null, "`", G__10430)) {
                                                      return cljs.core.char$.call(null, 768);
                                                    } else {
                                                      if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
                                                        return null;
                                                      } else {
                                                        return null;
                                                      }
                                                    }
                                                  }
                                                }
                                              }
                                            }
                                          }
                                        }
                                      }
                                    }();
                                    if (cljs.core.truth_(temp__4090__auto__)) {
                                      var diacritic = temp__4090__auto__;
                                      return cljs.core.conj.call(null, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [null, termcat.term.token.call(null, new cljs.core.Keyword(null, "default", "default", 2558708147), [cljs.core.str(cljs.core.first.call(null, r)), cljs.core.str(diacritic), cljs.core.str(cljs.core.subs.call(null, r, 1))].join(""))], null), t);
                                    } else {
                                      return new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [null, termcat.term.token.call(null, new cljs.core.Keyword(null, "whitespace", "whitespace", 1290815983)), t2, t3], null);
                                    }
                                  } else {
                                    if (cljs.core.keyword_identical_QMARK_.call(null, ocr_10405_2__10418, new cljs.core.Keyword(null, "right-quote", "right-quote", 3807707901))) {
                                      var vec__10431 = cljs.core._EQ_.call(null, termcat.term.tt.call(null, t2), new cljs.core.Keyword(null, "default", "default", 2558708147)) && typeof termcat.term.payload.call(null, t2) === "string" ? new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.first.call(null, termcat.term.payload.call(null, t2)), cljs.core.subs.call(null, termcat.term.payload.call(null, t2), 1), t3], null) : new cljs.core.PersistentVector(null, 
                                      3, 5, cljs.core.PersistentVector.EMPTY_NODE, [termcat.term.payload.call(null, t2), [cljs.core.str(termcat.term.payload.call(null, t3))].join(""), null], null);
                                      var c = cljs.core.nth.call(null, vec__10431, 0, null);
                                      var r = cljs.core.nth.call(null, vec__10431, 1, null);
                                      var t = cljs.core.nth.call(null, vec__10431, 2, null);
                                      var temp__4090__auto__ = function() {
                                        var G__10432 = c;
                                        if (cljs.core._EQ_.call(null, "3", G__10432)) {
                                          return cljs.core.char$.call(null, 780);
                                        } else {
                                          if (cljs.core._EQ_.call(null, '"', G__10432)) {
                                            return cljs.core.char$.call(null, 776);
                                          } else {
                                            if (cljs.core._EQ_.call(null, "1", G__10432)) {
                                              return cljs.core.char$.call(null, 772);
                                            } else {
                                              if (cljs.core._EQ_.call(null, "^", G__10432)) {
                                                return cljs.core.char$.call(null, 770);
                                              } else {
                                                if (cljs.core._EQ_.call(null, "2", G__10432)) {
                                                  return cljs.core.char$.call(null, 769);
                                                } else {
                                                  if (cljs.core._EQ_.call(null, "'", G__10432)) {
                                                    return cljs.core.char$.call(null, 769);
                                                  } else {
                                                    if (cljs.core._EQ_.call(null, "4", G__10432)) {
                                                      return cljs.core.char$.call(null, 768);
                                                    } else {
                                                      if (cljs.core._EQ_.call(null, "`", G__10432)) {
                                                        return cljs.core.char$.call(null, 768);
                                                      } else {
                                                        if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
                                                          return null;
                                                        } else {
                                                          return null;
                                                        }
                                                      }
                                                    }
                                                  }
                                                }
                                              }
                                            }
                                          }
                                        }
                                      }();
                                      if (cljs.core.truth_(temp__4090__auto__)) {
                                        var diacritic = temp__4090__auto__;
                                        return cljs.core.conj.call(null, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [null, termcat.term.token.call(null, new cljs.core.Keyword(null, "default", "default", 2558708147), [cljs.core.str(cljs.core.first.call(null, r)), cljs.core.str(diacritic), cljs.core.str(cljs.core.subs.call(null, r, 1))].join(""))], null), t);
                                      } else {
                                        return new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [null, termcat.term.token.call(null, new cljs.core.Keyword(null, "whitespace", "whitespace", 1290815983)), t2, t3], null);
                                      }
                                    } else {
                                      if (cljs.core.keyword_identical_QMARK_.call(null, ocr_10405_2__10418, new cljs.core.Keyword(null, "double-quote", "double-quote", 969793778))) {
                                        var vec__10433 = cljs.core._EQ_.call(null, termcat.term.tt.call(null, t2), new cljs.core.Keyword(null, "default", "default", 2558708147)) && typeof termcat.term.payload.call(null, t2) === "string" ? new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.first.call(null, termcat.term.payload.call(null, t2)), cljs.core.subs.call(null, termcat.term.payload.call(null, t2), 1), t3], null) : new cljs.core.PersistentVector(null, 
                                        3, 5, cljs.core.PersistentVector.EMPTY_NODE, [termcat.term.payload.call(null, t2), [cljs.core.str(termcat.term.payload.call(null, t3))].join(""), null], null);
                                        var c = cljs.core.nth.call(null, vec__10433, 0, null);
                                        var r = cljs.core.nth.call(null, vec__10433, 1, null);
                                        var t = cljs.core.nth.call(null, vec__10433, 2, null);
                                        var temp__4090__auto__ = function() {
                                          var G__10434 = c;
                                          if (cljs.core._EQ_.call(null, "3", G__10434)) {
                                            return cljs.core.char$.call(null, 780);
                                          } else {
                                            if (cljs.core._EQ_.call(null, '"', G__10434)) {
                                              return cljs.core.char$.call(null, 776);
                                            } else {
                                              if (cljs.core._EQ_.call(null, "1", G__10434)) {
                                                return cljs.core.char$.call(null, 772);
                                              } else {
                                                if (cljs.core._EQ_.call(null, "^", G__10434)) {
                                                  return cljs.core.char$.call(null, 770);
                                                } else {
                                                  if (cljs.core._EQ_.call(null, "2", G__10434)) {
                                                    return cljs.core.char$.call(null, 769);
                                                  } else {
                                                    if (cljs.core._EQ_.call(null, "'", G__10434)) {
                                                      return cljs.core.char$.call(null, 769);
                                                    } else {
                                                      if (cljs.core._EQ_.call(null, "4", G__10434)) {
                                                        return cljs.core.char$.call(null, 768);
                                                      } else {
                                                        if (cljs.core._EQ_.call(null, "`", G__10434)) {
                                                          return cljs.core.char$.call(null, 768);
                                                        } else {
                                                          if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
                                                            return null;
                                                          } else {
                                                            return null;
                                                          }
                                                        }
                                                      }
                                                    }
                                                  }
                                                }
                                              }
                                            }
                                          }
                                        }();
                                        if (cljs.core.truth_(temp__4090__auto__)) {
                                          var diacritic = temp__4090__auto__;
                                          return cljs.core.conj.call(null, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [null, termcat.term.token.call(null, new cljs.core.Keyword(null, "default", "default", 2558708147), [cljs.core.str(cljs.core.first.call(null, r)), cljs.core.str(diacritic), cljs.core.str(cljs.core.subs.call(null, r, 1))].join(""))], null), t);
                                        } else {
                                          return new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [null, termcat.term.token.call(null, new cljs.core.Keyword(null, "whitespace", "whitespace", 1290815983)), t2, t3], null);
                                        }
                                      } else {
                                        if (cljs.core.keyword_identical_QMARK_.call(null, ocr_10405_2__10418, new cljs.core.Keyword(null, "circumflex", "circumflex", 4463600090))) {
                                          var vec__10435 = cljs.core._EQ_.call(null, termcat.term.tt.call(null, t2), new cljs.core.Keyword(null, "default", "default", 2558708147)) && typeof termcat.term.payload.call(null, t2) === "string" ? new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.first.call(null, termcat.term.payload.call(null, t2)), cljs.core.subs.call(null, termcat.term.payload.call(null, t2), 1), t3], null) : new cljs.core.PersistentVector(null, 
                                          3, 5, cljs.core.PersistentVector.EMPTY_NODE, [termcat.term.payload.call(null, t2), [cljs.core.str(termcat.term.payload.call(null, t3))].join(""), null], null);
                                          var c = cljs.core.nth.call(null, vec__10435, 0, null);
                                          var r = cljs.core.nth.call(null, vec__10435, 1, null);
                                          var t = cljs.core.nth.call(null, vec__10435, 2, null);
                                          var temp__4090__auto__ = function() {
                                            var G__10436 = c;
                                            if (cljs.core._EQ_.call(null, "3", G__10436)) {
                                              return cljs.core.char$.call(null, 780);
                                            } else {
                                              if (cljs.core._EQ_.call(null, '"', G__10436)) {
                                                return cljs.core.char$.call(null, 776);
                                              } else {
                                                if (cljs.core._EQ_.call(null, "1", G__10436)) {
                                                  return cljs.core.char$.call(null, 772);
                                                } else {
                                                  if (cljs.core._EQ_.call(null, "^", G__10436)) {
                                                    return cljs.core.char$.call(null, 770);
                                                  } else {
                                                    if (cljs.core._EQ_.call(null, "2", G__10436)) {
                                                      return cljs.core.char$.call(null, 769);
                                                    } else {
                                                      if (cljs.core._EQ_.call(null, "'", G__10436)) {
                                                        return cljs.core.char$.call(null, 769);
                                                      } else {
                                                        if (cljs.core._EQ_.call(null, "4", G__10436)) {
                                                          return cljs.core.char$.call(null, 768);
                                                        } else {
                                                          if (cljs.core._EQ_.call(null, "`", G__10436)) {
                                                            return cljs.core.char$.call(null, 768);
                                                          } else {
                                                            if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
                                                              return null;
                                                            } else {
                                                              return null;
                                                            }
                                                          }
                                                        }
                                                      }
                                                    }
                                                  }
                                                }
                                              }
                                            }
                                          }();
                                          if (cljs.core.truth_(temp__4090__auto__)) {
                                            var diacritic = temp__4090__auto__;
                                            return cljs.core.conj.call(null, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [null, termcat.term.token.call(null, new cljs.core.Keyword(null, "default", "default", 2558708147), [cljs.core.str(cljs.core.first.call(null, r)), cljs.core.str(diacritic), cljs.core.str(cljs.core.subs.call(null, r, 1))].join(""))], null), t);
                                          } else {
                                            return new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [null, termcat.term.token.call(null, new cljs.core.Keyword(null, "whitespace", "whitespace", 1290815983)), t2, t3], null);
                                          }
                                        } else {
                                          if (cljs.core.keyword_identical_QMARK_.call(null, ocr_10405_2__10418, new cljs.core.Keyword(null, "default", "default", 2558708147))) {
                                            var vec__10437 = cljs.core._EQ_.call(null, termcat.term.tt.call(null, t2), new cljs.core.Keyword(null, "default", "default", 2558708147)) && typeof termcat.term.payload.call(null, t2) === "string" ? new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.first.call(null, termcat.term.payload.call(null, t2)), cljs.core.subs.call(null, termcat.term.payload.call(null, t2), 1), t3], null) : new cljs.core.PersistentVector(null, 
                                            3, 5, cljs.core.PersistentVector.EMPTY_NODE, [termcat.term.payload.call(null, t2), [cljs.core.str(termcat.term.payload.call(null, t3))].join(""), null], null);
                                            var c = cljs.core.nth.call(null, vec__10437, 0, null);
                                            var r = cljs.core.nth.call(null, vec__10437, 1, null);
                                            var t = cljs.core.nth.call(null, vec__10437, 2, null);
                                            var temp__4090__auto__ = function() {
                                              var G__10438 = c;
                                              if (cljs.core._EQ_.call(null, "3", G__10438)) {
                                                return cljs.core.char$.call(null, 780);
                                              } else {
                                                if (cljs.core._EQ_.call(null, '"', G__10438)) {
                                                  return cljs.core.char$.call(null, 776);
                                                } else {
                                                  if (cljs.core._EQ_.call(null, "1", G__10438)) {
                                                    return cljs.core.char$.call(null, 772);
                                                  } else {
                                                    if (cljs.core._EQ_.call(null, "^", G__10438)) {
                                                      return cljs.core.char$.call(null, 770);
                                                    } else {
                                                      if (cljs.core._EQ_.call(null, "2", G__10438)) {
                                                        return cljs.core.char$.call(null, 769);
                                                      } else {
                                                        if (cljs.core._EQ_.call(null, "'", G__10438)) {
                                                          return cljs.core.char$.call(null, 769);
                                                        } else {
                                                          if (cljs.core._EQ_.call(null, "4", G__10438)) {
                                                            return cljs.core.char$.call(null, 768);
                                                          } else {
                                                            if (cljs.core._EQ_.call(null, "`", G__10438)) {
                                                              return cljs.core.char$.call(null, 768);
                                                            } else {
                                                              if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
                                                                return null;
                                                              } else {
                                                                return null;
                                                              }
                                                            }
                                                          }
                                                        }
                                                      }
                                                    }
                                                  }
                                                }
                                              }
                                            }();
                                            if (cljs.core.truth_(temp__4090__auto__)) {
                                              var diacritic = temp__4090__auto__;
                                              return cljs.core.conj.call(null, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [null, termcat.term.token.call(null, new cljs.core.Keyword(null, "default", "default", 2558708147), [cljs.core.str(cljs.core.first.call(null, r)), cljs.core.str(diacritic), cljs.core.str(cljs.core.subs.call(null, r, 1))].join(""))], null), t);
                                            } else {
                                              return new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [null, termcat.term.token.call(null, new cljs.core.Keyword(null, "whitespace", "whitespace", 1290815983)), t2, t3], null);
                                            }
                                          } else {
                                            if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
                                              throw cljs.core.match.backtrack;
                                            } else {
                                              return null;
                                            }
                                          }
                                        }
                                      }
                                    }
                                  }
                                } catch (e10428) {
                                  if (e10428 instanceof Error) {
                                    var e__4796__auto____$3 = e10428;
                                    if (e__4796__auto____$3 === cljs.core.match.backtrack) {
                                      throw cljs.core.match.backtrack;
                                    } else {
                                      throw e__4796__auto____$3;
                                    }
                                  } else {
                                    if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
                                      throw e10428;
                                    } else {
                                      return null;
                                    }
                                  }
                                }
                              } else {
                                if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
                                  throw cljs.core.match.backtrack;
                                } else {
                                  return null;
                                }
                              }
                            } catch (e10426) {
                              if (e10426 instanceof Error) {
                                var e__4796__auto____$3 = e10426;
                                if (e__4796__auto____$3 === cljs.core.match.backtrack) {
                                  try {
                                    var ocr_10405_1__10417 = cljs.core.nth.call(null, ocr_10405, 1);
                                    if (cljs.core.keyword_identical_QMARK_.call(null, ocr_10405_1__10417, new cljs.core.Keyword(null, "percent", "percent", 4629944247))) {
                                      return new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [null, termcat.term.token.call(null, new cljs.core.Keyword(null, "whitespace", "whitespace", 1290815983)), t2, t3], null);
                                    } else {
                                      if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
                                        throw cljs.core.match.backtrack;
                                      } else {
                                        return null;
                                      }
                                    }
                                  } catch (e10427) {
                                    if (e10427 instanceof Error) {
                                      var e__4796__auto____$4 = e10427;
                                      if (e__4796__auto____$4 === cljs.core.match.backtrack) {
                                        throw cljs.core.match.backtrack;
                                      } else {
                                        throw e__4796__auto____$4;
                                      }
                                    } else {
                                      if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
                                        throw e10427;
                                      } else {
                                        return null;
                                      }
                                    }
                                  }
                                } else {
                                  throw e__4796__auto____$3;
                                }
                              } else {
                                if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
                                  throw e10426;
                                } else {
                                  return null;
                                }
                              }
                            }
                          } else {
                            throw e__4796__auto____$2;
                          }
                        } else {
                          if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
                            throw e10425;
                          } else {
                            return null;
                          }
                        }
                      }
                    } else {
                      throw e__4796__auto____$1;
                    }
                  } else {
                    if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
                      throw e10424;
                    } else {
                      return null;
                    }
                  }
                }
              } else {
                throw e__4796__auto__;
              }
            } else {
              if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
                throw e10423;
              } else {
                return null;
              }
            }
          }
        } else {
          if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
            throw cljs.core.match.backtrack;
          } else {
            return null;
          }
        }
      } catch (e10422) {
        if (e10422 instanceof Error) {
          var e__4796__auto__ = e10422;
          if (e__4796__auto__ === cljs.core.match.backtrack) {
            return null;
          } else {
            throw e__4796__auto__;
          }
        } else {
          if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
            throw e10422;
          } else {
            return null;
          }
        }
      }
    }();
    if (cljs.core.truth_(temp__4090__auto__)) {
      var r__6471__auto__ = temp__4090__auto__;
      return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [function() {
        var or__3403__auto__ = cljs.core.first.call(null, r__6471__auto__);
        if (cljs.core.truth_(or__3403__auto__)) {
          return or__3403__auto__;
        } else {
          return state__6468__auto__;
        }
      }(), cljs.core.concat.call(null, cljs.core.next.call(null, r__6471__auto__), cljs.core.drop.call(null, 3, input__6469__auto__))], null);
    } else {
      return null;
    }
  };
  G__10457 = function(state__6468__auto__, input__6469__auto__) {
    switch(arguments.length) {
      case 0:
        return G__10457__0.call(this);
      case 2:
        return G__10457__2.call(this, state__6468__auto__, input__6469__auto__);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  return G__10457;
}());
goog.provide("termcat.rules.ast");
goog.require("cljs.core");
goog.require("termcat.term");
goog.require("termcat.term");
goog.require("termcat.rewrite");
goog.require("termcat.rewrite");
termcat.rules.ast.pop_n = function pop_n(coll, n) {
  return cljs.core.subvec.call(null, coll, 0, cljs.core.count.call(null, coll) - n);
};
termcat.rules.ast.last_n = function last_n(coll, n) {
  return cljs.core.subvec.call(null, coll, cljs.core.count.call(null, coll) - n);
};
termcat.rules.ast.abstract_blocks = function() {
  var abstract_blocks = null;
  var abstract_blocks__0 = function() {
    return new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "distance", "distance", 1302364007), 0, new cljs.core.Keyword(null, "stack", "stack", 1123661306), null], null);
  };
  var abstract_blocks__2 = function(p__8828, tok) {
    while (true) {
      var vec__8830 = p__8828;
      var state = cljs.core.nth.call(null, vec__8830, 0, null);
      var result = cljs.core.nth.call(null, vec__8830, 1, null);
      if (tok == null) {
        return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [state, result], null);
      } else {
        if (termcat.term.ldelim_QMARK_.call(null, tok)) {
          return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "distance", "distance", 1302364007), 1, new cljs.core.Keyword(null, "stack", "stack", 1123661306), cljs.core.conj.call(null, (new cljs.core.Keyword(null, "stack", "stack", 1123661306)).cljs$core$IFn$_invoke$arity$1(state), (new cljs.core.Keyword(null, "distance", "distance", 1302364007)).cljs$core$IFn$_invoke$arity$1(state) + 1)], 
          null), cljs.core.conj.call(null, result, tok)], null);
        } else {
          if (termcat.term.rdelim_QMARK_.call(null, tok)) {
            var ldelim = cljs.core.get.call(null, result, cljs.core.count.call(null, result) - (new cljs.core.Keyword(null, "distance", "distance", 1302364007)).cljs$core$IFn$_invoke$arity$1(state));
            if (termcat.term.delim_pair_QMARK_.call(null, ldelim, tok)) {
              return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "distance", "distance", 1302364007), cljs.core.peek.call(null, (new cljs.core.Keyword(null, "stack", "stack", 1123661306)).cljs$core$IFn$_invoke$arity$1(state)), new cljs.core.Keyword(null, "stack", "stack", 1123661306), cljs.core.pop.call(null, (new cljs.core.Keyword(null, "stack", "stack", 1123661306)).cljs$core$IFn$_invoke$arity$1(state))], 
              null), cljs.core.conj.call(null, termcat.rules.ast.pop_n.call(null, result, (new cljs.core.Keyword(null, "distance", "distance", 1302364007)).cljs$core$IFn$_invoke$arity$1(state)), termcat.term.block.call(null, ldelim, termcat.term.fragmentcat.call(null, termcat.rules.ast.last_n.call(null, result, (new cljs.core.Keyword(null, "distance", "distance", 1302364007)).cljs$core$IFn$_invoke$arity$1(state) - 1)), tok))], null);
            } else {
              if (cljs.core.contains_QMARK_.call(null, cljs.core.PersistentHashSet.fromArray([new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "rdelim", "rdelim", 4373095599), new cljs.core.Keyword(null, "bullet", "bullet", 3930937460)], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "rdelim", "rdelim", 4373095599), new cljs.core.Keyword(null, "indent", "indent", 4124632094)], 
              null)], true), termcat.term.tt.call(null, tok))) {
                var G__8831 = new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "distance", "distance", 1302364007), (new cljs.core.Keyword(null, "distance", "distance", 1302364007)).cljs$core$IFn$_invoke$arity$1(state) + -1 + cljs.core.peek.call(null, (new cljs.core.Keyword(null, "stack", "stack", 1123661306)).cljs$core$IFn$_invoke$arity$1(state)), new cljs.core.Keyword(null, "stack", "stack", 
                1123661306), cljs.core.pop.call(null, (new cljs.core.Keyword(null, "stack", "stack", 1123661306)).cljs$core$IFn$_invoke$arity$1(state))], null), result], null);
                var G__8832 = tok;
                p__8828 = G__8831;
                tok = G__8832;
                continue;
              } else {
                if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
                  return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.update_in.call(null, state, new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "distance", "distance", 1302364007)], null), cljs.core.inc), cljs.core.conj.call(null, result, tok)], null);
                } else {
                  return null;
                }
              }
            }
          } else {
            if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
              return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.update_in.call(null, state, new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "distance", "distance", 1302364007)], null), cljs.core.inc), cljs.core.conj.call(null, result, tok)], null);
            } else {
              return null;
            }
          }
        }
      }
      break;
    }
  };
  abstract_blocks = function(p__8828, tok) {
    switch(arguments.length) {
      case 0:
        return abstract_blocks__0.call(this);
      case 2:
        return abstract_blocks__2.call(this, p__8828, tok);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  abstract_blocks.cljs$core$IFn$_invoke$arity$0 = abstract_blocks__0;
  abstract_blocks.cljs$core$IFn$_invoke$arity$2 = abstract_blocks__2;
  return abstract_blocks;
}();
termcat.rules.ast.introduce_delim_errors = termcat.rewrite.abstraction.call(null, function() {
  var G__8845 = null;
  var G__8845__0 = function() {
    return null;
  };
  var G__8845__2 = function(state__6468__auto__, input__6469__auto__) {
    var padded_input__6470__auto__ = cljs.core.concat.call(null, input__6469__auto__, cljs.core.repeat.call(null, null));
    var vec__8833 = cljs.core.cons.call(null, state__6468__auto__, cljs.core.take.call(null, 1, padded_input__6470__auto__));
    var state = cljs.core.nth.call(null, vec__8833, 0, null);
    var t1 = cljs.core.nth.call(null, vec__8833, 1, null);
    var temp__4090__auto__ = function() {
      var ocr_8834 = clojure.core.reducers.reduce.call(null, cljs.core.conj, new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [state__6468__auto__], null), clojure.core.reducers.take.call(null, 1, clojure.core.reducers.map.call(null, termcat.term.tt, padded_input__6470__auto__)));
      try {
        if (cljs.core.vector_QMARK_.call(null, ocr_8834) && cljs.core.count.call(null, ocr_8834) === 2) {
          try {
            var ocr_8834_1__8839 = cljs.core.nth.call(null, ocr_8834, 1);
            if (cljs.core.vector_QMARK_.call(null, ocr_8834_1__8839) && cljs.core.count.call(null, ocr_8834_1__8839) === 2) {
              try {
                var ocr_8834_1__8839_0__8840 = cljs.core.nth.call(null, ocr_8834_1__8839, 0);
                if (cljs.core.keyword_identical_QMARK_.call(null, ocr_8834_1__8839_0__8840, new cljs.core.Keyword(null, "ldelim", "ldelim", 4201320693))) {
                  return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [null, termcat.term.token.call(null, new cljs.core.Keyword(null, "error", "error", 1110689146), termcat.term.payload.call(null, t1))], null);
                } else {
                  if (cljs.core.keyword_identical_QMARK_.call(null, ocr_8834_1__8839_0__8840, new cljs.core.Keyword(null, "rdelim", "rdelim", 4373095599))) {
                    return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [null, termcat.term.token.call(null, new cljs.core.Keyword(null, "error", "error", 1110689146), termcat.term.payload.call(null, t1))], null);
                  } else {
                    if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
                      throw cljs.core.match.backtrack;
                    } else {
                      return null;
                    }
                  }
                }
              } catch (e8844) {
                if (e8844 instanceof Error) {
                  var e__4796__auto__ = e8844;
                  if (e__4796__auto__ === cljs.core.match.backtrack) {
                    throw cljs.core.match.backtrack;
                  } else {
                    throw e__4796__auto__;
                  }
                } else {
                  if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
                    throw e8844;
                  } else {
                    return null;
                  }
                }
              }
            } else {
              if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
                throw cljs.core.match.backtrack;
              } else {
                return null;
              }
            }
          } catch (e8843) {
            if (e8843 instanceof Error) {
              var e__4796__auto__ = e8843;
              if (e__4796__auto__ === cljs.core.match.backtrack) {
                throw cljs.core.match.backtrack;
              } else {
                throw e__4796__auto__;
              }
            } else {
              if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
                throw e8843;
              } else {
                return null;
              }
            }
          }
        } else {
          if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
            throw cljs.core.match.backtrack;
          } else {
            return null;
          }
        }
      } catch (e8842) {
        if (e8842 instanceof Error) {
          var e__4796__auto__ = e8842;
          if (e__4796__auto__ === cljs.core.match.backtrack) {
            return null;
          } else {
            throw e__4796__auto__;
          }
        } else {
          if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
            throw e8842;
          } else {
            return null;
          }
        }
      }
    }();
    if (cljs.core.truth_(temp__4090__auto__)) {
      var r__6471__auto__ = temp__4090__auto__;
      return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [function() {
        var or__3403__auto__ = cljs.core.first.call(null, r__6471__auto__);
        if (cljs.core.truth_(or__3403__auto__)) {
          return or__3403__auto__;
        } else {
          return state__6468__auto__;
        }
      }(), cljs.core.concat.call(null, cljs.core.next.call(null, r__6471__auto__), cljs.core.drop.call(null, 1, input__6469__auto__))], null);
    } else {
      return null;
    }
  };
  G__8845 = function(state__6468__auto__, input__6469__auto__) {
    switch(arguments.length) {
      case 0:
        return G__8845__0.call(this);
      case 2:
        return G__8845__2.call(this, state__6468__auto__, input__6469__auto__);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  return G__8845;
}());
termcat.rules.ast.merge_blocks = function merge_blocks(b1, t, b2) {
  return termcat.term.block.call(null, termcat.term.left.call(null, b1), termcat.term.fragmentcat.call(null, termcat.rewrite.unwrap.call(null, b1), new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [t], null), termcat.rewrite.unwrap.call(null, b2)), termcat.term.right.call(null, b1));
};
termcat.rules.ast.remove_superfluous_whitespace = termcat.rewrite.abstraction.call(null, function() {
  var G__8884 = null;
  var G__8884__0 = function() {
    return null;
  };
  var G__8884__2 = function(state__6468__auto__, input__6469__auto__) {
    var padded_input__6470__auto__ = cljs.core.concat.call(null, input__6469__auto__, cljs.core.repeat.call(null, null));
    var vec__8846 = cljs.core.cons.call(null, state__6468__auto__, cljs.core.take.call(null, 2, padded_input__6470__auto__));
    var state = cljs.core.nth.call(null, vec__8846, 0, null);
    var t1 = cljs.core.nth.call(null, vec__8846, 1, null);
    var t2 = cljs.core.nth.call(null, vec__8846, 2, null);
    var temp__4090__auto__ = function() {
      var ocr_8847 = clojure.core.reducers.reduce.call(null, cljs.core.conj, new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [state__6468__auto__], null), clojure.core.reducers.take.call(null, 2, clojure.core.reducers.map.call(null, termcat.term.tt, padded_input__6470__auto__)));
      try {
        if (cljs.core.vector_QMARK_.call(null, ocr_8847) && cljs.core.count.call(null, ocr_8847) === 3) {
          try {
            var ocr_8847_1__8852 = cljs.core.nth.call(null, ocr_8847, 1);
            if (ocr_8847_1__8852 === null) {
              try {
                var ocr_8847_2__8853 = cljs.core.nth.call(null, ocr_8847, 2);
                if (cljs.core.keyword_identical_QMARK_.call(null, ocr_8847_2__8853, new cljs.core.Keyword(null, "whitespace", "whitespace", 1290815983))) {
                  return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [null, t1], null);
                } else {
                  if (cljs.core.keyword_identical_QMARK_.call(null, ocr_8847_2__8853, new cljs.core.Keyword(null, "newline", "newline", 2859826438))) {
                    return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [null, t1], null);
                  } else {
                    if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
                      throw cljs.core.match.backtrack;
                    } else {
                      return null;
                    }
                  }
                }
              } catch (e8882) {
                if (e8882 instanceof Error) {
                  var e__4796__auto__ = e8882;
                  if (e__4796__auto__ === cljs.core.match.backtrack) {
                    throw cljs.core.match.backtrack;
                  } else {
                    throw e__4796__auto__;
                  }
                } else {
                  if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
                    throw e8882;
                  } else {
                    return null;
                  }
                }
              }
            } else {
              if (cljs.core.keyword_identical_QMARK_.call(null, ocr_8847_1__8852, new cljs.core.Keyword(null, "emptyline", "emptyline", 3889609267))) {
                try {
                  var ocr_8847_2__8853 = cljs.core.nth.call(null, ocr_8847, 2);
                  if (cljs.core.keyword_identical_QMARK_.call(null, ocr_8847_2__8853, new cljs.core.Keyword(null, "whitespace", "whitespace", 1290815983))) {
                    return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [null, t1], null);
                  } else {
                    if (cljs.core.keyword_identical_QMARK_.call(null, ocr_8847_2__8853, new cljs.core.Keyword(null, "newline", "newline", 2859826438))) {
                      return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [null, t1], null);
                    } else {
                      if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
                        throw cljs.core.match.backtrack;
                      } else {
                        return null;
                      }
                    }
                  }
                } catch (e8883) {
                  if (e8883 instanceof Error) {
                    var e__4796__auto__ = e8883;
                    if (e__4796__auto__ === cljs.core.match.backtrack) {
                      throw cljs.core.match.backtrack;
                    } else {
                      throw e__4796__auto__;
                    }
                  } else {
                    if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
                      throw e8883;
                    } else {
                      return null;
                    }
                  }
                }
              } else {
                if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
                  throw cljs.core.match.backtrack;
                } else {
                  return null;
                }
              }
            }
          } catch (e8861) {
            if (e8861 instanceof Error) {
              var e__4796__auto__ = e8861;
              if (e__4796__auto__ === cljs.core.match.backtrack) {
                try {
                  var ocr_8847_1__8852 = cljs.core.nth.call(null, ocr_8847, 1);
                  if (cljs.core.vector_QMARK_.call(null, ocr_8847_1__8852) && cljs.core.count.call(null, ocr_8847_1__8852) === 2) {
                    try {
                      var ocr_8847_1__8852_0__8854 = cljs.core.nth.call(null, ocr_8847_1__8852, 0);
                      if (cljs.core.keyword_identical_QMARK_.call(null, ocr_8847_1__8852_0__8854, new cljs.core.Keyword(null, "block", "block", 1107736575))) {
                        try {
                          var ocr_8847_1__8852_1__8855 = cljs.core.nth.call(null, ocr_8847_1__8852, 1);
                          if (cljs.core.keyword_identical_QMARK_.call(null, ocr_8847_1__8852_1__8855, new cljs.core.Keyword(null, "indent", "indent", 4124632094))) {
                            try {
                              var ocr_8847_2__8853 = cljs.core.nth.call(null, ocr_8847, 2);
                              if (cljs.core.keyword_identical_QMARK_.call(null, ocr_8847_2__8853, new cljs.core.Keyword(null, "whitespace", "whitespace", 1290815983))) {
                                return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [null, t1], null);
                              } else {
                                if (cljs.core.keyword_identical_QMARK_.call(null, ocr_8847_2__8853, new cljs.core.Keyword(null, "newline", "newline", 2859826438))) {
                                  return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [null, t1], null);
                                } else {
                                  if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
                                    throw cljs.core.match.backtrack;
                                  } else {
                                    return null;
                                  }
                                }
                              }
                            } catch (e8881) {
                              if (e8881 instanceof Error) {
                                var e__4796__auto____$1 = e8881;
                                if (e__4796__auto____$1 === cljs.core.match.backtrack) {
                                  throw cljs.core.match.backtrack;
                                } else {
                                  throw e__4796__auto____$1;
                                }
                              } else {
                                if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
                                  throw e8881;
                                } else {
                                  return null;
                                }
                              }
                            }
                          } else {
                            if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
                              throw cljs.core.match.backtrack;
                            } else {
                              return null;
                            }
                          }
                        } catch (e8880) {
                          if (e8880 instanceof Error) {
                            var e__4796__auto____$1 = e8880;
                            if (e__4796__auto____$1 === cljs.core.match.backtrack) {
                              throw cljs.core.match.backtrack;
                            } else {
                              throw e__4796__auto____$1;
                            }
                          } else {
                            if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
                              throw e8880;
                            } else {
                              return null;
                            }
                          }
                        }
                      } else {
                        if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
                          throw cljs.core.match.backtrack;
                        } else {
                          return null;
                        }
                      }
                    } catch (e8876) {
                      if (e8876 instanceof Error) {
                        var e__4796__auto____$1 = e8876;
                        if (e__4796__auto____$1 === cljs.core.match.backtrack) {
                          try {
                            var ocr_8847_1__8852_0__8854 = cljs.core.nth.call(null, ocr_8847_1__8852, 0);
                            if (cljs.core.keyword_identical_QMARK_.call(null, ocr_8847_1__8852_0__8854, new cljs.core.Keyword(null, "block", "block", 1107736575))) {
                              try {
                                var ocr_8847_1__8852_1__8855 = cljs.core.nth.call(null, ocr_8847_1__8852, 1);
                                if (cljs.core.keyword_identical_QMARK_.call(null, ocr_8847_1__8852_1__8855, new cljs.core.Keyword(null, "bullet", "bullet", 3930937460))) {
                                  try {
                                    var ocr_8847_2__8853 = cljs.core.nth.call(null, ocr_8847, 2);
                                    if (cljs.core.keyword_identical_QMARK_.call(null, ocr_8847_2__8853, new cljs.core.Keyword(null, "whitespace", "whitespace", 1290815983))) {
                                      return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [null, t1], null);
                                    } else {
                                      if (cljs.core.keyword_identical_QMARK_.call(null, ocr_8847_2__8853, new cljs.core.Keyword(null, "newline", "newline", 2859826438))) {
                                        return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [null, t1], null);
                                      } else {
                                        if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
                                          throw cljs.core.match.backtrack;
                                        } else {
                                          return null;
                                        }
                                      }
                                    }
                                  } catch (e8879) {
                                    if (e8879 instanceof Error) {
                                      var e__4796__auto____$2 = e8879;
                                      if (e__4796__auto____$2 === cljs.core.match.backtrack) {
                                        throw cljs.core.match.backtrack;
                                      } else {
                                        throw e__4796__auto____$2;
                                      }
                                    } else {
                                      if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
                                        throw e8879;
                                      } else {
                                        return null;
                                      }
                                    }
                                  }
                                } else {
                                  if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
                                    throw cljs.core.match.backtrack;
                                  } else {
                                    return null;
                                  }
                                }
                              } catch (e8878) {
                                if (e8878 instanceof Error) {
                                  var e__4796__auto____$2 = e8878;
                                  if (e__4796__auto____$2 === cljs.core.match.backtrack) {
                                    throw cljs.core.match.backtrack;
                                  } else {
                                    throw e__4796__auto____$2;
                                  }
                                } else {
                                  if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
                                    throw e8878;
                                  } else {
                                    return null;
                                  }
                                }
                              }
                            } else {
                              if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
                                throw cljs.core.match.backtrack;
                              } else {
                                return null;
                              }
                            }
                          } catch (e8877) {
                            if (e8877 instanceof Error) {
                              var e__4796__auto____$2 = e8877;
                              if (e__4796__auto____$2 === cljs.core.match.backtrack) {
                                throw cljs.core.match.backtrack;
                              } else {
                                throw e__4796__auto____$2;
                              }
                            } else {
                              if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
                                throw e8877;
                              } else {
                                return null;
                              }
                            }
                          }
                        } else {
                          throw e__4796__auto____$1;
                        }
                      } else {
                        if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
                          throw e8876;
                        } else {
                          return null;
                        }
                      }
                    }
                  } else {
                    if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
                      throw cljs.core.match.backtrack;
                    } else {
                      return null;
                    }
                  }
                } catch (e8862) {
                  if (e8862 instanceof Error) {
                    var e__4796__auto____$1 = e8862;
                    if (e__4796__auto____$1 === cljs.core.match.backtrack) {
                      try {
                        var ocr_8847_1__8852 = cljs.core.nth.call(null, ocr_8847, 1);
                        if (cljs.core.keyword_identical_QMARK_.call(null, ocr_8847_1__8852, new cljs.core.Keyword(null, "whitespace", "whitespace", 1290815983))) {
                          try {
                            var ocr_8847_2__8853 = cljs.core.nth.call(null, ocr_8847, 2);
                            if (ocr_8847_2__8853 === null) {
                              return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [null, t2], null);
                            } else {
                              if (cljs.core.keyword_identical_QMARK_.call(null, ocr_8847_2__8853, new cljs.core.Keyword(null, "emptyline", "emptyline", 3889609267))) {
                                return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [null, t2], null);
                              } else {
                                if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
                                  throw cljs.core.match.backtrack;
                                } else {
                                  return null;
                                }
                              }
                            }
                          } catch (e8864) {
                            if (e8864 instanceof Error) {
                              var e__4796__auto____$2 = e8864;
                              if (e__4796__auto____$2 === cljs.core.match.backtrack) {
                                try {
                                  var ocr_8847_2__8853 = cljs.core.nth.call(null, ocr_8847, 2);
                                  if (cljs.core.vector_QMARK_.call(null, ocr_8847_2__8853) && cljs.core.count.call(null, ocr_8847_2__8853) === 2) {
                                    try {
                                      var ocr_8847_2__8853_0__8856 = cljs.core.nth.call(null, ocr_8847_2__8853, 0);
                                      if (cljs.core.keyword_identical_QMARK_.call(null, ocr_8847_2__8853_0__8856, new cljs.core.Keyword(null, "block", "block", 1107736575))) {
                                        try {
                                          var ocr_8847_2__8853_1__8857 = cljs.core.nth.call(null, ocr_8847_2__8853, 1);
                                          if (cljs.core.keyword_identical_QMARK_.call(null, ocr_8847_2__8853_1__8857, new cljs.core.Keyword(null, "indent", "indent", 4124632094))) {
                                            return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [null, t2], null);
                                          } else {
                                            if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
                                              throw cljs.core.match.backtrack;
                                            } else {
                                              return null;
                                            }
                                          }
                                        } catch (e8869) {
                                          if (e8869 instanceof Error) {
                                            var e__4796__auto____$3 = e8869;
                                            if (e__4796__auto____$3 === cljs.core.match.backtrack) {
                                              throw cljs.core.match.backtrack;
                                            } else {
                                              throw e__4796__auto____$3;
                                            }
                                          } else {
                                            if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
                                              throw e8869;
                                            } else {
                                              return null;
                                            }
                                          }
                                        }
                                      } else {
                                        if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
                                          throw cljs.core.match.backtrack;
                                        } else {
                                          return null;
                                        }
                                      }
                                    } catch (e8866) {
                                      if (e8866 instanceof Error) {
                                        var e__4796__auto____$3 = e8866;
                                        if (e__4796__auto____$3 === cljs.core.match.backtrack) {
                                          try {
                                            var ocr_8847_2__8853_0__8856 = cljs.core.nth.call(null, ocr_8847_2__8853, 0);
                                            if (cljs.core.keyword_identical_QMARK_.call(null, ocr_8847_2__8853_0__8856, new cljs.core.Keyword(null, "block", "block", 1107736575))) {
                                              try {
                                                var ocr_8847_2__8853_1__8857 = cljs.core.nth.call(null, ocr_8847_2__8853, 1);
                                                if (cljs.core.keyword_identical_QMARK_.call(null, ocr_8847_2__8853_1__8857, new cljs.core.Keyword(null, "bullet", "bullet", 3930937460))) {
                                                  return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [null, t2], null);
                                                } else {
                                                  if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
                                                    throw cljs.core.match.backtrack;
                                                  } else {
                                                    return null;
                                                  }
                                                }
                                              } catch (e8868) {
                                                if (e8868 instanceof Error) {
                                                  var e__4796__auto____$4 = e8868;
                                                  if (e__4796__auto____$4 === cljs.core.match.backtrack) {
                                                    throw cljs.core.match.backtrack;
                                                  } else {
                                                    throw e__4796__auto____$4;
                                                  }
                                                } else {
                                                  if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
                                                    throw e8868;
                                                  } else {
                                                    return null;
                                                  }
                                                }
                                              }
                                            } else {
                                              if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
                                                throw cljs.core.match.backtrack;
                                              } else {
                                                return null;
                                              }
                                            }
                                          } catch (e8867) {
                                            if (e8867 instanceof Error) {
                                              var e__4796__auto____$4 = e8867;
                                              if (e__4796__auto____$4 === cljs.core.match.backtrack) {
                                                throw cljs.core.match.backtrack;
                                              } else {
                                                throw e__4796__auto____$4;
                                              }
                                            } else {
                                              if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
                                                throw e8867;
                                              } else {
                                                return null;
                                              }
                                            }
                                          }
                                        } else {
                                          throw e__4796__auto____$3;
                                        }
                                      } else {
                                        if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
                                          throw e8866;
                                        } else {
                                          return null;
                                        }
                                      }
                                    }
                                  } else {
                                    if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
                                      throw cljs.core.match.backtrack;
                                    } else {
                                      return null;
                                    }
                                  }
                                } catch (e8865) {
                                  if (e8865 instanceof Error) {
                                    var e__4796__auto____$3 = e8865;
                                    if (e__4796__auto____$3 === cljs.core.match.backtrack) {
                                      throw cljs.core.match.backtrack;
                                    } else {
                                      throw e__4796__auto____$3;
                                    }
                                  } else {
                                    if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
                                      throw e8865;
                                    } else {
                                      return null;
                                    }
                                  }
                                }
                              } else {
                                throw e__4796__auto____$2;
                              }
                            } else {
                              if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
                                throw e8864;
                              } else {
                                return null;
                              }
                            }
                          }
                        } else {
                          if (cljs.core.keyword_identical_QMARK_.call(null, ocr_8847_1__8852, new cljs.core.Keyword(null, "newline", "newline", 2859826438))) {
                            try {
                              var ocr_8847_2__8853 = cljs.core.nth.call(null, ocr_8847, 2);
                              if (ocr_8847_2__8853 === null) {
                                return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [null, t2], null);
                              } else {
                                if (cljs.core.keyword_identical_QMARK_.call(null, ocr_8847_2__8853, new cljs.core.Keyword(null, "emptyline", "emptyline", 3889609267))) {
                                  return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [null, t2], null);
                                } else {
                                  if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
                                    throw cljs.core.match.backtrack;
                                  } else {
                                    return null;
                                  }
                                }
                              }
                            } catch (e8870) {
                              if (e8870 instanceof Error) {
                                var e__4796__auto____$2 = e8870;
                                if (e__4796__auto____$2 === cljs.core.match.backtrack) {
                                  try {
                                    var ocr_8847_2__8853 = cljs.core.nth.call(null, ocr_8847, 2);
                                    if (cljs.core.vector_QMARK_.call(null, ocr_8847_2__8853) && cljs.core.count.call(null, ocr_8847_2__8853) === 2) {
                                      try {
                                        var ocr_8847_2__8853_0__8858 = cljs.core.nth.call(null, ocr_8847_2__8853, 0);
                                        if (cljs.core.keyword_identical_QMARK_.call(null, ocr_8847_2__8853_0__8858, new cljs.core.Keyword(null, "block", "block", 1107736575))) {
                                          try {
                                            var ocr_8847_2__8853_1__8859 = cljs.core.nth.call(null, ocr_8847_2__8853, 1);
                                            if (cljs.core.keyword_identical_QMARK_.call(null, ocr_8847_2__8853_1__8859, new cljs.core.Keyword(null, "indent", "indent", 4124632094))) {
                                              return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [null, t2], null);
                                            } else {
                                              if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
                                                throw cljs.core.match.backtrack;
                                              } else {
                                                return null;
                                              }
                                            }
                                          } catch (e8875) {
                                            if (e8875 instanceof Error) {
                                              var e__4796__auto____$3 = e8875;
                                              if (e__4796__auto____$3 === cljs.core.match.backtrack) {
                                                throw cljs.core.match.backtrack;
                                              } else {
                                                throw e__4796__auto____$3;
                                              }
                                            } else {
                                              if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
                                                throw e8875;
                                              } else {
                                                return null;
                                              }
                                            }
                                          }
                                        } else {
                                          if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
                                            throw cljs.core.match.backtrack;
                                          } else {
                                            return null;
                                          }
                                        }
                                      } catch (e8872) {
                                        if (e8872 instanceof Error) {
                                          var e__4796__auto____$3 = e8872;
                                          if (e__4796__auto____$3 === cljs.core.match.backtrack) {
                                            try {
                                              var ocr_8847_2__8853_0__8858 = cljs.core.nth.call(null, ocr_8847_2__8853, 0);
                                              if (cljs.core.keyword_identical_QMARK_.call(null, ocr_8847_2__8853_0__8858, new cljs.core.Keyword(null, "block", "block", 1107736575))) {
                                                try {
                                                  var ocr_8847_2__8853_1__8859 = cljs.core.nth.call(null, ocr_8847_2__8853, 1);
                                                  if (cljs.core.keyword_identical_QMARK_.call(null, ocr_8847_2__8853_1__8859, new cljs.core.Keyword(null, "bullet", "bullet", 3930937460))) {
                                                    return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [null, t2], null);
                                                  } else {
                                                    if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
                                                      throw cljs.core.match.backtrack;
                                                    } else {
                                                      return null;
                                                    }
                                                  }
                                                } catch (e8874) {
                                                  if (e8874 instanceof Error) {
                                                    var e__4796__auto____$4 = e8874;
                                                    if (e__4796__auto____$4 === cljs.core.match.backtrack) {
                                                      throw cljs.core.match.backtrack;
                                                    } else {
                                                      throw e__4796__auto____$4;
                                                    }
                                                  } else {
                                                    if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
                                                      throw e8874;
                                                    } else {
                                                      return null;
                                                    }
                                                  }
                                                }
                                              } else {
                                                if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
                                                  throw cljs.core.match.backtrack;
                                                } else {
                                                  return null;
                                                }
                                              }
                                            } catch (e8873) {
                                              if (e8873 instanceof Error) {
                                                var e__4796__auto____$4 = e8873;
                                                if (e__4796__auto____$4 === cljs.core.match.backtrack) {
                                                  throw cljs.core.match.backtrack;
                                                } else {
                                                  throw e__4796__auto____$4;
                                                }
                                              } else {
                                                if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
                                                  throw e8873;
                                                } else {
                                                  return null;
                                                }
                                              }
                                            }
                                          } else {
                                            throw e__4796__auto____$3;
                                          }
                                        } else {
                                          if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
                                            throw e8872;
                                          } else {
                                            return null;
                                          }
                                        }
                                      }
                                    } else {
                                      if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
                                        throw cljs.core.match.backtrack;
                                      } else {
                                        return null;
                                      }
                                    }
                                  } catch (e8871) {
                                    if (e8871 instanceof Error) {
                                      var e__4796__auto____$3 = e8871;
                                      if (e__4796__auto____$3 === cljs.core.match.backtrack) {
                                        throw cljs.core.match.backtrack;
                                      } else {
                                        throw e__4796__auto____$3;
                                      }
                                    } else {
                                      if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
                                        throw e8871;
                                      } else {
                                        return null;
                                      }
                                    }
                                  }
                                } else {
                                  throw e__4796__auto____$2;
                                }
                              } else {
                                if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
                                  throw e8870;
                                } else {
                                  return null;
                                }
                              }
                            }
                          } else {
                            if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
                              throw cljs.core.match.backtrack;
                            } else {
                              return null;
                            }
                          }
                        }
                      } catch (e8863) {
                        if (e8863 instanceof Error) {
                          var e__4796__auto____$2 = e8863;
                          if (e__4796__auto____$2 === cljs.core.match.backtrack) {
                            throw cljs.core.match.backtrack;
                          } else {
                            throw e__4796__auto____$2;
                          }
                        } else {
                          if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
                            throw e8863;
                          } else {
                            return null;
                          }
                        }
                      }
                    } else {
                      throw e__4796__auto____$1;
                    }
                  } else {
                    if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
                      throw e8862;
                    } else {
                      return null;
                    }
                  }
                }
              } else {
                throw e__4796__auto__;
              }
            } else {
              if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
                throw e8861;
              } else {
                return null;
              }
            }
          }
        } else {
          if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
            throw cljs.core.match.backtrack;
          } else {
            return null;
          }
        }
      } catch (e8860) {
        if (e8860 instanceof Error) {
          var e__4796__auto__ = e8860;
          if (e__4796__auto__ === cljs.core.match.backtrack) {
            return null;
          } else {
            throw e__4796__auto__;
          }
        } else {
          if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
            throw e8860;
          } else {
            return null;
          }
        }
      }
    }();
    if (cljs.core.truth_(temp__4090__auto__)) {
      var r__6471__auto__ = temp__4090__auto__;
      return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [function() {
        var or__3403__auto__ = cljs.core.first.call(null, r__6471__auto__);
        if (cljs.core.truth_(or__3403__auto__)) {
          return or__3403__auto__;
        } else {
          return state__6468__auto__;
        }
      }(), cljs.core.concat.call(null, cljs.core.next.call(null, r__6471__auto__), cljs.core.drop.call(null, 2, input__6469__auto__))], null);
    } else {
      return null;
    }
  };
  G__8884 = function(state__6468__auto__, input__6469__auto__) {
    switch(arguments.length) {
      case 0:
        return G__8884__0.call(this);
      case 2:
        return G__8884__2.call(this, state__6468__auto__, input__6469__auto__);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  return G__8884;
}());
termcat.rules.ast.convert_newlines_to_whitespace = termcat.rewrite.abstraction.call(null, function() {
  var G__8893 = null;
  var G__8893__0 = function() {
    return null;
  };
  var G__8893__2 = function(state__6468__auto__, input__6469__auto__) {
    var padded_input__6470__auto__ = cljs.core.concat.call(null, input__6469__auto__, cljs.core.repeat.call(null, null));
    var vec__8885 = cljs.core.cons.call(null, state__6468__auto__, cljs.core.take.call(null, 1, padded_input__6470__auto__));
    var state = cljs.core.nth.call(null, vec__8885, 0, null);
    var t1 = cljs.core.nth.call(null, vec__8885, 1, null);
    var temp__4090__auto__ = function() {
      var ocr_8886 = clojure.core.reducers.reduce.call(null, cljs.core.conj, new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [state__6468__auto__], null), clojure.core.reducers.take.call(null, 1, clojure.core.reducers.map.call(null, termcat.term.tt, padded_input__6470__auto__)));
      try {
        if (cljs.core.vector_QMARK_.call(null, ocr_8886) && cljs.core.count.call(null, ocr_8886) === 2) {
          try {
            var ocr_8886_1__8890 = cljs.core.nth.call(null, ocr_8886, 1);
            if (cljs.core.keyword_identical_QMARK_.call(null, ocr_8886_1__8890, new cljs.core.Keyword(null, "newline", "newline", 2859826438))) {
              return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [null, termcat.term.token.call(null, new cljs.core.Keyword(null, "whitespace", "whitespace", 1290815983), "\n")], null);
            } else {
              if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
                throw cljs.core.match.backtrack;
              } else {
                return null;
              }
            }
          } catch (e8892) {
            if (e8892 instanceof Error) {
              var e__4796__auto__ = e8892;
              if (e__4796__auto__ === cljs.core.match.backtrack) {
                throw cljs.core.match.backtrack;
              } else {
                throw e__4796__auto__;
              }
            } else {
              if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
                throw e8892;
              } else {
                return null;
              }
            }
          }
        } else {
          if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
            throw cljs.core.match.backtrack;
          } else {
            return null;
          }
        }
      } catch (e8891) {
        if (e8891 instanceof Error) {
          var e__4796__auto__ = e8891;
          if (e__4796__auto__ === cljs.core.match.backtrack) {
            return null;
          } else {
            throw e__4796__auto__;
          }
        } else {
          if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
            throw e8891;
          } else {
            return null;
          }
        }
      }
    }();
    if (cljs.core.truth_(temp__4090__auto__)) {
      var r__6471__auto__ = temp__4090__auto__;
      return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [function() {
        var or__3403__auto__ = cljs.core.first.call(null, r__6471__auto__);
        if (cljs.core.truth_(or__3403__auto__)) {
          return or__3403__auto__;
        } else {
          return state__6468__auto__;
        }
      }(), cljs.core.concat.call(null, cljs.core.next.call(null, r__6471__auto__), cljs.core.drop.call(null, 1, input__6469__auto__))], null);
    } else {
      return null;
    }
  };
  G__8893 = function(state__6468__auto__, input__6469__auto__) {
    switch(arguments.length) {
      case 0:
        return G__8893__0.call(this);
      case 2:
        return G__8893__2.call(this, state__6468__auto__, input__6469__auto__);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  return G__8893;
}());
termcat.rules.ast.fix_bullet_continuations = termcat.rewrite.abstraction.call(null, function() {
  var G__8919 = null;
  var G__8919__0 = function() {
    return null;
  };
  var G__8919__2 = function(state__6468__auto__, input__6469__auto__) {
    var padded_input__6470__auto__ = cljs.core.concat.call(null, input__6469__auto__, cljs.core.repeat.call(null, null));
    var vec__8894 = cljs.core.cons.call(null, state__6468__auto__, cljs.core.take.call(null, 3, padded_input__6470__auto__));
    var state = cljs.core.nth.call(null, vec__8894, 0, null);
    var t1 = cljs.core.nth.call(null, vec__8894, 1, null);
    var t2 = cljs.core.nth.call(null, vec__8894, 2, null);
    var t3 = cljs.core.nth.call(null, vec__8894, 3, null);
    var temp__4090__auto__ = function() {
      var ocr_8895 = clojure.core.reducers.reduce.call(null, cljs.core.conj, new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [state__6468__auto__], null), clojure.core.reducers.take.call(null, 3, clojure.core.reducers.map.call(null, termcat.term.tt, padded_input__6470__auto__)));
      try {
        if (cljs.core.vector_QMARK_.call(null, ocr_8895) && cljs.core.count.call(null, ocr_8895) === 4) {
          try {
            var ocr_8895_1__8899 = cljs.core.nth.call(null, ocr_8895, 1);
            if (cljs.core.vector_QMARK_.call(null, ocr_8895_1__8899) && cljs.core.count.call(null, ocr_8895_1__8899) === 2) {
              try {
                var ocr_8895_1__8899_0__8902 = cljs.core.nth.call(null, ocr_8895_1__8899, 0);
                if (cljs.core.keyword_identical_QMARK_.call(null, ocr_8895_1__8899_0__8902, new cljs.core.Keyword(null, "block", "block", 1107736575))) {
                  try {
                    var ocr_8895_1__8899_1__8903 = cljs.core.nth.call(null, ocr_8895_1__8899, 1);
                    if (cljs.core.keyword_identical_QMARK_.call(null, ocr_8895_1__8899_1__8903, new cljs.core.Keyword(null, "bullet", "bullet", 3930937460))) {
                      try {
                        var ocr_8895_2__8900 = cljs.core.nth.call(null, ocr_8895, 2);
                        if (cljs.core.keyword_identical_QMARK_.call(null, ocr_8895_2__8900, new cljs.core.Keyword(null, "emptyline", "emptyline", 3889609267))) {
                          try {
                            var ocr_8895_3__8901 = cljs.core.nth.call(null, ocr_8895, 3);
                            if (cljs.core.vector_QMARK_.call(null, ocr_8895_3__8901) && cljs.core.count.call(null, ocr_8895_3__8901) === 2) {
                              try {
                                var ocr_8895_3__8901_0__8904 = cljs.core.nth.call(null, ocr_8895_3__8901, 0);
                                if (cljs.core.keyword_identical_QMARK_.call(null, ocr_8895_3__8901_0__8904, new cljs.core.Keyword(null, "block", "block", 1107736575))) {
                                  try {
                                    var ocr_8895_3__8901_1__8905 = cljs.core.nth.call(null, ocr_8895_3__8901, 1);
                                    if (cljs.core.keyword_identical_QMARK_.call(null, ocr_8895_3__8901_1__8905, new cljs.core.Keyword(null, "indent", "indent", 4124632094))) {
                                      return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [null, termcat.rules.ast.merge_blocks.call(null, t1, t2, t3)], null);
                                    } else {
                                      if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
                                        throw cljs.core.match.backtrack;
                                      } else {
                                        return null;
                                      }
                                    }
                                  } catch (e8915) {
                                    if (e8915 instanceof Error) {
                                      var e__4796__auto__ = e8915;
                                      if (e__4796__auto__ === cljs.core.match.backtrack) {
                                        throw cljs.core.match.backtrack;
                                      } else {
                                        throw e__4796__auto__;
                                      }
                                    } else {
                                      if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
                                        throw e8915;
                                      } else {
                                        return null;
                                      }
                                    }
                                  }
                                } else {
                                  if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
                                    throw cljs.core.match.backtrack;
                                  } else {
                                    return null;
                                  }
                                }
                              } catch (e8914) {
                                if (e8914 instanceof Error) {
                                  var e__4796__auto__ = e8914;
                                  if (e__4796__auto__ === cljs.core.match.backtrack) {
                                    throw cljs.core.match.backtrack;
                                  } else {
                                    throw e__4796__auto__;
                                  }
                                } else {
                                  if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
                                    throw e8914;
                                  } else {
                                    return null;
                                  }
                                }
                              }
                            } else {
                              if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
                                throw cljs.core.match.backtrack;
                              } else {
                                return null;
                              }
                            }
                          } catch (e8913) {
                            if (e8913 instanceof Error) {
                              var e__4796__auto__ = e8913;
                              if (e__4796__auto__ === cljs.core.match.backtrack) {
                                throw cljs.core.match.backtrack;
                              } else {
                                throw e__4796__auto__;
                              }
                            } else {
                              if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
                                throw e8913;
                              } else {
                                return null;
                              }
                            }
                          }
                        } else {
                          if (cljs.core.keyword_identical_QMARK_.call(null, ocr_8895_2__8900, new cljs.core.Keyword(null, "newline", "newline", 2859826438))) {
                            try {
                              var ocr_8895_3__8901 = cljs.core.nth.call(null, ocr_8895, 3);
                              if (cljs.core.vector_QMARK_.call(null, ocr_8895_3__8901) && cljs.core.count.call(null, ocr_8895_3__8901) === 2) {
                                try {
                                  var ocr_8895_3__8901_0__8906 = cljs.core.nth.call(null, ocr_8895_3__8901, 0);
                                  if (cljs.core.keyword_identical_QMARK_.call(null, ocr_8895_3__8901_0__8906, new cljs.core.Keyword(null, "block", "block", 1107736575))) {
                                    try {
                                      var ocr_8895_3__8901_1__8907 = cljs.core.nth.call(null, ocr_8895_3__8901, 1);
                                      if (cljs.core.keyword_identical_QMARK_.call(null, ocr_8895_3__8901_1__8907, new cljs.core.Keyword(null, "indent", "indent", 4124632094))) {
                                        return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [null, termcat.rules.ast.merge_blocks.call(null, t1, t2, t3)], null);
                                      } else {
                                        if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
                                          throw cljs.core.match.backtrack;
                                        } else {
                                          return null;
                                        }
                                      }
                                    } catch (e8918) {
                                      if (e8918 instanceof Error) {
                                        var e__4796__auto__ = e8918;
                                        if (e__4796__auto__ === cljs.core.match.backtrack) {
                                          throw cljs.core.match.backtrack;
                                        } else {
                                          throw e__4796__auto__;
                                        }
                                      } else {
                                        if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
                                          throw e8918;
                                        } else {
                                          return null;
                                        }
                                      }
                                    }
                                  } else {
                                    if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
                                      throw cljs.core.match.backtrack;
                                    } else {
                                      return null;
                                    }
                                  }
                                } catch (e8917) {
                                  if (e8917 instanceof Error) {
                                    var e__4796__auto__ = e8917;
                                    if (e__4796__auto__ === cljs.core.match.backtrack) {
                                      throw cljs.core.match.backtrack;
                                    } else {
                                      throw e__4796__auto__;
                                    }
                                  } else {
                                    if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
                                      throw e8917;
                                    } else {
                                      return null;
                                    }
                                  }
                                }
                              } else {
                                if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
                                  throw cljs.core.match.backtrack;
                                } else {
                                  return null;
                                }
                              }
                            } catch (e8916) {
                              if (e8916 instanceof Error) {
                                var e__4796__auto__ = e8916;
                                if (e__4796__auto__ === cljs.core.match.backtrack) {
                                  throw cljs.core.match.backtrack;
                                } else {
                                  throw e__4796__auto__;
                                }
                              } else {
                                if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
                                  throw e8916;
                                } else {
                                  return null;
                                }
                              }
                            }
                          } else {
                            if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
                              throw cljs.core.match.backtrack;
                            } else {
                              return null;
                            }
                          }
                        }
                      } catch (e8912) {
                        if (e8912 instanceof Error) {
                          var e__4796__auto__ = e8912;
                          if (e__4796__auto__ === cljs.core.match.backtrack) {
                            throw cljs.core.match.backtrack;
                          } else {
                            throw e__4796__auto__;
                          }
                        } else {
                          if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
                            throw e8912;
                          } else {
                            return null;
                          }
                        }
                      }
                    } else {
                      if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
                        throw cljs.core.match.backtrack;
                      } else {
                        return null;
                      }
                    }
                  } catch (e8911) {
                    if (e8911 instanceof Error) {
                      var e__4796__auto__ = e8911;
                      if (e__4796__auto__ === cljs.core.match.backtrack) {
                        throw cljs.core.match.backtrack;
                      } else {
                        throw e__4796__auto__;
                      }
                    } else {
                      if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
                        throw e8911;
                      } else {
                        return null;
                      }
                    }
                  }
                } else {
                  if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
                    throw cljs.core.match.backtrack;
                  } else {
                    return null;
                  }
                }
              } catch (e8910) {
                if (e8910 instanceof Error) {
                  var e__4796__auto__ = e8910;
                  if (e__4796__auto__ === cljs.core.match.backtrack) {
                    throw cljs.core.match.backtrack;
                  } else {
                    throw e__4796__auto__;
                  }
                } else {
                  if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
                    throw e8910;
                  } else {
                    return null;
                  }
                }
              }
            } else {
              if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
                throw cljs.core.match.backtrack;
              } else {
                return null;
              }
            }
          } catch (e8909) {
            if (e8909 instanceof Error) {
              var e__4796__auto__ = e8909;
              if (e__4796__auto__ === cljs.core.match.backtrack) {
                throw cljs.core.match.backtrack;
              } else {
                throw e__4796__auto__;
              }
            } else {
              if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
                throw e8909;
              } else {
                return null;
              }
            }
          }
        } else {
          if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
            throw cljs.core.match.backtrack;
          } else {
            return null;
          }
        }
      } catch (e8908) {
        if (e8908 instanceof Error) {
          var e__4796__auto__ = e8908;
          if (e__4796__auto__ === cljs.core.match.backtrack) {
            return null;
          } else {
            throw e__4796__auto__;
          }
        } else {
          if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
            throw e8908;
          } else {
            return null;
          }
        }
      }
    }();
    if (cljs.core.truth_(temp__4090__auto__)) {
      var r__6471__auto__ = temp__4090__auto__;
      return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [function() {
        var or__3403__auto__ = cljs.core.first.call(null, r__6471__auto__);
        if (cljs.core.truth_(or__3403__auto__)) {
          return or__3403__auto__;
        } else {
          return state__6468__auto__;
        }
      }(), cljs.core.concat.call(null, cljs.core.next.call(null, r__6471__auto__), cljs.core.drop.call(null, 3, input__6469__auto__))], null);
    } else {
      return null;
    }
  };
  G__8919 = function(state__6468__auto__, input__6469__auto__) {
    switch(arguments.length) {
      case 0:
        return G__8919__0.call(this);
      case 2:
        return G__8919__2.call(this, state__6468__auto__, input__6469__auto__);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  return G__8919;
}());
goog.provide("termcat.core");
goog.require("cljs.core");
goog.require("termcat.rules.pretokenize");
goog.require("termcat.rules.math");
goog.require("termcat.term");
goog.require("termcat.term");
goog.require("termcat.rules.math");
goog.require("termcat.rules.html");
goog.require("termcat.rules.html");
goog.require("termcat.rewrite");
goog.require("termcat.rules.markdown");
goog.require("termcat.rules.pretokenize");
goog.require("termcat.rewrite");
goog.require("termcat.rules.bind");
goog.require("termcat.rules.bind");
goog.require("termcat.rules.tokenize");
goog.require("termcat.rules.markdown");
goog.require("termcat.rules.ast");
goog.require("termcat.rules.ast");
goog.require("termcat.rules.tokenize");
termcat.core._STAR_debug_STAR_ = null;
termcat.core.print_tree = function() {
  var print_tree = null;
  var print_tree__1 = function(tree) {
    return print_tree.call(null, tree, "");
  };
  var print_tree__2 = function(tree, indent) {
    var token_to_string = function token_to_string(t) {
      return[cljs.core.str(new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [termcat.term.tt.call(null, t), termcat.term.payload.call(null, t)], null)), cljs.core.str(function() {
        var lpos = (new cljs.core.Keyword(null, "lpos", "lpos", 1017232858)).cljs$core$IFn$_invoke$arity$1(cljs.core.meta.call(null, t));
        var rpos = (new cljs.core.Keyword(null, "rpos", "rpos", 1017411604)).cljs$core$IFn$_invoke$arity$1(cljs.core.meta.call(null, t));
        if (cljs.core.truth_(function() {
          var or__3403__auto__ = lpos;
          if (cljs.core.truth_(or__3403__auto__)) {
            return or__3403__auto__;
          } else {
            return rpos;
          }
        }())) {
          return[cljs.core.str(" :: "), cljs.core.str(lpos), cljs.core.str("-"), cljs.core.str(rpos)].join("");
        } else {
          return null;
        }
      }())].join("");
    };
    var seq__8737_8741 = cljs.core.seq.call(null, termcat.rewrite.unwrap.call(null, tree));
    var chunk__8738_8742 = null;
    var count__8739_8743 = 0;
    var i__8740_8744 = 0;
    while (true) {
      if (i__8740_8744 < count__8739_8743) {
        var t_8745 = cljs.core._nth.call(null, chunk__8738_8742, i__8740_8744);
        if (termcat.term.block_QMARK_.call(null, t_8745)) {
          var new_indent_8746 = [cljs.core.str(indent), cljs.core.str("  ")].join("");
          cljs.core.println.call(null, indent, "\x3e", token_to_string.call(null, termcat.term.left.call(null, t_8745)));
          print_tree.call(null, t_8745, new_indent_8746);
          cljs.core.println.call(null, indent, "\x3c", token_to_string.call(null, termcat.term.right.call(null, t_8745)));
        } else {
          cljs.core.println.call(null, indent, t_8745 == null ? "nil" : token_to_string.call(null, t_8745));
        }
        var G__8747 = seq__8737_8741;
        var G__8748 = chunk__8738_8742;
        var G__8749 = count__8739_8743;
        var G__8750 = i__8740_8744 + 1;
        seq__8737_8741 = G__8747;
        chunk__8738_8742 = G__8748;
        count__8739_8743 = G__8749;
        i__8740_8744 = G__8750;
        continue;
      } else {
        var temp__4092__auto___8751 = cljs.core.seq.call(null, seq__8737_8741);
        if (temp__4092__auto___8751) {
          var seq__8737_8752__$1 = temp__4092__auto___8751;
          if (cljs.core.chunked_seq_QMARK_.call(null, seq__8737_8752__$1)) {
            var c__4151__auto___8753 = cljs.core.chunk_first.call(null, seq__8737_8752__$1);
            var G__8754 = cljs.core.chunk_rest.call(null, seq__8737_8752__$1);
            var G__8755 = c__4151__auto___8753;
            var G__8756 = cljs.core.count.call(null, c__4151__auto___8753);
            var G__8757 = 0;
            seq__8737_8741 = G__8754;
            chunk__8738_8742 = G__8755;
            count__8739_8743 = G__8756;
            i__8740_8744 = G__8757;
            continue;
          } else {
            var t_8758 = cljs.core.first.call(null, seq__8737_8752__$1);
            if (termcat.term.block_QMARK_.call(null, t_8758)) {
              var new_indent_8759 = [cljs.core.str(indent), cljs.core.str("  ")].join("");
              cljs.core.println.call(null, indent, "\x3e", token_to_string.call(null, termcat.term.left.call(null, t_8758)));
              print_tree.call(null, t_8758, new_indent_8759);
              cljs.core.println.call(null, indent, "\x3c", token_to_string.call(null, termcat.term.right.call(null, t_8758)));
            } else {
              cljs.core.println.call(null, indent, t_8758 == null ? "nil" : token_to_string.call(null, t_8758));
            }
            var G__8760 = cljs.core.next.call(null, seq__8737_8752__$1);
            var G__8761 = null;
            var G__8762 = 0;
            var G__8763 = 0;
            seq__8737_8741 = G__8760;
            chunk__8738_8742 = G__8761;
            count__8739_8743 = G__8762;
            i__8740_8744 = G__8763;
            continue;
          }
        } else {
        }
      }
      break;
    }
    return tree;
  };
  print_tree = function(tree, indent) {
    switch(arguments.length) {
      case 1:
        return print_tree__1.call(this, tree);
      case 2:
        return print_tree__2.call(this, tree, indent);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  print_tree.cljs$core$IFn$_invoke$arity$1 = print_tree__1;
  print_tree.cljs$core$IFn$_invoke$arity$2 = print_tree__2;
  return print_tree;
}();
termcat.core.debug_rule = function debug_rule(id) {
  return function() {
    var G__8764 = null;
    var G__8764__0 = function() {
      return null;
    };
    var G__8764__2 = function(state, input) {
      if (cljs.core._EQ_.call(null, id, termcat.core._STAR_debug_STAR_)) {
        termcat.core.print_tree.call(null, cljs.core.vec.call(null, input));
      } else {
      }
      return null;
    };
    G__8764 = function(state, input) {
      switch(arguments.length) {
        case 0:
          return G__8764__0.call(this);
        case 2:
          return G__8764__2.call(this, state, input);
      }
      throw new Error("Invalid arity: " + arguments.length);
    };
    return G__8764;
  }();
};
termcat.core.compile_rule = termcat.rewrite.sequence.call(null, termcat.rewrite.abstraction.call(null, termcat.rewrite.reduction.call(null, termcat.rules.tokenize.escape_html)), termcat.rewrite.procedure.call(null, termcat.rewrite.fixpoint.call(null, termcat.rewrite.disjunction.call(null, termcat.rules.tokenize.remove_escape_tokens, termcat.rules.tokenize.remove_annotated_tokens, termcat.rules.tokenize.merge_tokens, termcat.rules.tokenize.remove_magic_tokens))), termcat.rewrite.procedure.call(null, 
termcat.rules.tokenize.introduce_emptyline_tokens), termcat.rewrite.procedure.call(null, termcat.rules.tokenize.introduce_indent_tokens), termcat.rewrite.procedure.call(null, termcat.rules.tokenize.remove_superfluous_whitespace), termcat.rewrite.procedure.call(null, termcat.rules.tokenize.introduce_item_tokens), termcat.rewrite.procedure.call(null, termcat.rewrite.fixpoint.call(null, termcat.rules.tokenize.remove_percent_tokens)), termcat.core.debug_rule.call(null, new cljs.core.Keyword(null, "tok", 
"tok", 1014019266)), termcat.rewrite.abstraction.call(null, termcat.rewrite.reduction.call(null, termcat.rules.ast.abstract_blocks)), termcat.rewrite.recursion.call(null, termcat.rewrite.sequence.call(null, termcat.rewrite.procedure.call(null, termcat.rewrite.disjunction.call(null, termcat.rules.ast.introduce_delim_errors, termcat.rules.ast.fix_bullet_continuations))), termcat.term.block_QMARK_), termcat.rewrite.recursion.call(null, termcat.rewrite.procedure.call(null, termcat.rewrite.fixpoint.call(null, 
termcat.rewrite.sequence.call(null, termcat.rules.ast.remove_superfluous_whitespace, termcat.rules.ast.convert_newlines_to_whitespace))), termcat.term.block_QMARK_), termcat.core.debug_rule.call(null, new cljs.core.Keyword(null, "ast", "ast", 1014001140)), termcat.rewrite.recursion.call(null, termcat.rewrite.procedure.call(null, termcat.rewrite.disjunction.call(null, termcat.rules.bind.introduce_lambdas, termcat.rules.bind.introduce_fun_calls)), termcat.term.block_QMARK_), termcat.rewrite.recursive_procedure.call(null, 
termcat.rewrite.fixpoint.call(null, termcat.rules.bind.introduce_bindings), termcat.term.block_QMARK_, termcat.rewrite.lexical_scope), termcat.rewrite.recursion.call(null, termcat.rewrite.procedure.call(null, termcat.rewrite.disjunction.call(null, termcat.rules.markdown.introduce_section_calls, termcat.rules.markdown.introduce_blockquote_calls, termcat.rules.markdown.introduce_bullet_list_calls, termcat.rules.markdown.introduce_link_calls, termcat.rules.markdown.introduce_img_calls, termcat.rules.markdown.remove_decorators)), 
termcat.term.block_QMARK_), termcat.rewrite.recursion.call(null, termcat.rewrite.procedure.call(null, termcat.rewrite.fixpoint.call(null, termcat.rewrite.disjunction.call(null, termcat.rules.bind.expand_bindings, termcat.rules.bind.evaluate_fun_calls))), termcat.rules.bind.non_dormant_block_QMARK_), termcat.core.debug_rule.call(null, new cljs.core.Keyword(null, "macro", "macro", 1117556542)), termcat.rewrite.recursion.call(null, termcat.rewrite.sequence.call(null, termcat.rewrite.fixpoint.call(null, 
termcat.rewrite.procedure.call(null, termcat.rewrite.fixpoint.call(null, termcat.rewrite.disjunction.call(null, termcat.rules.math.remove_manual_casts, termcat.rules.math.introduce_math_operators, termcat.rules.math.introduce_msub_msup, termcat.rules.math.introduce_mfrac, termcat.rules.math.math_cast_next_token)))), termcat.rewrite.procedure.call(null, termcat.rules.math.remove_superfluous_whitespace)), termcat.term.block_QMARK_), termcat.core.debug_rule.call(null, new cljs.core.Keyword(null, "math", 
"math", 1017248378)), termcat.rewrite.recursion.call(null, termcat.rewrite.procedure.call(null, termcat.rewrite.disjunction.call(null, termcat.rules.html.introduce_nbsp_entities, termcat.rules.html.introduce_typographic_dashes, termcat.rules.html.introduce_typographic_quotes, termcat.rules.html.introduce_typographic_full_stops, termcat.rules.html.introduce_typographic_colons)), termcat.rules.html.text_block_QMARK_), termcat.rewrite.recursion.call(null, termcat.rewrite.sequence.call(null, termcat.rewrite.procedure.call(null, 
termcat.rules.html.remove_error_tokens), termcat.rewrite.procedure.call(null, termcat.rules.html.introduce_inner_math_tags)), termcat.term.block_QMARK_), termcat.rewrite.recursive_procedure.call(null, termcat.rewrite.sequence.call(null, termcat.rewrite.fixpoint.call(null, termcat.rules.html.remove_double_math_tokens), termcat.rewrite.fixpoint.call(null, termcat.rules.html.introduce_mtext_tags)), termcat.term.block_QMARK_, termcat.rewrite.flat_scope), termcat.rewrite.recursion.call(null, termcat.rewrite.sequence.call(null, 
termcat.rewrite.procedure.call(null, termcat.rewrite.fixpoint.call(null, termcat.rules.html.remove_canceling_math_tokens)), termcat.rewrite.procedure.call(null, termcat.rules.html.introduce_outer_math_tags)), termcat.term.block_QMARK_), termcat.core.debug_rule.call(null, new cljs.core.Keyword(null, "final", "final", 1111340264)), termcat.rewrite.recursion.call(null, termcat.rewrite.procedure.call(null, termcat.rewrite.fixpoint.call(null, termcat.rules.html.flatten)), termcat.term.block_QMARK_), termcat.rewrite.procedure.call(null, 
termcat.rewrite.fixpoint.call(null, termcat.rules.html.separate_head_body)), termcat.rules.html.add_boilerplate, termcat.rewrite.recursion.call(null, termcat.rewrite.procedure.call(null, termcat.rewrite.fixpoint.call(null, termcat.rules.html.remove_superfluous_whitespace)), termcat.term.block_QMARK_), termcat.rewrite.recursion.call(null, termcat.rewrite.procedure.call(null, termcat.rewrite.fixpoint.call(null, termcat.rules.html.to_html_tokens)), termcat.term.block_QMARK_));
termcat.core.compile = function() {
  var compile = null;
  var compile__1 = function(s) {
    return compile.call(null, s, termcat.rewrite.cache.call(null));
  };
  var compile__2 = function(s, cache) {
    cljs.core.enable_console_print_BANG_.call(null);
    var _BANG__STAR_cache_STAR_8766 = termcat.rewrite._BANG__STAR_cache_STAR_;
    try {
      termcat.rewrite._BANG__STAR_cache_STAR_ = cache;
      return termcat.rules.html.to_string.call(null, termcat.rewrite.apply_rule.call(null, termcat.core.compile_rule, termcat.rules.pretokenize.map_to_tokens.call(null, s)));
    } finally {
      termcat.rewrite._BANG__STAR_cache_STAR_ = _BANG__STAR_cache_STAR_8766;
    }
  };
  compile = function(s, cache) {
    switch(arguments.length) {
      case 1:
        return compile__1.call(this, s);
      case 2:
        return compile__2.call(this, s, cache);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  compile.cljs$core$IFn$_invoke$arity$1 = compile__1;
  compile.cljs$core$IFn$_invoke$arity$2 = compile__2;
  return compile;
}();
goog.exportSymbol("termcat.core.compile", termcat.core.compile);

//# sourceMappingURL=termcat.js.map